[
  {
    "title": "Beautiful Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/H",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Beautiful Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/G",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Beautiful Intervals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/F",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Beautiful Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/E",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy",
      "schedules"
    ]
  },
  {
    "title": "Beautiful Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/D",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Beautiful XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Beautiful String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/B",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Beautiful Average",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2162/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Reverse XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2160/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Distinct Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2160/B",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "MEX Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2160/A",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "title": "Grand Finale: Snakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/F",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "title": "Super-Short-Polynomial-San",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/E",
    "difficulty": "N/A",
    "tags": [
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Inverse Minimum Partition (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/D2",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Inverse Minimum Partition (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/D1",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "geometry",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Twin Polynomials",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/C",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "graph matchings",
      "math"
    ]
  },
  {
    "title": "Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/B",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "MAD Interactive Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2159/A",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Juan's Colorful Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dfs and similar",
      "dsu",
      "graphs",
      "graphs",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "title": "Mimo & Yuyu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/E",
    "difficulty": 2200,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Batteries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "graphs",
      "interactive",
      "math"
    ]
  },
  {
    "title": "The Ancient Wizards' Capes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Abraham's Great Escape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "El fucho",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2155/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bombing (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/F2",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Bombing (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/F1",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "No Mind To Think",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/E",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Catshock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/D",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "No Cost Too Great (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/C2",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "No Cost Too Great (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/C1",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make it Zigzag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Notelock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2154/A",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Odd Queries on Odd Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/F",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Zero Trailing Factorial",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/E",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Not Alone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/D",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Symmetrical Polygons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bitwise Reversion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/B",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Circle of Apple Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2153/A",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Victorious Coloring (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/H2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "schedules"
    ]
  },
  {
    "title": "Victorious Coloring (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/H1",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Query Jungle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "trees"
    ]
  },
  {
    "title": "Triple Attack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Monotone Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Division Versus Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Triple Removal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Catching the Krug",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/B",
    "difficulty": 1300,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Increase or Smash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2152/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Incremental Stay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2151/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Incremental Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2151/A",
    "difficulty": 800,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "Counting Is Fun: The Finale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/G",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "implementation"
    ]
  },
  {
    "title": "Cycle Closing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Hidden Single (Version 2)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/E2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Hidden Single (Version 1)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/E1",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "interactive",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Attraction Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Limited Edition Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Grid Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/B",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Incremental Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2150/A",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Buratsuta 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "probabilities"
    ]
  },
  {
    "title": "Nezuko in the Clearing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Hidden Knowledge of the Ancients",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/E",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "A and B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/D",
    "difficulty": 1200,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "MEX rose",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/C",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Unconventional Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Be Positive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2149/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Farmer John's Last Wish",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Gravity Falls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/F",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Destruction of the Dandelion Fields",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/D",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Pacer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Lasers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/B",
    "difficulty": 800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Sublime Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2148/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Longest Increasing Path (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/I2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Longest Increasing Path (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/I1",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Maxflow GCD Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Modular Tetration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Exchange Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Maximum OR Popcount",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Game on Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Rabbits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Multiple Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Shortest Increasing Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2147/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Bubble Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Yet Another MEX Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Max Sum OR (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/D2",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "title": "Max Sum OR (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/D1",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Wrong Binary Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "constructive algorithms"
    ]
  },
  {
    "title": "Merging the Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Equal Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2146/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cost of Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Long Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Predicting Popularity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Inversion Value of a Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Monocarp's String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Deck of Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Candies for Nephews",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2145/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Bracket Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Looking at Towers (difficult version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/E2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Looking at Towers (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/E1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Price Tags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Non-Descending Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Maximum Cost Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Cut the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2144/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Increasing Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Make Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Inversion Graph Coloring (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Inversion Graph Coloring (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/D1",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Max Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Discounts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "All Lengths Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2143/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Color the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/I",
    "difficulty": 3500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Merging Vertices in a Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/H",
    "difficulty": 2700,
    "tags": [
      "*special",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Good Robot Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/G",
    "difficulty": 2800,
    "tags": [
      "*special",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Array Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/F",
    "difficulty": 2200,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Perfect Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/E",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Avoid Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Minimum on Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Furniture Store",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2141/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Sum Minimisation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/F",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Prime Gaming (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/E2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Prime Gaming (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/E1",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "A Cruel Segment's Thesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ultimate Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Another Divisibility Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shift Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2140/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cake Collection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2139/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Maple and Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2139/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ode to the Bridge Builder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Determinant Construction (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/E2",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Determinant Construction (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/E1",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Antiamuny and Slider Movement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Maple and Tree Beauty (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/C2",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "fft",
      "trees"
    ]
  },
  {
    "title": "Maple and Tree Beauty (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/C1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Antiamuny Wants to Learn Swap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Cake Assignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2138/A",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Cry Me a River",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "title": "Prefix Maximum Invariance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Mexification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Replace with Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Maximum Even Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fun Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Collatz Conjecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2137/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Like the Bitset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2136/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "In the Dream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2136/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "To the Infinity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "math",
      "trees"
    ]
  },
  {
    "title": "Beyond the Palindrome (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/E2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Beyond the Palindrome (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/E1",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "From the Unknown (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/D2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "From the Unknown (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/D1",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "By the Assignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "title": "For the Champion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Against the Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2135/A",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Permutation Oddness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Power Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Sliding Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Even Larger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Add 0 or K",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Painting With Two Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2134/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Flint and Steel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "I Yearned For The Mines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Chicken Jockey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "The Nether",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Villagers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Redstone?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2133/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Famous Choreographer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/G",
    "difficulty": 2600,
    "tags": [
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rada and the Chamomile Valley",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Arithmetics Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "ternary search"
    ]
  },
  {
    "title": "From 1 to Infinity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Cunning Seller (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/C2",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Cunning Seller (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/C1",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Secret Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2132/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sea, You & copriMe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/H",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Wafu!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/G",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "math"
    ]
  },
  {
    "title": "Unjust Binary Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Adjacent XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Arboris Contractio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/D",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Make it Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/C",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Alternating Series",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Lever",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2131/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Pathless",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2130/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Submission is All You Need",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2130/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Top-K Tracker (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/F2",
    "difficulty": 3500,
    "tags": [
      "interactive",
      "interactive"
    ]
  },
  {
    "title": "Top-K Tracker (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/F1",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Induced Subgraph Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Permutation Blackhole",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Interactive RBS (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/C3",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dp",
      "interactive"
    ]
  },
  {
    "title": "Interactive RBS (Medium Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/C2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Interactive RBS (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/C1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Stay or Mirror",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Double Perspective",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2129/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Strict Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/F",
    "difficulty": 3200,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Submedians (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Submedians (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sum of LDS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Leftmost Below",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Deque Process",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Recycling Center",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2128/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "23 Rises Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/H",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "greedy",
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Inter Active (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/G2",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "implementation",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Inter Active (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/G1",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Hamed and AghaBalaSar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Ancient Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Root was Built by Love, Broken by Destiny",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Trip Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/C",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Hamiiid, Haaamid... Hamid?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Mix Mex Max",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2127/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Big Wins!  (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/G2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Big Wins! (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu",
      "two pointers"
    ]
  },
  {
    "title": "1-1-1, Free Tree!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "G-C-D, Unlucky!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/E",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "This Is the Last Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "I Will Definitely Make It",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "No Casino in the Mountains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Only One Digit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2126/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Timofey and Docker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Sets of Complementary Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Segments Covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Count Good Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/C",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Left and Down",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Difficult Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2125/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Lexicographic Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math",
      "trees"
    ]
  },
  {
    "title": "Longest Good Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/H",
    "difficulty": 3400,
    "tags": [
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Maximise Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Appending Permutations (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/F2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Appending Permutations (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/F1",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Make it Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Make a Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/D",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Subset Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimise Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Deranged Deletions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2124/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Modular Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/G",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Minimize Fixed Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "MEX Count",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Binary String Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Prefix Min and Suffix Max",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Blackboard Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2123/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Tree Parking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "trees"
    ]
  },
  {
    "title": "Colorful Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "title": "Greedy Grid Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Traffic Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Manhattan Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Pile Shuffling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Greedy Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2122/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Ice Baby",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/H",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Gangsta",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/G",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Yamakasi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Sponsor of Your Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "1709",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/D",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Those Who Are With Us",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Above the Clouds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Letter Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2121/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Eulerian Line Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/G",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Superb Graphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/F",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "graphs"
    ]
  },
  {
    "title": "Lanes of Cars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "ternary search"
    ]
  },
  {
    "title": "Matrix game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Divine Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Square Pool",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/B",
    "difficulty": 1000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Square of Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2120/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Volcanic Eruptions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/F",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "And Constraint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Token Removing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "A Good Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Line Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Add or XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2119/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Shifts and Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Grid Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Red Light, Green Light (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Red Light, Green Light (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Make It Beautiful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Make It Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Equal Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2118/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Incessant Rain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/H",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "title": "Omg Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/G",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dsu",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Wildflower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/F",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Lost Soul",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Retaliation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cool Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Shrink",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "False Alarm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2117/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Gellyfish and Baby's Breath",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2116/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Gellyfish and Tricolor Pansy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2116/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Gellyfish and Lycoris Radiata (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/F2",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Gellyfish and Lycoris Radiata (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/F1",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Gellyfish and Mayflower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Gellyfish and Forget-Me-Not",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gellyfish and Eternal Violet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/C",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Gellyfish and Camellia Japonica",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Gellyfish and Flaming Peony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2115/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Build an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Small Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Kirei Attacks the Estate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/E",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Come a Little Closer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Need More Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/C",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Not Quite a Palindromic String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Square Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2114/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "From Kazan with Love",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Cheater",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Smilo and Minecraft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Good Start",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Shashliks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2113/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Variables and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/F",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Tree Colorings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Reachability and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Coloring Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Shrinking Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2112/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Divisible Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/G",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "interactive"
    ]
  },
  {
    "title": "Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Changing the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Creating a Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Equal Values",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Fibonacci Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Energy Crystals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2111/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Faculty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Melody",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Fewer Batteries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Racing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Down with Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/B",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Fashionable Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2110/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Penguin Steps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Binary String Wowee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "title": "D/D/D",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Hacking Numbers (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/C3",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hacking Numbers (Medium Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/C2",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hacking Numbers (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/C1",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Slice to Survive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "It's Time To Duel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2109/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Fallen Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Spruce Dispute",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Needle in a Numstack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Neo's Escape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "SUMdamental Decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Permutation Warm-Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2108/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Cycling (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/F2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Cycling (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/F1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Ain and Apple Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Apple Tree Traversing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Maximum Subarray Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Apples in Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "LRC and VIP",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2107/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Baudelaire (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/G2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dfs and similar",
      "divide and conquer",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Baudelaire (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Goblin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Wolf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Flower Boy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Cherry Bomb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/C",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "St. Chroma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dr. TC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2106/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Modulo 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Numbers and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Unpleasant Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Array and GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Move to the End",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Three Decks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2104/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Maximize Nor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Keep the Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Local Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Median Splits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Binary Typewriter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Common Multiple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2103/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Picky Cat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2102/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Dinner Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2102/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Shoo Shatters the Sunshine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Kia Bakes a Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Mani and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "23 Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Quartet Swapping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Mex in the Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2101/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Sasha and the Apartment Purchase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2098/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Vadim's Collection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2098/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Lost Luggage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "title": "Clearing the Snowdrift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Bermuda Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/C",
    "difficulty": 2400,
    "tags": [
      "chinese remainder theorem",
      "geometry",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Baggage Claim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/B",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sports Betting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2097/A",
    "difficulty": 1400,
    "tags": [
      "2-sat",
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Wonderful XOR Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/H",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Wonderful Guessing Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Wonderful Impostors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Wonderful Teddy Bears",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/E",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Wonderful Lightbulbs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Wonderful City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Wonderful Gloves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Wonderful Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2096/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Premiere at a Wrong Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/J",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Mysterious Script",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "expression parsing",
      "number theory"
    ]
  },
  {
    "title": "Blurry Vision",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "fft",
      "math"
    ]
  },
  {
    "title": "Definitely a Geometry Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "title": "⅓ оf а Рrоblеm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Pair Count",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "title": "Where Am I?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "title": "Would It Be Unrated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "Plinko",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "games",
      "interactive"
    ]
  },
  {
    "title": "Piecing It Together",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2095/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "string suffix structures"
    ]
  },
  {
    "title": "La Vaca Saturno Saturnita",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/H",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Chimpanzini Bananini",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/G",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Trulimero Trulicina",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/F",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Boneca Ambalabu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/E",
    "difficulty": 1200,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Tung Tung Sahur",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Brr Brrr Patapim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/C",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Bobritto Bandito",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Trippi Troppi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2094/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Shorten the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Hackers and Neural Networks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/F",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Min Max MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Skibidi Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/D",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "implementation"
    ]
  },
  {
    "title": "Simple Repetition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/C",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Expensive Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ideal Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2093/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Andryusha and CCB",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "She knows...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Mishkin Energizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Asuna and the Mosquitoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Lady Bug",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kamilka and the Sheep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2092/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Gleb and Boating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/G",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Igor and Mountain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Interesting Ratio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/E",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Place of the Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Combination Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Team Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Olympiad Date",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2091/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Dining Hall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2090/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Pushing Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2090/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2090/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Black Cat Collapse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/E",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Conditional Operators",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/D",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Key of Like (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/C2",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Key of Like (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/C1",
    "difficulty": 2200,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Canteen (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/B2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Canteen (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/B1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Simple Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2089/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Hamiltonian Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "title": "Nim with Special Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "title": "Esports in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "greedy",
      "greedy"
    ]
  },
  {
    "title": "Weapon Upgrade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "dp"
    ]
  },
  {
    "title": "Color the Arrows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "dp",
      "dp"
    ]
  },
  {
    "title": "Uppercase or Lowercase?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "interactive"
    ]
  },
  {
    "title": "Coin Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Showmatch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Password Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2087/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Online Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Zebra-like Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Even String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "title": "Disappearing Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Large Array and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Cloudberry Jam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2086/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Serval and Colorful Array (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/F2",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Serval and Colorful Array (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/F1",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Serval and Modulo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Serval and Kaitenzushi Buffet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Serval and The Formula",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Serval and Final MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Serval and String Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2085/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Turtle and Nediam 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Wish Upon a Satellite (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/G2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Wish Upon a Satellite (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/G1",
    "difficulty": 2600,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Skyscape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Blossom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Arcology On Permafrost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "You Soared Afar With Grace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "MIN = GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Max and Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2084/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Floor or Ceil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2082/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Binary Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2082/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Hard Formula (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/G2",
    "difficulty": 3400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Hard Formula",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/G1",
    "difficulty": 3100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hot Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Quantifier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "MST in Modulo Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Quaternary Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation",
      "matrices"
    ]
  },
  {
    "title": "Balancing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/B",
    "difficulty": 2500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Math Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2081/A",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Order Statistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2080/D",
    "difficulty": 3400,
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "title": "Card Flip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2080/C",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Best Runner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2080/B",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Strong Connectivity Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2080/A",
    "difficulty": 3200,
    "tags": [
      "*special",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Cute Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2079/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "title": "Dreaming Is Not Harmful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2079/C",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Arithmetic Exercise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2079/B",
    "difficulty": 2600,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Alice, Bob, And Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2079/A",
    "difficulty": 3300,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "games"
    ]
  },
  {
    "title": "Scammy Game Ad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2078/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Vicious Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2078/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Final Verdict",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2078/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "RGB Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "dfs and similar",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "AND x OR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Another Folding Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Maximum Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/D",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Binary Subsequence Value Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Finding OR Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Breach of Faith",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2077/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Beautiful Sequence Returns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "XOR Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Equalization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Two Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Array Recoloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "To Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2075/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Game With Triangles: Season 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/G",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Counting Necessary Nodes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Empty Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/E",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Counting Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "XOR and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/C",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "geometry",
      "greedy",
      "probabilities"
    ]
  },
  {
    "title": "The Third Side",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Draw a Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2074/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Can You Reach There?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/M",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "Boarding Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/L",
    "difficulty": 1300,
    "tags": []
  },
  {
    "title": "Book Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/K",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Gathering Sharks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/J",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "Squares on Grid Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/I",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Secret Lilies and Roses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/H",
    "difficulty": 2700,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Corrupted File",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/G",
    "difficulty": 2200,
    "tags": []
  },
  {
    "title": "Hold the Star",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/F",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Minus Operator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/E",
    "difficulty": 3300,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Tower of Hanoi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/D",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Cactus Connectivity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/C",
    "difficulty": 2700,
    "tags": []
  },
  {
    "title": "Three-Dimensional Embedding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/B",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Control Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2073/A",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "I've Been Flipping Numbers for 300 Years and Calculated the Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Goodbye, Banker Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/F",
    "difficulty": 1700,
    "tags": [
      "2-sat",
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "For Wizards, the Exam Is Easy, but I Couldn't Handle It",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Creating Keys for StORages Has Become My Main Skill",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Having Been a Treasurer in the Past, I Help Goblins Deceive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "New World, New Me, New Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2072/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Towering Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "LeaFall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Infinite Sequence (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/D2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Infinite Sequence (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/D1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Trapmigiano Reggiano",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Perfecto",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Play Never Ends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2071/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Friends and Pizza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft"
    ]
  },
  {
    "title": "Game with Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tree Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Limited Repainting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Robot Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "FizzBuzz Remixed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2070/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Graph Inclusion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "A, B, AB and BA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Palindrome Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Beautiful Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Set of Strangers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "matrices"
    ]
  },
  {
    "title": "Was there an Array?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2069/A",
    "difficulty": 800,
    "tags": [
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Amusement Park Rides",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/K",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "The Ultimate Wine Tasting Event",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/J",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "title": "Pinball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/I",
    "difficulty": 3500,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Statues",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/H",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "A Very Long Hike",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/G",
    "difficulty": 3500,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "title": "Mascot Naming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Porto Vs. Benfica",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Morse Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/D",
    "difficulty": 3100,
    "tags": [
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Ads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Urban Planning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/B",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Condorcet Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2068/A",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "probabilities"
    ]
  },
  {
    "title": "Devyatkino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2067/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Two Large Bags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2067/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Adjacent Digit Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2067/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Curse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Tropical Season",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Club of Young Aircraft Builders (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/D2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Club of Young Aircraft Builders (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/D1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Bitwise Slides",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "White Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Object Identification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2066/A",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Bro Thinks He's Him",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/H",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Skibidus and Capping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/G",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Skibidus and Slay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/F",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Skibidus and Rizz",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Skibidus and Sigma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Skibidus and Fanum Tax (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/C2",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Skibidus and Fanum Tax (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/C1",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Skibidus and Ohio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/B",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Skibidus and Amog'u",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2065/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "We Be Summing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Mycraft Sand Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Eating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Remove the Ends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Variety is Discouraged",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Brogramming Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2064/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Counting Is Not Fun (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/F2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Counting Is Not Fun (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/F1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "hashing",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Triangle Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Game With Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Remove Exactly Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Subsequence Update",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Minimal Coprime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2063/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Galaxy Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Permutation Factory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/G",
    "difficulty": 3500,
    "tags": [
      "flows",
      "geometry",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Traveling Salescat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "The Game (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/E2",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "The Game (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/E1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Balanced Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Cirno and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Clockwork",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2062/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Kevin and Nivek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/I",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Kevin and Stones (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/H2",
    "difficulty": 3500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Kevin and Stones (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/H1",
    "difficulty": 3500,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Kevin and Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/G",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Kevin and Binary String (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/F2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Kevin and Binary String (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/F1",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Kevin and And",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Kevin and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/D",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Kevin and Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/C",
    "difficulty": 1600,
    "tags": [
      "2-sat",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Kevin and Geometry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Kevin and Arithmetic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2061/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Bugged Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/G",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Multiplicative Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Graph Composition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Subtract Min Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/D",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Game of Mathletes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/C",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Farmer John's Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Fibonacciness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2060/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Stop Gaming (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/E2",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Stop Gaming (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Graph and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Customer Service",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Cost of the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Milya and Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2059/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Coffee Break",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Secret Message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Formation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Another Exercise on Graphs (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/E2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Another Exercise on Graphs (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/E1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Gifts Order",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Trip to the Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gorilla and the Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "MEX Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2057/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Xor of Median (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/F2",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Xor of Median (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/F1",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Nested Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Unique Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Palindromic Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Find the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Shape Perimeter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2056/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Cosmic Divide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "geometry",
      "hashing",
      "math",
      "strings"
    ]
  },
  {
    "title": "Haystacks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Scarecrow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/D",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Trail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Crafting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Two Frogs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2055/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Affectionate Arrays (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/I2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "title": "Affectionate Arrays (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/I1",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Delicate Anti-monotonous Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Naive String Splits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/G",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "hashing",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Earnest Matrix Complement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Resourceful Caterpillar Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Refined Product Optimality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "schedules",
      "sortings"
    ]
  },
  {
    "title": "Bewitching Stargazer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Outstanding Impressionist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Tender Carpenter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2053/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Managing Cluster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/M",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Legacy Screensaver",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/L",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Knowns and Unknowns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/K",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Judicious Watching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/J",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Incompetent Delivery Guy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/I",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Hunting Hoglins in Hogwarts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/H",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Geometric Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Fix Flooded Floor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Expression Correction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "expression parsing",
      "strings"
    ]
  },
  {
    "title": "DAG Serialization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "title": "Cactus without Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/C",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "BitBitJump",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/B",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Adrenaline Rush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2052/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Snakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/G",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Joker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Best Price",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Counting Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Preparing for the Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Preparing for the Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2051/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Tree Destruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Maximum modulo equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/F",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Three Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Digital string maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Uninteresting Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Transfusion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Line Breaks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2050/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "MEX OR Mania",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Broken Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Shift + Esc",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "MEX Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "pspspsps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "implementation"
    ]
  },
  {
    "title": "MEX Destruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2049/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Kevin and Puzzle (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/I2",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "fft",
      "math"
    ]
  },
  {
    "title": "Kevin and Puzzle (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/I1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Kevin and Strange Operation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Kevin and Matrices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/G",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Kevin and Math Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Kevin and Bipartite Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Kevin and Competition Memories",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Kevin and Binary Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Kevin and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Kevin and Combination Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2048/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Replace Character",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2047/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Alyona and a Square Jigsaw Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2047/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Yandex Cuneiform (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/F2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Yandex Cuneiform (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/F1",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Cheops and a Contest (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/E2",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cheops and a Contest (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/E1",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "For the Emperor!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/D",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Adventurers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Move Back at a Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Swap Columns and Find a Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2046/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Mirror Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/M",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Buggy DFS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/L",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "GCDDCG",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/K",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Xorderable Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/J",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Microwavable Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/I",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Missing Separators",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/H",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "X Aura",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/G",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Grid Game 3-angle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/F",
    "difficulty": 3000,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Narrower Passageway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "title": "Aquatic Dragon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/D",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Saraga",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "ICPC Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/B",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Scrambled Scrabble",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2045/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Hard Demon Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/H",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Medium Demon Problem (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/G2",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Medium Demon Problem (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/G1",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graph matchings",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Easy Demon Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Insane Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/E",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Harder Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/D",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hard Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Normal Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Easy Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2044/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Problem with Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/G",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "games",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Matrix Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Problem about GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "flows",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sums on Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Coin Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2043/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Two Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "matrices"
    ]
  },
  {
    "title": "Vertex Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Recommendations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Competitive Fishing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Game with Colored Marbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/B",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Greedy Monocarp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2042/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Railway Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/N",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "Selection Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/M",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Building Castle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/L",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Trophic Balance Species",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/K",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Bottle Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/J",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "Auto Complete",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/I",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "implementation",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Sheet Music",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/H",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Grid Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/G",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Segmentation Folds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "number theory"
    ]
  },
  {
    "title": "Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/E",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Drunken Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Cube",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Bowling Frame",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "The Bento Box Adventure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2041/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Number of Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Control of Randomness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Non Prime Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "number theory",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Ordered Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Paint a Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Game of Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2040/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Cool Swap Walk (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/H2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "constructive algorithms",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Cool Swap Walk (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/H1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Shohag Loves Pebae",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/G",
    "difficulty": 3500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves Counting (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/F2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves Counting (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/F1",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Shohag Loves GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves XOR (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/C2",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves XOR (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/C1",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shohag Loves Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Shohag Loves Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2039/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Fixing the Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/N",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Royal Flush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/M",
    "difficulty": 2800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Bridge Renovation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/L",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Grid Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/K",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Waiting for...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/J",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Polyathlon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/I",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Galactic Council",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/H",
    "difficulty": 3000,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Guess One Character",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Alternative Platforms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "fft",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Barrels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Divide OR Conquer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "DIY",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Make It Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bonus Project",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2038/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Natlan Exploring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/G",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ardent Flames",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Kachina's Favorite Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/E",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "interactive",
      "two pointers"
    ]
  },
  {
    "title": "Sharky Surfing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/D",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Superultra's Favorite Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Intercepted Inputs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Twice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2037/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Library of Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "XORificator 3000",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/F",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Reverse the Rivers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "I Love 1543",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "matrices"
    ]
  },
  {
    "title": "Anya and 1100",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Startup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Quintomania",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2036/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Peak Productivity Forces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Go Learn! (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/G2",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Go Learn! (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/G1",
    "difficulty": 3300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Tree Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Monster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Yet Another Real Number Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alya and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Everyone Loves Tres",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sliding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2035/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rayan vs. Rayaneh",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/H",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Simurgh's Watch (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/G2",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Simurgh's Watch (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/G1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Khayyam's Royal Decree (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/F2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Khayyam's Royal Decree (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/F1",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Permutations Harmony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Darius' Wisdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Trapped in the Witch's Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Rakhsh's Revival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "King Keykhosrow's Mystery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2034/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sakurako and Chefir",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/G",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Kosuke's Sloth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/F",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sakurako, Kosuke, and the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Kousuke's Assignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/D",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sakurako's Field Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Sakurako and Water",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Sakurako and Kosuke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2033/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Peanuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "title": "Balanced",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Genokraken",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "interactive",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Trinity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Circuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2032/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Penchick and Even Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Penchick and Chloe's Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Penchick and Desert Rabbit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Penchick and BBQ Buns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Penchick and Satay Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Penchick and Modern Monument",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2031/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Destruction of the Universe (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/G2",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "The Destruction of the Universe (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/G1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Orangutan Approved Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "MEXimize the Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "QED's Favorite Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "A TRUE Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Minimise Oneness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "title": "A Gift From Orangutan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2030/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Variance Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/I",
    "difficulty": 3400,
    "tags": [
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Message Spread",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Balanced Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Palindrome Everywhere",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Common Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cool Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "New Rating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "games",
      "strings"
    ]
  },
  {
    "title": "Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2029/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Alice's Adventures in Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Alice's Adventures in the Rabbit Hole",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "games",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Alice's Adventures in Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "ternary search"
    ]
  },
  {
    "title": "Alice's Adventures in Cutting Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Alice's Adventures in Permuting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alice's Adventures in ''Chess''",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2028/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bit Game (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/E2",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Bit Game (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/E1",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "games",
      "math"
    ]
  },
  {
    "title": "The Endspeaker (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "The Endspeaker (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Add Zeros",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Stalin Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Rectangle Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2027/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bermart Ice Cream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Best Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Sums of Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Action Figures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Black Cells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Perpendicular Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2026/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Variable Damage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "flows"
    ]
  },
  {
    "title": "Choose Your Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Attribute Checks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "New Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Binomial Coefficients, Kind Of",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/B",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Two Screens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2025/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Buying Lemonade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2024/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Profitable Interest Rate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2024/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hills and Pits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Tree of Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/E",
    "difficulty": 3300,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Many Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "C+K+S",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Skipping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Concatenation of Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2023/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Billetes MX (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Billetes MX (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/E1",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Asesino (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/D2",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive"
    ]
  },
  {
    "title": "Asesino (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/D1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Gerrymandering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Kar Salesman",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bus to Pénjamo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2022/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Digital Village (Extreme Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/E3",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Digital Village (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Digital Village (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/E1",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Boss, Thirsty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Adjust The Presentation (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/C2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Adjust The Presentation (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/C1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Maximize Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Meaning Mean",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2021/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Count Leaves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Expected Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Connect the Dots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Bitwise Balancing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "hashing",
      "implementation",
      "math",
      "schedules",
      "ternary search"
    ]
  },
  {
    "title": "Brightness Begins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Find Minimum Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2020/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "All Pairs Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2019/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Max Plus Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2019/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Speedbreaker Counting (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/F3",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Speedbreaker Counting (Medium Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/F2",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Speedbreaker Counting (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/F1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Complex Segments (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/E2",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Complex Segments (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/E1",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Max Plus Min Plus Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "matrices",
      "sortings"
    ]
  },
  {
    "title": "Tree Pruning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Speedbreaker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Cards Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2018/A",
    "difficulty": 1600,
    "tags": [
      "2-sat",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Robin Hood Archery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/H",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Milky Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sheriff's Defense",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Rendez-vous de Marian et Robin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/E",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Robert Hood and Mrs Hood",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Robin Hood in Town",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Robin Hood and the Major Oak",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Robin Helps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2014/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Game in Tree (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/F2",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Game in Tree (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/F1",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "games",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Prefix GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimize the Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Password Cracking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "title": "Battle for Survive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Zhan's Blender",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2013/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Stack and Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Strange Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Removal of a Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/G",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Good Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Rock-Paper-Scissors Bot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Among Wolves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/D",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Split the Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Problem Solving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2011/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Message Transmission Error (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2010/C2",
    "difficulty": 1700,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Message Transmission Error (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2010/C1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Three Brothers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2010/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alternating Sum of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2010/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Yunli's Subarray Queries (extreme version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/G3",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Yunli's Subarray Queries (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Yunli's Subarray Queries (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/G1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Firefly's Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "data structures",
      "flows",
      "math"
    ]
  },
  {
    "title": "Klee's SUPER DUPER LARGE Array!!!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Satyam and Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/D",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "The Legend of Freya the Frog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "osu!mania",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Minimize!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2009/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Sakurako's Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sakurako's Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/G",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sakurako's Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/F",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Alternating String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sakurako's Hobby",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/D",
    "difficulty": 1100,
    "tags": [
      "dp",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Longest Good Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/C",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Square or Not",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "strings"
    ]
  },
  {
    "title": "Sakurako's Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2008/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dora and C++",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2007/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Index and Maximum Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2007/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Dora's Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2007/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dora's Paint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Iris's Full Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Iris and Adjacent Products",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Eri and Expanded Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Iris and the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "title": "Iris and Game on the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2006/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Subtangle Game (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Subtangle Game (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/E1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Alter the GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Lazy Narek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "The Strict Teacher (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/B2",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "The Strict Teacher (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/B1",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Simple Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2005/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Substring Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Make a Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Not a Nim Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Colored Portals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Splitting Items",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/C",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Game with Doors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Closest Point",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2004/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Turtle and Three Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Turtle and Inversions (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/E2",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Turtle and Inversions (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/E1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Turtle and a MEX Problem (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/D2",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Turtle and a MEX Problem (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/D1",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Turtle and Good Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Turtle and Piggy Are Playing a Game 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Turtle and Good Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2003/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Counting 101",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/H",
    "difficulty": 3500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Lattice Optimizing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/G",
    "difficulty": 3400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Court Blue (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/F2",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Court Blue (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/F1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cosmic Rays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "DFS Checker (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/D2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "DFS Checker (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/D1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Black Circles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Removals Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "Distanced Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2002/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Deterministic Heap (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/E2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Deterministic Heap (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/E1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Longest Max Min Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Guess The Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Generate Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Make All Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2001/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Ksyusha and the Loaded Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/H",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Call During the Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Color Rows and Columns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/F",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Photoshoot for Gorillas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/E",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Right Left Wrong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Numeric String Template",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/C",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Seating in a Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/B",
    "difficulty": 800,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "Primary Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2000/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Ruler (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/G2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "title": "Ruler (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/G1",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Expected Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/F",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Triple Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/E",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Slavic's Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Showering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "A+B Again?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1999/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Eliminating Balls With Merging (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/E2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Eliminating Balls With Merging (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/E1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "title": "Determine Winning Islands in Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Perform Operations to Maximize Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimize Equal Sum Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Find K Distinct Points with Fixed Center",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1998/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Chips on a Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Level Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Maximize the Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Even Positions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Make Three Regions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "title": "Strong Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1997/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Penacony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Bomb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Decode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/E",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Scale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Legs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1996/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Let Me Teach You a Lesson (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/E2",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "title": "Let Me Teach You a Lesson (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/E1",
    "difficulty": 2700,
    "tags": [
      "2-sat",
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "title": "Cases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Squaring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bouquet (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/B2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Bouquet (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/B1",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Diagonals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1995/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fortnite",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/H",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "games",
      "greedy",
      "hashing",
      "interactive",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Minecraft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Stardew Valley",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Wooden Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Funny Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Hungry Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Fun Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Diverse Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1994/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Dyn-scripted Robot (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/F2",
    "difficulty": 2800,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dyn-scripted Robot (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/F1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Xor-Grid Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Med-imize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Light Switches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Parity and Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Question Marks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1993/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Ultra-Meow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Valuable Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Novice's Mistake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/E",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Test of Love",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Gorilla and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/C",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Angry Monk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Only Pluses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1992/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Grid Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "games",
      "graph matchings",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Prime Split Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/H",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp",
      "fft",
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Grid Reset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Triangle Formation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Coloring Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Prime XOR Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Absolute Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "AND Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Maximize the Last Element",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1991/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Polygonal Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Catch the Mole(Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Catch the Mole(Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/E1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Grid Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mad MAD Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Array Craft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Submission Bait",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1990/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Simultaneous Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "title": "Distance to Different",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Smithing Skill",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Two Movies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Substring and Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Catch the Coin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1989/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Heartbeat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/F",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Range Minimum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "The Omnipotent Monster Killer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Increasing Sequence with Fixed OR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Make Majority",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Split the Multiset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1988/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fumo Temple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/H",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Spinning Round (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/G2",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Spinning Round (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/G1",
    "difficulty": 2900,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Interesting Problem (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/F2",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Interesting Problem (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/F1",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Wonderful Tree!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "World is Mine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Basil's Garden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "K-Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Upload More RAM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1987/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Permutation Problem (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/G2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Permutation Problem (Simple Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Non-academic Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/E",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Mathematical Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Update Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/C",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Matrix Stabilization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "X Axis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1986/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Maximize the Largest Component (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/H2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Maximize the Largest Component (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/H1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "D-Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/G",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Final Boss",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Secret Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/E",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Manhattan Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/D",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Good Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/C",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Maximum Multiple Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Creating Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1985/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tower Capturing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/H",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Magic Trick II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "''a'' String Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Magnitude (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/C2",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Magnitude (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/C1",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Large Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Strange Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1984/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Your Loss",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "title": "array-value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "I Love Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Swap Dilemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Have Your Cake and Eat It Too",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Corner Twist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Array Divisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1983/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Sorting Problem Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Number of k-good subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Beauty of the mountains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Boring Day",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Collatz Conjecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Soccer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1982/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Turtle and Paths on a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Turtle and Intersected Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Turtle and Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "Turtle and an Incomplete Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/C",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Turtle and an Infinite Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Turtle and Piggy Are Playing a Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1981/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yasya and the Mysterious Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Field Division (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/F2",
    "difficulty": 2400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Field Division (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/F1",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Permutation of Rows and Columns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "title": "GCD-sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sofia and the Lost Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Choosing Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/B",
    "difficulty": 800,
    "tags": [
      "sortings",
      "sortings"
    ]
  },
  {
    "title": "Problem Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1980/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Kostyanych's Theorem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Manhattan Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Fixing a Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Earning on Bets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "XOR Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Guess the Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1979/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Large Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Computing Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Manhattan Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "New Bakery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Alice and Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1978/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Tensor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1977/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "XORificator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1977/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Nikita and LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1977/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Binary Colouring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1977/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Little Nikita",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1977/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Remove Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Splittable Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Invertible Bracket Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Job Interview",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Increase/Decrease/Copy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Verify Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1976/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Mind Bloom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/I",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "378QAQ and Core",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/H",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Zimpha Fan Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/G",
    "difficulty": 3000,
    "tags": [
      "fft",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Chain Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Paint the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Chamo and Mocha's Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "378QAQ and Mocha's Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Bazoka and Mocha's Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1975/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Money Buys Less Happiness Now ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/G",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cutting Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Money Buys Happiness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/E",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Ingenuity-2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Beautiful Triple Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "title": "Symmetric Encoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Phone Desktop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1974/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Maximum GCD Sum Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Cat, Fox and Swaps ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/E",
    "difficulty": 2500,
    "tags": [
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Cat, Fox and Maximum Array Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Cat, Fox and Double Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Cat, Fox and the Lonely Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Chess For Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1973/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Coin Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1972/B",
    "difficulty": 900,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Contest Proposal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1972/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "±1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/H",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "XOUR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/G",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dsu",
      "sortings"
    ]
  },
  {
    "title": "Circle Perimeter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/F",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Find the Car",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Binary Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/D",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Clock and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/C",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Different String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "My First Sorting Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1971/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Min-Fund Prison (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/G3",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Min-Fund Prison (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/G2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Min-Fund Prison (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/G1",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Playing Quidditch (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/F3",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Playing Quidditch (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/F2",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Playing Quidditch (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/F1",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Trails (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/E3",
    "difficulty": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Trails (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/E2",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Trails (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/E1",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Arithmancy (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/D3",
    "difficulty": 3100,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Arithmancy (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/D2",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities",
      "strings"
    ]
  },
  {
    "title": "Arithmancy (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/D1",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "title": "Game on Tree (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/C3",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "title": "Game on Tree (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/C2",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "title": "Game on Tree (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/C1",
    "difficulty": 1400,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Exact Neighbours (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/B3",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Exact Neighbours (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Exact Neighbours (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/B1",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Balanced Unshuffle (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/A3",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Balanced Unshuffle (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/A2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Balanced Shuffle (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1970/A1",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Card Pairing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Unique Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Shop Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Minimizing the Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Shifts and Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Two Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1969/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Division + LCP (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Division + LCP (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/G1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Equal XOR Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Cells Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Permutation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Assembly via Remainders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Prefiquence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Maximize?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1968/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Next and Prev",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Again Counting Arrays (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/E2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Again Counting Arrays (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/E1",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Long Way to be Non-decreasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "title": "Fenwick Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Reverse Card (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/B2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Reverse Card (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/B1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Permutation Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1967/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Rectangle Filling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1966/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Card Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1966/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Conference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "flows"
    ]
  },
  {
    "title": "Connected Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "Missing Subarray Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Folding Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Missing Subsequence Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Everything Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1965/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Necromancer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/J",
    "difficulty": 3200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Equal Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/I",
    "difficulty": 3100,
    "tags": [
      "*special",
      "graphs",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Composite Spells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/H",
    "difficulty": 2600,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Observation Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/G",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Narrow Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "title": "Yet Another Permutation Constructive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/E",
    "difficulty": 1900,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Staircase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/D",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Firewood",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Clock in the Pool",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "1-3-5",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1958/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Frequency Mismatch (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Frequency Mismatch (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/F1",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Carousel of Combinations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "A BIT of an Inequality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "How Does the Rook Move?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "A BIT of a Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Stickogon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1957/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Nene and the Passing Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Nene vs. Monsters (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/E2",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Nene vs. Monsters (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Nene and the Mex Operator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Nene's Magical Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nene and the Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Nene's Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1956/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "title": "The Most Reckless Defense",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/H",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "shortest paths"
    ]
  },
  {
    "title": "GCD on a grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/G",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Unfair Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/F",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math",
      "schedules"
    ]
  },
  {
    "title": "Long Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/E",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Inaccurate Subsequence Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/D",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Inhabitant of the Deep Sea",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Progressive Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Yogurt Sale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1955/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Unique Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/F",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Chain Reaction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Colored Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Long Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make It Ugly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Painting the Ribbon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1954/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Accuracy-Preserving Summation Algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1953/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Help, what does it mean to be \"Based\"",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/J",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "expression parsing",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Dark Matter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks",
      "geometry"
    ]
  },
  {
    "title": "Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mathematician Takeover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Sweep Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "combinatorics",
      "games",
      "math"
    ]
  },
  {
    "title": "Are You a Procrastinator?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "They Have Fooled",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "schedules"
    ]
  },
  {
    "title": "Is it stated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Are You a Robot, Again?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1952/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Growing Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/I",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Thanos Snap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/H",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Clacking Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Inversion Composition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "No Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Buying Jewels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ticket Hoarding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Battle Cows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Dual Trigger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1951/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Shuffling Songs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "0, 1, 2, Tree!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Nearly Shortest Repeating Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Product of Binary Decimals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Clock Conversion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Upscaling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Stair, Peak, or Neither?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1950/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Make Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/K",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Amanda the Amoeba",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/J",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "implementation",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Disks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/I",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "geometry",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Division Avoidance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/H",
    "difficulty": 3100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Scooter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/G",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Dating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/F",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Damage per Second",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Funny or Scary?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Annual Ants' Gathering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Charming Meals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Grove",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1949/A",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "MST with Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/G",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dsu",
      "graph matchings",
      "trees"
    ]
  },
  {
    "title": "Rare Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Clique Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tandem Repeats?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Arrow Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Array Fix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Special Characters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1948/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Nobody is needed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/F",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Girl Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Birthday Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tree Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Maximum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Median of an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1946/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "GCD is Greater",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/H",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cook and Porridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/G",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Kirill and Mushrooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Binary Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Seraphim the Owl",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/D",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Left and Right Houses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/C",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Fireworks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Setting up Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1945/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Equal XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1944/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Destroying Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1944/A",
    "difficulty": 800,
    "tags": [
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Minimum Hamming Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "MEX Game 2 (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/E2",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "MEX Game 2 (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/E1",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Counting Is Fun (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/D2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Counting Is Fun (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/D1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Tree Compass",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Non-Palindromic Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/B",
    "difficulty": 2000,
    "tags": [
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "MEX Game 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1943/A",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Farmer John's Favorite Intern",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "trees"
    ]
  },
  {
    "title": "Bessie and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Farmer John's Favorite Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Farm Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "games"
    ]
  },
  {
    "title": "Learning to Paint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bessie's Birthday Cake (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/C2",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bessie's Birthday Cake (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/C1",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bessie and MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Farmer John's Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1942/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Rudolf and Subway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/G",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Rudolf and Imbalance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Rudolf and k Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Rudolf and the Ball Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/D",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Rudolf and the Ugly String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/C",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Rudolf and 121",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Rudolf and the Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1941/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Almost Certainly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1940/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Burenka and Pether",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1940/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Three Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1940/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Parallel Universes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1940/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Big Persimmon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1939/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "games"
    ]
  },
  {
    "title": "More Gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1939/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "two pointers"
    ]
  },
  {
    "title": "Evidence Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1939/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Draw Polygon Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1939/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dp",
      "geometry",
      "interactive"
    ]
  },
  {
    "title": "Zig-zag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/M",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "XOR Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/L",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Tree Quiz",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/K",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "There and Back Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/J",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "Symmetric Boundary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/I",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Pho Restaurant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/H",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Personality Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/G",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Forming Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/F",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Duplicates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/E",
    "difficulty": 2200,
    "tags": []
  },
  {
    "title": "Bánh Bò",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/D",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "Bit Counting Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/C",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Attraction Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/B",
    "difficulty": 3000,
    "tags": []
  },
  {
    "title": "Antiparticle Antiphysics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1938/A",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Binary Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1937/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Shuffle Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1937/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Grand Finale: Circles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Yet Yet Another Permutation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/E",
    "difficulty": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "title": "Bitwise Paradox",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Pokémon Arena",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Pinball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Bitwise Operation Wizard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1936/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Andrey's Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Distance Learning Courses in MAC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Exam in MAC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Messenger in MAC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Informatics in MAC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Entertainment in MAC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1935/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Weird LCM Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "XOR Break --- Game Version",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/D2",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "XOR Break --- Solo Version",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/D1",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Find a Mine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "geometry",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Yet Another Coin Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Too Min Too Max",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1934/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Turtle Magic: Royal Turtle Shell Pattern",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Turtle Mission: Robot and the Earthquake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Turtle vs. Rabbit Race: Optimal Trainings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Turtle Tenacity: Continual Mods",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Turtle Fingers: Count the Values of k",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Turtle Math: Fast Three Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Turtle Puzzle: Rearrange and Negate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1933/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Moving Platforms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/G",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Feed Cats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Final Countdown",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/E",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "LR-remainders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Chaya Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/B",
    "difficulty": 1100,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Thorns and Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1932/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "One-Dimensional Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Chat Screenshots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/F",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Anna and the Valentine's Day Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/E",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Divisible Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/D",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make Equal Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Make Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Recovering a Small String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1931/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Counting Is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/I",
    "difficulty": 3500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Interactive Mex Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Prefix Max Set Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Maximize the Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "title": "2..3...4.... Wonderful! Wonderful!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Sum over all Substrings (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/D2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sum over all Substrings (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/D1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Lexicographically Largest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Permutation Printing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Maximise The Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1930/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sasha and the Wedding Binary Search Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sasha and the Happy Tree Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sasha and a Walk in the City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sasha and the Casino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sasha and the Drawing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sasha and the Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1929/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Digital Patterns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Modular Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lonely Mountain Dungeons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Physical Education Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Equalize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Rectangle Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1928/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Paint Charges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/G",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Microcycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Klever Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/E",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Find the Different Ones!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/D",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Choose the Different Ones!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Following the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Make it White",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1927/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Vlad and Trouble at MIT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Vlad and Avoiding X",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Vlad and an Odd Ordering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vlad and Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/D",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Vlad and a Sum of Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Vlad and Shapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Vlad and the Best of Five",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1926/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Good Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1925/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "A Balanced Problemset?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1925/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "We Got Everything Covered!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1925/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Anti-Proxy Attendance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive",
      "ternary search"
    ]
  },
  {
    "title": "Paper Cutting Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "title": "Balanced Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Fractal Origami",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/C",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Space Harbour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Did We Get Everything Covered?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1924/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "shortest paths",
      "strings"
    ]
  },
  {
    "title": "Shrink-Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Count Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Slimes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Find B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Monsters Attack!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Moving Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1923/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Replace on Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graph matchings"
    ]
  },
  {
    "title": "Increasing Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Berserk Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Closest Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Forming Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/B",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Tricky Template",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1922/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mischievous Shooter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Sum of Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Eat the Chip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Very Different Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/D",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Sending Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Arranging Cats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1921/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Smooth Sailing (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/F2",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Smooth Sailing (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/F1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Counting Binary Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Array Repetition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Partitioning the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Summation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Satisfying Constraints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1920/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tree Diameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/H",
    "difficulty": 2000,
    "tags": [
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Tree LGM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/G",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "games",
      "trees"
    ]
  },
  {
    "title": "Wine Factory (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/F2",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "greedy",
      "matrices"
    ]
  },
  {
    "title": "Wine Factory (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/F1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Counting Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "01 Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Grouping Increases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Plus-Minus Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Wallet Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1919/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Permutation of Given",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Caterpillar on a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "ace5 and Task Order",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "implementation",
      "interactive",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Blocking Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "XOR-distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Minimize Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Brick Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1918/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Construct Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Construct Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Yet Another Inversions Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Watering an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Erase First or Second Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Least Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1917/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Matrix Rank (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/H2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices",
      "string suffix structures"
    ]
  },
  {
    "title": "Matrix Rank (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/H1",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Optimizations From Chelsu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/G",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Group Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Happy Life in University",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Mathematical Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Training Before the Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Two Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "2023",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1916/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bicycles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/G",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Greetings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/F",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "title": "Romantic Glasses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/E",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Unnatural Language Processing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/D",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Can I Square?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/C",
    "difficulty": 800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Not Quite Latin Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Odd One Out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1915/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "implementation"
    ]
  },
  {
    "title": "Light Bulbs (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/G2",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Light Bulbs (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/G1",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Programming Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Game with Marbles (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/E2",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Game with Marbles (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/E1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Three Activities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/D",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Quests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Preparing for the Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Problemsolving Log",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1914/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Palindromic Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Matrix Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Array Collapse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Game with Multiset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Swap and Delete",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/B",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Rating Increase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1913/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "LOL Lovers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/L",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Kim's Quest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/K",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Joy of Pokémon Observation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/J",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Innovative Washing Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/I",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Hypercatapult Commute",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/H",
    "difficulty": 2400,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Great City Saint Petersburg",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/G",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Fugitive Frenzy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/F",
    "difficulty": 3100,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Evaluate It and Back Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Divisibility Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/D",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Cactus Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/C",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Blueprint for Seating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/B",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Accumulator Apex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1912/A",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Two Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/J",
    "difficulty": 2900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Inverse Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/I",
    "difficulty": 2700,
    "tags": [
      "*special",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Sum of Digits of Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/H",
    "difficulty": 2400,
    "tags": [
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Pool Records",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/G",
    "difficulty": 2700,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Build Railway Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Maximum Sum Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/E",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Remove and Add",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Poisonous Swamp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "*special",
      "implementation",
      "implementation"
    ]
  },
  {
    "title": "Security Guard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/B",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Username",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1910/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Short Permutation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/I",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Parallel Swaps Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Pumping Lemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/G",
    "difficulty": 3000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Small Permutation Problem (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/F2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Small Permutation Problem (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/F1",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Multiple Lamps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Split Plus K",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Heavy Intervals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Make Almost Equal With Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Distinct Buttons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1909/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Shift and Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/F",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Good Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Jumping Through Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms"
    ]
  },
  {
    "title": "Removal of Unattractive Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "YetnotherrokenKeoard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rook",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1907/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Triangle Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/M",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Palindromic Parentheses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/L",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Deck-Building Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/K",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Count BFS Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/J",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Contingency Plan 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/I",
    "difficulty": 2900,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "title": "Twin Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/H",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Grid Game 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/G",
    "difficulty": 2900,
    "tags": [
      "games",
      "number theory"
    ]
  },
  {
    "title": "Maximize The Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Merge Not Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Spaceship Exploration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Cursed Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/C",
    "difficulty": 3000,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Button Pressing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/B",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "hashing"
    ]
  },
  {
    "title": "Easy As ABC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1906/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Field Should Not Be Empty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "One-X",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Cyclic MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Largest Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Begginer's Zelda",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Constructive Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1905/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Beautiful Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Set To Max (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/D2",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Set To Max (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/D1",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Array Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Collecting Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Forked!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1904/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Babysitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/F",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "binary search",
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Geo Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Maximum And Queries (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/D2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Maximum And Queries (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Theofanis' Nightmare",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "StORage room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Halloumi Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1903/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Trees and XOR Queries Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Collapsing Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Robot Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Insert and Equalize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Getting Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Binary Imbalance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1902/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Landscaping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Compressed Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Yet Another Monster Fight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Add, Divide and Floor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Chip and Ribbon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Line Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1901/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Local Deletions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Transitive Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Small GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Anji's Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Laura and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Cover in Water",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1900/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Unusual Entertainment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/G",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "shortest paths",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Alex's whims",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/F",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Queue Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/E",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Yarik and Musical Notes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/D",
    "difficulty": 1300,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Yarik and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/C",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "250 Thousand Tons of TNT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Game with Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1899/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vova Escapes the Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "shortest paths"
    ]
  },
  {
    "title": "Sofia and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Absolute Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Colorful Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Milena and Admirer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Milica and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1898/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cyclic Hamming (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/H2",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cyclic Hamming (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/H1",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Pepe Racing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Bracket Xoring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Permutation Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Ones and Twos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Matching Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "AB Flipping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Jagged Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1896/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Two Characters, Two Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/G",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Fancy Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Infinite Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "games",
      "graphs",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "XOR Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "title": "Torn Lucky Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Points and Minimum Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Treasure Chest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1895/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Out of Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1894/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Secret Sport",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1894/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cacti Symphony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1893/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Colorful Constructive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1893/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Freedom of Choice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1893/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Neutral Tonality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1893/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Anonymous Informant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1893/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "A Growing Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/F",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Brukhovich and Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Suspicious logarithms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Smilo and Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Deja Vu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Sorting with Twos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1891/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Qingshan Loves Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1890/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Doremy's Paint 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1890/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Doremy's Average Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Doremy's Swapping Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/E",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Game of Stacks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Doremy's Drying Plan (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/C2",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Doremy's Drying Plan (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/C1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Doremy's Connecting Plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Qingshan Loves Strings 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1889/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimum Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1887/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Good Colorings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1887/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1887/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Minimum Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1887/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "two pointers"
    ]
  },
  {
    "title": "Time Travel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1887/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Diamond Theft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "I Wanna be the Team Leader",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Monocarp and the Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Decreasing String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Fear of the Dark",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Sum of Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1886/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Deterministic Scheduling for Extended Reality over 5G and Beyond",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1885/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Hard Design",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1884/E",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Counting Rhyme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1884/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Medium Design",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1884/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Haunted House",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1884/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Simple Design",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1884/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dances (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/G2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Dances (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/G1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "You Are So Beautiful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/F",
    "difficulty": 1400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Look Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/E",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "In Love",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Raspberries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/C",
    "difficulty": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/B",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Morning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1883/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Permutations (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/E2",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Two Permutations (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/E1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Tree XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Sets and Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Increasing Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1882/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Anya and the Mysterious String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Minimum Maximum Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Block Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/E",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Divide and Equalize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Perfect Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Three Threadlets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Don't Try to Count",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1881/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Last Man Standing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Interactive Game with Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Sum of XOR Functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Make it Alternating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Chips on the Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Rigged!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1879/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "wxhtzdy ORO Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/G",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Vasilije Loves Number Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Iva & Pav",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Reverse Madness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Vasilije in Cacak",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/C",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Aleksa and Stack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "How Much Does Daytona Cost?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1878/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Joyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1877/C",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Goals of Victory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1877/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Clubstep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Indefinite Clownfish",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "title": "Ball-Stackable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/E",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Lexichromatography",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "title": "Autosynthesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Effects of Anti Pimples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Helmets in Night Light",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1876/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Jellyfish and Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1875/D",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Jellyfish and Green Apple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1875/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Jellyfish and Undertale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1875/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Jellyfish and Inscryption",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/G",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Jellyfish and OEIS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Jellyfish and Hack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Jellyfish and Miku",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/D",
    "difficulty": 2800,
    "tags": [
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Jellyfish and EVA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Jellyfish and Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Jellyfish and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1874/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mad City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/H",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "games",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "ABBC or BACB",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/G",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Money Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/F",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Building an Aquarium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "1D Eraser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/D",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Target Practice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Good Kid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Short Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1873/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Replace With Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/G",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Selling a Menagerie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Data Structures Fan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Plus Minus Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/D",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Non-coprime Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/C",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Corridor or There and Back Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Two Vessels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1872/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Standard Graph Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "MEXanization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/G",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Lazy Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Another MEX Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Prefix Purchase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Colorful Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Friendly Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "MEXanized Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1870/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "2D Traveling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1869/B",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Make It Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1869/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "LIS?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Min-Sum-Max",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Flower-like Pseudotree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Travel Plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Candy Party (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/B2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Candy Party (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/B1",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fill in the Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1868/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Most Different Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Salyg1n and Array (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/E2",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Salyg1n and Array (simple version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/E1",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Cyclic Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Salyg1n and the MEX Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "XOR Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "green_gold_dog, array and permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1867/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Mighty Rock Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/M",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Lihmuf Balling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/L",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Keen Tree Calculation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/K",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Jackets and Packets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/J",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Imagination Castle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/I",
    "difficulty": 2300,
    "tags": [
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "title": "Happy Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/H",
    "difficulty": 2100,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Grouped Carriages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Freak Joker Process",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Elevators of Tamem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/E",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Digital Wallet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Completely Searching for Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Battling with Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ambitious Kid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1866/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Future Dominators",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/I",
    "difficulty": 3500,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Asterism Stream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/H",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Magic Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Exotic Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Guess Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "math",
      "probabilities",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Matrix Cascade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Divisor Chain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Swap and Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Increasing and Decreasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1864/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Redundant Routes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Goldberg Machine 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Divide, XOR, and Conquer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Speedrun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Two-Colored Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "MEX Repetition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Split Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Channel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1863/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Great Equalizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Magic Will Save the World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Kolya and Movie Theatre",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Ice Cream Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/D",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Flower City Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Sequence Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Gift Carpet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1862/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Four Suits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "bitmasks",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Non-Intersecting Subpermutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sorting By Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Queries for the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Two Binary Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Prime Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1861/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Evaluate RBS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Fast Travel Text Editor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Balanced String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Game on Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Fancy Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Not a Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1860/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Teleportation in Byteland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Maximum Monogonosity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Andrey and Escape from Capygrad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Another Permutation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Olya and Game with Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "United We Stand",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1859/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Rollbacks (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/E2",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Rollbacks (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Trees and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Yet Another Permutation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Walkway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Buttons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1858/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Counting Graphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Sum and Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/F",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Power of Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/E",
    "difficulty": 1500,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Strong Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Assembly via Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Maximum Rounding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Array Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1857/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "PermuTree (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/E2",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "fft",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "PermuTree (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/E1",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "More Wrong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/D",
    "difficulty": 2100,
    "tags": [
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "To Become Max",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Good Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tales of a Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1856/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Longest Divisors Interval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1855/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dalton the Teacher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1855/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Mark and Spaceship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Game Bundles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Michael and Hotel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/D",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Expected Destruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Earn or Unlock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/B",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Dual (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/A2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Dual (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1854/A1",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Fibonaccharsis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1853/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Desorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1853/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Panda Meetups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows"
    ]
  },
  {
    "title": "Rivalries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Miriany and Matchstick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Ina of the Mountain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Imbalanced Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Ntarsis' Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1852/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vlad and the Mountains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Lisa and the Martians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/F",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Nastya and Potions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Prefix Permutation Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/D",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tiles Comeback",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/C",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Parity Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Escalator Conversations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1851/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "The Third Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/H",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Morning Star",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/G",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "We Were Both Children",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/F",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cardboard for Pictures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Balanced Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/D",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Word on the Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Ten Words of Wisdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "To My Critics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1850/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "XOR Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Max to the Right of Min",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "two pointers"
    ]
  },
  {
    "title": "Array Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Binary String Copying",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Morning Sandwich",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1849/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vika and Wiki",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Vika and Stone Skipping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vika and Bonuses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Vika and Price Tags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/C",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vika and the Bridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Vika and Her Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1848/A",
    "difficulty": 900,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "The Boss's Identity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Triangle Platinum?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Professor Higashikata",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Vampiric Powers, anyone?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Hamon Odyssey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "The Man who became a God ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1847/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Rudolf and CodeVid-23",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Rudolph and Mimic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/F",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Rudolf and Snowflakes (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/E2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rudolf and Snowflakes (simple version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/E1",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rudolph and Christmas Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Rudolf and the Another Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Rudolph and Tic-Tac-Toe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rudolph and Cut the Rope ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1846/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Swimmers in the Pool",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Boxes and Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rating System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Strong Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Come Together",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/B",
    "difficulty": 900,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Forbidden Integer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1845/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Multiple of Three Cycles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/H",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Tree Weights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "implementation",
      "math",
      "matrices",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Min Cost Permutation (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/F2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Min Cost Permutation (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/F1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Great Grids",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/E",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Row Major",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Particles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Permutations & Primes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Subtraction Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1844/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "Omsk Metro (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/F2",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Omsk Metro (simple version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/F1",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Tracking Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Apple Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/D",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sum in Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/C",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "title": "Long Long",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Sasha and Array Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1843/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Tenzing and Necklace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/I",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Tenzing and Random Real Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/H",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Tenzing and Random Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Tenzing and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Tenzing and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tenzing and His Animal Friends ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Tenzing and Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/C",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Tenzing and Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tenzing and Tsondu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1842/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Monocarp and a Strategic Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Fill the Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Pairs of Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Ranom Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Keep it Beautiful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Game with Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1841/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "In Search of Truth (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/G2",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "meet-in-the-middle",
      "probabilities"
    ]
  },
  {
    "title": "In Search of Truth (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/G1",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "meet-in-the-middle",
      "probabilities"
    ]
  },
  {
    "title": "Railguns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Character Blocking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/E",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Wooden Toy Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ski Resort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/C",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Binary Cafe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Cipher Shifer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1840/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Decreasing Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1839/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Ball Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1839/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Insert Zero and Invert Prefix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1839/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Lamps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1839/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Good Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1839/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Stuck Conveyor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Count Supersequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Bracket Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "No Prime Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimize Permutation Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Blackboard List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1838/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Editorial for Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Playoff Fixing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "trees"
    ]
  },
  {
    "title": "Bracket Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Best Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Comparison String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Grasshopper on a Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1837/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Astrophysicists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1836/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Destroyer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1836/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Good Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Old Mobile",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Doctor's Brown Hypothesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/D",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Twin Clusters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Lottery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "k-th equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1835/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Typewriter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "MEX of LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Survey in Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Game with Reversing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/C",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Maximum Strength",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Unit Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1834/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ksyusha and Chinchilla",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/G",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Ira and Flamenco",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/F",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Round Dance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Flipper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Vlad Building Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Restore the Weather",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Musical Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1833/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Zombies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Combinatorics Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Red-Blue Operations (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/D2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Red-Blue Operations (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/D1",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Contrast Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "New Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1832/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Array merging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1831/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Twin Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1831/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "The Third Grace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Bully Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Mex Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Hyperregular Bracket Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "The BOSS Can Count Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Copil Copac Draws Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1830/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Don't Blame Me",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/H",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Hits Different",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/G",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Forever Winter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/F",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "The Lakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/E",
    "difficulty": 1100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Gold Rush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Mr. Perfectly Fine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/C",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Blank Space",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Love Story",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1829/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Permutation Swap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1828/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisible Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1828/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Copium Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Bus Routes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Two Centroids",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Palindrome Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Range Sorting (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/B2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Range Sorting (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/B1",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Counting Orders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1827/A",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Fading into Fog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/F",
    "difficulty": 2800,
    "tags": [
      "geometry",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Walk the Runway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Running Miles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Dreaming of Freedom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lunatic Never Content",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Trust Nobody",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1826/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "LuoTianyi and the Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1825/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "LuoTianyi and the Palindrome String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1825/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "LuoTianyi and Cartridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "LuoTianyi and the Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/D",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "LuoTianyi and XOR-Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "LuoTianyi and the Floating Islands (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/B2",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "LuoTianyi and the Floating Islands (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/B1",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "LuoTianyi and the Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1824/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Random Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Removing Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "games",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Unique Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "title": "Strongly Composite",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sort with Step",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "A-characteristic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1823/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Magic Triples (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/G2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Magic Triples (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/G1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Gardening Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Making Anti-Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/E",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Super-Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Bun Lover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/C",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Karina and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "TubeTube Feed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1822/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Timber",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Rearrange Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Black Cells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tear It Apart",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Sort the Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1821/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "JoJo's Incredible Adventures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1820/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Yura's New Name",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1820/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Willy-nilly, Crack, Into Release!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Roads in E City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/E",
    "difficulty": 3200,
    "tags": [
      "interactive",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Misha and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "The Fox and the Complete Tree Traversal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "The Butcher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/B",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Constructive Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1819/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Indivisible",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1818/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Politics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1818/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Entangled Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/F",
    "difficulty": 3500,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Half-sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/E",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "title": "Toy Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "games",
      "implementation"
    ]
  },
  {
    "title": "Similar Polynomials",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Fish Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Almost Increasing Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1817/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Grid Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1816/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Ian Visits Mary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1816/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "geometry",
      "number theory"
    ]
  },
  {
    "title": "OH NO1 (-2-3-4)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Bosco and Particle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "XOR Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/D",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Between",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Sum Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "implementation",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Ian and Array Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1815/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Communication Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "title": "Chain Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Balancing Weapons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Search in Parallel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Long Legs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1814/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Unmysterious Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/J",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Mountain Climber",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/I",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Expected Twist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "title": "Colour Vision",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Factorization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "title": "Not a Geometry Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Trivial Conjecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Was it Rated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Are You a Robot?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1812/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "*special",
      "expression parsing",
      "strings"
    ]
  },
  {
    "title": "Vlad and the Nice Paths (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Vlad and the Nice Paths (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/G1",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Is It Flower?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Living Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Umka and a Long Flight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Restore the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Conveyor Belts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Insert Digit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1811/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Last Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/H",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "The Maximum Prefix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/G",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "M-tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Climbing the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Make It Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Beautiful Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1810/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Prediction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Traveling in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Two Tanks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Binary String Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Sum on Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Points on Plane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1809/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minibuses on Venus (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/E3",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Minibuses on Venus (medium version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/E2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Minibuses on Venus (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/E1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Petya, Petya, Petr, and Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Unlucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Playing in a Casino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1808/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Subsequence Addition (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/G2",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Subsequence Addition (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/G1",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bouncy Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Interview",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/E",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Odd Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/D",
    "difficulty": 900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Find and Replace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Grab the Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Plus or Minus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1807/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "GCD Master (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/F2",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "GCD Master (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/F1",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Tree Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "DSU Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Sequence Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Mex Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Walking Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1806/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Survival of the Weakest (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/F2",
    "difficulty": 3100,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Survival of the Weakest (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/F1",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "There Should Be a Lot of Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "A Wide, Wide Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Place for a Selfie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "title": "The String Has a Target",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "We Need the Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1805/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Code Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/H",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Flow Control",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Approximate Diameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "divide and conquer",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Routing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Accommodation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Pull Your Luck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vaccination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Lame King",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1804/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Settlement of Guinea Pigs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1802/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Likes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1802/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "A task for substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Another n-dimensional chocolate bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/F",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Gasoline prices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "The way home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Music Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Buying gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Very Beautiful Blanket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1801/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Symmetree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Dasha and Nightmares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/F",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "hashing",
      "meet-in-the-middle",
      "strings"
    ]
  },
  {
    "title": "Unforgivable Curse (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/E2",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Unforgivable Curse (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/E1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Remove Two Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Powering the Hero (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/C2",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Powering the Hero (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/C1",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Count the Number of Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Is It a Cat?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1800/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tree Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/H",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Count Voting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/G",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Halve or Subtract",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "City Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Hot Start Up (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/D2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Hot Start Up (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/D1",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Double Lexicographically Minimum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Equalize by Divide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Recent Actions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1799/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Gifts from Grandfather Ahmed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Multitest Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Shocking Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Candy Store",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Three Sevens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Showstopper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1798/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Li Hua and Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Li Hua and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Li Hua and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Li Hua and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Li Hua and Pattern",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Li Hua and Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1797/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Strange Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Colored Subgraphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Maximum Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Maximum Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Asterisk-Minor Template",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Typical Interview Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1796/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Removal Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Blocking Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Explosions?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Triangle Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Tea Tasting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Ideal Point",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Two Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1795/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Labeling the Tree with Distances",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1794/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Counting Factorizations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1794/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Scoring Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1794/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Not Dividing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1794/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Prefix and Suffix Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1794/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Rebrending",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Velepin and Marketing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Moscow Gorillas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Dora and Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Fedya and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Yet Another Promotion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1793/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Graph Coloring (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/F2",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "graphs"
    ]
  },
  {
    "title": "Graph Coloring (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/F1",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Divisors and Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Fixed Prefix Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Min Max Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Stand-up Comedian",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "GamingForces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1792/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Teleporters (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/G2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Teleporters (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/G1",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Range Update Point Query",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Negatives and Positives",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/E",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Distinct Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Prepend and Append",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Following Directions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Codeforces Checking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1791/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tokens on Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/G",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Timofey and Black-White Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "greedy",
      "math",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Vlad and a Pair of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/E",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Matryoshkas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Premutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Taisia and Dice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Polycarp and the Day of Pi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1790/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Serval and Brain Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Serval and Music Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Serval and Shift-Shift-Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Serval and Toxel's Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Serval and Inversion Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Serval and Mocha's Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1789/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "XOR, Tree, and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Sum Over Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Moving Dots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Matching Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sum of Two Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "One and Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1788/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/I",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "title": "Codeforces Scoreboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Colorful Tree Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/G",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Inverse Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Harmonization of XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Game on Axis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Remove the Bracket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Number Factorization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Exponential Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1787/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Cake Assembly Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1786/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Alternating Deck (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1786/A2",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Non-alternating Deck (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1786/A1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minimums or Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/F",
    "difficulty": 3400,
    "tags": []
  },
  {
    "title": "Infinite Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "games",
      "probabilities"
    ]
  },
  {
    "title": "Wooden Spoon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Monsters (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Letter Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Monsters (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1784/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Weighed Tree Radius",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Double Sort II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Game of the Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Different Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Yet Another Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Matrix of Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Make it Beautiful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1783/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Window Signals (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/H2",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Window Signals (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/H1",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Diverse Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Bracket Insertion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Rectangle Shrinking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Many Perfect Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Equal Frequencies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Going to the Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Parallel Projection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1781/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Delicious Dessert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/G",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dsu",
      "hashing",
      "math",
      "number theory",
      "string suffix structures"
    ]
  },
  {
    "title": "Three Chairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/F",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Josuke and Complete Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bit Guessing Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "GCD Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hayato and School",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1780/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Olympic Team Building",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/H",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "The Game of the Century",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Xorcerer's Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Anya's Simultaneous Exhibition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Boris and His Amazing Haircut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Least Prefix Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "MKnez's ConstructiveForces Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Hall of Fame",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1779/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Maximizing Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "The Tree Has Fallen!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "title": "Flexible String Revisit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Flexible String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "strings"
    ]
  },
  {
    "title": "The Forbidden Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Flip Flop Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1778/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Comfortably Numb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Edge Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Score of a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Quiz Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Emordnilap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Everybody Likes Good Arrays!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1777/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Count Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/N",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Parmigiana With Seafood",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/M",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Controllers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/L",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Uniform Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/K",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Italian Data Centers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/J",
    "difficulty": 2500,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Spinach Pizza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/I",
    "difficulty": 2500,
    "tags": [
      "games",
      "geometry",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Beppa and SwerChat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/H",
    "difficulty": 1300,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "Another Wine Tasting Event",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/G",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "title": "Train Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Crossing the Railways",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Teamwork",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Library game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/C",
    "difficulty": 2500,
    "tags": [
      "games",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Vittorio Plays with LEGO Bricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Walking Boy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1776/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Laboratory on Pluto",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Human Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Friendly Spiders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Interesting Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Gardener and the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Gardener and the Capybaras (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/A2",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Gardener and the Capybaras (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1775/A1",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Maximum Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Segment Covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/G",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Magician and Pigs (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Magician and Pigs (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/F1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Two Chess Pieces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Same Count One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Ice and Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Add Plus Minus Sign",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1774/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Lisa's Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/L",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "King's Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/K",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Jumbled Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/J",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Interactive Factorial Guessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/I",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "games",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Hot and Cold",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/H",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Game of Questions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "fft",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/F",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Easy Assembly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Cactus Meets Torus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/C",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "BinCoin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "divide and conquer",
      "hashing",
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Amazing Trick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1773/A",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Gaining Rating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Copy of a Copy of a Copy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Permutation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/E",
    "difficulty": 1700,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Absolute Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Different Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Matrix Rotation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "A+B?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1772/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Hossam and Range Minimum Query",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "probabilities",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Hossam and a Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Hossam and (sub-)palindromic tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Hossam and Trainees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hossam and Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Hossam and Combinatorics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1771/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Koxia, Mahiru and Winter Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Koxia and Bracket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/G",
    "difficulty": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "title": "Koxia and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Koxia and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Koxia and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "flows",
      "games",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Koxia and Number Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Koxia and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Koxia and Whiteboards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1770/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Игра в Девятку III",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/D3",
    "difficulty": 2300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Игра в Девятку II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/D2",
    "difficulty": 2200,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Игра в Девятку I",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/D1",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Подкрутка II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/C2",
    "difficulty": 1300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Подкрутка I",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/C1",
    "difficulty": 1200,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Копирование файлов II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/B2",
    "difficulty": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Копирование файлов I",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/B1",
    "difficulty": 1000,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Узкая дорога",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1769/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Wonderful Jump",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Partial Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lucky Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Elemental Decompress",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Quick Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Greatest Convex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1768/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Two Subtrees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Algebra Flash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "title": "Playoff",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/D",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Count Binary Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Block Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cut the Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1767/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "MCF",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/F",
    "difficulty": 2800,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Lucky Chains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hamiltonian Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Notepad#",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Extremely Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1766/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Number Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/N",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Minimum LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/M",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Project Manager",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/L",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Torus Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/K",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hero to Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/J",
    "difficulty": 2900,
    "tags": [
      "graph matchings",
      "math"
    ]
  },
  {
    "title": "Infinite Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/I",
    "difficulty": 2800,
    "tags": [
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Hospital Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/H",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Guess the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/G",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Chemistry Lab",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/E",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Watch the Videos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "title": "Card Guessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/C",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Broken Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Access Levels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1765/A",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dsu",
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Doremy's Paint 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/H",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Doremy's Perfect DS Class (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/G3",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Doremy's Perfect DS Class (Medium Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/G2",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Doremy's Perfect DS Class (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/G1",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Doremy's Experimental Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Doremy's Number Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Doremy's Pegging Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Doremy's City Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Doremy's Perfect Math Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Doremy's Paint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1764/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Edge Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Node Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Valid Bitonic Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Another Array Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Incinerate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Absolute Maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1763/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Unequal Adjacent Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Good Pairs ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Tree Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "title": "GCD Queries ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "title": "Binary Strings are Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Make Array Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Divide and Conquer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1762/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Centroid Guess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/G",
    "difficulty": 3500,
    "tags": [
      "interactive",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Anti-median (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/F2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Anti-median (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/F1",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Make It Connected",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "matrices",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Carry Bit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Set Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Elimination of a Ring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Two Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1761/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "SlavicG's Favorite Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/G",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Quests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Binary Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/E",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Challenging Valleys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/D",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Advantage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Atilla's Favorite Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Medium Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1760/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Restore the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "All Possible Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Humanoid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Make It Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Thermostat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Lost Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Yes-Yes?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1759/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Decent Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Tick, Tock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Range = √Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Almost All Multiples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "XOR = Average",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "SSeeeeiinngg DDoouubbllee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1758/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Kevin and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1754/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Technical Support",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1754/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Minecraft Series",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "N Machines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "The Beach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Wish I Knew How to Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Factorial Divisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make Nonzero Sum (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/A2",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Make Nonzero Sum (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1753/A1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "BinaryStringForces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Doping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Majority",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "title": "Bracket Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Count GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Complementary XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Maximum Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Indirect Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1750/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Distance to the Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Cactus Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Counting Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Number Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Death's Blessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Cowardly Rooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1749/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Circular Xor Reversal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Yet Another Array Counting Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ]
  },
  {
    "title": "ConstructOR ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Zero-Sum Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Diverse Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "The Ultimate Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1748/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "List Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1747/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Yet Another Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1747/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Swap Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1747/C",
    "difficulty": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "title": "BAN BAN",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1747/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Two Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1747/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Olympiad Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Kazaee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "hashing",
      "probabilities"
    ]
  },
  {
    "title": "Joking (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/E2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "interactive"
    ]
  },
  {
    "title": "Joking (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/E1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "ternary search"
    ]
  },
  {
    "title": "Paths on the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Permutation Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rebellion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Maxmina",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1746/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "MEX vs MED",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/F",
    "difficulty": 2000,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Divisible Numbers (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/E2",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisible Numbers (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/E1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisibility by 2^n",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Traffic Light",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Even-Odd Increments ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Number Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1744/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Antifibonacci Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Intersection and Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "FTL",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Problem with Random Tests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "title": "Save the Magazines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Permutation Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1743/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Orray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/G",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Smaller",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/F",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Scuza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Coprime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Stripes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/C",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Increasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1742/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Kirill and Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/G",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Multi-Colored Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Sending a Sequence Over the Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/E",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Masha and a Beautiful Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/D",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Minimize the Thickness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Funny Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Compare T-Shirt Sizes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1741/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Arranging Crystal Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/I",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "MEX Tree Manipulation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Dangerous Laser Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "sortings"
    ]
  },
  {
    "title": "Conditional Mix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Hanging Hearts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Knowledge Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Bricks and Bags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Jumbo Extra Cheese 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Factorise N+M",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1740/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Keyboard Design",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Cleaning Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Reset K Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "title": "Array Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Immobile Knight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1739/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Palindrome Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Anti-Increasing Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/G",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Connectivity Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Balance Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Permutation Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Even Number Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Prefix Sum Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Glory Addicts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1738/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Ela Takes Dancing Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Ela and Prime GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ela Goes Hiking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Ela and the Wiring Wizard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Ela and Crickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ela's Fitness and the Luxury Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ela Sorting Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1737/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Swap and Take",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Equal Binary Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Good Subarrays (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/C2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Good Subarrays (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/C1",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "schedules",
      "two pointers"
    ]
  },
  {
    "title": "Playing with GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make A Equal to B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1736/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Pebbles and Beads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "House Planning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Meta-set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Phase Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tea with Tangerines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Working Week",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1735/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Zeros and Ones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Rectangular Congruence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Slime Escape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Removing Smallest Multiples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bright, Nice, Brilliant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Select Three Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1734/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Conveyor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Zero-One (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/D2",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Zero-One (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/D1",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Parity Shuffle Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Rule of League",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Consecutive Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1733/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Location",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Balance (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/D2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Balance (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/D1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Sheikh (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/C2",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Sheikh (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/C1",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Ugu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Bestie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1732/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Function Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Graph Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Valiant's New Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Even Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Kill Demodogs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Joey Takes Money",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1731/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Almost Sorted",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Maximums and Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "number theory"
    ]
  },
  {
    "title": "Prefixes and Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Minimum Notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Meeting on the Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Planets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1730/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cut Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/G",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Kirei and the Linear Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/F",
    "difficulty": 1900,
    "tags": [
      "hashing",
      "math"
    ]
  },
  {
    "title": "Guess the Cycle Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/E",
    "difficulty": 1800,
    "tags": [
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Friends and the Restaurant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Jumping on Tiles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Decode String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Two Elevators",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1729/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Illumination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/G",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Fishermen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/F",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Red-Black Pepper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Letter Picking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "title": "Digital Logarithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Best Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Colored Balls: Revisited",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1728/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Mainak and the Bleeding Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "A Certain Magical Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Late For Work (submissions are not allowed)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy",
      "schedules",
      "shortest paths"
    ]
  },
  {
    "title": "Almost Perfect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Edge Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Jatayu's Balanced Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Mainak and Interesting Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Mainak and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1726/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Moving Both Hands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/M",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Lemper Cooking Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/L",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Kingdom of Criticism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/K",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/J",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Imitating the Key Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/I",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Hot Black Hot White",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/H",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Garage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/G",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Field Photography",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Electrical Efficiency",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Deducing Sortability",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Circular Mirror",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Basketball Together",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Accumulation of Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1725/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Even-Odd XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/G",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "L-shapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Counting Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Word Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Colourblindness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Spell Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1722/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Matching Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Prefix Function Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Maximum AND",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Min-Max Array Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Deadly Laser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Image",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1721/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Misha and Paintings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Xor-Subsequence (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/D2",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Xor-Subsequence (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/D1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Corners",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Interesting Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Burenka Plays with Fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1720/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Fighting Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1719/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Mathematical Circus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1719/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Chip Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1719/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Burenka, an Array and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Impressionism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Permutation for Burenka",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/D",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Tonya and Burenka-179",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Fibonacci Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Burenka and Traditions (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/A2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Burenka and Traditions (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1718/A1",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Madoka and The First Session",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Madoka and The Best University",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/E",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Madoka and The Corruption Scheme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Madoka and Formal Statement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Madoka and Underground Competitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Madoka and Strange Thoughts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1717/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bags with Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Swap and Maximum Block",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Chip Move",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Robot in a Hallway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "ternary search"
    ]
  },
  {
    "title": "Permutation Chain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "2-3 Moves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1716/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Crop Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Long Way Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "2+ doors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/D",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "bitmasks",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Monoblock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Crossmarket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1715/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Path Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/G",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Build a Tree and That Is It",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/F",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Add Modulo 10",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Color with Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Minimum  Varied Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/C",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Remove Prefix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Everyone Loves to Sleep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1714/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Lost Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/F",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Cross Swapping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/E",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "data structures",
      "dsu",
      "greedy",
      "matrices"
    ]
  },
  {
    "title": "Tournament Countdown",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Build Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Optimal Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Traveling Salesman Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1713/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Triameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "LCM Sum (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/E2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "LCM Sum (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/E1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Empty Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Sort Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Woeful Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Wonderful Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1712/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1711/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "title": "Perfect Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1711/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1710/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "games",
      "graph matchings"
    ]
  },
  {
    "title": "Recover the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1710/D",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "XOR Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1710/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Rain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1710/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Color the Picture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1710/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Multiset of Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "fft",
      "flows",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "title": "XOR Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Rorororobot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Recover an RBS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Also Try Minecraft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Three Doors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1709/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Difference of GCDs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1708/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Difference Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1708/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bugaboo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Replace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/E",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Partial Virtual Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/D",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "DFS Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Difference Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Doremy's IQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1707/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Qpwoeirut and Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Chopping Carrots (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/D2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Chopping Carrots (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Qpwoeirut And The City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "flows",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Making Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Another String Minimization Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1706/A",
    "difficulty": 800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Mark and the Online Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/F",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Mark and Professor Koro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Mark and Lightbulbs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Mark and His Unfinished Essay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Mark the Dust Sweeper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mark the Photographer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1705/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Game of AI (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/H2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Game of AI (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/H1",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Mio and Lucky Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/G",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "title": "Colouring Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "title": "Count Seconds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Magical Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Virus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Luke is a Foodie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Two 0-1 Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1704/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Good Key, Bad Key",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/G",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yet Another Problem About Pairs Satisfying an Inequality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/F",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Mirror Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/E",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Double Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Cypher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/C",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "ICPC Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "YES or YES?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1703/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Passable Paths (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/G2",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Passable Paths (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/G1",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Equate Multisets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Split Into Two Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Not a Cheap String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/D",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Train and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/C",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Polycarp Writes a String from Memory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Round Down the Price",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1702/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Text Editor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Permutation Restoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Schedule Management",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Grass Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1701/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Serega the Pirate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "River Locks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Helping the Nature",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Palindromic Numbers ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Optimal Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1700/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Three Days Grace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1699/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Almost Triple Deletions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1699/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "The Third Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1699/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Almost Ternary Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1699/B",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "matrices"
    ]
  },
  {
    "title": "The Third Three Number Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1699/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Long Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Equal Reversal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "PermutationForces II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Fixed Point Guessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "3SUM Closure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Rising Sand",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "XOR Mixup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1698/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Too Many Constraints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/F",
    "difficulty": 2800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Guess The String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "awoo's Favorite Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Promo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Parkway Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1697/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum Product?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/H",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Fishingprince Plays With Array Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/G",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Tree Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Placing Jinas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Permutation Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Fishingprince Plays With Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "NIT Destroys the Universe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "NIT orz!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1696/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Ambiguous Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Tree Queries (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/D2",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Tree Queries (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/D1",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Zero Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Circle Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/B",
    "difficulty": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Subrectangle Guess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1695/A",
    "difficulty": 800,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Paranoid String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1694/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Creep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1694/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "I Might Be Wrong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/F",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Outermost Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Decinc Dividing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Keshi in Search of AmShZ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Fake Plastic Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Directional Increase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1693/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Gambling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/H",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "2^Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/G",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "3SUM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/F",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Binary Deque",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "The Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Where's the Bishop?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/C",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "All Distinct",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Marathon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1692/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "K-Set Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Number of Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Max GEQ Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Sum of Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Shoe Shuffling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Beat The Odds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1691/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Count the Trains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Shifting String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/F",
    "difficulty": 1700,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Price Maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Black and White Stripe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/D",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Restoring the Duration of Tasks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Array Decrements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Print a Pedestal (Codeforces logo?)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1690/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "ANDfinity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1689/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Lena and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1689/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "shortest paths"
    ]
  },
  {
    "title": "Infected Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1689/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Mystic Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1689/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Lex String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1689/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Manipulating History",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1688/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Patchouli's Magical Talisman",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1688/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cirno's Perfect Bitmasks Classroom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1688/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Koishi's Unconscious Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/F",
    "difficulty": 3500,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "title": "Become Big For Me",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cute number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sanae and Giant Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Railway System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "The Enchanted Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1687/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Odd Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1686/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Everything Everywhere All But One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1686/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "The Ultimate LIS Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Permutation Weight (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/D2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Permutation Weight (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/D1",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "title": "Bring Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Linguistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Circular Local MiniMax",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1685/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Hard Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/H",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Euclid Guess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/G",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Diverse Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "MEX vs DIFF",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Traps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Column Swapping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Z mod X = C",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Digit Minimization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1684/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "math",
      "strings"
    ]
  },
  {
    "title": "MCMF?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Unordered Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Circular Spanning Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "LIS or Reverse LIS?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "AND Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Palindromic Indices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1682/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Unique Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Labyrinth Adventures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "shortest paths"
    ]
  },
  {
    "title": "Required Length",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "title": "Double Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Card Trick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Game with Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1681/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Lenient Vertex Cover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Moving Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Dog Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minimums and Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1680/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Formalism for Formalism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Typical Party in Dorm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Toss a Coin to Your Graph...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Rooks Defenders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Stone Age Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "AvtoBus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1679/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tokitsukaze and Good 01-String (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1678/B2",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tokitsukaze and Good 01-String (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1678/B1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tokitsukaze and All Zero Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1678/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tokitsukaze and Gems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Tokitsukaze and Beautiful Subsegments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Tokitsukaze and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Tokitsukaze and Two Colorful Tapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Tokitsukaze and Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/B",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tokitsukaze and Strange Inequality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1677/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Maximum Crossings (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/H2",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "title": "Maximum Crossings (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/H1",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "White-Black Balanced Subtrees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/G",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Longest Strike",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/F",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Eating Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "X-Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Most Similar Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/C",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Equal Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Lucky?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1676/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sorting Pancakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/G",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Vlad and Unfinished Business",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Replace With the Previous, Minimize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/E",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Vertical Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/D",
    "difficulty": 1300,
    "tags": [
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Detective Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/C",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Make It Increasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Food for Animals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1675/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Remove Directed Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/G",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Desktop Rearrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/F",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Breaking the Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "A-B-C Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Infinite Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/C",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Dictionary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Number Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1674/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Anti-Theft Road Planning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Power or XOR?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lost Arithmetic Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Palindrome Basis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "A Perfectly Balanced String?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Subtle Substring Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1673/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "PermutationForces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/I",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Zigu Zagu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/H",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Cross Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Checker for Array Shuffling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/F2",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Array Shuffling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/F1",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "notepad.exe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Cyclic Rotation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Unequal Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "I love AAAB",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Log Chopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1672/A",
    "difficulty": 800,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Permutation Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Preorder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "dsu",
      "hashing",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Insert a Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Dolce Vita",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Consecutive Points Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "String Building",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1671/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Jee, You See?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Hemose on the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Very Suspicious",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Where is the Pizza?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dorms War",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Prof. Slim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1670/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Maximal AND",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/H",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Fall Down",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/G",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Eating Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/F",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "2-Letter Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/E",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "math",
      "strings"
    ]
  },
  {
    "title": "Colorful Stamp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/D",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Odd/Even Increments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Triple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Division?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1669/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Social Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1668/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Direction Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1668/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Yin Yang",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/F",
    "difficulty": 3500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Centroid Probabilities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Edge Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Half Queen Cover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Optimal Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Make it Increasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1667/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/L",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Kingdom Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/K",
    "difficulty": 3200,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Job Lookup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/J",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dp",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Interactive Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/I",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Heroes of Might",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/H",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Global Warming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/G",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Fancy Stack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Even Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Deletive Editing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/D",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Connect the Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Budget Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/B",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "Admissible Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1666/A",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "MinimizOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1665/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "GCD Guess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1665/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "games",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tree Infection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1665/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Array Cloning Technique",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1665/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "GCD vs LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1665/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Cross-Language Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Six Characters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "In Every Generation...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Are You Safe?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Is it rated - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Pōja Verdon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mike's Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "divide and conquer",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Who Tested?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1663/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "expression parsing",
      "trees"
    ]
  },
  {
    "title": "Circular Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/O",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Drone Photo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/N",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Bottle Arrangements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/M",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Il Derby della Madonnina",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/L",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Pandemic Restrictions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/K",
    "difficulty": "N/A",
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Training Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/J",
    "difficulty": "N/A",
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Ice Cream Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/I",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Boundary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/H",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Gastronomic Event",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/G",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Antennas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/F",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "graphs",
      "implementation",
      "implementation",
      "shortest paths",
      "shortest paths"
    ]
  },
  {
    "title": "Round Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/E",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "title": "Evolution of Weasels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/D",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "European Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/C",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/B",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Organizing SWERC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1662/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Teleporters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Narrow Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "title": "Progressions Covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Water the Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Getting Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Array Balancing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1661/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Promising String (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/F2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Promising String (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/F1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Matrix and Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum Product Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Get an Even String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Vlad and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Vasya and Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1660/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tree and Permutation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "AND-MEX Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Reverse Sort Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Line Empire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bit Flipping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Red Versus Blue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1659/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Juju and Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gojou and Matrix Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "games",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "388535 (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/D2",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "title": "388535 (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/D1",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Shinju and the Lost Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Marin and Anti-coprime Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Marin and Photoshoot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1658/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Words on Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/F",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Star MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "graph matchings",
      "math"
    ]
  },
  {
    "title": "For Gamers. By Gamers.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Bracket Sequence Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "XY Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Integer Moves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1657/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Neighbour Ordering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Equal LCM Subsets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cycle Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Parametric MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Equal Tree Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "title": "K-good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make Equal With Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Subtract Operation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Good Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1656/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Three Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/H",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Snowy Mountain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Minimal String Xoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Arithmetic Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Potion Brewing Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Alice and the Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Prefix Removals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/B",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Maximum Cake Tastiness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1654/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Tower Defense",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Sum of Matchings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nearest Excluded Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Fault-tolerant Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Prove Him Wrong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Playoff",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1651/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Counting Shortcuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/G",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Vitaly and Advanced Useless Algorithms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Rescheduling the Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Twist the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Weight of the System of Nested Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "hashing",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "DIV + MOD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Deletions of Two Adjacent Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1650/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Game of Ball Passing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1649/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1649/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Two Avenues",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Air Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Serious Business",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Tyler and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Integral Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Weird Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1648/A",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "title": "Madoka and Laziness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/F",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Madoka and the Sixth-graders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Madoka and the Best School in Russia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Madoka and Childish Pranks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Madoka and the Elegant Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Madoka and Math Dad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1647/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Playing Around the Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Power Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Weight the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Factorials and Powers of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Quality vs Quantity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Square Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1646/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Basis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Expand the Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cross Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Increase Subarray Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Anti-Fibonacci Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Doors and Keys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1644/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Power Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1642/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Hard Way",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1642/A",
    "difficulty": 800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Covering Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/F",
    "difficulty": 3500,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Special Positions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Anonymity Is Important",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Repetitions Decoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Great Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1641/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/K",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/J",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/I",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/H",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/G",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/F",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/E",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/D",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/C",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/B",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1639/A",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Two Posters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Colorful Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Big Brush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Inversion Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Odd Swap Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1638/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Minimize Inversions Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Best Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Yet Another Minimization Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Andrew and Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "MEX and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sorting Parts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1637/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Closest Pair ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Cars ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/E",
    "difficulty": 2200,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Infinite Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Differential Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Avoid Local Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Min Or Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1635/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Fibonacci Additions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fair Share",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Finding Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "OKEA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Fortune Telling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Reverse and Concatenate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1634/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Perfect Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Spanning Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Make Them Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Kill the Monster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Minority",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Div. 7",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1633/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Distance Tree (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/E2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Distance Tree (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/E1",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "New Year Concert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Strange Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Roof Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "ABC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1632/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Fun with Even Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1631/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Min Max Swap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1631/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Making It Bipartite",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/F",
    "difficulty": 3400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "Expected Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Flipping Range",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Paint the Middle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Range and Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "And Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1630/A",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "GCD Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1629/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Download More RAM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1629/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Spaceship Crisis Management",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Groceries in Meteor Town",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Game on Sum (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/D2",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "title": "Game on Sum (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/D1",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "title": "Grid Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Peculiar Movie Preferences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/B",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Meximum Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1628/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Not Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Not Escaping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "title": "Not Adding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Not Assigning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Not Sitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Not Shading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1627/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "A Random Code Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Black and White Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/E",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Martial Arts Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Monsters And Spells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Minor Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Equidistant Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1626/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Cats on the Upgrade (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/E2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Cats on the Upgrade (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Binary Spiders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Road Optimization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Elementary Particles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ancient Civilization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1625/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "MinOr Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Interacdive Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Masha-forgetful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Palindromes Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Division by Two and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Make AP",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Plus One on the Subset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1624/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Middle Duplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1623/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Robot Cleaner Revisit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1623/D",
    "difficulty": 2300,
    "tags": [
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Balanced Stone Heaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1623/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Game on Ranges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1623/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Robot Cleaner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1623/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Quadratic Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Math Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Set or Decrease",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Berland Music",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Construct a Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1622/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Two Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/I",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "title": "Trains and Airplanes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/H",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Weighted Increasing Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Strange Instructions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "New School",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "The Winter Hike",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hidden Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Integers Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Stable Arrangement of Rooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1621/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Subsequences Galore",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/G",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Bipartite Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Replace the Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Exact Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "BA-String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Triangles on a Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Equal or Not Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1620/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Permutation and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/H",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "title": "Unusual Minesweeper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Let's Play the Hat?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "MEX and Increments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "New Year's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Wrong Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/C",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Squares and Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Square String?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1619/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Trader Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/G",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Singers' Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Array and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/D",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Paint the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/C",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Missing Bigram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Polycarp and Sums of Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1618/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Christmas Chocolates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "implementation",
      "math",
      "number theory",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Too Many Impostors (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/D2",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Too Many Impostors (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/D1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Paprika and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "GCD Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Forbidden Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1617/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Keep XOR Low",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/H",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Just Add an Edge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/G",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Tricolor Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Lexicographically Small Enough",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Keep the Average High",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Representative Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mirror in the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Integer Diversity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1616/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Reindeer Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/H",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Maximum Adjacent Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "graph matchings"
    ]
  },
  {
    "title": "LEGOndary Grandmaster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Purple Crayon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "X(or)-mas Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Menorah",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "And It's Non-Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Closing The Gap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1615/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Divan and a Cottage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Divan and Kostomuksha (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/D2",
    "difficulty": 2300,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Divan and Kostomuksha (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/D1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Divan and bitwise operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Divan and a New Project ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Divan and a Store",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1614/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Tree Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft"
    ]
  },
  {
    "title": "Crazy Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "MEX Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Poisoned Dagger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/C",
    "difficulty": 1200,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Absent Remainder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Long Comparison",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1613/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Max Sum Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/G",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Armor and Weapons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "X-Magic Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Chat Ban",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Special Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1612/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Robot and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "ATM and Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Escape The Maze (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/E2",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Escape The Maze (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/E1",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Weights Assignment For Tree Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Polycarp Recovers the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Team Composition: Programmers and Mathematicians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Make Even",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1611/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Mashtali vs AtCoder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/I",
    "difficulty": 3100,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "title": "Squid Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "AmShZ Wins a Bet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/G",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy",
      "hashing"
    ]
  },
  {
    "title": "Mashtali: a Space Oddysey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "AmShZ and G.O.A.T.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Not Quite Lee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Keshi Is Throwing a Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Kalindrome Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Anti Light's Cell Guessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1610/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Pushing Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/H",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "A Stroll Around the Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Interesting Sections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "title": "William The Oblivious ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Social Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/D",
    "difficulty": 1600,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Complex Market Analysis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "number theory",
      "schedules",
      "two pointers"
    ]
  },
  {
    "title": "William the Vigilant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Divide and Multiply",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1609/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Alphabetic Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "MEX counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/F",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "The Cells on the Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Game Master",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Build the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Find Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1608/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Banquet Preparations 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/H",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Banquet Preparations 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/G",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Robot on the Board 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Robot on the Board 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/E",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Blue-Red Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Minimum Extraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Odd Grasshopper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Linear Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1607/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Arena",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Red-Blue Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Banknotes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Update Files",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "AB Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1606/A",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "PalindORme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Array Equalizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Treelabeling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "games",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Dominant Character",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Reverse Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "A.M. Deviation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1605/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "XOR Specia-LIS-t",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1604/B",
    "difficulty": 1100,
    "tags": []
  },
  {
    "title": "Era",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1604/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "October 18, 2017",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "A Perfect Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/E",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Artistic Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/D",
    "difficulty": 3000,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Extreme Extension",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Moderate Modular Mode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Di-visible Confusion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1603/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divine Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1602/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Two Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1602/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Two Sorts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/F",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Phys Ed Online",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Difficult Mountain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Optimal Insertion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Frog Traveler",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "title": "Array Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1601/A",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Robot Factory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1600/J",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "title": "Party Organization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1600/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Array Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1600/E",
    "difficulty": 1900,
    "tags": [
      "games",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Bob's Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/J",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Desert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/I",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Hidden Fortress",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/H",
    "difficulty": 2100,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "title": "Shortest path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/G",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Mars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/F",
    "difficulty": 2700,
    "tags": [
      "hashing"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "matrices"
    ]
  },
  {
    "title": "Bubble Popping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/D",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Bubble Strike",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "ternary search"
    ]
  },
  {
    "title": "Restaurant Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/B",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Weights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1599/A",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "The Sum of Good Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/G",
    "difficulty": 3200,
    "tags": [
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "RBS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Staircases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Training Session",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Delete Two Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Computer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1598/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Ideal Farm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Rubik's Cube Coloring (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/E2",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Rubik's Cube Coloring (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/E1",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "The Number of Imposters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Make Them Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Special Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Consecutive Sum Riddle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1594/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Changing Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/G",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Red-Black Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Gardener and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Half of Same",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/D2",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "All are Same",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/D1",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Save More Mice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "greedy"
    ]
  },
  {
    "title": "Make it Divisible by 25",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/B",
    "difficulty": 900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "math",
      "math"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1593/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Alice and Recoloring 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/F2",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Alice and Recoloring 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/F1",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Bored Bakry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Hemose in ICPC ?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dfs and similar",
      "implementation",
      "interactive",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Bakry and Partitioning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Hemose Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Gamer Hemose",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1592/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Jumping Through the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1588/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "two pointers"
    ]
  },
  {
    "title": "Omkar and Mosaic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1586/I",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Poachers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/G",
    "difficulty": 2500,
    "tags": [
      "dp",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Non-equal Neighbours",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Frequency Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Yet Another Sorting Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Minimize Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Array Eversion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Life of a Flower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1585/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Eligible Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/G",
    "difficulty": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Strange LCS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Game with Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Guess the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Coloring Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Mathematical Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1584/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Omkar and Tours",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Omkar and Time Travel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Defender of Childhood Dreams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Moment of Bloom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Omkar and the Meaning of Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Omkar and Determination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Omkar and Heavenly Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Windblume Ode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1583/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Kuzya and Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Korney Korneevich and XOR (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/F2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Korney Korneevich and XOR (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/F1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Pchelyonok and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Vupsen, Pupsen and 0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Grandma Capa Knits a Scarf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Luntik and Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Luntik and Concerts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1582/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Diameter of Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1581/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "CQXYM Count Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1581/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Problems for Codeforces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Railway Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/E",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Train Maintenance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Mathematics Curriculum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/B",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Portal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimal Coverage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/G",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Array Stabilization (AND version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Array Optimization by Deque",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/E2",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Permutation Minimization by Deque",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/E1",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Productive Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Ticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Shifting Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Casimir's String Solitaire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1579/A",
    "difficulty": 800,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "The Mind",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/M",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/L",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "Kingdom of Islands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/K",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Just Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/J",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "title": "Interactive Rays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/I",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "interactive"
    ]
  },
  {
    "title": "Higher Order Functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/H",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Game of Chance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/G",
    "difficulty": 3500,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Framing Pictures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Easy Scheduling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/E",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dragon Curve",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/D",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Cactus Lady and her Cing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/C",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Building Forest Trails",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/B",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Anti-Tetris",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1578/A",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Communication Routing Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1576/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Managing Telephone Poles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/M",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Longest Array Deconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/L",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Knitting Batik",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/K",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jeopardy of Dropped Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/J",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Illusions of the Desert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/I",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Holiday Wall Ornaments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/H",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "GCD Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/G",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Finding Expected Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/F",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Eye-Pleasing City Park Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Divisible by Twenty-Five",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Cyclic Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/C",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "fft",
      "number theory"
    ]
  },
  {
    "title": "Building an Amusement Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/B",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Another Sorting Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1575/A",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs"
    ]
  },
  {
    "title": "Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Strongest Build",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Slay the Dragon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search"
    ]
  },
  {
    "title": "Combinatorics Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/B",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Regular Bracket Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1574/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1573/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Countdown",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1573/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/F",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Bridge Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/D",
    "difficulty": 2800,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Paint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/C",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Xor of 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/B",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1572/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Two Railroads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/J",
    "difficulty": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Physical Examination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/I",
    "difficulty": 3200,
    "tags": [
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Laser Beams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/H",
    "difficulty": 2900,
    "tags": [
      "*special",
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "A Battle Against a Dragon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Kotlinforces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Fix the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Sweepstake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rhyme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Epic Novel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Sequence of Comparisons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1571/A",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Palindromic Hamiltonian Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Playoff Restoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Inconvenient Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Jury Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Chess Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Balanced Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1569/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "One-Four Overload",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/F",
    "difficulty": 2700,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Non-Decreasing Dilemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Expression Evaluation Error",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Carrying Conundrum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "MEXor Mixup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Domino Disaster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1567/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Xor-quiz",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Four Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Points Movement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Buds Re-hanging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Seating Arrangements (hard version) ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/D2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Seating Arrangements (easy version) ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/D1",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "MAX-MEX Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/C",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "MIN-MEX Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Median Maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1566/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tubular Bells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/F",
    "difficulty": 2900,
    "tags": [
      "interactive",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Rescue Niwen!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Two Hundred Twenty One (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/D2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Two Hundred Twenty One (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/D1",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Rings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Scenes From a Memory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Miracle and the Sleeper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1562/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Up the Strip (simplified version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1561/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Deep Down Below",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1561/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Simply Strange Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1561/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Nearest Beautiful Number (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/F2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Nearest Beautiful Number (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/F1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Polycarp and String Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Make a Power of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Infinity Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Who's Opposite?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Dislike of Threes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1560/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mocha and Stars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mocha and Diana (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/D2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Mocha and Diana (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/D1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Mocha and Hiking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Mocha and Red and Blue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Mocha and Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1559/A",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Strange Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Down Below",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "meet-in-the-middle",
      "shortest paths"
    ]
  },
  {
    "title": "Top-Notch Insertions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "title": "Bottom-Tier Reversals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Up the Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Charmed by the Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1558/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Assiut Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1557/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Ezzat and Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1557/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Moamen and XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1557/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Moamen and k-subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1557/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ezzat and Two Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1557/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "DIY Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/H",
    "difficulty": 3300,
    "tags": [
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Gates to Another World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/G",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "data structures",
      "dsu",
      "two pointers"
    ]
  },
  {
    "title": "Sports Betting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Equilibrium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Take a Guess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Compressed Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Take Your Places!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "A Variety of Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1556/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Good Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Boring Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Say No to Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Coin Rows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Two Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "PizzaForces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1555/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "You",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1554/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Diane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1554/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Mikasa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1554/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cobb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1554/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Cherry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1554/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Stairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/I",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "XOR and Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/H",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Common Divisor Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/G",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Pairwise Modulo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Permutation Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Backspace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Penalty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Reverse String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Digits Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1553/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Organizing a Music Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/I",
    "difficulty": 3400,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Guess the Perimeter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "interactive",
      "number theory"
    ]
  },
  {
    "title": "A Serious Referee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "title": "Telepanting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/F",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Colors and Intervals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Array Differentiation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Maximize the Intersections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Running for Gold",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Subsequence Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1552/A",
    "difficulty": 800,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Equidistant Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Fixed Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Domino (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/D2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Domino (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/D1",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Interesting Story",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Wonderful Coloring - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/B2",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Wonderful Coloring - 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/B1",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Polycarp and Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1551/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Jumping Around",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Stringforces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Excellent Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Manhattan Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum Cost Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Find The Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1550/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gregor and the Pawn Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1549/B",
    "difficulty": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Gregor and Cryptography",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1549/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Gregor and the Two Painters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gregor and the Odd Cows (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/D2",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Gregor and the Odd Cows (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/D1",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Three Little Pigs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Integers Have Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Web of Lies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1548/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "How Many Paths?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/G",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Array Stabilization (GCD version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Air Conditioners",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/E",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Co-growing Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/D",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Pair Programming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Alphabetical Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Shortest Path with Obstacle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1547/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "AquaMoon and Stolen String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1546/B",
    "difficulty": 1200,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "title": "AquaMoon and Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1546/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "AquaMoon and Potatoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "AquaMoon and Time Stop (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/E2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "AquaMoon and Time Stop (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/E1",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "AquaMoon and Wrong Coordinate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "AquaMoon and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/C",
    "difficulty": 2800,
    "tags": [
      "2-sat",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "AquaMoon and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "AquaMoon and Strange Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1545/A",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "The Final Pursuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "RPD and Rap Sheet (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/D2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "RPD and Rap Sheet (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/D1",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Need for Pink Slips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/C",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Customising the Track",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Exciting Bets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1543/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Abnormal Permutation Pairs (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/E2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Abnormal Permutation Pairs (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/E1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Priority Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Strange Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/C",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Plus and Multiply",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Odd Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1542/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Pleasant Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1541/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Pretty Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1541/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tasty Dishes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/E",
    "difficulty": 3500,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Inverse Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/D",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Converging Array (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/C2",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Converging Array (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/C1",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Tree Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/B",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Great Graphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1540/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Strange Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Game with Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "PriceFixed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Stable Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Love Song",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Contest Start",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1539/A",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Gift Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Interesting Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Funny Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "matrices",
      "strings"
    ]
  },
  {
    "title": "Another Problem About Dividing Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Number of Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Friends and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Stone Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1538/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Figure Fixing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/F",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Erase and Extend (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Erase and Extend (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/E1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Deleting Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Challenging Cliffs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bad Boy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Arithmetic Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1537/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Omkar and Akmar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/F",
    "difficulty": 2600,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "games",
      "geometry",
      "math",
      "meet-in-the-middle",
      "string suffix structures"
    ]
  },
  {
    "title": "Omkar and Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Omkar and Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Diluc and Kaeya",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "number theory"
    ]
  },
  {
    "title": "Prinzessin der Verurteilung",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Omkar and Bad Story",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1536/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "String Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Gold Transfer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Playoff Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Unstable String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Array Reodering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Fair Playoff",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1535/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lost Nodes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "interactive",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "A New Beginning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/G",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Falling Sand (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/F2",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Falling Sand (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/F1",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Lost Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "title": "Lost Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Little Alawn's Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Histogram Ugliness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Colour the Flag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1534/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Pawns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/J",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Excursions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Submatrices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Biome Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Binary String Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Chess Team Forming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "String Searching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "hashing"
    ]
  },
  {
    "title": "Sweets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Nearest Point Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Travel to Bertown",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1533/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Prefixes and Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Good Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/E",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Teams Forming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "title": "Uniform String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Frog Jumping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "A+B (Trial Problem)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1532/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Сортировка слиянием",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/E3",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "title": "Сортировка слиянием",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/E2",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Сортировка слиянием",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Редактируем Зингер | color",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "title": "Симметричный амфитеатр",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Мониторинг",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Мониторинг",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/B1",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "title": "Зингер | color",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1531/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Turing's Award",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "What a Reversal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Bingo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Minimax",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Secret Santa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Pursuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Putting Plates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Binary Decimal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1530/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sifid and Strange Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1529/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Eshag Loves Big Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1529/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "AmShZ Farm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Mashtali and Hagh Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "It's a bird! No, it's a plane! No, it's AaParsa!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Trees of Tranquillity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Kavi on Pairing Duty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/B",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Parsa's Humongous Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1528/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Partition Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "MEX Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sequence Pair Weight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/C",
    "difficulty": 1600,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Palindrome Game (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/B2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "Palindrome Game (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/B1",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "And Then There Were K",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1527/A",
    "difficulty": 800,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Median Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Oolimry and Suffix Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Kill Anton",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math",
      "strings"
    ]
  },
  {
    "title": "Potions (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/C2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Potions (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/C1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "I Hate 1111",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mean Inequality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1526/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Goblins And Gnomes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Assimilation IV",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Armchairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Robot Collisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Permutation Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Potion-making",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1525/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hopping Around the Array ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Try Booking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Favorite Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Crypto Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Love-Hate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Compression and Expansion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Lord of the Values",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Game of Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1523/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Nastia and a Beautiful Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1521/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Nastia Plays with a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1521/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Nastia and a Hidden Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1521/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Nastia and a Good Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1521/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Nastia and Nearly Good Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1521/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "To Go Or Not To Go?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Guess the K-th Zero (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/F2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "interactive"
    ]
  },
  {
    "title": "Guess the K-th Zero (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/F1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Arranging The Sheep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Same Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Not Adjacent Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Ordinary Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Do Not Be Distracted!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1520/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Chests and Keys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/F",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows"
    ]
  },
  {
    "title": "Off by One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "geometry",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Maximum Sum of Products",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Berland Regional",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "The Cake Is a Lie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Red and Blue Beans",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1519/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Fly Around the World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Starry Night Camping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Reunion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/F",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Group Photo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Explorer Space",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Fillomino 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Morning Jogging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sum of 2050",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1517/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Baby Ehab Plays with Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1516/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1516/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Baby Ehab Partitions Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1516/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "AGAGA XOOORRR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1516/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Tit for Tat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1516/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Phoenix and Diamonds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/I",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Phoenix and Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Phoenix and Odometers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/G",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Phoenix and Earthquake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Phoenix and Computers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Phoenix and Socks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Phoenix and Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Phoenix and Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Phoenix and Gold",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1515/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Baby Ehab's Hyper Apartment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1514/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "graphs",
      "interactive",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Cut and Stick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1514/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Product 1 Modulo N",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1514/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "AND 0, Sum Big",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1514/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Perfectly Imperfect Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1514/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Swapping Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Cost Equilibrium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "title": "GCD and MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Add One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "AND Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Array and Peaks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1513/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Short Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/G",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Education",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Permutation by Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Corrupted Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "A-B Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Almost Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Spy Detected!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1512/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Chips on a Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "title": "Chainword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "matrices",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Colorings and Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Min Cost String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Yet Another Card Deck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "GCD Length",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Review Site",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1511/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "King's Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/K",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Japanese Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/J",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Is It Rated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/I",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Hard Optimization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/H",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Guide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/G",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "Fiber Shape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/F",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Equilibrium Point /\\textbackslash/\\textbackslash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/E",
    "difficulty": 2700,
    "tags": []
  },
  {
    "title": "Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cactus Not Enough",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/C",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Button Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/B",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "ASCII Automata Art",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1510/A",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "The Sports Festival",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1509/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "TMT Document",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1509/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Average Height",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1509/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Optimal Encoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Tree Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Swap Pass",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Complete the MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Almost Sorted",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Binary Literature",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1508/A",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Maximize the Remaining String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/G",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Triangular Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Restoring the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/E",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Epic Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Double-ended Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Partial Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Strange Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1506/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Mysterious language again, seriously?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/I",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "L BREAK into program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/H",
    "difficulty": 2500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Encoded message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/G",
    "difficulty": 2600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/F",
    "difficulty": 2200,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Cakewalk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Xenolith? Hippodrome?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "title": "Fibonacci Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "DMCA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/B",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Is it rated - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1505/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Flip the Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1504/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": " Déjà Vu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1504/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Balance the Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "2-Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Flip the Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/D",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Travelling Salesman Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "3-Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive"
    ]
  },
  {
    "title": "Balance the Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1503/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Napoleon Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1501/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Alexey and Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1501/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cupboards Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Subset Trick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Tiles for Bathroom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Matrix Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Two chandeliers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Going Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1500/A",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Graph Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Diameter Cuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Chaotic Merge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "title": "The Number of Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Grid Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Binary Removals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Domino on Windowsill",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1499/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Christmas Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "math",
      "trees"
    ]
  },
  {
    "title": "Two Houses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Bananas in a Microwave",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Planar Reflections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Box Fitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "GCD Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1498/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Square-Free Division (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Square-Free Division (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/E1",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Genius",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "k-LCM (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/C2",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "k-LCM (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/C1",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "M-arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Meximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1497/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Max and Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1496/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Split it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1496/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Qingshan and Daniel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/E",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "BFS Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Garden of the Sun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Let's Go Hiking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/B",
    "difficulty": 1900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Diamond Miner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1495/A",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Delete The Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "A-Z Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Dogeforces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "1D Sokoban",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Berland Crossword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "ABC String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1494/A",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Enchanted Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "interactive",
      "number theory"
    ]
  },
  {
    "title": "Enormous XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "GCD of an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "K-beautiful Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Planet Lapituletti",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Anti-knapsack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1493/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Almost Fault-Tolerant Database",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1492/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Genius's Gambit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1492/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Maximum width",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1492/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Card Deck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1492/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Three swimmers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1492/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Ruler Of The Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/I",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Yuezheng Ling and Dynamic Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Switch and Flip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/G",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Magnets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Fib-tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Zookeeper and The Infinite Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Pekora and Trampoline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimal Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "K-th Largest Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1491/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Old Floppy Drive ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Equalize the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Accidental Victory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Permutation Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/D",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Sum of Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Balanced Remainders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Dense Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1490/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Flower Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/J",
    "difficulty": 3100,
    "tags": [
      "*special",
      "data structures",
      "fft",
      "math"
    ]
  },
  {
    "title": "Demonic Invasion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/I",
    "difficulty": 3100,
    "tags": [
      "*special",
      "flows"
    ]
  },
  {
    "title": "Build From Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/H",
    "difficulty": 2800,
    "tags": [
      "*special",
      "combinatorics",
      "data structures"
    ]
  },
  {
    "title": "Painting Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Dogecoin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/F",
    "difficulty": 2300,
    "tags": [
      "*special",
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Palindromic Doubles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/E",
    "difficulty": 2200,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Problemsolving Marathon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Two Policemen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/C",
    "difficulty": 1900,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "RBS Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/B",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "From Zero To Y",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1488/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "String Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Ones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Cheap Dinner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Pythagorean Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Ties",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cat Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Arena",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1487/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Pairs of Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Paired Payment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Max Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Guessing the Greatest (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/C2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Guessing the Greatest (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/C1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Eastern Exhibition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "geometry",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Shifting Stacks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1486/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Copy or Prefix Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Move and Swap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Multiples and Power Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Floor and Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Replace and Keep Sorted",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Add and Divide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1485/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "title": "Vabank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Useful Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Skyline Photo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Playlist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Basic Diplomacy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Restore Modulo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Prison Break",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1482/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "AB Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/F",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Sorting Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "AB Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Fence Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "New Colony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Space Navigation ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1481/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "The Great Hero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1480/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Yet Another String Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1480/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "School Clubs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "fft",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Odd Mineral Resource",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Continuous City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Painting the Array II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Painting the Array I",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/B1",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Searching Local Minimum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1479/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "title": "Nezzar and Symmetric Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1478/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Nezzar and Lucky Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1478/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nezzar and Colorful Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1478/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Nezzar and Chocolate Bars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/F",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Nezzar and Tournaments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Nezzar and Hidden Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Nezzar and Nice Beatmap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Nezzar and Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Nezzar and Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1477/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Lanterns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Pattern Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Longest Simple Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Inflation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "K-divisible Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1476/A",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Strange Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/G",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Unusual Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/F",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Advertising Agency",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/E",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Cleaning the Phone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Ball in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "title": "New Year's Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Odd Divisor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1475/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "1 2 3 4 ...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "What Is It?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Cleaning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Array Destruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Different Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Puzzle From the Future",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1474/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Tiles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Strange Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/F",
    "difficulty": 2700,
    "tags": [
      "flows",
      "math"
    ]
  },
  {
    "title": "Minimum Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/E",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "No More Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "String LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Replacing Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1473/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Moving to the Capital",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/G",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "New Year's Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Correct Placement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Even-Odd Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Long Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/C",
    "difficulty": 1100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Fair Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Cards for Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1472/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Strange List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1471/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Strange Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1471/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Strange Covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/F",
    "difficulty": 3500,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "title": "Strange Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Strange Housing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Strange Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Strange Definition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Strange Birthday Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1470/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Power Sockets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "A Bit Similar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Ceil Divisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Building a Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Red and Blue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/B",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1469/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Waste Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/N",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Similar Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/M",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Prime Divisors Selection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/L",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/K",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Road Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/J",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Plane Tiling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/I",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "K and Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/H",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hobbits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/G",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Full Turn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/F",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "hashing",
      "number theory"
    ]
  },
  {
    "title": "Four Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/E",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Firecrackers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Berpizza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Bakery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/B",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "LaIS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1468/A",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Distinctive Roots in a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1467/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Sum of Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1467/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Three Bags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1467/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Hills And Valleys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1467/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Wizard of Orz",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1467/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Riddle of the Sphinx",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/I",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "data structures",
      "interactive"
    ]
  },
  {
    "title": "Finding satisfactory solutions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/H",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Song of the Sirens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/G",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Euclid's nightmare",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Apollo versus Pan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "title": "13th Labour of Heracles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Canine poetry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Last minute enhancements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Bovine Dilemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1466/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "My Beautiful Madness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1464/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Max Correct Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Plan of Lectures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Busy Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/C",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Find The Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Dungeon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1463/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "The Treasure of The Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Close Tuples (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/E2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Close Tuples (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/E1",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Add to Neighbour and Remove",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Unique Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/C",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Last Year's Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Favorite Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1462/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Mathematical Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Water Level",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Divide and Summarize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Random Events",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Find the Spruce",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "String Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1461/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Move and Turn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1459/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Red-Blue Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1459/A",
    "difficulty": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Range Diameter Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Nim Shortcuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "title": "Flip and Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Latin Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/C",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Glass Half Spilled",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/B",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Row GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1458/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "XOR-ranges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1456/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Forbidden Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "String and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Four Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Sequence and Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ping-pong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "title": "Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Strange Functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1455/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Array Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Number of Simple Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Number into Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/D",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sequence Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Unique Bid Auction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Special Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1454/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "probabilities"
    ]
  },
  {
    "title": "Even Harder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/F",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Dog Snacks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Checkpoints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Suffix Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Cancel the Trains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1453/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Game On Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Divide Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Two Editorials",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Radio Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Two Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/C",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Toy Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Robot Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1452/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Nullify The Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "title": "Bitwise Queries (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/E2",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Bitwise Queries (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/E1",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Circle Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "geometry",
      "math"
    ]
  },
  {
    "title": "String Equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Non-Substring Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Subtract or Divide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1451/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Multithreading (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/H2",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Multithreading (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/H1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Communism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "title": "The Struggling Contestant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Capitalism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Rating Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Errich-Tac-Toe (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/C2",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Errich-Tac-Toe (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/C1",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Balls of Steel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Avoid Trygub",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1450/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Numbers Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1447/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Add Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1447/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Line Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Long Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "title": "Frequency Problem (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/D2",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Frequency Problem (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/D1",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Xor Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Catching Cheaters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Knapsack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1446/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1445/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Array Rearrangment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1445/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Finding the Vertex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1444/E",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Rectangular Polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1444/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Team-Building",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1444/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Divide and Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1444/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1444/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Long Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1443/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "The Delivery Dilemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1443/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Saving the City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1443/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Kids Seating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1443/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Differentiating Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/F",
    "difficulty": 3400,
    "tags": [
      "games",
      "interactive"
    ]
  },
  {
    "title": "Black, White and Grey Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Graph Transpositions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Identify the Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Extreme Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1442/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Sum of Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1440/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Buy the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1440/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cheat and Win",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/E",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "trees"
    ]
  },
  {
    "title": "INOI Final Contests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/D",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft"
    ]
  },
  {
    "title": "Greedy Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Graph Subset Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Binary Table (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/A2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Binary Table (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1439/A1",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Olha and Igor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/F",
    "difficulty": 3000,
    "tags": [
      "interactive",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Yurii Can Do Everything",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "title": "Powerful Ksenia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Engineer Artem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/C",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "chinese remainder theorem",
      "constructive algorithms",
      "fft",
      "flows"
    ]
  },
  {
    "title": "Valerii Against Everyone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Specific Tastes of Andre ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1438/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Death DBMS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Emotional Fishermen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Make It Increasing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Minimal Height Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/D",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Chef Monocarp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Reverse Binary Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Marketing Scheme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1437/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sum Over Subsets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Complicated Computations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Bandit in a City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Binary Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "title": "Prime Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Reorder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1436/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "A Convex Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1434/E",
    "difficulty": 3500,
    "tags": [
      "dsu",
      "games"
    ]
  },
  {
    "title": "Reducing Delivery Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/G",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Zero Remainder Sum ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Two Round Dances",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/E",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Districts Connection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "title": "Dominant Piranha",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/C",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Yet Another Bookshelf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Boring Apartments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1433/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Zero-XOR Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/J",
    "difficulty": 3400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Cyclic Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/I",
    "difficulty": 2900,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Rogue-like Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/H",
    "difficulty": 2600,
    "tags": [
      "*special",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Number Deletion Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/G",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Neural Network Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/F",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Chess Match",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Used Markers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Black Friday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Polycarp and the Language of Gods",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Selling Hamburgers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1431/A",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Yet Another DAG Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Realistic Gameplay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "String Reversal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "String Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Numbers on Whiteboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Barrels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Number of Apartments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1430/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Rotary Laser Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Lucky Numbers (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/G2",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Lucky Numbers (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/G1",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Fruit Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Carrots for Rabbits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Bouncing Boomerangs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "ABBB",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Belted Rooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/B",
    "difficulty": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Box is Pull",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1428/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Prison Break",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "games",
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "One Billion Shades of Grey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/G",
    "difficulty": 3300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Boring Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Xum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Unshuffling a Deck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "The Hard Work of Paparazzi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Chess Cheater",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Avoiding Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1427/A",
    "difficulty": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Number of Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/F",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Rock, Paper, Scissors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/E",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Non-zero Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Increase and Copy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Symmetric Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Floor Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1426/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Impressive Harvesting of The Orchard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/I",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Huge Boxes of Animal Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/H",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Flamingoes of Mystery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/F",
    "difficulty": 1400,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Excitation of Atoms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Danger of Mad Snakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Captain of Knights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/C",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Blue and Red of Our Faculty!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/B",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Arena of Greed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1425/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Ancient Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1424/M",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Years",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1424/G",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "BubbleSquare Tokens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/N",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Milutin's Plums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/M",
    "difficulty": 2800,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Light switches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/L",
    "difficulty": 2600,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Lonely Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/K",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Bubble Cup hypothesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/J",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Lookup Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/I",
    "difficulty": 3000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Virus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/H",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Growing flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/G",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/F",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "title": "5G Antenna Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/E",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Does anyone else hate the wind?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/D",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Dušan's Railway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/C",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Valuable Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Wakanda Forever",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1423/A",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Boring Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minlexes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Returning Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/D",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Bargain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Nice Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1422/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Swedish Heroes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1421/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Hexagons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1421/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Palindromifier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1421/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Putting Bricks in the Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1421/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "XORwice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1421/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Battle Lemmings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Rescue Nibel!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Pokémon Army (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/C2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Pokémon Army (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/C1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Rock and Lever",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Cubes Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1420/A",
    "difficulty": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Rain of Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Decryption",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sage's Birthday (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/D2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Sage's Birthday (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/D1",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Killjoy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Stairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Digit Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1419/A",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Three Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "two pointers"
    ]
  },
  {
    "title": "Equal Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Expected Damage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "title": "Trash Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Mortal Kombat Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Negative Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Buying Torches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1418/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1417/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Copy-paste",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1417/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Showing Off",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/F",
    "difficulty": 3300,
    "tags": [
      "flows",
      "graph matchings",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Split",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Graph and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "XOR Inverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Make Them Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "k-Amazing Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1416/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Cakes for Clones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/F",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "New Game Plus!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "XOR-gun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Bouncing Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Repainting Street",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Prison Break",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1415/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Roads and Ramen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Solo mid Oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Shurikens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Perform Easily",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "A New Technique",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Finding Sasuke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1413/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "No Game No Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "games",
      "math",
      "matrices"
    ]
  },
  {
    "title": "The Thorny Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/F",
    "difficulty": 3000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Poman Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Grime Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Peaceful Rooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Fair Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "In-game Chat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1411/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Subsequences of Length Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Two Platforms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Decrease the Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yet Another Array Restoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yet Another Two Integers Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1409/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bitwise Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/I",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Rainbow Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Clusterization Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Two Different",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Avoid Rainbow Cycles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Searchlights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Discrete Acceleration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Arrays Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Circle Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1408/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Egor in the Republic of Dagestan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1407/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Discrete Centrifugal Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1407/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Chocolate Bunny",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1407/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Big Vova",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1407/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ahahahahahahahaha",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1407/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Deleting Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1406/E",
    "difficulty": 2600,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Three Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1406/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Link Cut Centroids",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1406/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Maximum Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1406/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Subset Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1406/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Array Cancellation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1405/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Permutation Forgery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1405/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Bricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1404/E",
    "difficulty": 2800,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Game of Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1404/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Fixed Point Removal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1404/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Tree Tag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1404/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "title": "Balanced Bitstring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1404/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Chess Rush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1403/C",
    "difficulty": 3200,
    "tags": [
      "*special",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Spring cleaning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1403/B",
    "difficulty": 2300,
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "The Potion of Great Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1403/A",
    "difficulty": 2400,
    "tags": [
      "*special",
      "2-sat",
      "binary search",
      "data structures",
      "graphs",
      "interactive",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Star Trek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1402/C",
    "difficulty": 2600,
    "tags": [
      "*special",
      "combinatorics",
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "matrices",
      "trees"
    ]
  },
  {
    "title": "Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1402/B",
    "difficulty": 2900,
    "tags": [
      "*special",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Fancy Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1402/A",
    "difficulty": 1800,
    "tags": [
      "*special",
      "data structures",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Reverse and Swap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Divide Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Maximum Distributed Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Mere Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Ternary Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Distance and Axis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1401/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Mercenaries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "dsu",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "x-prime Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Clear the Multiset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Zigzags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Binary String Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/C",
    "difficulty": 1500,
    "tags": [
      "2-sat",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "RPG Protagonist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "String Similarity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1400/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Yet Another Segments Subset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Weights Division (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Weights Division (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/E1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Binary String To Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Boats Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Gifts Fixing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Remove Smallest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1399/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Running Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Controversial Rounds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Two Types of Spells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Colored Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Good Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Substring Removal Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Bad Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1398/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Power Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1397/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Juggling Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1397/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Distance Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1396/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Rainbow Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1396/D",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Monster Invaders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1396/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Stoned Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1396/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Multiples of Length",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1396/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Boboniu and Bit Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1395/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Boboniu Plays Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1395/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Boboniu Likes to Color Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1395/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Boboniu and Banknote Collection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1394/E",
    "difficulty": 3500,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Boboniu and Jianghu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1394/D",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Boboniu and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1394/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Boboniu Walks on Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1394/B",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Boboniu Chats with Du",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1394/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Twilight and Ancient Scroll (harder version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/E2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Twilight and Ancient Scroll (easier version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/E1",
    "difficulty": 2800,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Rarity and New Dress",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Pinkie Pie Eats Patty-cakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Applejack and Storages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Rainbow Dash, Fluttershy and Chess Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1393/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Kevin and Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/I",
    "difficulty": 3300,
    "tags": [
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "title": "ZS Shuffles Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/H",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Omkar and Pies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Omkar and Landslide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Omkar and Duck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Omkar and Bed Wars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Omkar and Waterslide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Omkar and Infinity Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Omkar and Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1392/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Pairs of Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1391/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "505",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1391/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cyclic Permutations ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1391/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Fix You",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1391/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Suborrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1391/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Directing Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/G",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Bicolored Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "graph matchings",
      "sortings"
    ]
  },
  {
    "title": "Calendar Ambiguity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/E",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Segment Intersections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Good String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Array Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "LCM Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1389/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Uncle Bogdan and Projections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1388/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Captain Flint and Treasure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1388/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Uncle Bogdan and Country Happiness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1388/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Captain Flint and a Long Voyage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1388/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Captain Flint and Crew Recruitment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1388/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Viruses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1387/C",
    "difficulty": 2900,
    "tags": [
      "*special",
      "dp",
      "shortest paths",
      "string suffix structures"
    ]
  },
  {
    "title": "Village (Maximum)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1387/B2",
    "difficulty": 2500,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Village (Minimum)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1387/B1",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1387/A",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "dfs and similar",
      "dp",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Joker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1386/C",
    "difficulty": 2800,
    "tags": [
      "*special",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "title": "Mixture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1386/B",
    "difficulty": 2900,
    "tags": [
      "*special",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1386/A",
    "difficulty": 2700,
    "tags": [
      "*special",
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Columns Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/G",
    "difficulty": 2300,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Removing Leaves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Directing Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "a-Good String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/D",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Make It Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Restore the Permutation by Merger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Three Pairwise Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1385/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Koa and the Beach (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1384/B2",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Koa and the Beach (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1384/B1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Common Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1384/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Special Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/F",
    "difficulty": 3200,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Strange Operation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Rearrange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "String Transformation 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/C",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "GameGame",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "String Transformation 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1383/A",
    "difficulty": 1700,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Sequential Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1382/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Common Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1382/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Origami",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/E",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "The Majestic Brown Tree Snake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/D",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Mastermind",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Unmerge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/B",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Prefix Flip (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/A2",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Prefix Flip (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1381/A1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Circular Dungeon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/G",
    "difficulty": 2600,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Strange Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Merging Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Berserk And Fireball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Create The Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Universal Solution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Three Indices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1380/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Chess Strikes Back (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/F2",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Chess Strikes Back (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/F1",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Inverse Genealogy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "New Passenger Trams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Choosing flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Dubious Cyrpto",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Acacius and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1379/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cubic Lattice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/I",
    "difficulty": 3500,
    "tags": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Set Merging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Tree Modification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/G",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Integer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Inversion SwapSort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Replace by MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Element Extermination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Neighbor Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Sign Flipping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1375/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Cyclic Shifts Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Reading Books (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Reading Books (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/E1",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Zero Remainder Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/D",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Move Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/C",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Multiply by 2, divide by 6",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Required Remainder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1374/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Pawns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "title": "Network Coverage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Maximum Sum on Even Positions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/D",
    "difficulty": 1600,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Pluses and Minuses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/C",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "01 Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/B",
    "difficulty": 900,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Donut Shops",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1373/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Omkar and Modes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "Omkar and Last Floor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Omkar and Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Omkar and Baseball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Omkar and Last Class of Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Omkar and Completion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1372/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Raging Thunder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Asterism (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/E2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Asterism (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Grid-00100",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "A Cookie for You",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Magical Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Magical Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1371/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Hidden Pair (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "The Hidden Pair (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/F1",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Binary Subsequence Rotation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Odd-Even Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Number Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/C",
    "difficulty": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "GCD Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Maximum GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1370/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "BareLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "title": "DeadLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "TediousLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "RationalLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "AccurateLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "FashionabLee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1369/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Breadboard Capacity (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/H2",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Breadboard Capacity (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/H1",
    "difficulty": 3300,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Shifting Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Lamps on a Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/F",
    "difficulty": 2600,
    "tags": [
      "games",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Ski Accidents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "AND, OR and square sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Even Picture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Codeforces Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "C+=",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1368/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Flying Sort (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/F2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Flying Sort (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/F1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Necklace Assembly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Task On The Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Social Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Even Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Short Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1367/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Construct the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Jog Around The Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dp",
      "geometry",
      "graphs"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Two Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Palindromic Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Shovels and Swords",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1366/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Secure Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Swaps Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/F",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Maximum Subsequence Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Solve The Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Rotation Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Trouble Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Matrix Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1365/A",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "X-OR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1364/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Ehab's Last Corollary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1364/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Ehab and Prefix MEXs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1364/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Most socially-distanced subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1364/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "XXXXX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1364/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Rotating Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Tree Shuffling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Guess The Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Game On Leaves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/C",
    "difficulty": 1600,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "title": "Subsequence Hate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Odd Selection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1363/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Johnny and Another Rating Drop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1362/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Johnny and His Hobbies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1362/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Johnny and Ancient Computer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1362/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Johnny and New Toy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "James and the Chase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/E",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Johnny and James",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/D",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Johnny and Megan's Necklace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Johnny and Grandmaster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/B",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Johnny and Contribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1361/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Binary Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "A/B Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Spy-string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/E",
    "difficulty": 1300,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Buying Shovels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Similar Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Honest Coach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Minimal Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1360/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "RC Kaboom Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Modular Stability",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Yet Another Yet Another Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Mixing Water",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "New Theatre Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Berland Poker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1359/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tasty Cookie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Are You Fired?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Best Vacation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Celex Update",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Maria Breaks the Self-isolation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Park Lighting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1358/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Root of quantum Fourier transform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/E2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Power of quantum Fourier transform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - Dataset 7",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/D5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - Dataset 6",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/D4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - Dataset 5",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/D3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - Dataset 4",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - Dataset 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Prepare superposition of basis states with the same parity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/C2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Prepare superposition of basis states with 0s",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/C1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "\"Is the number divisible by 3?\" oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "\"Is the bit string balanced?\" oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Y, XZ, -Y and -XZ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A7",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish four Pauli gates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A6",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Rz(θ) from Ry(θ)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Rz from R1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish H from X",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish I, CNOTs and SWAP",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Figure out direction of CNOT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1357/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quantum Classification - 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Prepare state |01⟩ + |10⟩ + |11⟩",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Decrement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Increment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Z from -Z",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/A5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish I ⊗ X from CNOT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/A4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Z from S",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/A3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish I from Z",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish I from X",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1356/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Guess Divisors Count",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "title": "Restorer Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "ternary search"
    ]
  },
  {
    "title": "Game With Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Count Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Young Explorers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sequence with Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1355/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Find a Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/G",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Summoning Minions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Graph Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Multiset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Not So Simple Polygon Embedding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/C2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Simple Polygon Embedding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/C1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Ternary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Alarm Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1354/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Decreasing Heights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "K-periodic Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Constructing the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Board Moves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/C",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Arrays And Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Most Unstable Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1353/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Special Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/G",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Binary String Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/F",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Special Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Alice, Bob and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/D",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "K-th Not Divisible by n",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Same Parity Summands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Sum of Round Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1352/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Skier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1351/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Square?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1351/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "A+B (Trial Problem)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1351/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Orac and Models",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1350/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Orac and Factors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1350/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Slime and Sequences (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/F2",
    "difficulty": 3500,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Slime and Sequences (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/F1",
    "difficulty": 3100,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Slime and Hats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Slime and Biscuits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/D",
    "difficulty": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Orac and Game of Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Orac and Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Orac and LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1349/A",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Phoenix and Memory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Phoenix and Berries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Phoenix and Science",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Phoenix and Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Phoenix and Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Phoenix and Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1348/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Pac-Man 2.0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/I",
    "difficulty": 2900,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Game with Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/H",
    "difficulty": 2700,
    "tags": [
      "*special",
      "data structures",
      "games"
    ]
  },
  {
    "title": "Two IP Cameras",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/G",
    "difficulty": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dune II: Battle For Arrakis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Magic Tricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Constructing the Dungeon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Spring Cleaning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Boot Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Color Revolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1346/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Card Constructions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1345/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Puzzle Pieces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1345/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Piet's Palette",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/F",
    "difficulty": 3200,
    "tags": [
      "matrices"
    ]
  },
  {
    "title": "Train Tracks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Résumé Review",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Quantifier Question",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Monopole Magnets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Hilbert's Hotel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1344/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Restore the Permutation by Sorted Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Weights Distributing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Constant Palindrome Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Alternating Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Balanced Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1343/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Make It Ascending",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Placing Rooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "title": "Multiple Testcases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Yet Another Counting Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/C",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Binary Period",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Road To Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1342/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nastya and Door",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1341/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Nastya and Rice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1341/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Nastya and CBS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/F",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "data structures",
      "hashing"
    ]
  },
  {
    "title": "Nastya and Bees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/E",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Nastya and Time Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Nastya and Unexpected Guest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Nastya and Scoreboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Nastya and Strange Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1340/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sorted Adjacent Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1339/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Filling Diamonds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1339/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "JYPnation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1338/E",
    "difficulty": 3500,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Nested Rubber Bands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1338/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Perfect Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1338/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Edge Weight Assignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1338/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Powered Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1338/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Kana and Dragon Quest game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1337/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ichihime and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1337/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Chiori and Doll Picking (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/E2",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Chiori and Doll Picking (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/E1",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Yui and Mahjong Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/D",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Kaavi and Magic Spell",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Xenia and Colorful Gems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Linova and Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1336/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Robots on a Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "matrices"
    ]
  },
  {
    "title": "Three Blocks Palindrome (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/E2",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Three Blocks Palindrome (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/E1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Anti-Sudoku",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/D",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Two Teams Composing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Construct the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Candies and Two Sisters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1335/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Substring Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "fft"
    ]
  },
  {
    "title": "Strange Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Divisor Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Euler Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Circle of Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Middle Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Level Statistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1334/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kate and imperfection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/F",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Road to 1600",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Challenges in school №41",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "graphs",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Eugene and an array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Kind Anton",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Little Artem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1333/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "No Monotone Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/G",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Independent Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Height All the Same",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Walk on Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "K-Complete Word",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Composite Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Exercising Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1332/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "It's showtime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/H",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Lingua Romana",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/G",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Elementary!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Jordan Smiley",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Again?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "...And after happily lived ever they",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks"
    ]
  },
  {
    "title": "Limericks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Is it rated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1331/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Dreamoon Likes Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1330/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dreamoon and Ranking Collection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1330/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dreamoon Loves AA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1329/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Dreamoon Likes Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1329/D",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Drazil Likes Heap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1329/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Dreamoon Likes Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1329/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Dreamoon Likes Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1329/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Make k Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/F",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Carousel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ternary XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "K-th Beautiful String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Divisibility Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1328/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Letters and Question Marks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "title": "AND Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Count The Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/E",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Infinite Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Game with Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Princesses and Princes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Sum of Odd Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1327/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Spiderweb Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/G",
    "difficulty": 3500,
    "tags": [
      "dp",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Wise Men (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/F2",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Wise Men (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/F1",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Bombs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Prefix-Suffix Palindrome (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/D2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Prefix-Suffix Palindrome (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/D1",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Permutation Partitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Maximums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bad Ugly Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1326/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Ehab's Last Theorem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Ehab's REAL Number Theory Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Ehab the Xorcist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Ehab and Path-etic MEXs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "CopyCopyCopyCopyCopy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "EhAb AnD gCd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1325/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Maximum White Subtree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Sleeping Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/E",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Pair of Topics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Frog Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Yet Another Palindrome Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Yet Another Tetris Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1324/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Count Subrectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1323/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Even Subset Sum Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1323/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Assigning Fares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Median Mountain Range",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Reality Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Instant Noodles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Unusual Competitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1322/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Remove Adjacent",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1321/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Contest for Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1321/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Blocks and Sensors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/F",
    "difficulty": 3500,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Treeland and Viruses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Reachable Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "World of Darkraft: Battle for Azathoth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Navigation System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Journey Planning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1320/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Battalion Strength",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "probabilities"
    ]
  },
  {
    "title": "Team Building",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Nash Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Primitive Primes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "String Modification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Grade Allocation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1316/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Restoring Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1315/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Homecoming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1315/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Dead Pixel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1315/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Concatenation with intersection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Happy New Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Skyscrapers (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/C2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Skyscrapers (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/C1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Different Rules",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fast Food Restaurant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1313/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Autocompletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Attack on Red Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/F",
    "difficulty": 2500,
    "tags": [
      "games",
      "two pointers"
    ]
  },
  {
    "title": "Array Shrinking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Count the Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Adding Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ]
  },
  {
    "title": "Bogosort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Two Regular Polygons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1312/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Moving Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Construct the Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Three Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Perform the Combo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/C",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "WeirdSort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "title": "Add Odd or Subtract Even",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1311/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bad Cryptography",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/F",
    "difficulty": 3400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Strange Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/E",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Tourism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "graphs",
      "probabilities"
    ]
  },
  {
    "title": "Au Pont Rouge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/C",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Double Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/B",
    "difficulty": 2500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Recommendations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1310/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cow and Exercise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/G",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Cow and Vacation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/F",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Cow and Treats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cow and Fields",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Cow and Message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "title": "Cow and Friend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/B",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Cow and Haybales",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1307/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Kuroni the Private Tutor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Kuroni and Antihype",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Kuroni and the Punishment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/F",
    "difficulty": 2500,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Kuroni and the Score Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kuroni and the Celebration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Kuroni and Impossible Calculation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Kuroni and Simple Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Kuroni and the Gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1305/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Animal Observation (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/F2",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Animal Observation (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/F1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "1-Trees and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Shortest and Longest LIS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Air Conditioner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Longest Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Two Rabbits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1304/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Sum of Prefix Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Number of Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/F",
    "difficulty": 2800,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Erase Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Fill The Bag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Perfect Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "National Project",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/B",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Erasing Zeroes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1303/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Keep talking and nobody explodes -- hard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/J",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Deja vu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/I",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Who needs suffix structures?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/H",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Keep talking and nobody explodes -- medium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/G",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Keep talking and nobody explodes -- easy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/F",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force",
      "expression parsing"
    ]
  },
  {
    "title": "Amazing bitset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Dijkstra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/D",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Segment tree or Fenwick?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/C",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "DAG",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Nash equilibrium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1302/A",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Super Jaber",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Nanosoft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Time to Run",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Ayoub's function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Motarack's Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "ternary search"
    ]
  },
  {
    "title": "Three Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1301/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Assigning to Classes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1300/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Non-zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1300/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "So Mean",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1299/E",
    "difficulty": 3400,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "title": "Around the World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1299/D",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Water Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1299/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Aerodynamic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1299/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Anu Has a Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1299/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Falling Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures"
    ]
  },
  {
    "title": "Paint the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "strings"
    ]
  },
  {
    "title": "M-numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "math"
    ]
  },
  {
    "title": "Movie Fan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Modernization of Treeland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Bonus Distribution ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dream Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Cartoons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Likes Display",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1297/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Berland Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/F",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "String Coloring (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/E2",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "String Coloring (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/E1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Fight with Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Yet Another Walking Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Food Buying",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Array with Odd Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1296/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Good Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Permutation Separation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Same GCDs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/D",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Obtain The String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Infinite Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/B",
    "difficulty": 1700,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "Display The Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1295/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Three Paths on a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Obtain a Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/E",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "MEX maximizing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Product of Three Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Collecting Packages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Collecting Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1294/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "JOE is on TV!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1293/B",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "ConneR and the A.R.C. Markland-N",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1293/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Nora's Toy Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Rin and The Unknown Flower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Chaotic V.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Xenon's Attack on the Gangs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Aroma's Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "NEKO's Maze Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1292/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Coffee Varieties (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1291/F",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Array Sharpening",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1291/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Even But Not Even",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1291/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Making Shapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Cartesian Tree ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Coffee Varieties (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Prefix Enlightenment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Irreducible Anagrams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Mind Control",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1290/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Red-Blue Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "flows"
    ]
  },
  {
    "title": "Messenger Simulator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/E",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Minimax Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Yet Another Meme Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Deadline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1288/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Hyperset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1287/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Angry Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1287/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Harry The Potter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/F",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "fft",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fedya the Potter Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "LCC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Madhouse (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/C2",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Madhouse (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/C1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Numbers on Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1286/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Classical?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Delete a Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Dr. Evil Underscores",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Fadi and LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Just Eat It!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mezo Playing Zoma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1285/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Seollal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/G",
    "difficulty": 3300,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "New Year and Social Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "graph matchings",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "New Year and Castle Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "New Year and Conference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "sortings"
    ]
  },
  {
    "title": "New Year and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "New Year and Ascent Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "New Year and Naming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1284/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "DIY Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/F",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "New Year Parties",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Christmas Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/D",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Friends and Gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Candies Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Minutes Before the New Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1283/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Cake Is a Lie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Enchanted Artifact",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "title": "Petya and Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "K for the Price of One (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/B2",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "K for the Price of One (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/B1",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Temporarily unavailable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1282/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Azamon Web Services",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1281/B",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Suffix Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1281/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Intergalactic Sliding Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Kirchhoff's Current Loss",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/E",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Miss Punyverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Jeremy Bearimy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Beingawesomeism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cut and Paste",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1280/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "New Year and Handle Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "New Year Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Santa's Bot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Stack of Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Verse For Santa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "New Year Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1279/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Tests for problem D",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Segment Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Berry Jam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "A and B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Shuffle Hashing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1278/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Let's Play the Words?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1277/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Make Them Odd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1277/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Happy Birthday, Polycarp!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1277/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Asterisk Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/F",
    "difficulty": 3400,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Four Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Tree Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Beautiful Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Two Fairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "As Simple as One and Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1276/A",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Шардирование постов",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Контрольная сумма",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/E3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Контрольная сумма",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/E2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Контрольная сумма",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Storage2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/D",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "#define Задача B ...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Code Review",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Скрытый друг",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1275/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Two Bracket Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Nearest Opposite Parity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Remove One Element",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/D",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Yet Another Broken Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/C",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Snow Walking Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Three Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1272/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Divide The Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/F",
    "difficulty": 2700,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Common Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Portals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Shawarma Tent",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Suits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1271/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Xor on Figures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "title": "Number of Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/H",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Subset with Zero Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Awesome Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/F",
    "difficulty": 2600,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "Divide Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Strange Device",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Make Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Interesting Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1270/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Modulo Equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1269/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1269/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Happy Cactus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1268/E",
    "difficulty": 3400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Invertation in Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1268/D",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "math"
    ]
  },
  {
    "title": "K Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1268/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Domino for Young",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1268/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Long Beautiful Integer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1268/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Lexicography",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/L",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Key Storage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/K",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Just Arrange the Icons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/J",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Intriguing Selection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/I",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Help BerLine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Game Relics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/G",
    "difficulty": 3000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Foolprüf Security",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/F",
    "difficulty": 2600,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/E",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "DevOps Best Practices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Cactus Revenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/C",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Balls of Buma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/B",
    "difficulty": 900,
    "tags": []
  },
  {
    "title": "Apprentice Learning Trajectory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1267/A",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Red-Blue Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/H",
    "difficulty": 3400,
    "tags": [
      "dp",
      "graphs",
      "math",
      "matrices",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Permutation Concatenation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/G",
    "difficulty": 3300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Almost Same Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/F",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Spaceship Solitaire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Decreasing Debts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Diverse Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dice Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Competitive Programmer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1266/A",
    "difficulty": 1000,
    "tags": [
      "chinese remainder theorem",
      "math"
    ]
  },
  {
    "title": "Beautiful Mirrors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1265/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Beautiful Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1265/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Beautiful String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1265/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Beautiful Fibonacci Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Beautiful League",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Beautiful Bracket Sequence (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/D2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "title": "Beautiful Bracket Sequence (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/D1",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Beautiful Mirrors with queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "title": "Beautiful Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Beautiful Regional Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1264/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Economic Difficulties",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Editor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Secret Passwords",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/D",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Everyone is a Winner!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "PIN Codes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sweet Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1263/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Xor-Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1261/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Colored Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "A Game with Traps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Infinite Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Obtain Two Zeroes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Heating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1260/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Divisor Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/G",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "fft",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Make Them Similar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "The Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Yet Another Monster Killing Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Dominated Subarray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Magic Stick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Rival Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1257/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Equalizing Two Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Yet Another Division Into Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Binary String Minimizing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Platforms Jumping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/C",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Minimize the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Payment Without Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1256/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "League of Leesins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1255/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Fridge Lockers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1255/B",
    "difficulty": 1100,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Changing Volume",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1255/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Send Tree to Charlie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Point Ordering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Send Boxes to Alice (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Send Boxes to Alice (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/B1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Feeding Chicken",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1254/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cheap Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Antenna Coverage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Harmonious Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sweets Eating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Silly Mistake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Single Push",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1253/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Road Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/L",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Addition Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/K",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Tiling Terrace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/J",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Mission Possible",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/I",
    "difficulty": 3000,
    "tags": []
  },
  {
    "title": "Twin Buildings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/H",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Performance Review",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/G",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Regular Forestation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/F",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Songwriter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Find String in a Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Even Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Cleaning Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Copying Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1252/A",
    "difficulty": 1000,
    "tags": []
  },
  {
    "title": "Red-White Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "fft"
    ]
  },
  {
    "title": "Voting (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/E2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Voting (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/E1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Salary Changing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Minimize The Integer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Binary Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Broken Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1251/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Wires",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/N",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "SmartGarden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/M",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Divide The Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/L",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Projectors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/K",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "The Parade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/J",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Show Must Go On",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/I",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Happy Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/H",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Discarding Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/G",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Data Center",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/F",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "The Coronation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Conference Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/D",
    "difficulty": 3000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Trip to Saint Petersburg",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "The Feast and the Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Berstagram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1250/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Maximum Weight Subset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "By Elevator or Stairs?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/E",
    "difficulty": 1700,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Too Many Segments (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/D2",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Too Many Segments (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/D1",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Good Numbers (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/C2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Good Numbers (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/C1",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Books Exchange (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/B2",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Books Exchange (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/B1",
    "difficulty": 1000,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "title": "Yet Another Dividing into Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1249/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The World Is Just a Programming Task (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1248/D1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Grow The Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1248/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Integer Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1248/A",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Cursor Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1246/F",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Daniel and Spring Cleaning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/F",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Hyakugoku and Ladders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "title": "Shichikuji and Power Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Constanze's Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Restricted RPS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Good ol' Numbers Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1245/A",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Running in Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/G",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Minimizing Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Paint the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "The Football Season",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Rooms and Staircases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Pens and Pencils",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1244/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Character Swap (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1243/B2",
    "difficulty": 1600,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Character Swap (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1243/B1",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Maximum Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1243/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Planar Perimeter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1242/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Number Discovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1242/D",
    "difficulty": 3400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Sum Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1242/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "0-1 MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1242/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Tile Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1242/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1240/F",
    "difficulty": 3100,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Swiper, no swiping!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/F",
    "difficulty": 3400,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Turtle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Catowice City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/D",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Queue in the Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The World Is Just a Programming Task (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/B",
    "difficulty": 2500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ivan the Fool and the Probability Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1239/A",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Adilbek and the Watering System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Maximum Subtree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/F",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Keyboard Purchase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "AB-string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Standard Free2play",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Kill `Em All",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Prime Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1238/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Balanced Reversals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Balanced Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Balanced Domino Placements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Balanced Binary Search Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Balanced Playlist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Balanced Removals (Harder)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/C2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Balanced Removals (Easier)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/C1",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Balanced Tunnel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Balanced Rating Changes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1237/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alice and the Cactus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Alice and the Unfair Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Alice and the Doll",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Labs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Alice and the List of Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1236/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yet Another Substring Reverse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Special Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/E",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Distinct Characters Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/D",
    "difficulty": 1600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Pipes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Social Network (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/B2",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Social Network (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Equalize Prices Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1234/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Middle-Out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1231/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Increasing Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1231/C",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Ania and Minimizing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1230/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Dawid and Bags of Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1230/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "One Node is Gone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Another Filling the Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Complete Tripartite",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Primes and Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/C",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Filling the Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Distinct Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1228/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Not Same",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/G",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Wrong Answer on test 233 (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/F2",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Wrong Answer on test 233 (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/F1",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Arson In Berland Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "graphs",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Optimal Subsequences (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/D2",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Optimal Subsequences (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/D1",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Messy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Math Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1227/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "To Make 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/G",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Tree Factory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Rock Is Push",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Power Products",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/D",
    "difficulty": 1800,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "p-binary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "title": "TV Subscriptions (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/B2",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "TV Subscriptions (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Forgetting Things",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1225/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Wooden Raft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Stack Exterminable Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "hashing"
    ]
  },
  {
    "title": "Paint the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Sequence Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Save the Nature",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Strings Equalization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/B",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "CME",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1223/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Graph And Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Choose a Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Game With String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/E",
    "difficulty": 2500,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Make The Fence Great Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Perfect Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Knights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "2048 Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1221/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Geolocation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/G",
    "difficulty": 3400,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Gardener Alex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Tourism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Alex and Julian",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Substring Game in the Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/C",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Multiplication Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1220/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Harvester",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1219/G",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Periodic integer number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1219/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "The Light Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/I",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Function Composition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/H",
    "difficulty": 2900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Alpha planetary system",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Workout plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/F",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Product Tuples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "fft"
    ]
  },
  {
    "title": "Xor Spanning Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/D",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "fft",
      "graphs"
    ]
  },
  {
    "title": "Jumping Transformers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/C",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Guarding warehouses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/B",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "BubbleReactor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1218/A",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Forced Online Queries Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Sum Queries?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Coloring Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "The Number Of Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Zmei Gorynich",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Creating a Character",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1217/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Wi-Fi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Numerical Sequence (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Numerical Sequence (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Swords",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/D",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "White Sheet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/C",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Shooting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1216/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Radio Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/F",
    "difficulty": 2700,
    "tags": [
      "2-sat"
    ]
  },
  {
    "title": "Marbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Ticket Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Swap Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "The Number of Products",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Yellow Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1215/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tiles Placement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/H",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Feeling Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Employment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/F",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Petya and Construction Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Treasure Island",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "hashing"
    ]
  },
  {
    "title": "Bad Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Badges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Optimal Currency Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1214/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Path Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/G",
    "difficulty": 1800,
    "tags": [
      "divide and conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Unstable String Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Two Small Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Equalizing by Division (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/D2",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Equalizing by Division (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/D1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Book Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/C",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Bad Prices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Chips Moving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1213/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Unusual Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/I",
    "difficulty": 3000,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "title": "Road Repair in Treeland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/H",
    "difficulty": 3100,
    "tags": [
      "*special",
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "title": "King's Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "math",
      "trees"
    ]
  },
  {
    "title": "kotlinkotlinkotlinkotlin...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/F",
    "difficulty": 2300,
    "tags": [
      "*special",
      "graphs",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Double Permutation Inc.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/D",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ice Cream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Traveling Around the Golden Ring of Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Three Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1211/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Mateusz and Escape Room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/G",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Marek and Matching (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/F2",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "title": "Marek and Matching (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/F1",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "title": "Wojtek and Card Tricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/E",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Konrad and Company Evaluation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/D",
    "difficulty": 2400,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Kamil and Making a Stream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/C",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Marcin and Training Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Anadi and Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1210/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "title": "Moving Walkways",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Into Blocks (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/G2",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Into Blocks (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/G1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Koala and Notebook",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Rotate Columns (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/E2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Rotate Columns (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/E1",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cow and Snacks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Paint the Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Koala and Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Paint the Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1209/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Red Blue Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Polygons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/G",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bits And Pieces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Let Them Slide",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Restore Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Magic Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Uniqueness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "XORinacci",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1208/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Indie Album",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Remainder Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "XOR Guessing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Number Of Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Gas Pipeline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Square Filling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "There Are Two Types Of Burgers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1207/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Make Product Equal One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1206/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Choose Two Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1206/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Beauty of a Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Expected Value Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "title": "Almost All",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Palindromic Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/C",
    "difficulty": 2400,
    "tags": [
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Shortest Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Almost Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1205/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Natasha, Sasha and the Prefix Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Kirk and a Binary String (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/D2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Kirk and a Binary String (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/D1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Anna, Svyatoslav and Maps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Mislove Has Lost an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "BowWow and the Timetable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1204/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Complete the Projects (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/F2",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Complete the Projects (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/F1",
    "difficulty": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Boxers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/E",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Remove the Substring (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/D2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Remove the Substring (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/D1",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Common Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Equal Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Circle of Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1203/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "You Are Given Some Letters...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "You Are Given Some Strings...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Print a 1337-string...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "title": "You Are Given a WASD-string...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "You Are Given a Decimal String...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "You Are Given Two Binary Strings...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1202/A",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Knightmare (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/E2",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "title": "Knightmare (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/E1",
    "difficulty": 2900,
    "tags": [
      "graphs",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "title": "Treasure Hunting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Zero Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Important Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1201/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Graph Traveler",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Compress Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "White Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Round Corridor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/C",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Block Adventure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Hotelier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1200/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Water Lily",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1199/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "City Day",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1199/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "GCD Groups 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/F",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Rectangle Painting 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/E",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Rectangle Painting 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Matching vs  Independent Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Welfare State",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "MP3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1198/A",
    "difficulty": 1600,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Coloring Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/F",
    "difficulty": 2700,
    "tags": [
      "dp",
      "games",
      "matrices"
    ]
  },
  {
    "title": "Culture Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Yet Another Subarray Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Array Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Pillars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "DIY Wooden Ladder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1197/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "K-th Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Connected Component on a Chessboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "RGB Substring (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/D2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "RGB Substring (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/D1",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Robot Breakout",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Odd Sum Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Three Piles of Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1196/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Geometers Anonymous Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "OpenStreetMap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Submarine in the Rybinsk Sea (hard edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/D2",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Submarine in the Rybinsk Sea (easy edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/D1",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Basketball Exercise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Sport Mafia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Drinks Choosing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1195/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Another Meme Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/G",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Crossword Expert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Count The Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "1-2-K Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "From S To T",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Yet Another Crosses Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Remove a Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1194/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Scissors and Tape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1193/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Magic Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1193/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Amusement Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1193/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "math"
    ]
  },
  {
    "title": "Cubeword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1192/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Dynamic Diameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1192/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Building Skyscrapers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1192/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Tokitsukaze and Mahjong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1191/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Tokitsukaze and Enhancement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1191/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Tokitsukaze and Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/F",
    "difficulty": 3400,
    "tags": [
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Tokitsukaze and Explosion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Tokitsukaze and Strange Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Tokitsukaze and Duel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Tokitsukaze, CSL and Stone Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/B",
    "difficulty": 1800,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Tokitsukaze and Discard Items",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1190/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Candies!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1189/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Number Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1189/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Keanu Reeves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1189/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Problem from Red Panda",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Make Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/D",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Array Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Count Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/B",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Add on a Tree: Revolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/A2",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Add on a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1188/A1",
    "difficulty": 1600,
    "tags": [
      "trees"
    ]
  },
  {
    "title": "Gang Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/G",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Expected Square Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Tree Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Subarray Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Vasya And Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Letters Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Stickers and Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1187/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Vus the Cossack and a Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1186/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Vus the Cossack and a Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1186/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vus the Cossack and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1186/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Vus the Cossack and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1186/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vus the Cossack and a Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1186/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Playlist for Polycarp (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/G2",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Playlist for Polycarp (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/G1",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Two Pizzas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Polycarp and Snakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Extra Element",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/D",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Exam in BerSU (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/C2",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Exam in BerSU (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/C1",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Email from Polycarp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Ropewalkers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1185/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Daleks' Invasion (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/E3",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Daleks' Invasion (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/E2",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Daleks' Invasion (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/E1",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Parallel Universes (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/D2",
    "difficulty": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Parallel Universes (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/D1",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Heidi and the Turing Test (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/C3",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Heidi and the Turing Test (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/C2",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Heidi and the Turing Test (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/C1",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "The Doctor Meets Vader (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/B3",
    "difficulty": 2700,
    "tags": [
      "flows",
      "shortest paths"
    ]
  },
  {
    "title": "The Doctor Meets Vader (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/B2",
    "difficulty": 2200,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "The Doctor Meets Vader (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/B1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Heidi Learns Hashing (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/A3",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Heidi Learns Hashing (Medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/A2",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Heidi Learns Hashing (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1184/A1",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Subsequences (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/H",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Candy Box (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/G",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Topforces Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Subsequences (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Candy Box (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Computer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Equalize Prices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Nearest Interesting Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1183/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Maximum Sine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Product Oriented Recurrence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Complete Mirror",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Beautiful Lyrics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Plus from Picture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/B",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Filling Shapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1182/A",
    "difficulty": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "A Story of One Country (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/E2",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "A Story of One Country (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "title": "Irrigation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Flag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Split a Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Chunga-Changa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1181/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nick and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1180/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Alex and a Rhombus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1180/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alesya and Discrete Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1179/E",
    "difficulty": 3200,
    "tags": [
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "Fedor Runs for President",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1179/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Serge and Dining Room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1179/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "graph matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Tolik and His Uncle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1179/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Valeriy and Deque",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1179/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Stock Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "The Awesomest Vertex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "title": "Long Colorful Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/F2",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Short Colorful Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/F1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Archaeology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Prime Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tiles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "WOW Factor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Prime Minister",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1178/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Digits Sequence (Hard Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1177/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Digits Sequence (Easy Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1177/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Destroy it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Cover it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/E",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Recover it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Lose it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Merge it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Divide it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1176/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Yet Another Partiton Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "The Number of Subpermutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Minimal Segment Cover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Array Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Electrification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Catch Overflow!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "From Hero to Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1175/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ehab and the Big Finale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Ehab and the Expected GCD Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ehab and the Expected XOR Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Ehab and a Special Coloring Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Ehab Is an Odd Person",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/B",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Ehab Fails to Be Thanos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1174/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Nauuo and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1173/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Nauuo and Votes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1173/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Nauuo and Bug",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/F",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Nauuo and ODT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Nauuo and Portals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Nauuo and Pictures (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/C2",
    "difficulty": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Nauuo and Pictures (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/C1",
    "difficulty": 2300,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Nauuo and Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Nauuo and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1172/A",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Good Subsets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Longest Saw",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Graph Decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "title": "Wheels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Sliding Doors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "title": "Decoding of Integer Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Minus and Minus Give Plus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Bad Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Three Integers Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1170/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1169/B",
    "difficulty": 1500,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Circle Metro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1169/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Xor Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1168/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Anagram Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1168/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "And Reachability",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1168/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Good Triple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1168/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Increasing by Modulo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1168/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Low Budget Inception",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/G",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Scalar Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/F",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Range Deleting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Bicolored RBS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "News Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Lost Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "divide and conquer",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Telephone Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1167/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Vicky's Delivery Service",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "The LCMs Must be Large",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cute Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "A Tale of Two Lands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "All the Vowels Please",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Silent Classroom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1166/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "title": "Microtransactions (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/F2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Microtransactions (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/F1",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Two Arrays and Sum of Functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/E",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Almost All Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Good String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Polycarp Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Remainder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1165/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Indecisive Taxi Fee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Magical Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Mysterious Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Power Transmission (Hard Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/C2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Power Transmission (Easy Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/C1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Cat Party (Hard Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/B2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Cat Party (Easy Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/B1",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Eating Soup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1163/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Double Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1162/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Zoning Restrictions Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1162/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Collaboration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1160/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Expansion coefficient of the array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1159/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "A pile of stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1159/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Density of subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Strange device",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "interactive",
      "math",
      "trees"
    ]
  },
  {
    "title": "Winding polygonal line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Permutation recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "The minimal unique substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "title": "The Party and Sweets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1158/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Inverse of Rows and Columns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Maximum Balanced Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Minimum Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "N Problems During K Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Increasing Subsequence (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/C2",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Increasing Subsequence (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/C1",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Long Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Reachable Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1157/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Optimizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/G",
    "difficulty": 2700,
    "tags": [
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Card Bag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Special Segments of Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "two pointers"
    ]
  },
  {
    "title": "0-1-Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Match Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Ugly Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Inscribed Figures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1156/A",
    "difficulty": 1400,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Delivery Oligopoly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Guess the Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Beautiful Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Alarm Clocks Everywhere",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/C",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Game with Telephone Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/B",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Reverse a Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1155/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Minimum Possible LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Shovels Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Two Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/E",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Walking Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Gourmet Cat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Make Them Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Restoring Three Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1154/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Serval and Bonus Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Serval and Snake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "interactive"
    ]
  },
  {
    "title": "Serval and Rooted Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Serval and Parenthesis Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Serval and Toy Bricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Serval and Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1153/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Neko Rules the Catniverse (Large Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/F2",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Neko Rules the Catniverse (Small Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/F1",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Neko and Flashback",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Neko and Aki's Prank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Neko does Maths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Neko Performs Cat Furrier Transform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Neko Finds Grapes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1152/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sonya and Informatics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/F",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Number of Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Stas and the Queue at the Buffet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/D",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Problem for Nazar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Dima and a Bad XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Maxim and Biology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1151/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Tiling Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1150/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Stock Arbitraging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1150/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Election Promises",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1149/E",
    "difficulty": 3200,
    "tags": [
      "games",
      "graphs"
    ]
  },
  {
    "title": "Abandoning Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1149/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Tree Generator™",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1149/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Three Religions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1149/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Prefix Sum Primes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1149/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Holy Diver ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/H",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Gold Experience",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Foo Fighters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Earth Wind and Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Dirty Deeds Done Dirt Cheap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Crazy Diamond",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Born This Way",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Another One Bites The Dust",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1148/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Zigzag Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/F",
    "difficulty": 3500,
    "tags": [
      "games",
      "interactive"
    ]
  },
  {
    "title": "Rainbow Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/E",
    "difficulty": 3000,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Palindrome XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Thanos Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/C",
    "difficulty": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Chladni Figure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Hide and Seek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1147/A",
    "difficulty": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Satanic Panic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/H",
    "difficulty": 2900,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Zoning Restrictions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/G",
    "difficulty": 2700,
    "tags": [
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Leaf Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Hot is Cold",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Frog Jumping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tree Diameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Hate \"A\"",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Love \"A\"",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1146/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "AI Takeover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "title": "Neat Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/F",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Fourier Doodles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Pigeon d'Or",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Mystery Circuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Kanban Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Thanos Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1145/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Two Merged Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/G",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Graph Without Long Directed Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Median String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Equalize Them All",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Two Shuffled Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Parity Alternated Deletions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Diverse Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1144/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Queen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1143/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Nirvana",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1143/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Doors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1143/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pink Floyd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1142/E",
    "difficulty": 3200,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Foreigner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1142/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "U2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1142/C",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Lynyrd Skynyrd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1142/B",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "The Beatles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1142/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Privatization of Roads in Treeland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Same Sum Blocks (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/F2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Same Sum Blocks (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/F1",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Superhero Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/E",
    "difficulty": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Colored Boots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Polycarp Restores Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/C",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Maximal Continuous Rest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Game 23",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1141/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Double Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Extending Set of Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "title": "Palindrome-less Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Minimum Triangulation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Playlist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Good String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Detective Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1140/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dish Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Maximize Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Steps to One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Edgy Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Chocolates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Even Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1139/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Circus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1138/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Sushi for Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1138/A",
    "difficulty": 900,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Matches Are Not a Child's Play ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/F",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Train Car Selection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Cooperative Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "title": "Museums Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Camp Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Skyscrapers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1137/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Nastya Hasn't Written a Legend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1136/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Nastya Is Buying Lunch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1136/D",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Nastya Is Transposing Matrices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1136/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Nastya Is Playing Computer Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1136/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Nastya Is Reading a Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1136/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Spanning Tree with One Fixed Degree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/F2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Spanning Tree with Maximum Degree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/F1",
    "difficulty": 1600,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "K Balanced Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Zero Quantity Maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/D",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Balanced Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/C",
    "difficulty": 1200,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Preparation for International Women's Day",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Middle of the Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1133/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Greedy Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/G",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Clear the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/F",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Knapsack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Stressful Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Painting the Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/C",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Discounts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1132/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Most Dangerous Shark",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Asya And Kittens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dsu"
    ]
  },
  {
    "title": "String Multiplication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Gourmet choice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Draw!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sea Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1131/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Connect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1130/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "title": "Two Cakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1130/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Be Positive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1130/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Legendary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Isolation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Morse Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Wrong Answer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Toy Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/A2",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Toy Train (Simplified)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1129/A1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "System Testing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1121/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mike and Children",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1121/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Technogoblet of Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1121/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Secret Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "The very same Munchhausen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/E",
    "difficulty": 2600,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Power Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/D",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Compress String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Once in a casino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/B",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Diana and Liana",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1120/A",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Triple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/H",
    "difficulty": 3200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "title": "Get Ready for the Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Niyaz and Small Degrees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/F",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Pavel and Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "greedy",
      "ternary search"
    ]
  },
  {
    "title": "Frets On Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Ramesses and Corner Inversion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alyona and a Narrow Fridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ilya and a Colorful Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1119/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tree Cutting (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/F2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Tree Cutting (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/F1",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Yet Another Ball Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Coffee and Coursework (Hard Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/D2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Coffee and Coursework (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Palindromic Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Tanya and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Water Buying",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1118/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Recursive Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Crisp String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Decypher the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Magic Gems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Magic Ship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/C",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Emotes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Best Subsegment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1117/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Hessenberg matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D6",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Creeper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "TIE fighter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "X-wing fighter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Pattern of increasing blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Block diagonal matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "``Is the number of ones divisible by 3?'' oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/C3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "``Is the bit string periodic?'' oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/C2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Alternating bits oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/C1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Not A, not B or not C?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish three-qubit states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate equal superposition of four basis states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate state |00⟩ + |01⟩ + |10⟩",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1116/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Block unitary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/U3",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Chessboard unitary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/U2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Anti-diagonal unitary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/U1",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Palindrome checker oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/G3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "OR oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/G2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "AND oracle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1115/G1",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Please, another Queries on Array?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Arithmetic Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "interactive",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Flood Fill",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Trailing Loves (or L'oeufs?)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Yet Another Array Partitioning Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Got Any Grapes?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1114/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sasha and Magnetic Machines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1113/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Sasha and His Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1113/A",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1111/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Destroy the Colony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1111/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Creative Snap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1111/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Average Superhero Gang Power ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1111/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Superhero Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1111/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Modest Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Tree-Tac-Toe ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "games",
      "trees"
    ]
  },
  {
    "title": "Nearest Leaf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Magic Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Jongmah",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Meaningless Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Parity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1110/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Sasha and Algorithm of Silence's Sounds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Sasha and a Very Easy Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Sasha and Interesting Fact from Graph Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Sasha and a Patient Friend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/C",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Sasha and One More Name",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Sasha and a Bit of Relax",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1109/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "MST Unification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Array and Segments (Hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/E2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Array and Segments (Easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/E1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Diverse Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Nice Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Divisors of Two Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Two distinct points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1108/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vasya and Maximum Profit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/G",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Vasya and Endless Credits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Vasya and Binary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Brutality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Digital root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/B",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Digits Sequence Dividing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1107/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Lunar New Year and a Recursive Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/F",
    "difficulty": 2400,
    "tags": [
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Lunar New Year and Red Envelopes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Lunar New Year and a Wander",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Lunar New Year and Number Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Lunar New Year and Food Ordering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Lunar New Year and Cross Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1106/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Helping Hiasat ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1105/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Kilani and the Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1105/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Ayoub and Lost Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1105/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Zuhair and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1105/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Salem and Sticks ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1105/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Game with string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1104/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Splitting into digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1104/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Radix sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1103/E",
    "difficulty": 3400,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Professional layer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1103/D",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Johnny Solving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1103/C",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Game with modulo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1103/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Grid game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1103/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Elongated Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Monotonic Renumeration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/E",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "sortings"
    ]
  },
  {
    "title": "Balanced Ternary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Doors Breaking and Repairing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/C",
    "difficulty": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Array K-Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Integer Sequence Dividing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1102/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "(Zero XOR Subset)-less",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/G",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Trucks and Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Polycarp's New Job",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/E",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "GCD Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Division and Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/C",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Accordion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimum Integer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1101/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Ivan and Burgers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Andrew and Taxi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Dasha and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive"
    ]
  },
  {
    "title": "NN and the Optical Illusion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Build a Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Roman and Browser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1100/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cookies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1099/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "title": "Postcard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1099/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Squares and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1099/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Snowball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1099/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ж-function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/F",
    "difficulty": 3500,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Fedya the Potter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Eels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Construct a tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Nice table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sum in the tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1098/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Mateusz and an Infinite Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/H",
    "difficulty": 3400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Vladislav and a Great Legend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/G",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Alex and a TV Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Egor and an RPG game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Makoto and a Blackboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Yuhao and a Parenthesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Petr and a Combination Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Gennady and a Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1097/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lucky Tickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/G",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft"
    ]
  },
  {
    "title": "Inversion Expectation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "The Top Scorer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Easy Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Polygon for the Angle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Substring Removal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "title": "Find Divisible",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1096/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Make It Connected",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/F",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Almost Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/E",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Circular Dance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Powers Of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Array Stabilization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Repeating Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1095/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Multidimensional Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Vasya and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Intersection of Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Beautiful Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Mishka and the Last Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Letters Rearranging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Dice Rolling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1093/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Tree with Maximum Cost",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Minimal Diameter Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Great Vova Wall (Version 2)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/D2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Great Vova Wall (Version 1)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/D1",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Prefixes and Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/C",
    "difficulty": 1700,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Teams Forming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/B",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Uniform String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1092/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "New Year and the Tricolore Recreation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/H",
    "difficulty": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "title": "New Year and the Factorisation Collaboration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/G",
    "difficulty": 3200,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "New Year and the Mallard Expedition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "New Year and the Acquaintance Estimation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "New Year and the Permutation Concatenation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "New Year and the Sphere Transmission",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/C",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "New Year and the Treasure Geolocation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "New Year and the Christmas Ornament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1091/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Pleasant Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/M",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Berland University",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/L",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Right Expansion Of The Mind",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/K",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Two Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/J",
    "difficulty": 2600,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Minimal Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/I",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "Linearization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/H",
    "difficulty": 2900,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Combostone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/G",
    "difficulty": 2500,
    "tags": [
      "games",
      "implementation"
    ]
  },
  {
    "title": "How to Learn You Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Horseback Riding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Similar Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "New Year Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "LaTeX Expert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/B",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Company Merging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1090/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Minegraphed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/M",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Lazyland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/L",
    "difficulty": 900,
    "tags": []
  },
  {
    "title": "King Kog's Reception",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/K",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "JS Minification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/J",
    "difficulty": 3200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Interval-Free Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/I",
    "difficulty": 2600,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Harder Satisfiability",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/H",
    "difficulty": 3400,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Guest Student",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/G",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/F",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Easy Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Distance Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/D",
    "difficulty": 3100,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Cactus Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/C",
    "difficulty": 2500,
    "tags": [
      "interactive"
    ]
  },
  {
    "title": "Bimatching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/B",
    "difficulty": 3200,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Alice the Fan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1089/A",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Ehab and a weird weight formula",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Ehab and a component choosing problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "title": "Ehab and another another xor problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Ehab and a 2-operation task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ehab and subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Ehab and another construction problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1088/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Forest Fires",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1086/F",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Beautiful Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Rock-Paper-Scissors Champion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/F",
    "difficulty": 2500,
    "tags": []
  },
  {
    "title": "Vasya and Templates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/E",
    "difficulty": 2300,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Minimum Diameter Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Connect Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Div Times Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Right-Left Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1085/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "The Fair Nut and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1084/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Kvass and the Fair Nut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1084/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Fair Nut and Elevator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1084/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "The Fair Nut and Amusing Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/F",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "The Fair Nut and Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "The Fair Nut's getting crazy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/D",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Max Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/C",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "The Fair Nut and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "The Fair Nut and the Best Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1083/A",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Petya and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/G",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Speed Dial",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Increasing Frequency",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Maximum Diameter Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Multi-Subject Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Vova and Trophies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/B",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Vasya and Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1082/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Palindromic Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Mergesort Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/G",
    "difficulty": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Tricky Interactor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "title": "Missing Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Maximum Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/D",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Colorful Bricks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Farewell Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Definite Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1081/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Katya and Segments Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Sonya and Matrix Beauty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/E",
    "difficulty": 2400,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Olya and magical square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Masha and two friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Margarite and the best present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Petya and Origami",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1080/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Negative Time Summation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1078/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Pictures with Kittens (hard version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/F2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Pictures with Kittens (easy version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/F1",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Thematic Contests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/E",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cutting Out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Good Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/C",
    "difficulty": 1300,
    "tags": []
  },
  {
    "title": "Disturbed People",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Frog Jumping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1077/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Array Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "title": "Summer Practice Report",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Vasya and a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Edge Deletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/D",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Meme Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Divisor Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimizing the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1076/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Taxi drivers and Lyft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1075/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "The King's Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1075/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Yet Another LCP Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "title": "Choosing Two Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Segment Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Berland Fair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Vasya and Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Vasya and Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Diverse Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1073/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rain Protection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1071/E",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Algoland and Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/M",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "title": "Odd Federalization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/L",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Video Posts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/K",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Streets and Avenues in Berhattan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/J",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Privatization of Roads in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/I",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "BerOS File Suggestion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/H",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Monsters and Potions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/G",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Debate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/F",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Getting Deals Done",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Garbage Disposal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/D",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Cloud Computing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Berkomnadzor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/B",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Find a Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1070/A",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graphs",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Colored Rooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1068/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1068/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1068/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Random Forest Rank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1067/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "trees"
    ]
  },
  {
    "title": "Computer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1067/D",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Knights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1067/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Multihedgehog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1067/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Array Without Local Maximums ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1067/A",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Yet another 2D Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Binary Numbers AND Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/E",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Boxes Packing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Books Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/C",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Heaters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Vova and Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1066/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Fibonacci Suffix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/G",
    "difficulty": 2700,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Up and Down the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Side Transmutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "title": "Three Pieces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Make It Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Vasya and Isolated Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Vasya and Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1065/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Equations of Mathematical Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1064/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Make a triangle!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1064/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "String Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "title": "Lasers and Mirrors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Candies for Children",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Dwarves, Hats and Extrasensory Abilities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "geometry",
      "interactive"
    ]
  },
  {
    "title": "Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/B",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Oh Those Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1063/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Upgrading Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/F",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Fun with Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Banh-mi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "A Prank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1062/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Lost Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/F",
    "difficulty": 2400,
    "tags": [
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Politics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/E",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "TV Shows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Multiplicity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Views Matter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1061/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sophisticated Device",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Balls and Pockets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/G",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Shrinking Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Sergey and Subway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Social Circles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Maximum Subrectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Maximum Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Phone Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1060/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Split the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1059/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Nature Reserve",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1059/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Sequence Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1059/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Forgery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1059/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cashier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1059/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tanya and Colored Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1057/C",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "DDoS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1057/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "Bmail Computer Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1057/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Detect Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Take Metro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/G",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Write The Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "title": "Check Transcription",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Decorate Apple Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Pick Heroes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "title": "Divide Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Determine Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1056/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Jellyfish Nightmare",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/G",
    "difficulty": 3500,
    "tags": []
  },
  {
    "title": "Tree and XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/F",
    "difficulty": 2900,
    "tags": [
      "strings",
      "trees"
    ]
  },
  {
    "title": "Segments on the Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Refactoring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/D",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Lucky Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/C",
    "difficulty": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Alice and Hairdresser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/B",
    "difficulty": 1300,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Metro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1055/A",
    "difficulty": 900,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Epic Convolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/H",
    "difficulty": 3500,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "New Road Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Electric Scheme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/F",
    "difficulty": 2700,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Chips Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Changing Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Candies Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Appending Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Elevator or Stairs?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1054/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Euler tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1053/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Distinctification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "The Shortest Statement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Vasya and Big Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Bicolorings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Vasya and Multisets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Relatively Prime Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vasya And Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1051/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cover Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1047/B",
    "difficulty": 900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Little C Loves 3 I",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1047/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Say Hello",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1046/I",
    "difficulty": 2300,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Splitting money",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1046/F",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Space Formula",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1046/C",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Moonwalk challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/J",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Palindrome Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/I",
    "difficulty": 1600,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Self-exploration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/H",
    "difficulty": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "AI robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/G",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Shady Lady",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/F",
    "difficulty": 3400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Ancient civilizations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Interstellar battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/D",
    "difficulty": 2200,
    "tags": [
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Hyperspace Highways",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/C",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Space Isaac",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/B",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "number theory"
    ]
  },
  {
    "title": "Last chance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1045/A",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "flows",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "DFS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/F",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Grid Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/E",
    "difficulty": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Deduction Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Optimal Polygon Perimeter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Intersecting Subtrees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "The Tower is Going Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1044/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Speckled Band",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Make It One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Train Hard, Win Easy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Mysterious Crime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "title": "Smallest Word",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Lost Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1043/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Leaf Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Vasya and Magic Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Petya and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "title": "Array Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Vitamins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Benches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1042/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Ray in the tube",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "title": "Tree Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Glider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Coffee Break",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Buying a TV Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Heist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1041/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Shashlik Cooking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1040/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Palindrome Dance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1040/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Summer Oenothera Exhibition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1039/E",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "You Are Given a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1039/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Network Safety",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1039/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Subway Pursuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1039/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Timetable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1039/A",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Wrap Around",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Maximum Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Slime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Gambling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Non-Coprime Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1038/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Security",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "title": "A Game on Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/G",
    "difficulty": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Maximum Reduction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Trips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/E",
    "difficulty": 2200,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Valid BFS?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Equalize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Reach Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Packets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1037/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Sources and Sinks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "title": "Relatively Prime Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Covered Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/E",
    "difficulty": 2400,
    "tags": [
      "fft",
      "geometry",
      "number theory"
    ]
  },
  {
    "title": "Vasya and Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/D",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Classy Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Diagonal Walking v.2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Function Height",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1036/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Little C Loves 3 III",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1034/E",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Intervals of Intervals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1034/D",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Region Separation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1034/C",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Little C Loves 3 II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1034/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Enlarge GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1034/A",
    "difficulty": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Chip Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/G",
    "difficulty": 3500,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Boolean Computer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "fft",
      "math"
    ]
  },
  {
    "title": "Hidden Bipartite Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/D",
    "difficulty": 2000,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Permutation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "games"
    ]
  },
  {
    "title": "Square Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "King Escape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1033/A",
    "difficulty": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Chattering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/G",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Vasya and Maximum Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "The Unbearable Lightness of Weights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Barcelonian Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Playing Piano",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Personalized Cup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/B",
    "difficulty": 1200,
    "tags": []
  },
  {
    "title": "Kitchen Utensils",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1032/A",
    "difficulty": 900,
    "tags": []
  },
  {
    "title": "Familiar Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Triple Flips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Minimum path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/D",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Cram Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Curiosity Has No Limits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/B",
    "difficulty": 1500,
    "tags": []
  },
  {
    "title": "Golden Plate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1031/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Linear Congruential Generator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/G",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Putting Boxes Together",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/F",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Vasya and Good Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Vasya and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/D",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "title": "Vasya and Golden Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vasya and Cornfield",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/B",
    "difficulty": 1100,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "In Search of an Easy Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1030/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Multicolored Markers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tree with Small Distances",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Concatenated Multiples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/D",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Maximal Intersection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Creating the Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Many Equal Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1029/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Make Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/H",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Guess the number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/G",
    "difficulty": 3000,
    "tags": [
      "dp",
      "interactive"
    ]
  },
  {
    "title": "Make Symmetrical",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/F",
    "difficulty": 2900,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Restore Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Order book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/C",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Unnatural Conditions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Find Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1028/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "X-mouse in the Campus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Session in BSU",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Inverse Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Mouse Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Minimum Value Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Numbers on the Chessboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Palindromic Twist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1027/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Company Acquisitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Disjoint Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/F",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Colored Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "matrices"
    ]
  },
  {
    "title": "Recovering BST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Plasticine zebra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Weakened Common Divisor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Doggo Recoloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1025/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Pisces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "flows",
      "trees"
    ]
  },
  {
    "title": "Mobile Phone Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Down or Right",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "matrices"
    ]
  },
  {
    "title": "Array Restoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Bracket Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Pair of Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Single Wildcard Pattern Matching",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1023/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Badge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1020/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "New Building for SIS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1020/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Raining season",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1019/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Large Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1019/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Sergey's problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1019/C",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "The hat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1019/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1019/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "The Films",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/H",
    "difficulty": 3300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "The Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/G",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "The Neutral Zone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "The Supersonic Rocket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "The Wu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "The Phone Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "The Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Rank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1017/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Appropriate Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Road Projects",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Rest In The Shades",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Vasya And The Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "title": "Vasya And The Mushrooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Segment Occurrences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Death Note",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1016/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bracket Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Stars Drawing (Hard Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/E2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Stars Drawing (Easy Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/E1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Walking Between Houses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Songs Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/C",
    "difficulty": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Obtaining the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Points in Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1015/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "And",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1013/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Piles With Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1013/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Passports",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/F",
    "difficulty": 3400,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Cycle sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/E",
    "difficulty": 3100,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "title": "AB-Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Hills",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Chemical table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "matrices"
    ]
  },
  {
    "title": "Photo of The Sky",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1012/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Planning The Expedition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1011/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Stages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1011/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/F",
    "difficulty": 3400,
    "tags": [
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Store",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/E",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Mars rover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Border",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/C",
    "difficulty": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Rocket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Fly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1010/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Allowed Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/G",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "flows",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Dominant Indices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Intercity Travelling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Relatively Prime Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Annoying Present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Minimum Ternary String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Game Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1009/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Turn the Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1008/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Romaji",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1008/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mini Metro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1007/E",
    "difficulty": 3400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Ants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1007/D",
    "difficulty": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Guess two numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1007/C",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Pave the Parallelepiped",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1007/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Reorder the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1007/A",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Xor-Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Military Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Two Strings Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/D",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Three Parts of the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Polycarp's Practice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Adjacent Replacements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1006/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Berland and the Shortest Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Median on Segments (General Case Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/E2",
    "difficulty": 2400,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Median on Segments (Permutations Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/E1",
    "difficulty": 1800,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Polycarp and Div 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Summarize to the Power of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Delete from the Left",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tanya and Stairways",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1005/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sonya and Bitwise OR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Sonya and Ice Cream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Sonya and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Sonya and Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Sonya and Exhibition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sonya and Hotels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1004/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Abbreviation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Tree Constructing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Coins and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/D",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Intense Heat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Binary String Constructing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Polycarp's Pockets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1003/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Another array reconstruction algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/E2",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Bernstein-Vazirani algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/E1",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Oracle for majority function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/D3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/D2",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Oracle for f(x) = b * x mod 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/D1",
    "difficulty": 1200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish zero state and plus state without errors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/C2",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish zero state and plus state with minimum error",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/C1",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish four 2-qubit states - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/B4",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish four 2-qubit states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/B3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish GHZ state and W state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/B2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish zero state and W state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/B1",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate W state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/A4",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate superposition of two basis states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/A3",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate superposition of zero state and a basis state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/A2",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate superposition of all basis states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1002/A1",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Deutsch-Jozsa algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/I",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Oracle for f(x) = parity of the number of 1s in x",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/H",
    "difficulty": 1200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Oracle for f(x) = k-th element of x",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/G",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish multi-qubit basis states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/F",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish Bell states",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/E",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Distinguish plus state and minus state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/D",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate GHZ state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/C",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate Bell state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/B",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Generate plus state or minus state",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1001/A",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Two-Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "One Occurrence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "We Need More Bosses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Yet Another Problem On a Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Covered Points Count",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Light It Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Codehorses T-shirts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1000/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cards and Joy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/F",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Reachability from the Capital",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Equalize the Remainders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Alphabetic Removals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/C",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Reversing Encryption",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mishka and Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/999/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/998/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/998/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Good Subsegments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/997/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Cycles in product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/997/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Sky Full of Stars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/997/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Roman Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/997/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Convert to Ones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/997/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "World Cup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/996/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Hit the Lottery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/996/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Cowmpany Cowmpensation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Number Clicker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/E",
    "difficulty": 2700,
    "tags": [
      "divide and conquer",
      "graphs",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/D",
    "difficulty": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Leaving the Bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Suit and Tie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tesla",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/995/A",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Knights of a Polygonal Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/994/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Fingerprints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/994/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "The Moral Dilemma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/F",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Nikita and Order Statistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/E",
    "difficulty": 2300,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math"
    ]
  },
  {
    "title": "Compute Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Careful Maneuvering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/C",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Open Communication",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Two Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/993/A",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Nastya and King-Shamans",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/992/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Nastya and a Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/992/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Nastya and a Wardrobe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/992/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Nastya Studies Informatics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/992/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Nastya and an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/992/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Concise and clear",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bus Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/E",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Bishwock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Getting an A",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "If at first you don't succeed...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/991/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "GCD Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/G",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "dsu",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Flow Control",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Post Lamps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Graph And Its Complement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Bracket Sequences Concatenation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Micro-World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Commentary Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/990/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "A Trance of Nightfall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/989/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "geometry",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "A Shade of Moonlight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/989/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "A Mist of Florescence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/989/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "A Tide of Riverscape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/989/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "A Blend of Springtime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/989/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rain and Umbrellas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Divisibility by 25",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Points and Powers of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Equal Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Substrings Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/B",
    "difficulty": 1100,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Diverse Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/988/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Three displays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/987/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "High School: Become Human",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/987/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Infinity Gauntlet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/987/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Oppa Funcan Style Remastered",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/F",
    "difficulty": 3300,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Prince's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Perfect Encoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/D",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "title": "AND Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Petr and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Fair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/986/A",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "greedy",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "title": "Team Players",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Isomorphic Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/F",
    "difficulty": 2300,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Pencils and Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Sand Fortress",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Liebig's Barrels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/C",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Switches and Lamps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Chess Placing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/985/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minesweeper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/984/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/984/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "NN country",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/983/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Arkady and Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/983/D",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Elevator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/983/C",
    "difficulty": 2400,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "XOR-pyramid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/983/B",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Finite or not?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/983/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Meeting Place Cannot Be Changed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Billiard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "title": "Shark",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Cut 'em all!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Bus of Characters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Row",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/982/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "K Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/H",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Magic multisets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Round Marriage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Addition on Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Bookshelves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Useful Decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Businessmen Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Antipalindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/981/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cactus to Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "The Number Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Perfect Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Posterized",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/C",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Marlin",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Links and Pearls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/980/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kuro and Topological Parity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/979/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Kuro and GCD and XOR and SUM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/979/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number theory",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Kuro and Walking Route",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/979/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/979/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Pizza, Pizza, Pizza!!!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/979/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Petya's Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/G",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Mentors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Bus Video System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/E",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Almost Arithmetic Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/D",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "File Name",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Remove Duplicates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/978/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Consecutive Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/F",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Cyclic Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Divide by three, multiply by two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/D",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Less or Equal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/C",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Two-gram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Wrong Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/977/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minimal k-covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Well played!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Degree Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Nested Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Lara Croft and the New Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Minimum Binary Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/976/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Hag's Khashba",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/975/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Ghosts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/975/D",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Valhalla Siege",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/975/C",
    "difficulty": 1400,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Mancala",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/975/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Aramic script",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/975/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Watering System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/967/B",
    "difficulty": 1000,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Mind the Gap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/967/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Short Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/965/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Single-use Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/965/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Greedy Arkady",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/965/C",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Battleship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/965/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Paper Airplanes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/965/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/964/B",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Splits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/964/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Circles of Waiting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/963/E",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Frequency of String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/963/D",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Cutting Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/963/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Destruction of a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/963/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Alternating Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/963/A",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Visible Black Areas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Simple Cycles Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Byteland, Berland and Disputed Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Merge Equals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Make a Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Students in Railway Carriage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Equator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/962/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Partitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "k-substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "title": "Tufurama",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/E",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Pair Of Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/D",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Chessboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lecture Sleep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Tetris",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/961/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Santa's Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Bandit Blues",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Pathwalks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Alternating Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Full Binary Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Subsequence Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minimize the error",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Check the string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/960/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mahmoud and Ehab and yet another xor task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the xor-MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mahmoud and Ehab and another array construction task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the wrong algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/B",
    "difficulty": 1200,
    "tags": [
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the even-odd game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/959/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Lightsabers (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/F3",
    "difficulty": 2600,
    "tags": [
      "fft"
    ]
  },
  {
    "title": "Lightsabers (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/F2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Lightsabers (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/F1",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Guard Duty (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/E3",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Guard Duty (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Guard Duty (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/E1",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Hyperspace Jump (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/D2",
    "difficulty": 2700,
    "tags": []
  },
  {
    "title": "Hyperspace Jump (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/D1",
    "difficulty": 1400,
    "tags": [
      "expression parsing",
      "math"
    ]
  },
  {
    "title": "Encryption (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/C3",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Encryption (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/C2",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Encryption (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/C1",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Maximum Control (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/B2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Maximum Control (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Death Stars (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/A3",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Death Stars (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/A2",
    "difficulty": 2000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Death Stars (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/958/A1",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tritonic Iridescence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/957/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Heaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Icicles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/E",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Scissors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Sad powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Not simply beatiful strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Feed the cat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/955/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yet Another String Matching Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/I",
    "difficulty": 2200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "title": "Path Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/H",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Castle Defense",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Runner's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "matrices",
      "sortings"
    ]
  },
  {
    "title": "Water Taps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Fight Against Traffic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Matrix Walk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "String Typing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Diagonal Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/954/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Puzzling Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "*special",
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "2 + 2 != 4",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/F",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Cheese Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/E",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "I'm Feeling Lucky!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "probabilities"
    ]
  },
  {
    "title": "Ravioli Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "A Map of the Cat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/B",
    "difficulty": 1900,
    "tags": [
      "*special",
      "brute force",
      "interactive"
    ]
  },
  {
    "title": "Quirky Quantifiers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/952/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Intercepted Message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/950/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Left-handers, Right-handers and Ambidexters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/950/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Astronomy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/F",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "Binary Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/E",
    "difficulty": 2700,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Curfew",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Data Center Maintenance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "A Leapfrog in the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Zebras",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/949/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Protect Sheep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/948/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Almost Increasing Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Fibonacci String Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Largest Beautiful Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Timetable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "String Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Weird Subtraction Process",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/946/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Machine Learning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Cashback",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Alena And The Heater",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Phone Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Our Tanya is Crying Out Loud",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Points on the line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/940/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cutlet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Maximize!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Love Rescue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Convenient For Everybody",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Hamster Farm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Love Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/939/A",
    "difficulty": 800,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Shortest Path Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Erasing Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Max History",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Buy a Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Constructing Tests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Run For Your Prize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Word Correction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/938/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vile Grasshoppers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/937/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/937/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Iqea",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/936/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "World of Tank",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/936/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Lock Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/936/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sleepy Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/936/B",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "title": "Save Energy!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/936/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fafa and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Fafa and Ancient Mathematics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Fafa and Ancient Alphabet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/D",
    "difficulty": 1900,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Fifa and Fafa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/C",
    "difficulty": 1600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Fafa and the Gates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Fafa and his Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/935/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "A Prosperous Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/934/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "A Compatible Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/934/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "games"
    ]
  },
  {
    "title": "A Preponderant Reunion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/933/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "A Creative Cutout",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/933/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "A Colourful Prospect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/933/C",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "title": "A Determined Cleanup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/933/B",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "A Twisty Movement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/933/A",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Palindrome Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/G",
    "difficulty": 2900,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Escape Through Leaf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Team Work",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Permutation Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Recursive Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "title": "Palindromic Supersequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/932/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Laboratory Work",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/931/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "World Cup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/931/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Friends Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/931/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Coins Exhibition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/930/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Game with Tokens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/930/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "games",
      "implementation"
    ]
  },
  {
    "title": "Teodor is not a liar!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/930/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Game with String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/930/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "probabilities",
      "strings"
    ]
  },
  {
    "title": "Peculiar apple-tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/930/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Пограничные врата",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/929/D",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Красивая команда",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/929/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Места в самолёте",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/929/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Прокат велосипедов",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/929/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Autocompletion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/928/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Dependency management",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/928/C",
    "difficulty": 1900,
    "tags": [
      "*special",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Chat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/928/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Login Verification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/928/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "BuberPool Taxi Optimization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/927/A",
    "difficulty": 2900,
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "title": "Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/J",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "A Vital Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/I",
    "difficulty": 1700,
    "tags": []
  },
  {
    "title": "Endless Roses Most Beautiful",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/H",
    "difficulty": 2200,
    "tags": []
  },
  {
    "title": "Large Bouquets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/G",
    "difficulty": 1500,
    "tags": []
  },
  {
    "title": "Mobile Communications",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/F",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "Merge Equal Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Choose Place",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/D",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Is This a Zebra?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Add Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "2-3-numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/926/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Parametric Circulation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "flows"
    ]
  },
  {
    "title": "May Holidays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Aztec Catacombs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Big Secret",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Resource Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Stairs and Elevators",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/925/A",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Minimal Subset Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/F",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Wardrobe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Contact ATC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/D",
    "difficulty": 2500,
    "tags": []
  },
  {
    "title": "Riverside Curio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Three-level Laser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Mystical Mosaic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/924/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Public Service",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/F",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Perpetual Subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/E",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Picking Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Perfect Security",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Producing Snow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Primal Sport",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/923/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Birds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/E",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Robot Vacuum Cleaner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cave Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Magic Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Cloning Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/922/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Labyrinth-14",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/14",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-13",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/13",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-12",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/12",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-11",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/11",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-10",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/10",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-9",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/09",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-8",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/08",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-7",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/07",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-6",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/06",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-5",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/05",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-4",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/04",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/03",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/02",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Labyrinth-1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/921/01",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "List Of Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "SUM and REPLACE",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "number theory"
    ]
  },
  {
    "title": "Connected Components?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Tanks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Swap Adjacent Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Tea Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Water The Garden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/920/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "A Game With Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/F",
    "difficulty": 2600,
    "tags": [
      "games",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Congruence Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/E",
    "difficulty": 2100,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Seat Arrangements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Perfect Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Supermarket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/919/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Radio Station",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/918/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Eleven",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/918/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Upside Down",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/917/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Stranger Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/917/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "matrices",
      "trees"
    ]
  },
  {
    "title": "Pollywog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/917/C",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "MADMAX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/917/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "title": "The Monster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/917/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jamie and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/916/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Jamie and To-do List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/916/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Jamie and Interesting Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/916/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Jamie and Binary Sequence (changed after round)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/916/B",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Jamie and Alarm Snooze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/916/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Coprime Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/G",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Imbalance Value of a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Physical Education Lessons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Almost Acyclic Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Permute Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Browser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Garden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/915/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ember and Storm's Tree Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/H",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "title": "Sum the Fibonacci",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Substrings in a String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Palindromes in a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Bash and a Tough Math Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Travelling Salesman and Special Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Conan and Agasa play a Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/B",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Perfect Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/914/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Don't Exceed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/H",
    "difficulty": 3400,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Power Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/G",
    "difficulty": 3200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Strongly Connected Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Logical Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Too Easy Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Party Lemonade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Christmas Spruce",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Modular Exponentiation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/913/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Prime Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/912/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Fishes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/912/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "title": "Perun, Ult!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/912/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Year's Eve",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/912/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Tricky Alchemy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/912/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mass Change Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Tree Destruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Stack Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Inversion Counting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Three Garlands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Two Cakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Nearest Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/911/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minimum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/910/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Door Frames",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/910/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Way to Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/910/A",
    "difficulty": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "AND-permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Coprocessor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Colorful Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Python Indentation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Generate Login",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/909/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Year and Boolean Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/H",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "New Year and Original Order",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/G",
    "difficulty": 2800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "New Year and Rainbow Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "New Year and Entity Enumeration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "New Year and Arbitrary Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "New Year and Curling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "New Year and Buggy Bot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "New Year and Counting Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/908/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Tic-Tac-Toe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/907/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Masha and Bears",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/907/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Reverses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/906/E",
    "difficulty": 3300,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Power Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/906/D",
    "difficulty": 2700,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/906/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Seating of Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/906/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Shockers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/906/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Yet Another Maxflow Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Clear The Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Swapping Characters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Almost Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Boxes Packing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "The Modcrab",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Hungry Student Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/903/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Coloring a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/902/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "Visiting a Friend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/902/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cyclic Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/901/E",
    "difficulty": 3300,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "title": "Weighting a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/901/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Bipartite Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/901/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "title": "GCD of Polynomials",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/901/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Hashing Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/901/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Maximum Questions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/900/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Unusual Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/900/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Remove Extra One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/900/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Position in Fraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/900/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Find Extra One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/900/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Letters Removing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Segments Removal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "flows",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Shovel Sale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Dividing the numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Months and Years",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Splitting in Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/899/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Restoring the Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Squares and not squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Alarm Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/D",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Phone Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Proper Nutrition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Rounding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/898/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Chtholly's request",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/897/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Scarborough Fair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/897/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Welcome home, Chtholly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/896/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Nephren Runs a Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/896/D",
    "difficulty": 2900,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Willem, Chtholly and Seniorious",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/896/C",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "title": "Ithea Plays With Chtholly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/896/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "title": "Nephren gives a riddle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/896/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "title": "Eyes Closed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/895/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "title": "String Mark",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/895/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "title": "Square Subsets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/895/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "XK Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/895/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Pizza Separation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/895/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Ralph and Mushrooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/894/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Ralph And His Tour in Binary Country",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/894/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Marco and GCD Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/894/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Ralph And His Magic Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/894/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "QAQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/894/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Subtree Minimum Query",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Counting Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Credit Card",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Rumor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Beautiful Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Chess For Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/893/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Wrath",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/892/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Greed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/892/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Lust",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/891/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Sloth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/891/D",
    "difficulty": 3100,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "trees"
    ]
  },
  {
    "title": "Envy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/891/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Gluttony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/891/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Pride",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/891/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mod Mod Mod",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/889/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "title": "Xor-MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Connecting Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Maximum Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Almost Identity Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "K-Dominant Character",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Buggy Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Local Extrema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/888/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Row of Models",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/F",
    "difficulty": 2500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Little Brother",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Ratings and Reality Shows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Solution for Cube",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Cubes for Masha",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Div. 64",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/887/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Symmetric Projections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Maximum Element",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Restoration of string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Petya and Catacombs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/C",
    "difficulty": 1300,
    "tags": [
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Vlad and Cafes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/B",
    "difficulty": 1000,
    "tags": []
  },
  {
    "title": "ACM ICPC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/886/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Anti-Palindromize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Binary Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/E",
    "difficulty": 2500,
    "tags": [
      "dsu"
    ]
  },
  {
    "title": "Boxes And Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Bertown Subway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Japanese Crosswords Strike Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Book Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/884/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Quadcopter Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/M",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Berland.Taxi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/L",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Road Widening",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/K",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Renovation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/J",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Photo Processing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/I",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Palindromic Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/H",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Orientation of Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Lost in Transliteration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/F",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Field of Wonders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/E",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Packmen Strike Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "title": "Downloading B++",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Berland Army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Automatic Door",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/883/A",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Table Tennis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/879/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Borya's Diagnosis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/879/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Numbers on the blackboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/878/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Magic Breeding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/878/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/878/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Teams Formation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/878/B",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Short Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/878/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Ann and Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "flows",
      "hashing"
    ]
  },
  {
    "title": "Danil and a Part-time Job",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Olya and Energy Drinks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Slava and tanks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Nikita and string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Alex and broken contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/877/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Divisiblity of Differences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/876/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Trip For Meal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/876/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Royal Questions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/F",
    "difficulty": 2500,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Delivery Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "High Cry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "National Property",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/C",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Sorting the Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/B",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Classroom Watch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/875/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Forbidden Indices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/F",
    "difficulty": 2400,
    "tags": [
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Awards For Contestants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Merge Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Strange Game On Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Balanced Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Chores",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/873/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Restore the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/871/E",
    "difficulty": 2900,
    "tags": [
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Points, Lines and Ready-made Titles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Something with XOR Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Maximum splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Maximum of Maximums of Minimums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Search for Pretty Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/870/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "The Untended Antiquity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/869/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "title": "The Overdosing Ubiquity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/869/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "The Intriguing Obsession",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/869/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "The Eternal Immortality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/869/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Artful Expedient",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/869/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "El Toll Caves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/G",
    "difficulty": 3300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Yet Another Minimization Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/F",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Policeman and a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Huge Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Qualification Rounds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Race Against Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bark to Unlock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/868/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Between the Offices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/867/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Flowers and Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Egg Roulette",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Hex Dyslexia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/E",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Buy Low Sell High",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Gotta Go Fast",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Ordering Pizza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "sortings",
      "ternary search"
    ]
  },
  {
    "title": "Save the problem!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/865/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Cities Excursions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Fire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Make a Permutation!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Polycarp and Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Fair Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/864/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Graphic Settings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/G",
    "difficulty": 3200,
    "tags": []
  },
  {
    "title": "Almost Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/F",
    "difficulty": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Turn Off The TV",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Yet Another Array Queries Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "1-2-3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/C",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Kayaking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Quasi-palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/863/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the final stage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the binary string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the bipartiteness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/B",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Mahmoud and Ehab and the MEX",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/862/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Arkady and a Nobody-men",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/860/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Circle of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/G",
    "difficulty": 3000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Ordering T-Shirts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/F",
    "difficulty": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Desk Disorder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Third Month Insanity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Pie Rules",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Lazy Security Guard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Declined Finalists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/859/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Wizard's Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Tests Renumeration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Polycarp's phone book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Did you mean...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Which floor?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "k-rounding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/858/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "To Play or not to Play",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/F",
    "difficulty": 3000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Satellites",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/E",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Masha and Cactus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Eleventh Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Similar Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Set Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/856/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Harry Vs Voldemort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/G",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Nagini",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Salazar Slytherin's Locket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Rowena Ravenclaw's Diadem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/D",
    "difficulty": 2500,
    "tags": [
      "trees"
    ]
  },
  {
    "title": "Helga Hufflepuff's Cup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Marvolo Gaunt's Ring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Tom Riddle's Diary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/855/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Maxim Buys an Apartment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/854/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Fraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/854/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Lada Malina",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/853/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Michael and Charging Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/853/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Boredom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/853/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Jury Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/853/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Planning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/853/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Dating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/I",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Bob and stages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/H",
    "difficulty": 3000,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Bathroom terminal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/G",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Product transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Casinos and travel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/E",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Exploration plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "flows",
      "graph matchings",
      "shortest paths"
    ]
  },
  {
    "title": "Property",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/C",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Neural Network country",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/852/A",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Arpa and an exam about geometry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/851/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Arpa and a research in Mexican wave",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/851/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Rainbow Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/F",
    "difficulty": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Random Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "title": "Tournament Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Arpa and a game with Mojtaba",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "title": "Arpa and a list of numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/B",
    "difficulty": 2100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Five Dimensional Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/850/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Tell Your World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/849/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Odds and Ends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/849/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Days of Floral Colours",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/848/E",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Shake It!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/848/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Goodbye Souvenir",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/848/C",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Rooter's Song",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/848/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "From Y to Y",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/848/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Weather Tomorrow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/M",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Berland SU Computer Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/L",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Travel Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/K",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Students Initiation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/J",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Noise Level",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/I",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Load Testing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/H",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "University Classes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/G",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Berland Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/F",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Packmen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Dog Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Sum of Nestings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Preparing for Merge Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Union of Doubly Linked Lists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/847/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Random Query",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/F",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Chemistry in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Monitor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Four Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Math Show",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Curriculum Vitae",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/846/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Shortest Path Problem?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/G",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Guards In The Storehouse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Fire in the City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Driving Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Two TVs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Luba And The Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Chess Tourney",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/845/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/844/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Diversity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/844/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Maximum Flow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/843/E",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Dynamic Shortest Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/843/D",
    "difficulty": 3400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Upgrading Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/843/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Interactive LowerBound",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/843/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "interactive",
      "probabilities"
    ]
  },
  {
    "title": "Sorting by Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/843/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Nikita and game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/842/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Vitya and Strange Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/842/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Ilya And The Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/842/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Gleb And Pizza",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/842/B",
    "difficulty": 1100,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Kirill And The Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/842/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Godsend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/841/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Generous Kefa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/841/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "In a Trap",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/840/E",
    "difficulty": 3200,
    "tags": [
      "trees"
    ]
  },
  {
    "title": "Destiny",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/840/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "title": "On the Bench",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/840/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Leha and another game about graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/840/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Leha and Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/840/A",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Mother of Dragons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/839/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Winter is here",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/839/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/839/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Game of the Rows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/839/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Arya and Bran",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/839/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Expected Earnings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/F",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Convex Countour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/E",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Airplane Arrangements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/D",
    "difficulty": 2700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Future Failure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/C",
    "difficulty": 2800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Diverging Directions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Binary Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/838/A",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Functions On The Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Prefix Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Vasya's Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Round Subset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Two Seals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Flag of Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Text Volume",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/837/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Roads in the Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "The penguin's game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Palindromic characteristics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Star sky",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "The number on the board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Key races",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/835/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Festive Evening",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/834/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "The Useless Toy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/834/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Caramel Clouds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/833/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Red-Black Cobweb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/833/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Ever-Hungry Krakozyabra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/833/C",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "title": "The Bakery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/833/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "The Meaningless Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/833/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vasya and Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/832/E",
    "difficulty": 2600,
    "tags": [
      "matrices"
    ]
  },
  {
    "title": "Misha, Grisha and Underground",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/832/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Strange Radiation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/832/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Petya and Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/832/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sasha and Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/832/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Jury Marks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/831/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Keyboard Layouts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/831/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Unimodal Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/831/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Perpetual Motion Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/830/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Singer House",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/830/D",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Bamboo Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/830/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Cards Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/830/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Office Keys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/830/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Black Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/828/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Restaurant Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/828/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dirty Arkady's Kitchen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Rusty String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/E",
    "difficulty": 2700,
    "tags": [
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "title": "Best Edge Weight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "DNA Evolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "High Load",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "String Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/827/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Tree Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/G",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "String Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Minimal Labels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Suitable Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Multi-judge Solving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Five-In-a-Row",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Binary Protocol",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/825/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Madness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Liar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "title": "My pretty girl Noora",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hacker, pack your bags!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Crossword solving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "I'm bored with life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/822/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Okabe and El Psy Kongroo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/821/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Okabe and City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/821/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Okabe and Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/821/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Okabe and Banana Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/821/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Okabe and Future Gadget Laboratory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/821/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mister B and Angle in Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/820/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Mister B and Book Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/820/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mister B and Flight to the Moon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/819/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Mister B and Astronomers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/819/D",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Mister B and Beacons on Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/819/C",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Mister B and PR Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/819/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mister B and Boring Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/819/A",
    "difficulty": 2200,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Four Melodies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/G",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Level Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Card Game Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Multicolored Cars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Sofa Thief",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Permutation Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Diplomas and Certificates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/818/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "MEX Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Choosing The Commander",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Imbalanced Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "sortings"
    ]
  },
  {
    "title": "Really Big Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Makes And The Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Treasure Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/817/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Karen and Coffee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/816/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Karen and Morning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/816/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Karen and Neighborhood",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/815/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Karen and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/815/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Karen and Supermarket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/815/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Karen and Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/815/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Karen and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/815/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "An unavoidable detour for home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/814/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "An overnight dance in discotheque",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/814/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "An impassioned circulation of affection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/814/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "An express train to reveries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/814/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "An abandoned sentiment from past",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/814/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bipartite Checking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Army Creation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Two Melodies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "title": "The Tag Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "The Golden Age",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "The Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/813/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sagheer and Apple Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/812/E",
    "difficulty": 2300,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "title": "Sagheer and Kindergarten",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/812/D",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Sagheer and Nubian Market",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/812/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Sagheer, the Hausmeister",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/812/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Sagheer and Crossroads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/812/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vladik and Entertaining Flags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/811/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Vladik and Favorite Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/811/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "Vladik and Memorable Trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/811/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Vladik and Complicated Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/811/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Vladik and Courtesy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/811/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Summer sell-off",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/810/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Straight <<A>>",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/810/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Surprise me!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/809/E",
    "difficulty": 3100,
    "tags": [
      "divide and conquer",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Hitchhiking in the Baltic States",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/809/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Find a car",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/809/C",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Glad to see you!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/809/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "title": "Do you want a date?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/809/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Anthem of Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/G",
    "difficulty": 2300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Selling Souvenirs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "ternary search"
    ]
  },
  {
    "title": "Array Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Tea Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Average Sleep Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Lucky Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/808/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "T-Shirt Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/807/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Is it rated?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/807/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "3-palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/805/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Fake NP",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/805/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Fake bullions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "The same permutation ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Expected diameter of a tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Ice cream coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Minimum number of steps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Find Amir",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/804/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Periodic RMQ Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/G",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Coprime Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Roma and Poker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Magazine Ad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Maximal GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Distances to Zero",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Maximal Binary Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/803/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "April Fools' Problem (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/O",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "data structures",
      "flows"
    ]
  },
  {
    "title": "April Fools' Problem (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/N",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "April Fools' Problem (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/M",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Send the Fool Further! (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/L",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Send the Fool Further! (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/K",
    "difficulty": 2100,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Send the Fool Further! (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/J",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Fake News (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/I",
    "difficulty": 2300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Fake News (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/H",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Fake News (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/G",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Marmots (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/F",
    "difficulty": 2800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Marmots (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/E",
    "difficulty": 2200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Marmots (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/D",
    "difficulty": 2100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Heidi and Library (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/C",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Heidi and Library (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Heidi and Library (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/802/A",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Valued Keys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/801/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Vicious Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/801/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Cut the pie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Beautiful fountains rows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/F",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Aquarium decoration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Field expansion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Fountains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "T-shirt buying",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/B",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Carrot Cakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/799/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Mike and code of a permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/798/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Mike and distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/798/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Mike and gcd problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/798/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Mike and strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/798/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Mike and palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/798/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Mice and Holes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Array Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Broken BST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "title": "Minimal string",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Odd sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "k-Factorization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/797/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Sequence Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Exam Cheating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Police Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Bank Hacking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Find The Bone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Buying A House",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/796/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Replace All",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/G",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Leha and security system",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/F",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Choosing Carrot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/E",
    "difficulty": 2800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Labelling Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Naming Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/C",
    "difficulty": 1800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cutting Carrot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Bank Robbery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/794/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Oleg and chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Julia the snail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Problem of offices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Presents in Bankopolis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Mice problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Igor and his way to work",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Oleg and shares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/793/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mages and Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Colored Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/E",
    "difficulty": 2500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Paths in a Complete Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "trees"
    ]
  },
  {
    "title": "Divide by Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Counting-out Rhyme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "New Bus Route",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/792/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bear and Big Brother",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/791/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Masha and geometric depression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/789/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Anastasia and pebbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/789/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "New task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/788/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Finding lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/788/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "The Great Mixing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/788/C",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Weird journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/788/B",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Functions again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/788/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Not Afraid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/787/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Monster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/787/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "ALT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/786/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Rap God",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/786/D",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dfs and similar",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Till I Collapse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/786/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Legacy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/786/B",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Berzerk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/786/A",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "title": "Anton and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/785/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Anton and School - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/785/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Anton and Fairy Tale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/785/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Anton and Classes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/785/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Anton and Polyhedrons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/785/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "BF Calculator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/G",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Crunching Numbers Just for You",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/F",
    "difficulty": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Twisted Circuit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Touchy-Feely Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "INTERCALC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Kids' Riddle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/B",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Numbers Joke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/784/A",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Intranet of Buses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/H",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Andryusha and Nervous Barriers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Axel and Marston in Bitland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "title": "Underground Lab",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Innokenty and a Football League",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/D",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "strings"
    ]
  },
  {
    "title": "Andryusha and Colored Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "The Meeting Place Cannot Be Changed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/B",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Andryusha and Socks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/780/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dishonest Sellers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/779/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Weird Rounding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/779/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Pupils Redistribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/779/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Selling Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/778/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Parquet Re-laying",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/778/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Peterson Polyglot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/778/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Bitwise Formula",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/778/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "String Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/778/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Hanoi Factory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/777/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Cloud of Hashtags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/777/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Alyona and Spreadsheet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/777/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Game of Credit Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/777/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Shell Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/777/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sherlock and the Encrypted Data",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Sherlock's bet to Moriarty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "The Holmes Children",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Door Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/D",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Molly's Chemicals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sherlock and his girlfriend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "A Serial Killer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/776/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "University Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/775/A",
    "difficulty": 2900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Bars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/L",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "title": "Stepan and Vowels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/K",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Stepan's Series",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/J",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Composing Of String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/I",
    "difficulty": 2300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Repairing Of String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/H",
    "difficulty": 2200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Perfectionist Arkadiy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/G",
    "difficulty": 2700,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "title": "Pens And Days Of Week",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/F",
    "difficulty": 2700,
    "tags": [
      "*special",
      "binary search",
      "number theory"
    ]
  },
  {
    "title": "Big Number and Remainder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/E",
    "difficulty": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lie or Truth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Maximum Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/C",
    "difficulty": 1200,
    "tags": [
      "*special",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Significant Cups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/B",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Amusement Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/774/A",
    "difficulty": 2100,
    "tags": [
      "*special",
      "ternary search"
    ]
  },
  {
    "title": "Test Data Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Blog Post Rating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Perishable Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Prairie Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dynamic Problem Scoring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Success Rate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/773/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Verifying Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/772/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "Varying Kibibits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/772/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Vulnerable Kerbals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/772/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Volatile Kite",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/772/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Voltage Keepsake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/772/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Bear and Isomorphic Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/F",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Bear and Rectangle Strips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Bear and Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/D",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Bear and Tree Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Bear and Different Names",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Bear and Friendship Condition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/771/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Draw Brackets!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/770/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Online Courses In BSU",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/770/C",
    "difficulty": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Maximize Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/770/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "title": "New Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/770/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "k-Interesting Pairs Of Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/769/D",
    "difficulty": 1700,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Cycle In Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/769/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "News About Credit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/769/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Year of University Entrance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/769/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "The Winds of Winter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/G",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Barrels and boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Game of Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "title": "Jon and Orbs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Jon Snow and his Favourite Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Code For 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer"
    ]
  },
  {
    "title": "Oath of the Night's Watch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/768/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Change-free",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/767/E",
    "difficulty": 2400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Cartons of milk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/767/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/767/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "The Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/767/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Snacktower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/767/A",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Mahmoud and a xor trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/766/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Mahmoud and a Dictionary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/766/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Mahmoud and a Message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/766/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Mahmoud and a Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/766/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Mahmoud and Longest Uncommon Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/766/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Math, math everywhere",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/G",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Souvenirs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/F",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Tree Folding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Artsem and Saunders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Table Tennis Game 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/C",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Code obfuscation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Neverending competitions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/765/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Timofey and cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/764/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Taymyr is calling you",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/764/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Timofey and our friends animals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/763/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "title": "Timofey and a flat tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/763/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "graphs",
      "hashing",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Timofey and remoduling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/763/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Timofey and rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/763/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Timofey and a tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/763/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Tree nesting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Radio stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Maximum path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Two strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "USB vs. PS/2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "k-th divisor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/762/A",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dasha and Photos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Dasha and Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Dasha and Very Difficult Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dasha and Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Dasha and friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dasha and Stairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/761/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Frodo and pillows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/760/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Petr and a calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/760/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Geometrical Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Broken Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Ability To Convert",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Unfair Poll",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Blown Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Holiday Of Equality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/758/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Can Bash Save the Day?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Team Rocket Rises Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Bash Plays with Functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Felicity's Big Secret Revealed",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Felicity is Coming!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Bash's Big Day",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Gotta Catch Em' All!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/757/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Long number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/F",
    "difficulty": 3400,
    "tags": [
      "expression parsing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Byteland coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/E",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Bacterial Melee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "title": "Nikita and stack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Travel Card",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Pavel and barbecue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/756/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "title": "PolandBall and Many Other Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/G",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "title": "PolandBall and Gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "PolandBall and White-Red graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "PolandBall and Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/D",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "PolandBall and Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "PolandBall and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "PolandBall and Hypothesis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/755/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dasha and cyclic table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/754/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "fft",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Fedor and coupons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/754/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Vladik and chat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/754/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Ilya and tic-tac-toe game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/754/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lesha and array splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/754/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Interactive Bulls and Cows (Hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/753/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Interactive Bulls and Cows (Easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/753/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Santa Claus and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/753/A",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "New Year and Snowy Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/H",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "interactive"
    ]
  },
  {
    "title": "New Year and Binary Tree Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "New Year and Finding Roots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "title": "New Year and Old Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "New Year and Fireworks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "New Year and Rating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "New Year and North Pole",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/B",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "New Year and Hurry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/750/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Inversions After Shuffle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/749/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "title": "Leaving Auction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/749/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Voting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/749/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Parallelogram is Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/749/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Bachgold Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/749/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Santa Clauses and a Soccer Championship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Santa Claus and Tangerines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Santa Claus and a Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Santa Claus and Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Santa Claus and Keyboard Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Santa Claus and a Place in a Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/748/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Igor and Interesting Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Comments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/E",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Winter Is Coming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Servers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mammoth's Genome Decoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Display Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/747/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "New Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/G",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Music in Car",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Numbers Exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/E",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Green and Black Tea",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Decoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Compote",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/746/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Hongcow Solves A Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/745/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Hongcow Learns the Cyclic Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/745/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Hongcow Masters the Cyclic Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/744/E",
    "difficulty": 3200,
    "tags": [
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Hongcow Draws a Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/744/D",
    "difficulty": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Hongcow Buys a Deck of Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/744/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Hongcow's Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/744/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "title": "Hongcow Builds A Nation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/744/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Vladik and cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/743/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Chloe and pleasant prizes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/743/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Vladik and fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/743/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Chloe and the sequence ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/743/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Vladik and flights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/743/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Arpa’s obvious problem and Mehrdad’s terrible solution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/742/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Arpa’s hard exam and Mehrdad’s naive cheat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/742/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Arpa’s abnormal DNA and Mehrdad’s deep interest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/741/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "title": "Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/741/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Arpa’s overnight party and Mehrdad’s silent entering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/741/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/741/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Arpa's loud Owf and Mehrdad's evil plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/741/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Alyona and flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/740/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Alyona and copybooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/740/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Gosha is hunting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/739/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "flows",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Recover a functional graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/739/D",
    "difficulty": 3400,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "title": "Alyona and towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/739/C",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Alyona and a tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/739/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Alyona and mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/739/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Dirty plates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/737/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Tanya is 5!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/737/E",
    "difficulty": 3300,
    "tags": [
      "graph matchings",
      "graphs",
      "greedy",
      "schedules"
    ]
  },
  {
    "title": "Chess Championship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/736/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/736/D",
    "difficulty": 2800,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Ostap and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/735/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Taxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/735/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Tennis Championship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/735/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Urbanization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/735/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Ostap and Grasshopper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/735/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Anton and School",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Anton and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Anton and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/D",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Anton and Making Potions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Anton and Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Anton and Danik",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/734/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Drivers Dissatisfaction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Sleep in Class",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Kostya the Sculptor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "title": "Epidemic in Monstropolis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Parade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Grasshopper And the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/733/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tourist Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/F",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Sockets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sanatorium",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cormen --- The Best Friend Of a Man",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/B",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Buy a Shovel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/732/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Video Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Funny Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "80-th Level Archeology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Socks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Coupons and Discounts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Night at the Museum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/731/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Expression Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/L",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Roads Orientation Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/K",
    "difficulty": 3200,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Bottles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/J",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Olympiad in Programming and Sports",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/I",
    "difficulty": 2000,
    "tags": [
      "dp",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Delete Them",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/H",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Car Repair Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/G",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ber Patio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/F",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Award Ceremony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Running Over The Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/D",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bulmart",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "title": "Minimum and Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Toda 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/730/A",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Financiers Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/F",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Subordinates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sea Battle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Road to Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Spotlights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Interview with Oleg",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/729/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Polycarp's problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Games on a CD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "T-shirts Distribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Guess the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Bill Total Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/B",
    "difficulty": 1600,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Transformation: from A to B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/727/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Messages on a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/G",
    "difficulty": 3300,
    "tags": []
  },
  {
    "title": "Family Photos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/F",
    "difficulty": 2900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Too Much Money",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Contest Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Hidden Word",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Food on the Plane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jumping Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/725/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Xor-matic Number of the Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Uniformly Branched Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Goods transportation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Dense Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Ray Tracing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Batch Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Checking the Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/724/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "st-Spanning Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/F",
    "difficulty": 2300,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "One-Way Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Lakes in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Polycarp at the Radio",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Text Document Analysis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/B",
    "difficulty": 1100,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "The New Year: Meeting Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/723/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Cyclic Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/F",
    "difficulty": 2800,
    "tags": [
      "chinese remainder theorem",
      "data structures",
      "implementation",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Research Rover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Generating Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Destroying Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Verse Pattern",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Broken Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/722/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Road to Home",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/721/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Maxim and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/721/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/721/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Passwords",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/721/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "One-dimensional Japanese Crossword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/721/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Array Covering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/F",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/E",
    "difficulty": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Slalom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/C",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Cactusophobia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/B",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "flows"
    ]
  },
  {
    "title": "Closing ceremony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/720/A",
    "difficulty": 2000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Anatoly and Cockroaches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/719/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Vitya in the Countryside",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/719/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Matvey's Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/718/E",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "graphs"
    ]
  },
  {
    "title": "Andrew and Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/718/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Sasha and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/718/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Efim and Strange Grade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/718/A",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cowboy Beblop at his computer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/I",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Pokermon League challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/H",
    "difficulty": 2400,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Underfail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/G",
    "difficulty": 2400,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Heroes of Making Magic III",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/F",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Paint it really, really dark gray",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Dexterina’s Lab",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/D",
    "difficulty": 1900,
    "tags": [
      "games",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Potions Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "R3D3’s Summer Adventure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/B",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Festival Organization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/717/A",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Complete the Word",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/716/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Crazy Computer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/716/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Complete the Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/715/E",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Create a Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/715/D",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Digit Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/715/C",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Complete The Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/715/B",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Plus and Square Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/715/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Filya and Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/714/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Meeting of Old Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/714/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sonya Partymaker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/713/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Animals and Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/713/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Sonya and Problem Wihtout a Legend",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/713/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Searching Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/713/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "title": "Sonya and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/713/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Memory and Casinos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/712/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Memory and Scores",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/712/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Memory and De-Evolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/712/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Memory and Trident",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/712/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Memory and Crow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/712/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "ZS and The Birthday Paradox",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/711/E",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Directed Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/711/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Coloring Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/711/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Chris and Magic Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/711/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Bus to Udayland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/711/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "String Set Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "interactive",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Generate a String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Two Arithmetic Progressions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/D",
    "difficulty": 2500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Magic Odd Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Optimal Point on a Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "King Moves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/710/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Checkpoints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/709/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Juicer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/709/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Student's Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/708/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Incorrect Flow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/708/D",
    "difficulty": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Centroids",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/708/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Recover the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/708/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Letters Cyclic Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/708/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Garlands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/707/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Persistent Bookcase ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/707/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Pythagorean Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/707/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bakery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/707/B",
    "difficulty": 1300,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Brain's Photos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/707/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Working routine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/706/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Vasiliy's Multiset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/706/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Hard problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/706/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Interesting drink",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/706/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Beru-taxi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/706/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Spider Man",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/705/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Hulk",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/705/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Iron Man",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/704/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Captain America",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/704/D",
    "difficulty": 3100,
    "tags": [
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Black Widow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/704/C",
    "difficulty": 2900,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ant Man",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/704/B",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Thor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/704/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Mishka and Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/703/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Mishka and Interesting sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/703/D",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Chris and Road",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/703/C",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Mishka and trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/703/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mishka and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/703/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "T-Shirts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/F",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Analysis of Pathes in Functional Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Road to Post Office",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/D",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Cellular Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Powers of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Maximum Increase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/702/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "They Are Everywhere",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/701/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Cells Not Under Attack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/701/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/701/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cool Slogans",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/700/E",
    "difficulty": 3300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Huffman Coding on Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/700/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Break Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/700/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Connecting Universities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/700/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "As Fast As Possible",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/700/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "One Bomb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/699/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Launch of Collider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/699/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Coprime Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/F",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Cron",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/E",
    "difficulty": 2800,
    "tags": []
  },
  {
    "title": "Limak and Shooting Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "LRU",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Fix a Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Vacations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/698/A",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Barnicle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/697/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Pineapple Incident",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/697/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "...Dary!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "...Wait for it...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Legen...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "title": "PLEASE",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Puzzles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Lorenzo Von Matterhorn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/696/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Couple Cover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Xor-sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/E",
    "difficulty": 1900,
    "tags": [
      "matrices"
    ]
  },
  {
    "title": "Swaps in Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Exponential notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "s-palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Fashion in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/691/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tree of Life (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/F3",
    "difficulty": 3200,
    "tags": [
      "trees"
    ]
  },
  {
    "title": "Tree of Life (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/F2",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "hashing",
      "trees"
    ]
  },
  {
    "title": "Tree of Life (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/F1",
    "difficulty": 1300,
    "tags": []
  },
  {
    "title": "Photographs (II)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/E2",
    "difficulty": 2600,
    "tags": []
  },
  {
    "title": "Photographs (I)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/E1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "The Wall (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/D3",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "The Wall (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/D2",
    "difficulty": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "The Wall (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/D1",
    "difficulty": 1200,
    "tags": []
  },
  {
    "title": "Brain Network (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/C3",
    "difficulty": 2200,
    "tags": [
      "trees"
    ]
  },
  {
    "title": "Brain Network (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/C2",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Brain Network (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/C1",
    "difficulty": 1300,
    "tags": []
  },
  {
    "title": "Recover Polygon (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/B3",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Recover Polygon (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/B2",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Recover Polygon (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/B1",
    "difficulty": 1700,
    "tags": []
  },
  {
    "title": "Collective Mindsets (hard)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/A3",
    "difficulty": 2400,
    "tags": []
  },
  {
    "title": "Collective Mindsets (medium)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/A2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Collective Mindsets (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/690/A1",
    "difficulty": 1100,
    "tags": []
  },
  {
    "title": "Mike and Geometry Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/689/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Friends and Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/689/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Mike and Chocolate Thieves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/689/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Mike and Shortcuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/689/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Mike and Cellphone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/689/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Lovely Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/688/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Opponents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/688/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "TOF",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/687/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Dividing Kingdom II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/687/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "The Values You Can Make",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/687/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Remainders Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/687/B",
    "difficulty": 1800,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "NP-Hard Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/687/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Little Robber Girl's Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/686/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Free Ice Cream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/686/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Travelling Through the Snow Queen's Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/685/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "title": "Kay and Eternity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/685/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Optimal Point",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/685/C",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Kay and Snowflake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/685/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Robbers' watch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/685/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "The Hero with Bombs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/J",
    "difficulty": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Loader",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/I",
    "difficulty": 2500,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "title": "Exchange of Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/H",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "The Fraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/G",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Reformat the String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/F",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Hammer throwing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Chocolate Bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "Symmetric Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/C",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "The Teacher of Physical Education",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/B",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "The Check of the Point",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/683/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "title": "Alyona and Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/682/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Alyona and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/682/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Alyona and the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/682/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Alyona and Mex",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/682/B",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Alyona and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/682/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Runaway to a Shadow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/681/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Gifts by the List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/681/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Heap Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/681/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Economy Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/681/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "A Good Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/681/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bear and Finding Criminals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/680/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Bear and Five Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/680/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Bear and Bad Powers of 42",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/679/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Bear and Chase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/679/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Bear and Square Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/679/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Bear and Tower of Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/679/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Bear and Prime 100",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/679/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "title": "Lena and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "title": "Another Sith Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Iterated Linear Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/D",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Joty and Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Same Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Johny Likes Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/678/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vanya and Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/677/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Vanya and Treasure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/677/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Vanya and Label",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/677/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Vanya and Food Processor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/677/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vanya and Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/677/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "The Last Fight Between Human and AI",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/676/E",
    "difficulty": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Theseus and labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/676/D",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Vasya and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/676/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Pyramid of Glasses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/676/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math",
      "math"
    ]
  },
  {
    "title": "Nicholas and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/676/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Trains and Statistic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/675/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Tree Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/675/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Money Transfers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/675/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Restoring Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/675/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Infinite Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/675/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Problems for Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/673/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Bear and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/673/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Different is Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/672/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Summer Camp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/672/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Organizing a Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/671/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Roads in Yusland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/671/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Ultimate Weirdness of an Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/671/C",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Robin Hood",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/671/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Recycling Bottles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/671/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Restore a Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Correct Bracket Sequence Editor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/E",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dsu",
      "strings"
    ]
  },
  {
    "title": "Magic Powder - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/D2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Magic Powder - 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/D1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Game of Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Holidays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/670/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Little Artem and Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/669/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Coat of Anticubism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/667/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Pouring Rain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/667/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Forensic Examination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/666/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "title": "Chain Reaction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/666/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Codeword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/666/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "title": "World Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/666/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Reberland Linguistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/666/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Four Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Beautiful Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Simple Subset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Simple Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/B",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Buses Between Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/665/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Complicated GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/664/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Rebus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/663/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "expression parsing",
      "greedy",
      "math"
    ]
  },
  {
    "title": "To Hack or not to Hack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/662/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "International Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/662/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Binary Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/662/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Graph Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/662/B",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Gambling Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/662/A",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Rotate Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/H",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Hungarian Notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/G",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Primes in Interval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Divisibility Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Maximal Difference",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/D",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Array Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Seasons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/B",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Lazy Caterer Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/661/A",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Bear and Bowling 4",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Different Subsets For All Tuples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Number of Parallelograms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/D",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Hard Process",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Seating On Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Co-prime Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/660/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Fence Divercity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/G",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Polycarp and Hay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/E",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Bicycle Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/D",
    "difficulty": 1500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tanya and Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Qualifying Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Round House",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/659/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bear and Reverse Radewoosh",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/658/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "You're a Professional",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/G",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Ace It!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Out of Controls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Rosetta Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/D",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Without Text",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Scrambled",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/B",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Da Vinci Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/656/A",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Move by Prime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Paper task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Bear and Forgotten Tree 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/E",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Delivery Bears",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Bear and Up-Down",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Bear and Compressing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Bear and Three Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/653/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Ants on a Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Pursuit For Artifacts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Nested Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Foe Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "z-sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Gabriel and Caterpillar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/652/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Beautiful Paintings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/651/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Joysticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/651/A",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Clockwork Bomb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/650/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Zip-line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/650/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "title": "Table Compression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/650/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Image Preview",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/650/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Watchmen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/650/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Автобус",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/649/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Дефрагментация памяти",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/649/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Печать условий",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/649/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Этажи",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/649/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Любимые числа Поликарпа",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/649/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Собери число",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/648/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Собачки и миски",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/648/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Путь Робота",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/648/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Собери стол",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/648/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Наибольший подъем",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/648/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Armistice Area Apportionment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Cowslip Collections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Intellectual Inquiry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Robot Rapping Results Report",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Enduring Exodus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Mischievous Mess Makers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Amity Assessment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/645/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Hostname Aliases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/644/C",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Processing Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/644/B",
    "difficulty": 1700,
    "tags": [
      "*special",
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Parliament of Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/644/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Choosing Ads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/G",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Bears and Juice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Bear and Destroying Subtrees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Bearish Fanpages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/D",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Levels and Regions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/C",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Bear and Two Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Bear and Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/643/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Little Artem and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/G",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Little Artem and 2-SAT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/F",
    "difficulty": 3000,
    "tags": []
  },
  {
    "title": "Little Artem and Time Machine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/E",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Little Artem and Random Variable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Little Artem and Dance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Little Artem and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Little Artem and Grasshopper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/641/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bear and Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Bear and Paradox",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Bear and Contribution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Bear and Polynomials",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/C",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Bear and Forgotten Tree 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Bear and Displayed Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/639/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Three-dimensional Turtle Super Computer ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/638/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Road Improvement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/638/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Making Genome in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/638/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "strings"
    ]
  },
  {
    "title": "Home Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/638/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Running with Obstacles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/637/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Promocodes with Mistakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/637/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Chat Order",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/637/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "binary search",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Voting for Photos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/637/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Orchestra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/635/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Island Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/634/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Fibonacci-ish II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Yash And Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Chocolate Spree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Startup Funding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Fibonacci-ish",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Spy Syndrome 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "implementation",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "A Trivial Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Ebony and Ivory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/633/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Magic Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "matrices",
      "trees"
    ]
  },
  {
    "title": "Thief in a Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/E",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Longest Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "The Smallest String Concatenation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/C",
    "difficulty": 1700,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Alice, Bob, Two Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Grandma Laura and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/632/A",
    "difficulty": 1200,
    "tags": []
  },
  {
    "title": "Product Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/631/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Messenger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/631/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Report",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/631/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Print Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/631/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Interview",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/631/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/R",
    "difficulty": 1200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Pyramids",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/Q",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Area of a Star",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/P",
    "difficulty": 2100,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Arrow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/O",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Forecast",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/N",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Turn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/M",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Cracking the Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/L",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Indivisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/K",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/J",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Parking Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/I",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Benches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/H",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Challenge Pennants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/G",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Selection of Personnel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/F",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "A rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/E",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Hexagons!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/D",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/C",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Moore's Law",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Again Twenty Five!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/630/A",
    "difficulty": 800,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Famil Door and Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/629/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Babaei and Birthday Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/629/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Famil Door and Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/629/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Far Relative’s Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/629/B",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Far Relative’s Birthday Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/629/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Bear and Fair Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Zbazi in Zeydabad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Magic Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Bear and String Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "New Skateboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/B",
    "difficulty": 1300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Tennis Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/628/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Island Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/F",
    "difficulty": 3400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Orchestra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/E",
    "difficulty": 3000,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "Preorder Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Package Delivery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "title": "Factory Repairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/B",
    "difficulty": 1700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "XOR Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/627/A",
    "difficulty": 1700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Raffles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Group Projects",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Simple Skewness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Jerry's Protest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Block Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Robot Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/626/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Frog Fights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/625/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Finals in arithmetic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/625/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "K-special Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/625/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "War of the Corporations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/625/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Guest From the Past",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/625/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Making a String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/624/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Save Luke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/624/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Transforming Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/623/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/623/D",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Electric Charges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/623/C",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Array GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/623/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Graph and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/623/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "The Sum of the k-th Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/F",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Ants in Leaves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Optimal Number Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Not Equal on a Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "The Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Infinite Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/622/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Wet Shark and Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/621/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Rat Kwesh and Cheese",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/621/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Wet Shark and Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/621/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "title": "Wet Shark and Bishops",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/621/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "implementation"
    ]
  },
  {
    "title": "Wet Shark and Odd and Even",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/621/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Xors on Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "New Year Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Professor GukiZ and Two Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Pearls in a Row",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/C",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Grandfather Dovlet’s calculator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Professor GukiZ's Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/620/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Combining Slimes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/G",
    "difficulty": 3300,
    "tags": [
      "dp",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Double Knapsack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "title": "Robot Arm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Hamiltonian Spanning Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Constellation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/C",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Guess the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Slime Combining",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/618/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "XOR and Favorite Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/617/E",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/617/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Watering Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/617/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/617/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Elephant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/617/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Expensive Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Sum of Remainders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/E",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Longest k-Good Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "The Labyrinth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Dinner with Emma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/B",
    "difficulty": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Comparing Two Long Integers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/616/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Hexagons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/615/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Multipliers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/615/D",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Running Track",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/615/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Longtail Hedgehog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/615/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Bulbs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/615/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Gena's Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/614/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Link/Cut Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/614/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Puzzle Lover",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/613/E",
    "difficulty": 3200,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Kingdom and its Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/613/D",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Necklace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/613/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Skills",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/613/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Peter and Snow Blower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/613/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Simba on the Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/F",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Square Root of Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "The Union of k-Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Replace To Make Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "expression parsing",
      "math"
    ]
  },
  {
    "title": "HDD is Outdated Technology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Text Splitting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/612/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "New Year  and Forgotten Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "title": "New Year and Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/G",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "New Year and Cleaning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "New Year and Three Musketeers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Year and Ancient Prophecy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "New Year and Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "New Year and Old Property",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "New Year and Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/611/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Alphabet Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/610/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Vika and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/610/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Harmony Analysis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/610/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Vika and Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/610/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Pasha and Stick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/610/A",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Frogs and mosquitoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Minimum spanning tree for each edge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Gadgets for dollars and pounds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Load Balancing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "The Best Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "USB Flash Drives",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/609/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Hamming Distance Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/608/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "title": "Saitama Destroys Hotel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/608/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cross Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/607/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Power Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/607/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Marbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/607/C",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Zuma",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/607/B",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Chain Reaction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/607/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Testing Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/606/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Magic Spheres",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/606/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Intergalaxy Trips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/605/E",
    "difficulty": 2700,
    "tags": [
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "title": "Board Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/605/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "title": "Freelancer's Dreams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/605/C",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Lazy Student",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/605/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "title": "Sorting Railway Cars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/605/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "More Cowbell",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/604/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Uncowed Forces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/604/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pastoral Oddities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/603/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "title": "Ruminations on Ruminants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/603/D",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Lieges of Legendre",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/603/C",
    "difficulty": 2200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Moodular Arithmetic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/603/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Alternative Thinking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/603/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Approximating a Constant Range",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/602/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Two Bases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/602/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "A Museum Robbery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/601/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Acyclic Organic Compounds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/601/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Kleofáš and the n-thlon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/601/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Lipshitz Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/601/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "The Two Routes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/601/A",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Edge coloring of bipartite graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/F",
    "difficulty": 2800,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Lomsat gelral",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Area of Two Circles' Intersection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/D",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Make Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Queries about less or equal elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Extract Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/600/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sandy and Nuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/599/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Spongebob and Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/599/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Day at the Beach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/599/C",
    "difficulty": 1600,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Spongebob and Joke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/599/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Patrick and Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/599/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cut Length",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Chocolate Bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Igor In the Museum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Nearest vectors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Queries on a String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tricky Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/598/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/597/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Restaurant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/597/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Divisibility",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/597/A",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Wilbur and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/596/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "strings"
    ]
  },
  {
    "title": "Wilbur and Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/596/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Wilbur and Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/596/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Wilbur and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/596/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Wilbur and Swimming Pool",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/596/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Pasha and Phone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/595/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Vitaly and Night",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/595/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Cutting the Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/594/E",
    "difficulty": 3100,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "REQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/594/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Edo and Magnets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/594/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Max and Bike",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/594/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Warrior and Archer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/594/A",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Strange Calculation and Cats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/593/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Happy Tree Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/593/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "title": "Beautiful Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/593/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Anton and Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/593/B",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "2Char",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/593/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "BCPC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/592/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Super M",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/592/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "The Big Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/592/C",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Monster and the Squirrel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/592/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "PawnChess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/592/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Rebranding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/591/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Wizards' Duel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/591/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/590/E",
    "difficulty": 3200,
    "tags": [
      "graph matchings",
      "strings"
    ]
  },
  {
    "title": "Top Secret Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/590/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Three States",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/590/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Chip 'n Dale Rescue Rangers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/590/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Median Smoothing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/590/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Duff in Love",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/588/B",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Duff and Meat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/588/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Duff is Mad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Duff as a Queen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Duff in Mafia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/D",
    "difficulty": 3100,
    "tags": [
      "2-sat",
      "binary search"
    ]
  },
  {
    "title": "Duff in the Army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Duff in Beach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/B",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Duff and Weight Lifting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/587/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Laurenty and Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/586/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Alena's Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/586/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Digits of Number Pi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/F",
    "difficulty": 3200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Present for Vitalik the Philatelist ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lizard Era: Beginning",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/D",
    "difficulty": 2300,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Alice, Bob, Oranges and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/C",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Phillip and Trains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Gennady the Dentist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/585/A",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Anton and Ira",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/584/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dima and Lisa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/584/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Marina and Vasya",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/584/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Kolya and Tanya ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/584/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Olesya and Rodion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/584/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Robot's Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/583/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Asphalting Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/583/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Boolean Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/582/E",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "expression parsing"
    ]
  },
  {
    "title": "Number of Binominal Coefficients",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/582/D",
    "difficulty": 3300,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Superior Periodic Subarrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/582/C",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Once Again...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/582/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "matrices"
    ]
  },
  {
    "title": "GCD Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/582/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Zublicanes and Mumocrates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Kojiro and Furrari",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Three Logos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Developing Skills",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Luxurious Houses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vasya the Hipster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/581/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kefa and Watch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/580/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Kefa and Dishes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/580/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Kefa and Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/580/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Kefa and Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/580/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Kefa and First Steps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/580/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Finding Team Member",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/579/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Raising Bacteria",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/579/A",
    "difficulty": 1000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Mirror Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/F",
    "difficulty": 3200,
    "tags": [
      "matrices",
      "trees"
    ]
  },
  {
    "title": "Walking!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "LCS Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Weakness and Poorness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/C",
    "difficulty": 2000,
    "tags": [
      "ternary search"
    ]
  },
  {
    "title": "\"Or\" Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "A Problem about Polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/578/A",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Modulo Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/577/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Multiplication Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/577/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Painting Edges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/576/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Flights for Regular Customers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/576/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Points on Plane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/576/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Invariance of Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/576/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Vasya and Petya's Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/576/A",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Robots protection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/I",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Bots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/H",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Run for beer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "title": "Bulbo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Spectator Riots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/E",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Tablecity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "graph matchings"
    ]
  },
  {
    "title": "Bribes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/B",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Fibonotci",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/575/A",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Bear and Three Musketeers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/574/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "title": "Bear and Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/574/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Bear and Bowling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/573/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Bear and Cavalry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/573/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Bear and Drawing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/573/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Bear and Blocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/573/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Bear and Poker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/573/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Order Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/572/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/572/A",
    "difficulty": 900,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Geometric Progressions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/571/E",
    "difficulty": 3200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Campus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/571/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "CNF 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/571/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Minimization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/571/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Lengthening Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/571/A",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Pig and Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/570/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Tree Requests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/570/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/570/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Simple Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/570/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/570/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Inventory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/569/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Music",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/569/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Longest Increasing Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/568/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Sign Posts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/568/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "New Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/568/C",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "greedy"
    ]
  },
  {
    "title": "Symmetric and Transitive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/568/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Primes or Palindromes?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/568/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mausoleum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "President and Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "title": "One-Dimensional Battle Ships",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Geometric Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Berland National Library",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lineland Mail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/567/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Max and Min",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/G",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Clique in the Divisibility Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/F",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Restoring Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/E",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "title": "Restructuring Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Logistical Questions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/C",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Replicating Processes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Matching Names",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/566/A",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Gerald is into Art",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/560/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Currency System in Geraldion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/560/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Gerald and Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/559/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Randomizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/559/D",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "Gerald and Giant Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/559/C",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Equivalent Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/559/B",
    "difficulty": 1700,
    "tags": [
      "divide and conquer",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Gerald's Hexagon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/559/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "A Simple Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/558/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Guess Your Way Out! II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/558/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Amr and Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/558/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Amr and The Large Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/558/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lala Land and Apple Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/558/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Ann and Half-Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/557/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Vitaly and Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/557/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Arthur and Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/557/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Pasha and Tea",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/557/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Ilya and Diplomas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/557/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Case of Fake Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/556/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Case of the Zeros and Ones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/556/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Case of Computer Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/555/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Case of a Top Secret",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/555/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Case of Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/555/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Case of Fugitive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/555/B",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Case of Matryoshkas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/555/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ohana Cleans Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/554/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Kyoya and Photobooks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/554/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math",
      "strings"
    ]
  },
  {
    "title": "Kyoya and Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/553/E",
    "difficulty": 3200,
    "tags": [
      "dp",
      "fft",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Nudist Beach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/553/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Love Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/553/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Kyoya and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/553/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Kyoya and Colored Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/553/A",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Vanya and Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/552/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "expression parsing",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Vanya and Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/552/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Vanya and Scales",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/552/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Vanya and Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/552/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vanya and Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/552/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "GukiZ and GukiZiana",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/551/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "GukiZ and Binary Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/551/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "GukiZ hates Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/551/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "ZgukistringZ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/551/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "GukiZ and Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/551/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Brackets in Implications",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/550/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Regular Bridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/550/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Divisibility by Eight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/550/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Preparing Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/550/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Two Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/550/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Degenerate Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Happy Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/G",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Yura and Developers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Sasha Circle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/E",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Haar Features",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Game Of Parity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/C",
    "difficulty": 2200,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Looksery Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Face Detection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/549/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mike and Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/548/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mike and Fax",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/548/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mike and Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/547/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Mike and Fish",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/547/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Mike and Foam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/547/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Mike and Feet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/547/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Mike and Frog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/547/A",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Soldier and Traveling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/546/E",
    "difficulty": 2100,
    "tags": [
      "flows",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Soldier and Number Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/546/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Soldier and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/546/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "games"
    ]
  },
  {
    "title": "Soldier and Badges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/546/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Soldier and Bananas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/546/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Paths and Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/545/E",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/545/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Woodcutters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/545/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Equidistant String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/545/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Toy Cars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/545/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sea and Islands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/544/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Set of Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/544/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Listening to Music",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/543/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Road Improvement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/543/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Remembering Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/543/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Destroying Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/543/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Writing Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/543/A",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Quest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Playing on Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Superhero's Job",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/D",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Idempotent functions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Duck Hunt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/B",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Place Your Ad Here",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/542/A",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Infinite Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/540/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Bad Luck Island",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/540/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Ice Cave",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/540/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "School Marks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/540/B",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Combination Lock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/540/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Summer Dichotomy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/H",
    "difficulty": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Berserk Robot ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "title": "A Heap of Heaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Demiurges Play Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Weird Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Tourist's Notes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Quasi Binary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cutting Banner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/538/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Tavas on the Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/536/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Tavas in Kansas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/536/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Tavas and Pashmaks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/535/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Tavas and Malekas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/535/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Tavas and Karafs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/535/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Tavas and SaDDas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/535/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "title": "Tavas and Nafas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/535/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Simplified Nonogram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Berland Local Positioning System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Handshakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Polycarpus' Dice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Covered Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/534/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Encoding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/F",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Correcting Mistakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Landmarks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Board Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/C",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Work Group",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Berland Miners",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/533/A",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Different variables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/I",
    "difficulty": 2500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Points in triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/H",
    "difficulty": 2100,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "title": "Levenshtein distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/G",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Jumping frogs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/F",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Sum and product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/E",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Set subtraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/D",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Diophantine equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "String inside out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/B",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Quadratic equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/530/A",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Group Photo 2 (online mirror version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/529/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Triangles 3000",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/528/E",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Fuzzy Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/528/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "fft"
    ]
  },
  {
    "title": "Data Center Drama",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/527/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Clique Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/527/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Glass Carving",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/527/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Error Correct System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/527/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Playing with Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/527/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Spiders Evil Plan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/G",
    "difficulty": 3300,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Pudding Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Transmitting Levels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Om Nom and Necklace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/D",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Om Nom and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Om Nom and Dark Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "King of Thieves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/526/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Anya and Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/525/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Arthur and Walls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/525/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Ilya and Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/525/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Pasha and String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/525/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Vitaliy and Pie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/525/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "And Yet Another Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Rooks and Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Social Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/D",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "The Art of Dealing with ATM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "title": "Фото на память - 2 (round version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Возможно, вы знаете этих людей?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/524/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Statistics of Recompressing Videos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/523/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Name Quest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/523/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Mean Requests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/523/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Rotate, Flip and Zoom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/523/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Closest Equals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/522/D",
    "difficulty": 2000,
    "tags": [
      "*special",
      "data structures"
    ]
  },
  {
    "title": "Chicken or Fish?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/522/C",
    "difficulty": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Photo to Remember",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/522/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Reposts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/522/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Cycling City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/521/E",
    "difficulty": 3100,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/521/D",
    "difficulty": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Pluses everywhere",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/520/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/520/D",
    "difficulty": 2100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "DNA Alignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/520/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "Two Buttons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/520/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Pangram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/520/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "A and B and Lecture Rooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/519/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "A and B and Interesting Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/519/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "A and B and Team Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/519/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "A and B and Compilation Errors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/519/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "A and B and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/519/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pasha and Pipe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Arthur and Questions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Ilya and Escalator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Anya and Smartphone",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Tanya and Postcard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Vitaly and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/518/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Drazil and His Happy Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/516/E",
    "difficulty": 3100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Drazil and Morning Exercise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/516/D",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Drazil and Park",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/515/E",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Drazil and Tiles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/515/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Drazil and Factorial",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/515/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Drazil and His Happy Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/515/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dsu",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Drazil and Date",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/515/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Darth Vader and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/514/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "R2D2 and Droid Army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/514/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Watto and Mechanism",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/514/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Han Solo and Lazer Gun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/514/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Chewbaсca and Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/514/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Inversions problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/G3",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Inversions problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/G2",
    "difficulty": 2400,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Inversions problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/G1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Scaygerboss",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/F2",
    "difficulty": 2800,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Scaygerboss",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/F1",
    "difficulty": 2700,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Subarray Cuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/E2",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Subarray Cuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/E1",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Constrained Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/D2",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Constrained Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/D1",
    "difficulty": 2400,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Second price auction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "probabilities"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/B2",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/B1",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/513/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Fox And Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/512/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Fox And Travelling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/512/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Fox And Dinner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/510/E",
    "difficulty": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Fox And Jumping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/510/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "title": "Fox And Names",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/510/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Fox And Two Dots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/510/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Fox And Snake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/510/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Progress Monitoring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Pretty Song",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/E",
    "difficulty": 2000,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "title": "Restoring Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Sums of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Painting Pebbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Maximum in Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/509/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Arthur and Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/508/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Tanya and Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/508/D",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Anya and Ghosts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/508/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Anton and currency you all know",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/508/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "title": "Pasha and Pixels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/508/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Breaking Good",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/507/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "The Maths Lecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/507/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Guess Your Way Out!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/507/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Amr and Pins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/507/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Amr and Music",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/507/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Mr. Kitayuta's Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/506/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "title": "Mr. Kitayuta's Colorful Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/506/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Mr. Kitayuta vs. Bamboos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/505/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Mr. Kitayuta's Technology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/505/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Mr. Kitayuta, the Treasure Hunter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/505/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Mr. Kitayuta's Colorful Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/505/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Mr. Kitayuta's Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/505/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Misha and LCP on Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/504/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "title": "Misha and XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/504/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "Misha and Palindrome Degree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/501/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "title": "Misha and Permutations Summation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/501/D",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Misha and Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/501/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Misha and Changing Handles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/501/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "dsu",
      "strings"
    ]
  },
  {
    "title": "Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/501/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "New Year Running",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/G",
    "difficulty": 3200,
    "tags": [
      "number theory",
      "trees"
    ]
  },
  {
    "title": "New Year Shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/F",
    "difficulty": 2700,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "New Year Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "New Year Santa Network",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "New Year Book Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "New Year Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "New Year Transportation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/500/A",
    "difficulty": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Lecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/499/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Watching a movie",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/499/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Stairs and Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/498/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Traffic Jams in the Land",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/498/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Array and Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/498/C",
    "difficulty": 2100,
    "tags": [
      "flows",
      "graph matchings",
      "number theory"
    ]
  },
  {
    "title": "Name That Tune",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/498/B",
    "difficulty": 2400,
    "tags": [
      "dp",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Crazy Town",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/498/A",
    "difficulty": 1700,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Subsequences Return",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/497/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Gears",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/497/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Distributing Parts ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/496/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Tennis Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/496/D",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Removing Columns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/496/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Secret Combination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/496/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Minimum Difficulty",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/496/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Modular Equations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/495/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Digital Counter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/495/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sharti",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/494/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/494/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Helping People",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/494/C",
    "difficulty": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Obsessive String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/494/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Treasure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/494/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Vasya and Polynomial",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/493/E",
    "difficulty": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Vasya and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/493/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "title": "Vasya and Basketball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/493/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Vasya and Wrestling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/493/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vasya and Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/493/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vanya and Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/492/E",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Vanya and Computer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/492/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Vanya and Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/492/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Vanya and Lanterns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/492/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Vanya and Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/492/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Deciphering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/491/C",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "New York Hotel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/491/B",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Up the hill",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/491/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Treeland Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Restoring Increasing Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "title": "Hacking Cypher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/B",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Team Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/490/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Special Matrices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/F",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Hiking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Unbearable Controversy of Being",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Given Length and Sum of Digits...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "BerSU Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "SwapSort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/489/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Candy Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/488/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Giga Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/488/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Tourists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/487/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Conveyor Belts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/487/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Prefix Product Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/487/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Strip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/487/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Fight the Monster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/487/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "LIS of Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/486/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "math"
    ]
  },
  {
    "title": "Valid Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/486/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "title": "Palindrome Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/486/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "OR in Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/486/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Calculating Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/486/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Valuable Resources",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/485/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Factory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/485/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Sign on Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/484/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Kindergarten",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/484/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Strange Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/484/C",
    "difficulty": 2600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Maximum Value",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/484/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/484/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "title": "Friends and Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/483/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Counterexample ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/483/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "ELCA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/482/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Random Function and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/482/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Game with Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/482/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Interesting Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/482/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Diverse Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/482/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Parking Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/480/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "Parcels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/480/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Riding in a Lift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/479/E",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Long Jumps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/479/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/479/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/479/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/479/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Wavy numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/478/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "meet-in-the-middle",
      "sortings"
    ]
  },
  {
    "title": "Red-Green Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/478/D",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Table Decorations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/478/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Random Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/478/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Initial Bet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/478/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dreamoon and Notepad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/477/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Dreamoon and Binary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/477/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Dreamoon and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/476/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Dreamoon and Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/476/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Dreamoon and Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/476/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Dreamoon and WiFi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/476/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Dreamoon and Stairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/476/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Meta-universe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/F",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Strongly Connected City 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "CGCDSSQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Kamal-ol-molk's Painting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Strongly Connected City",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Bayan Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/475/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ant colony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Pillars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/D",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Captain Marmot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Worms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/474/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Design Tutorial: Increase the Constraints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "fft"
    ]
  },
  {
    "title": "Design Tutorial: Change the Goal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Design Tutorial: Learn from a Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Design Tutorial: Inverse the Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Design Tutorial: Make It Nondeterministic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/C",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Design Tutorial: Learn from Life",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/B",
    "difficulty": 1300,
    "tags": []
  },
  {
    "title": "Design Tutorial: Learn from Math",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/472/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "MUH and Lots and Lots of Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/471/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "MUH and Cube Walls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/471/D",
    "difficulty": 1800,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "MUH and House of Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/471/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "MUH and Important Things",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/471/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "MUH and Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/471/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Array Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/H",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Hamming Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/G",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Pairwise Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/F",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Chessboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/E",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Caesar Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/D",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Eval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/C",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Hexakosioihexekontahexaphobia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Crystal Ball Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/470/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Chat Online",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/469/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "I Wanna Be the Guy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/469/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Permanent",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/468/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/468/D",
    "difficulty": 3100,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "title": "Hack it!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/468/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Two Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/468/B",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "24 Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/468/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Alex and Complicated Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/467/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Fedor and Essay",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/467/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "George and Job",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/467/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Fedor and New Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/467/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "George and Accommodation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/467/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Information Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/466/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Increase Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/466/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Number of Ways",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/466/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Wonder Room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/466/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Cheap Travel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/466/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Inbox (100500)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/465/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "inc ARG",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/465/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "The Classic Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/464/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "World of Darkraft - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/464/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Substitutes in Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/464/C",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Restore Cube ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/464/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "No to Palindromes!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/464/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Caisa and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/463/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Gargari and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/463/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Gargari and Bishops",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/463/C",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Caisa and Pylons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/463/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Caisa and Sugar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/463/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Appleman and Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/462/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Appleman and Easy Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/462/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Appleman and a Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/461/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "shortest paths",
      "strings"
    ]
  },
  {
    "title": "Appleman and Complicated Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/461/D",
    "difficulty": 2800,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "title": "Appleman and a Sheet of Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/461/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Appleman and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/461/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Appleman and Toastman",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/461/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Roland and Rose",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/460/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Little Victor and Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/460/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/460/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Little Dima and Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/460/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vasya and Socks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/460/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Pashmak and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/459/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Pashmak and Parmida's problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/459/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "title": "Pashmak and Buses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/459/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Pashmak and Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/459/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Pashmak and Garden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/459/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "An easy problem about trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/F",
    "difficulty": 3200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Flow Optimality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "title": "Bingo!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/C",
    "difficulty": 2100,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Distributed Join",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Golden System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/457/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Fedya and Maths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/456/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Laptops",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/456/A",
    "difficulty": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/455/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Serega and Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/455/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Civilization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/455/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "ternary search",
      "trees"
    ]
  },
  {
    "title": "A Lot of Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/455/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Boredom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/455/A",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Little Pony and Sort by Shift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/454/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Little Pony and Crystal Mine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/454/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Little Pony and Lord Tirek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/453/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Little Pony and Elements of Harmony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/453/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Little Pony and Summer Sun Celebration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/453/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Little Pony and Harmony Chest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/453/B",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Little Pony and Expected Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/453/A",
    "difficulty": 1600,
    "tags": [
      "probabilities"
    ]
  },
  {
    "title": "Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing"
    ]
  },
  {
    "title": "Three strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Washer, Dryer, Folder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Magic Trick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "4-point polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Eevee",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/452/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Devu and Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/451/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Count Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/451/D",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Predict Outcome of the Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/451/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sort the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/451/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Game With Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/451/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Jzzhu and Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/450/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jzzhu and Children",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/450/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Jzzhu and Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/449/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Jzzhu and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/449/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Jzzhu and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/449/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Jzzhu and Cities",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/449/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Jzzhu and Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/449/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/448/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Multiplication Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/448/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "Painting Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/448/C",
    "difficulty": 1900,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Suffix Structures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/448/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Rewards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/448/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "DZY Loves Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/447/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "DZY Loves Hash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/447/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "DZY Loves Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/446/E",
    "difficulty": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "DZY Loves Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/446/D",
    "difficulty": 2800,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "DZY Loves Fibonacci Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/446/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "title": "DZY Loves Modification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/446/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "DZY Loves Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/446/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "DZY Loves Chemistry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/445/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "DZY Loves Chessboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/445/A",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "DZY Loves Planting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/444/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "DZY Loves Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/444/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "DZY Loves Colors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/444/C",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "DZY Loves FFT",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/444/B",
    "difficulty": 2300,
    "tags": [
      "probabilities"
    ]
  },
  {
    "title": "DZY Loves Physics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/444/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Kolya and Tandem Repeat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/443/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Anton and Letters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/443/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Gena and Second Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/442/E",
    "difficulty": 3100,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Adam and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/442/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Artem and Array ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/442/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Andrey and Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/442/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Borya and Hanabi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/442/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Valera and Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/441/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Valera and Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/441/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "string suffix structures"
    ]
  },
  {
    "title": "Valera and Tubes ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/441/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Valera and Fruits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/441/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Valera and Antique Items",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/441/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Berland Federalization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/440/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "One-Based Arithmetic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/440/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer"
    ]
  },
  {
    "title": "Balancer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/440/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Forgotten Episode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/440/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Devu and Birthday Celebration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/439/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Devu and his Brother",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/439/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Devu and Partitioning of the Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/439/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Devu, the Dumb Guy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/439/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Devu, the Singer and Churu, the Joker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/439/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "The Child and Binary Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/438/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "number theory"
    ]
  },
  {
    "title": "The Child and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/438/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "The Child and Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/437/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "The Child and Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/437/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "sortings"
    ]
  },
  {
    "title": "The Child and Toy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/437/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Child and Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/437/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "The Child and Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/437/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Banners",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Cardboard Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Pudding Monsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Dungeons and Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/C",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Om Nom and Spiders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Feed with Candy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/436/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Special Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/435/E",
    "difficulty": 2500,
    "tags": []
  },
  {
    "title": "Special Grid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/435/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Cardiogram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/435/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pasha Maximizes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/435/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Queue on Bus Stop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/435/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Furukawa Nagisa's Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/434/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "divide and conquer",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Nanami's Power Plant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/434/D",
    "difficulty": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Tachibana Kanade's Tofu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/433/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Nanami's Digital Board",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/433/D",
    "difficulty": 2000,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Ryouko's Memory Note",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/433/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Kuriyama Mirai's Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/433/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Kitahara Haruki's Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/433/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Square Tiling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/432/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Prefixes and Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/432/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Prime Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/432/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Football Kit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/432/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Choosing Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/432/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Chemistry Experiment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/431/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "ternary search"
    ]
  },
  {
    "title": "Random Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/431/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "k-Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/431/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Shower Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/431/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Black Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/431/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Balls Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/430/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Points and Segments (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/430/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Points and Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/429/E",
    "difficulty": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Tricky Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/429/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "title": "Guess the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/429/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Working out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/429/B",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Xor-tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/429/A",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Police Patrol",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/427/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Match & Catch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/427/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Checkposts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/427/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "two pointers"
    ]
  },
  {
    "title": "Prison Transfer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/427/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Police Recruits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/427/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sereja and Mirroring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/426/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sereja and Mugs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/426/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sereja and Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/425/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Sereja and Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/425/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "hashing"
    ]
  },
  {
    "title": "Sereja and Two Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/425/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Sereja and Table ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/425/B",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Sereja and Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/425/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Colored Jenga",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/424/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Biathlon Track",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/424/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Magic Formulas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/424/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Megacity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/424/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Squats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/424/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bug in Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/421/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Pasha and Hamsters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/421/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Playing the ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/420/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Cup Trick",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/420/D",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Bug in Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/420/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Online Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/420/B",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Start Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/420/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tricky Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/418/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Big Problems for Organizers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/418/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Square Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/417/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Cunning Gena",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/417/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/417/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Crash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/417/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Elimination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/417/A",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "President's Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/416/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Population Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/416/D",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Booking System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/416/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Art Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/416/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Guess a number!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/416/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Mashmokh and Tokens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/415/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mashmokh and Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/415/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mashmokh's Designed Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/414/E",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Mashmokh and Water Tanks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/414/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Mashmokh and Reverse Operation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/414/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer"
    ]
  },
  {
    "title": "Mashmokh and ACM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/414/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Mashmokh and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/414/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "title": "Maze 2D",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/413/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "title": "2048",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/413/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Jeopardy!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/413/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Spyke Chatting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/413/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Data Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/413/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "E-mail Addresses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/412/E",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Giving Awards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/412/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Pattern",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/412/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Network Configuration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/412/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Poster",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/412/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Kicker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/411/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Multi-core Processor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/411/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Password Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/411/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Feed the Golorp",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/I",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "A + B Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/H",
    "difficulty": 1500,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "On a plane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "title": "000001",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Dome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Big Data",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/D",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Magnum Opus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/C",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Mysterious Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/B",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "The Great Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/409/A",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/408/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Line to Cashier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/408/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "k-d-sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/407/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Largest Submatrix 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/407/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "title": "Curious Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/407/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Long Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/407/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/407/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Hamming Triples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/406/E",
    "difficulty": 2800,
    "tags": [
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Hill Climbing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/406/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "geometry",
      "trees"
    ]
  },
  {
    "title": "Graph Cutting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/405/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Toy Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/405/D",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Unusual Product",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/405/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Domino Effect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/405/B",
    "difficulty": 1100,
    "tags": []
  },
  {
    "title": "Gravity Flip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/405/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Maze 1D",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/404/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Minesweeper 1D",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/404/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Restore Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/404/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Marathon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/404/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Valera and X",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/404/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Two Rooted Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/403/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Beautiful Pairs of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/403/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Strictly Positive Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/402/E",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "title": "Upgrading Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/402/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Searching for Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/402/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Trees in a Row",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/402/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Nuts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/402/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Olympic Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/401/E",
    "difficulty": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Roman and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/401/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/401/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sereja and Contests",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/401/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vanya and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/401/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Inna and Binary Logic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/400/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Dima and Bacteria",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/400/D",
    "difficulty": 2000,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Inna and Huge Candy Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/400/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Inna and New Matrix of Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/400/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "schedules"
    ]
  },
  {
    "title": "Inna and Choose Options",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/400/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Red and Blue Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/399/B",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Pages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/399/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sorting Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/398/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Instant Messanger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/398/D",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Tree and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/398/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Painting The Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/398/B",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/398/A",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "On Corruption and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/397/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "On Segment's Own Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/397/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "On Iteration of One Well-Known Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/396/E",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "title": "On Sum of Number of Inversions in Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/396/D",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "On Changing Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/396/C",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "On Sum of Fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/396/B",
    "difficulty": "N/A",
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "On Number of Decompositions into Multipliers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/396/A",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Lightbulb for Minister",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/394/E",
    "difficulty": "N/A",
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Physical Education and Buns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/394/D",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/394/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Very Beautiful Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/394/B",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "title": "Counting Sticks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/394/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Three matrices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/393/B",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Nineteen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/393/A",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Deleting Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/392/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Three Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/392/D",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Yet Another Number Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/392/C",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Tower of Hanoi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/392/B",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Blocked Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/392/A",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "title": "Stock Trading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/F3",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Stock Trading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/F2",
    "difficulty": "N/A",
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Stock Trading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/F1",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Three Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/E2",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Three Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/E1",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Supercollider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/D2",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Supercollider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/D1",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "The Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/C3",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "The Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/C2",
    "difficulty": "N/A",
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "The Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/C1",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Word Folding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/B",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Genetic Engineering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/391/A",
    "difficulty": "N/A",
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Inna and Large Sweet Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/390/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "title": "Inna and Sweet Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/390/D",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Inna and Candy Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/390/C",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Inna, Dima and Song",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/390/B",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Inna and Alarm Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/390/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Fox and Cross",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/389/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Fox and Number Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/389/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Fox and Meteor Shower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/388/E",
    "difficulty": 3100,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Fox and Perfect Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/388/D",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Fox and Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/388/C",
    "difficulty": 2000,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Fox and Minimal path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/388/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fox and Box Accumulation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/388/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "George and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/387/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "George and Interesting Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/387/D",
    "difficulty": 2200,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "title": "George and Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/387/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "George and Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/387/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "George and Sleep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/387/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Game with Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/386/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Diverse Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/386/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Fly, freebies, fly!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/386/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Second-Price Auction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/386/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bear in the Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/385/E",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Bear and Floodlight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/385/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Bear and Prime Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/385/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Bear and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/385/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Bear and Raspberry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/385/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Multitasking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/384/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Coder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/384/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Vowels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/383/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Antimatter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/383/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Propagating tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/383/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Volcanoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/383/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Milking cows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/383/A",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Ksenia and Combinatorics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/382/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Ksenia and Pawns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/382/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Arithmetic Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/382/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Number Busters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/382/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Ksenia and Pan Scales",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/382/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sereja and Stairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/381/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Sereja and Dima",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/381/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Sereja and Dividing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/380/E",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Sereja and Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/380/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Sereja and Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/380/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "schedules"
    ]
  },
  {
    "title": "Sereja and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/380/B",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Sereja and Prefixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/380/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "New Year Cactus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/G",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "New Year Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "New Year Tree Decorations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "schedules",
      "sortings"
    ]
  },
  {
    "title": "New Year Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "New Year Ratings Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Year Present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "New Year Candles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/379/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Semifinals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/378/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Playing with Dice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/378/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Cookie Clicker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/377/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Developing Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/377/D",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Captains Mode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/377/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "title": "Preparing for the Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/377/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/377/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "I.O.U.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/376/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lever",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/376/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Red and Black Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/375/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tree and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/375/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Circling Round Treasures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/375/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "shortest paths"
    ]
  },
  {
    "title": "Maximum Submatrix 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/375/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Divisible by Seven",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/375/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Inna and Babies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/374/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Inna and Sequence ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/374/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Inna and Dima",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/374/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Inna and Nine",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/374/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "title": "Inna and Pink Pony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/374/A",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Making Sequences is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/373/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Collecting Beats is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/373/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Drawing Circles is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/372/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "geometry"
    ]
  },
  {
    "title": "Choosing Subtree is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/372/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Watching Fireworks is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/372/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "title": "Counting Rectangles is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/372/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Counting Kangaroos is Fun",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/372/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Subway Innovation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/371/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Vessels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/371/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Hamburgers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/371/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "Fox Dividing Cheese",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/371/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "K-Periodic Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/371/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Summer Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/370/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Broken Monitor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/370/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mittens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/370/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Berland Bingo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/370/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Rook, Bishop and King",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/370/A",
    "difficulty": 1100,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Valera and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/369/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Valera and Fools",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/369/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Valera and Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/369/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Valera and Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/369/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Valera and Plates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/369/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sereja and Suffixes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/368/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Sereja and Coat Rack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/368/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sereja and Intervals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/367/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Sereja and Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/367/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "title": "Sereja and the Arrangement of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/367/C",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Sereja ans Anagrams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/367/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Sereja and Algorithm ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/367/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Dima and Magic Guitar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/366/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dima and Trap Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/366/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "title": "Dima and Salad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/366/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Dima and To-do List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/366/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Dima and Guards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/366/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "The Fibonacci Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/365/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Good Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/365/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Empty Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/364/E",
    "difficulty": 3000,
    "tags": [
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "title": "Ghd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/364/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Beautiful Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/364/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Free Market",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/364/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/364/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Two Circles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/363/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Renting Bikes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/363/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Fixing Typos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/363/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/363/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Soroban",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/363/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Petya and Pipes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/362/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Fools and Foolproof Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/362/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Insertion Sort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/362/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Petya and Staircases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/362/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Two Semiknights Meet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/362/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Levko and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/361/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Levko and Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/361/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Levko and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/360/E",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Levko and Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/360/D",
    "difficulty": 2600,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Levko and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/360/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Levko and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/360/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "title": "Levko and Array Recovery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/360/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Neatness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/359/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "title": "Pair of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/359/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Prime Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/359/C",
    "difficulty": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/359/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/359/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Dima and Kicks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/358/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Dima and Hares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/358/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Dima and Containers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/358/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Dima and Text Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/358/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Dima and Continuous Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/358/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Flag Day",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/357/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Group of Students",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/357/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Xenia and String Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/356/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Bags and Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/356/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Compartments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/356/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Xenia and Hamming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/356/B",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Knight Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/356/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Vasya and Public Transport",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/355/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Vasya and Digital Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/355/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Lucky Number Representation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/354/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Transferring Pyramid",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/354/D",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Vasya and Beautiful Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/354/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Game with Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/354/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "title": "Vasya and Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/354/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Antichain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/353/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/353/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Find Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/353/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Two Heaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/353/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/353/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jeff and Periods",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/352/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Jeff and Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/352/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jeff and Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/351/E",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Jeff and Removing Periods",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/351/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Jeff and Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/351/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Jeff and Furik",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/351/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Jeff and Rounding",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/351/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Wrong Floyd",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/350/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Looking for Owls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/350/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "hashing",
      "sortings"
    ]
  },
  {
    "title": "Bombs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/350/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Resort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/350/B",
    "difficulty": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "TL",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/350/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Color the Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/349/B",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cinema Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/349/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Pilgrims",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/348/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Turtles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/348/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Subset Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/348/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Apple Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/348/B",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Mafia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/348/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Fixed Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/347/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Difference Row",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/347/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Doodle Jump",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/346/E",
    "difficulty": 3000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Robot Control",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/346/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Number Transformation II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/346/C",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Lucky Common Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/346/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Alice and Bob",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/346/A",
    "difficulty": 1600,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Suffix Subgroup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "Superstitions Inspection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/F",
    "difficulty": 2700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Black Cat Rush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/E",
    "difficulty": 2700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Chain Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/D",
    "difficulty": 2200,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Counting Fridays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Triskaidekaphobia",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/B",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Expecting Trouble",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/345/A",
    "difficulty": 1500,
    "tags": [
      "*special",
      "probabilities"
    ]
  },
  {
    "title": "Simple Molecules",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/344/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Magnets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/344/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pumping Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/343/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "flows",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Water Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/343/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Read Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/343/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Alternating Current",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/343/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Rational Resistance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/343/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Xenia and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/342/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Xenia and Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/342/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Cupboard and Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/342/C",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Xenia and Spies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/342/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Xenia and Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/342/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Candies Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/341/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Iahub and Xors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/341/D",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Iahub and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/340/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Bubble Sort Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/340/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Tourist Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/340/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Maximal Area Quadrilateral",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/340/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "The Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/340/A",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Three Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/339/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Xenia and Bit Operations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/339/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Xenia and Weights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/339/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Xenia and Ringroad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/339/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Helpful Maths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/339/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Optimize!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/338/E",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "GCD Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/338/D",
    "difficulty": 2900,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Divisor Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/337/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "number theory",
      "trees"
    ]
  },
  {
    "title": "Book of Evil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/337/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Quiz",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/337/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Routine Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/337/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Puzzles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/337/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Vasily the Bear and Painting Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/336/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Vasily the Bear and Beautiful Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/336/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Vasily the Bear and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/336/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Vasily the Bear and Fly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/336/B",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Vasily the Bear and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/336/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Buy One, Get One Free",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Counting Skyscrapers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Rectangles and Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "More Reclamation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/C",
    "difficulty": 2100,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Palindrome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Banana",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/335/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Eight Point Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/334/B",
    "difficulty": 1400,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Candy Bags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/334/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Summer Earnings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/333/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Characteristics of Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/333/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Lucky Tickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/333/C",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/333/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Secrets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/333/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Binary Key",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/332/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Theft of Blueprints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/332/D",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "title": "Students' Revenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/332/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Maximum Absurdity",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/332/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Down the Hatch!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/332/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Deja Vu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/E2",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "title": "Deja Vu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/E1",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Escaping on Beaveractor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/D3",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Escaping on Beaveractor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/D2",
    "difficulty": 2600,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Escaping on Beaveractor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/D1",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "The Great Julya Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/C3",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "The Great Julya Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/C2",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "The Great Julya Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/C1",
    "difficulty": 1100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Shave Beaver!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/B2",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Shave Beaver!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/B1",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Oh Sweet Beaverette",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/A2",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Oh Sweet Beaverette",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/331/A1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Road Construction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/330/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Cakeminator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/330/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Evil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/329/E",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "The Evil Temple and the Moving Rocks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/329/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Graph Reconstruction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/329/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Biridian Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/329/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "title": "Purification",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/329/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Sheldon and Ice Pieces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/328/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "IQ Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/328/A",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Axis Walking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/327/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Block Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/327/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Magic Five",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/327/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Hungry Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/327/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Flipping Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/327/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "The Red Button",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/325/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Reclamation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/325/D",
    "difficulty": 2900,
    "tags": [
      "dsu"
    ]
  },
  {
    "title": "Monsters and Diamonds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/325/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Stadium and Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/325/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "Square and Rectangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/325/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Two permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/323/C",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Tournament-graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/323/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Black-and-White Cube",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/323/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "title": "Ciel and Flowers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/322/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Ciel and Dancing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/322/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Ciel and Gondolas",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/321/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Ciel and Flipboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/321/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ciel the Commander",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/321/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Ciel and Duel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/321/B",
    "difficulty": 1900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "title": "Ciel and Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/321/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Ping-Pong (Easy Version)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/320/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Magic Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/320/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Ping-Pong",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/319/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Have You Ever Heard About the Word?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/319/D",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Kalila and Dimna in the Logging Industry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/319/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Psychos in a Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/319/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Malek Dance Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/319/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Strings of Power",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/318/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Even Odds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/318/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Princess and Her Shadow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/317/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "shortest paths"
    ]
  },
  {
    "title": "Game with Powers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/317/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/317/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Ants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/317/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Perfect Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/317/A",
    "difficulty": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/G3",
    "difficulty": 2400,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/G2",
    "difficulty": 2200,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/G1",
    "difficulty": 1700,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Suns and Rays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/F3",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Suns and Rays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/F2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Suns and Rays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/F1",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Summer Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/E3",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Summer Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/E2",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Summer Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/E1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "PE Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/D3",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "PE Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/D2",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "PE Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/D1",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Tidying Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/C2",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Tidying Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/C1",
    "difficulty": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "EKG",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/B2",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "EKG",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/B1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "title": "Special Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/A2",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Special Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/316/A1",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Sereja and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/315/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sereja and Bottles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/315/A",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Sereja and Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/314/E",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Sereja and Straight Lines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/314/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Sereja and Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/314/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Sereja and Periods",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/314/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dfs and similar",
      "strings"
    ]
  },
  {
    "title": "Sereja and Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/314/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ilya and Two Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/313/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy"
    ]
  },
  {
    "title": "Ilya and Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/313/D",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Ilya and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/313/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Ilya and Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/313/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Ilya and Bank Account",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/313/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Archer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/312/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Whose sentence is it?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/312/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Biologist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/311/E",
    "difficulty": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "title": "Interval Cubing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/311/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "Fetch the Treasure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/311/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Cats Transport",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/311/B",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "The Closest Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/311/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Sheep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/309/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "Tennis Rackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/309/D",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Memory for Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/309/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy"
    ]
  },
  {
    "title": "Context Advertising",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/309/B",
    "difficulty": 2100,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Morning run",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/309/A",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Polygon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/306/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "White, Black and White Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/306/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Optimizer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/306/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Candies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/306/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Playing with String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/305/E",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Olya and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/305/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Ivan and Powers of Two",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/305/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Continued Fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/305/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Strange Addition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/305/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/304/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Pythagorean Theorem II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/304/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Random Ranking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/303/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Rotatable Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/303/D",
    "difficulty": 2600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Minimum Modular",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/303/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Rectangle Puzzle II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/303/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Lucky Permutation Triple",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/303/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Eugeny and Play List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/302/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Eugeny and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/302/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Yaroslav and Arrangements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/301/E",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Yaroslav and Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/301/D",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Yaroslav and Algorithm",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/301/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Yaroslav and Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/301/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Yaroslav and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/301/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Empire Strikes Back",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/300/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Painting Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/300/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "fft"
    ]
  },
  {
    "title": "Beautiful Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/300/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "title": "Coach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/300/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/300/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Ksusha the Squirrel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/299/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Ksusha and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/299/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Sail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/298/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Snow Footprints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/298/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Mystic Carvings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/297/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Color the Carpet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/297/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Splitting the Uniqueness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/297/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Fish Weight",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/297/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Parity Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/297/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Yaroslav and Two Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/296/B",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Yaroslav and Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/296/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Yaroslav and Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/295/E",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Greg and Caves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/295/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Greg and Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/295/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Greg and Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/295/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Greg and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/295/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Shaass the Great",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/294/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "title": "Shaass and Painter Robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/294/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Shaass and Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/294/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Shaass and Bookshelf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/294/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Shaass and Oskols",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/294/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Close Vertices",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/293/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Ksusha and Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/293/D",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "title": "Cube Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/293/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Distinct Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/293/B",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "title": "Weird Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/293/A",
    "difficulty": 1500,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Copying Data",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/292/E",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Connected Components",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/292/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Beautiful IP Addresses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/292/C",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Network Topology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/292/B",
    "difficulty": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "SMSC",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/292/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tree-String Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/291/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dfs and similar",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Parallel Programming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/291/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Network Mask",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/291/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Command Line Arguments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/291/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Spyke Talks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/291/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Greedy Petya",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/F",
    "difficulty": 2800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "HQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/E",
    "difficulty": 2500,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Orange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "WTF?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "graph matchings",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "QR code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Mysterious strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/290/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Polo the Penguin and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/289/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "ternary search"
    ]
  },
  {
    "title": "Polo the Penguin and Segments ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/289/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Polo the Penguin and Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/288/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Polo the Penguin and Trees ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/288/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Polo the Penguin and XOR operation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/288/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Polo the Penguin and Houses ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/288/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Polo the Penguin and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/288/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Pipeline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/287/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "title": "IQ Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/287/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Ladies' Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/286/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "title": "Tourists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/286/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Main Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/286/C",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Shifting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/286/B",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lucky Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/286/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Positions in Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/285/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Permutation Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/285/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "title": "Building Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/285/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Find Marble",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/285/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Slightly Decreasing Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/285/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Cows and Poker Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/284/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Cows and Primitive Roots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/284/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cow Tennis Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/283/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Cows and Cool Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/283/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Coin Troubles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/283/C",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Cow Program",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/283/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Cows and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/283/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Sausage Maximization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/282/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Yet Another Number Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/282/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "XOR and OR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/282/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Painting Eggs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/282/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bit++",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/282/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Nearest Fraction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/281/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Word Capitalization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/281/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Sequence Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/280/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "title": "k-Maximum Subsequence Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/280/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Game on Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/280/C",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Maximum Xor Secondary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/280/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Rectangle Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/280/A",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Beautiful Decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/279/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "games",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "The Minimum Number of Variables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/279/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Ladder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/279/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Books",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/279/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Point on Spiral",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/279/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "New Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/278/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Circle Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/278/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Binary Tree on Plane",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/277/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "trees"
    ]
  },
  {
    "title": "Google Code Jam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/277/D",
    "difficulty": 2800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/277/C",
    "difficulty": 2400,
    "tags": [
      "games",
      "implementation"
    ]
  },
  {
    "title": "Set of Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/277/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Learning Languages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/277/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "title": "Little Girl and Problem on Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/276/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Little Girl and Maximum XOR",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/276/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Little Girl and Maximum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/276/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Little Girl and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/276/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "title": "Lunch Rush",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/276/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Convex Shape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/275/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Lights Out",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/275/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mirror Room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/274/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Lovely Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/274/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Last Hole!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/274/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Zero Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/274/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "k-Multiple Free Set",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/274/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dima and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/273/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Dima and Figure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/273/D",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Dima and Horses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/272/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "title": "Dima and Two Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/272/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Dima and Staircase",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/272/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Dima and Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/272/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Dima and Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/272/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Three Horses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/271/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/271/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Secret",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/271/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Prime Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/271/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Beautiful Year",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/271/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Multithreading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/270/B",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Fancy Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/270/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "String Theory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/269/E",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "math",
      "strings"
    ]
  },
  {
    "title": "Maximum Waterfall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/269/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Flawed Flow",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/269/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Greenhouse Effect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/269/B",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Magical Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/269/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Playlist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/268/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Wall Bars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/268/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Beautiful Sets of Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/268/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Buttons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/268/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Games",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/268/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Berland Traffic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/267/C",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Dominoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/267/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Subtractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/267/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "More Queries to Array...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/266/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "title": "BerDonalds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/266/D",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Below the Diagonal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/266/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Queue at the School",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/266/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Stones on the Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/266/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Roadside Trees (Simplified Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/265/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Colorful Stones (Simplified Edition)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/265/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Roadside Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/264/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Colorful Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/264/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Choosing Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/264/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Good Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/264/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Escape from Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/264/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Rhombus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/263/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Cycle in Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/263/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Circle of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/263/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/263/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Beautiful Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/263/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Roma and Changing Signs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/262/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Roma and Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/262/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Maxim and Calculator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/261/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Maxim and Increasing Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/261/D",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Maxim and Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/261/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Maxim and Restaurant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/261/B",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Maxim and Discounts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/261/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dividing Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/260/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Black and White Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/260/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Balls and Boxes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/260/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Ancient Prophesy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/260/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Adding Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/260/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Little Elephant and Magic Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/259/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Little Elephant and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/259/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Little Elephant and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/258/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Little Elephant and Broken Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/258/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Little Elephant and LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/258/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Little Elephant and Elections",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/258/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Little Elephant and Bits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/258/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Greedy Elevator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/257/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/257/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "View Angle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/257/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Playing Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/257/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Sockets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/257/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Lucky Arrays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/256/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Liars and Serge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/256/D",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Furlo and Rublo and Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/255/E",
    "difficulty": 2200,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Mr. Bender and Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/255/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Almost Arithmetical Progression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/255/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Code Parsing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/255/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Greg's Workout",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/255/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dormitory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/254/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Rats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/254/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Anagram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/254/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Jury Size",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/254/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Cards with Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/254/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Printer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/253/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Table with Letters - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/253/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "Text Editor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/253/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Physics Practical",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/253/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Boys and Girls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/253/A",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Unsorting Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/252/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "title": "Little Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/252/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Tree and Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/251/E",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Two Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/251/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "title": "Number Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/251/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Playing with Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/251/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Points on Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/251/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "two pointers"
    ]
  },
  {
    "title": "Mad Joe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/250/E",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Building Bridge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/250/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "title": "Movie Critics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/250/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Restoring IPv6",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/250/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Paper Work",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/250/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Endless Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/249/E",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Donkey and Stars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/249/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Piglet's Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/248/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Sweets for Everyone!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/248/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Robo-Footballer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/248/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Chilly Willy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/248/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Cupboards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/248/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Blood Cousins Return",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/246/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Colorful Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/246/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Beauty Pageant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/246/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Increase and Decrease",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/246/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Buggy Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/246/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Queries for Number of Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/H",
    "difficulty": 1800,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Suggested Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "title": "Log Stream Analysis",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Mishap in Club",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Restoring Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Game with Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/C",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Internet Address",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "System Administrator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/245/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Undoubtedly Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/244/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "title": "Dividing Orange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/244/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Matrix",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/243/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/243/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Colorado Potato Beetle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/243/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Hydra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/243/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "The Brand New Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/243/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "title": "XOR on Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/242/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "title": "Dispute",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/242/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "King's Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/242/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "title": "Big Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/242/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Heads or Tails",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/242/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Challenging Balloons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Flights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/D",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Mirror Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/C",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/B",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "math"
    ]
  },
  {
    "title": "Old Peykan",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/241/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "TorCoder",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/240/F",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Road Repairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/240/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Easy Tape Programming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/239/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Two Bags of Potatoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/239/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Meeting Her",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/238/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Tape Programming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/238/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "World Eater Brothers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/238/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Boring Partition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/238/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Not Wool Sequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/238/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Build String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/237/E",
    "difficulty": 2000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "T-decomposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/237/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Primes on Interval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/237/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "number theory",
      "two pointers"
    ]
  },
  {
    "title": "Young Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/237/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Free Cash",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/237/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Easy Number Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/236/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Boy or Girl",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/236/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Number Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/235/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Graph Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/235/D",
    "difficulty": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Cyclical Quest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/235/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Let's Play Osu!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/235/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "LCM Challenge",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/235/A",
    "difficulty": 1600,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Merging Two Decks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/H",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Practice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/G",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "title": "Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/F",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Champions' League",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/E",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Weather",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Reading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Lefthanders and Righthanders ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/234/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Non-square Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/233/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Perfect Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/233/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Quick Tortoise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/232/E",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/232/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "title": "Doe Graphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/232/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/232/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Cycles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/232/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Cactus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/231/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Magic Box",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/231/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "To Add or Not to Add",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/231/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Magic, Wizardry and Wonders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/231/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/231/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "T-primes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/230/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Dragons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/230/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Gifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/229/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/229/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/229/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Planets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/229/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/229/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "title": "The Road to Berland is Paved With Good Intentions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/228/E",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Zigzag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/228/D",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Fractal Detector",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/228/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "title": "Two Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/228/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Is your horseshoe on the other hoof?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/228/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Effective Approach",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/227/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Where do I Turn?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/227/A",
    "difficulty": 1300,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Noble Knight's Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/226/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "The table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/226/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Anniversary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/226/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "title": "Naughty Stone Piles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/226/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Flying Saucer Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/226/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Unsolvable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/225/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Snake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/225/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Barcode",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/225/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Well-known Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/225/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "number theory"
    ]
  },
  {
    "title": "Dice Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/225/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/224/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Parallelepiped",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/224/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Planar Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/223/E",
    "difficulty": 3000,
    "tags": [
      "flows",
      "geometry",
      "graphs"
    ]
  },
  {
    "title": "Spider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/223/D",
    "difficulty": 3000,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "title": "Partial Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/223/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Two Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/223/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "title": "Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/223/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Decoding Genome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/222/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "title": "Olympiad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/222/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Reducing Fractions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/222/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "title": "Cosmic Tables",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/222/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Shooshuns and Sequence ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/222/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Little Elephant and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/221/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Little Elephant and Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/221/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Little Elephant and Inversions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/220/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "title": "Little Elephant and Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/220/D",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Little Elephant and Shifts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/220/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Little Elephant and Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/220/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "title": "Little Elephant and Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/220/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Parking Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/219/E",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Choosing Capital for Treeland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/219/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Color Stripe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/219/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Special Offer! Super Price 999 Bourles!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/219/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "k-String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/219/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Airport",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/218/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mountain Scenery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/218/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Alien DNA",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/217/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Bitonix' Patrol",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/217/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "math"
    ]
  },
  {
    "title": "Formurosa",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/217/C",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "dp",
      "expression parsing"
    ]
  },
  {
    "title": "Blackboard Fibonacci",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/217/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Ice Skating",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/217/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Martian Luck",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/216/E",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Spider's Web",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/216/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Hiring Staff",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/216/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Forming Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/216/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Tiling with Hexagons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/216/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Periodical Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/215/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Hot Days",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/215/D",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Crosses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/215/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Olympic Medal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/215/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Bicycle Chain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/215/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Hometask",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/214/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "title": "System of Equations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/214/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Two Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/213/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Stars",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/213/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "title": "Relay Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/213/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/213/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/213/A",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "IT Restaurants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/212/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Cutting a Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/212/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Cowboys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/212/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Polycarpus is Looking for Good Substrings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/212/B",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Privatization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/212/A",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Trails and Glades",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/209/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Pixels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/209/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Multicolored Marbles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/209/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Blood Cousins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/208/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Prizes, Prizes, more Prizes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/208/D",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Police Station",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/208/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Solitaire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/208/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Dubstep",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/208/A",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D9",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D8",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D7",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D6",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D5",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D4",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D3",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D2",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D10",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 3",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/D1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "Game with Two Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/C3",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Game with Two Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/C2",
    "difficulty": 2200,
    "tags": []
  },
  {
    "title": "Game with Two Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/C1",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "Military Trainings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/B3",
    "difficulty": 1700,
    "tags": []
  },
  {
    "title": "Military Trainings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/B2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Military Trainings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/B1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Beaver's Calculator 1.0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/A3",
    "difficulty": 2000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Beaver's Calculator 1.0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/A2",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Beaver's Calculator 1.0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/207/A1",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Little Elephant and Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/205/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Little Elephant and Rozdil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/205/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Little Elephant and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/204/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "implementation",
      "string suffix structures",
      "two pointers"
    ]
  },
  {
    "title": "Little Elephant and Retro Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/204/D",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Little Elephant and Furik and Rubik",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/204/C",
    "difficulty": 2000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Little Elephant and Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/204/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Little Elephant and Interval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/204/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Transportation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/203/E",
    "difficulty": 2300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Hit Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/203/D",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Photographer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/203/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Game on Paper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/203/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Two Problems",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/203/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Brand New Easy Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/202/B",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "LLPS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/202/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Thoroughly Bureaucratic Organization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/201/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "title": "Brand New Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/201/D",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Fragile Bridges",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/201/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Guess That Car!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/201/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Clear Symmetry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/201/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "title": "Tractor College",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/200/E",
    "difficulty": 2400,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ]
  },
  {
    "title": "Programming Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/200/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Football Championship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/200/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Drinks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/200/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cinema",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/200/A",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "title": "Special Olympics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/199/B",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Hexadecimal's theorem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/199/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Gripping Story",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/198/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Cube Snake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/198/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Delivering Carcinogen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/198/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Jumping on Walls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/198/B",
    "difficulty": 1400,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "title": "About Bacteria",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/198/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Limit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/197/B",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Plate Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/197/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "title": "Opening Portals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/196/E",
    "difficulty": 2600,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "The Next Good String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/196/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Paint Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/196/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Infinite Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/196/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Lexicographically Maximum Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/196/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Building Forest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/195/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Analyzing Polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/195/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Try and Catch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/195/C",
    "difficulty": 1800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "After Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/195/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Let's Watch Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/195/A",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/194/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/194/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Fibonacci Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/193/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Two Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/193/D",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Hamming Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/193/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/193/B",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Cutting Figure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/193/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Walking in the Rain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/192/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Funky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/192/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Thwarting Demonstrations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/191/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Metro Scheme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/191/D",
    "difficulty": 2700,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Fools and Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/191/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Demonstration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/191/B",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Dynasty Puzzles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/191/A",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Counter Attack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/190/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "hashing",
      "sortings"
    ]
  },
  {
    "title": "Non-Secret Cypher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/190/D",
    "difficulty": 1900,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "STL",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/190/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Surrounded",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/190/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Vasya and the Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/190/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Counting Rhombi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/189/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Cut Ribbon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/189/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Stack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/H",
    "difficulty": 1800,
    "tags": [
      "*special",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Array Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/G",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Binary Notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/F",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "HQ9+",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/E",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Asterisks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/D",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "LCM",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "title": "A + Reverse B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Hexagonal Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/188/A",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Heaven Tour",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/187/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "BRT Contract ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/187/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Weak Memory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/187/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "title": "AlgoRace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/187/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/187/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Growing Mushrooms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/186/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Comparing Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/186/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Soap Time! - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/185/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Visit of the Great",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/185/D",
    "difficulty": 2600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Clever Fat Rat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/185/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Mushroom Scientists",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/185/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "title": "Plant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/185/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Candy Shop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/183/E",
    "difficulty": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "T-shirt",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/183/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "title": "Cyclic Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/183/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Zoo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/183/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Headquarters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/183/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Wooden Fence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/182/E",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Common Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/182/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "title": "Optimal Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/182/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Vasya's Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/182/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Battlefield",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/182/A",
    "difficulty": 2200,
    "tags": [
      "geometry",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Number of Triplets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/181/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "Series of Crimes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/181/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Mathematical Analysis Rocks!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/F",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Cubes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "Name",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Divisibility Rules",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/B",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Defragmentation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/180/A",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Representative Sampling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/F3",
    "difficulty": 2500,
    "tags": []
  },
  {
    "title": "Representative Sampling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/F2",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Representative Sampling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/F1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/E3",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/E2",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "The Beaver's Problem - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/E1",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Magic Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/D3",
    "difficulty": 2100,
    "tags": []
  },
  {
    "title": "Magic Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/D2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Magic Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/D1",
    "difficulty": 1500,
    "tags": []
  },
  {
    "title": "Smart Beaver and Resolving Collisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/C3",
    "difficulty": 2000,
    "tags": []
  },
  {
    "title": "Smart Beaver and Resolving Collisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/C2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "title": "Smart Beaver and Resolving Collisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/C1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Greedy Merchants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/B3",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "Greedy Merchants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/B2",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Greedy Merchants",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/B1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "title": "Educational Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/A3",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Educational Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/A2",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Educational Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/178/A1",
    "difficulty": 1000,
    "tags": []
  },
  {
    "title": "Fibonacci Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/G2",
    "difficulty": 2600,
    "tags": [
      "matrices",
      "strings"
    ]
  },
  {
    "title": "Fibonacci Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/G1",
    "difficulty": 2400,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Script Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/F2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "title": "Script Generation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/F1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "title": "Space Voyage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/E2",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Space Voyage",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/E1",
    "difficulty": 1700,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Encrypting Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/D2",
    "difficulty": 1500,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Encrypting Messages",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/D1",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/C2",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/C1",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Rectangular Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/B2",
    "difficulty": 1200,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Rectangular Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/B1",
    "difficulty": 1000,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Good Matrix Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/A2",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Good Matrix Elements",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/177/A1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Archaeology",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/176/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Hyper String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/176/D",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Playing with Superglue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/176/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "title": "Word Cut",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/176/B",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Trading Business",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/176/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Gnomes of Might and Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "title": "Power Defence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dp",
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Plane of Tanks: Duel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Geometry Horse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Plane of Tanks: Pro",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Robot Bicorn Attack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/175/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Range Increments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/174/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "File List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/174/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Problem About Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/174/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Camping Groups",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/173/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Deputies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/173/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Spiral Maximum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/173/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Chamber of Secrets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/173/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "title": "Rock-Paper-Scissors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/173/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "BHTML+BCSS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/172/E",
    "difficulty": 2200,
    "tags": [
      "*special",
      "dfs and similar",
      "expression parsing"
    ]
  },
  {
    "title": "Calendar Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/172/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "title": "Bus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/172/C",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Pseudorandom Sequence Period",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/172/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Phone Code",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/172/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "A polyline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/H",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Mysterious numbers - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/G",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "ucyhf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/F",
    "difficulty": 1600,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "MYSTERIOUS LANGUAGE",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Broken checker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/D",
    "difficulty": 1300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "title": "A Piece of Cake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/C",
    "difficulty": 2000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Star",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "title": "Mysterious numbers - 1",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/171/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "title": "Replacing Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/169/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Chores",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/169/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Wizards and Minimal Spell",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/168/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Wizards and Demonstration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/168/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Wizards and Bets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/167/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Wizards and Roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/167/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Wizards and Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/167/C",
    "difficulty": 2300,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Wizards and Huge Prize",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/167/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Wizards and Trolleybuses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/167/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Tetrahedron",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/166/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Shoe Store",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/166/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Median",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/166/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Polygons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/166/B",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Rank List",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/166/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Compatible Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/165/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "title": "Beard Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/165/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Another Problem on Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/165/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Burning Midnight Oil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/165/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Supercentral Point",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/165/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Polycarpus and Tasks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/164/E",
    "difficulty": 3100,
    "tags": []
  },
  {
    "title": "Minimum Diameter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/164/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "title": "Machine Programming",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/164/C",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Ancient Berland Hieroglyphs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/164/B",
    "difficulty": 2000,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "Variable, or There and Back Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/164/A",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "e-Government",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/163/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "title": "Large Refrigerator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/163/D",
    "difficulty": 2900,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Conveyor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/163/C",
    "difficulty": 2100,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Lemmings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/163/B",
    "difficulty": 2000,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Substring and Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/163/A",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/J",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Truncatable primes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/I",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Alternating case",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/H",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Non-decimal sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/G",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Factorial zeros",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/F",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "HQ9+",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Remove digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/D",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Prime factorization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/C",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Binary notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Pentagonal numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/162/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Polycarpus the Safecracker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/161/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Distance in Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/161/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "title": "Abracadabra",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/161/C",
    "difficulty": 2400,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "title": "Discounts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/161/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Dress'em in Vests!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/161/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Buses and People",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/160/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Edges in MST",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/160/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Find Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/160/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Unlucky Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/160/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Twins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/160/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Zebra Tower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/159/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Palindrome pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/159/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "String Manipulation 1.0",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/159/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "title": "Matchmaker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/159/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Friends or Not",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/159/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Phone Talks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/158/E",
    "difficulty": 1900,
    "tags": [
      "*special",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Ice Sculptures",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/158/D",
    "difficulty": 1300,
    "tags": [
      "*special",
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Cd and pwd commands",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/158/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Taxi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/158/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Next Round",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/158/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Trace",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/157/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Game Outcome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/157/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Mrs. Hudson's Pancakes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/156/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Clues",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/156/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "graphs"
    ]
  },
  {
    "title": "Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/156/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Suspects",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/156/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Message",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/156/A",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Combination",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/155/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "I_love_\\%username\\%",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/155/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Martian Colony",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/154/E",
    "difficulty": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Flatland Fencing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/154/D",
    "difficulty": 2400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Double Profiles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/154/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "hashing",
      "sortings"
    ]
  },
  {
    "title": "Colliders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/154/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Hometask",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/154/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Euclidean Distance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/153/E",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Date Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/153/D",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Caesar Cipher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/153/C",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Binary notation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/153/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "A + B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/153/A",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Garden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/152/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Frames",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/152/D",
    "difficulty": 2600,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Pocket Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/152/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Steps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/152/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Marks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/152/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Phone Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/151/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Soft Drinking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/151/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Freezing with Style",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/150/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "title": "Mission Impassable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/150/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "Smart Cheater",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/150/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Quantity of Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/150/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "title": "Win or Freeze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/150/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Martian Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/149/E",
    "difficulty": 2300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Coloring Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/149/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Division into Teams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/149/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Martian Clock",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/149/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Business trip",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/149/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Porcelain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/148/E",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Bag of mice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/148/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Terse princess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/148/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Escape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/148/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Insomnia cure",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/148/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Smile House",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/147/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "graphs",
      "matrices"
    ]
  },
  {
    "title": "Punctuation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/147/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Lucky Mask",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/146/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lucky Ticket",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/146/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lucky Queries",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/145/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Lucky Pair",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/145/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Lucky Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/145/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Lucky Number 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/145/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Lucky Conversion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/145/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Competition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/144/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Missile Silos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/144/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Anagram Search",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/144/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Meeting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/144/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Arrival of the General",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/144/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Help Kingdom of Far Far Away 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/143/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Help Vasilisa the Wise 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/143/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Help Greg the Dwarf 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/142/E",
    "difficulty": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Help Shrek and Donkey 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/142/D",
    "difficulty": 2600,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Help Caretaker",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/142/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Help General",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/142/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Help Farmer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/142/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Clearing Up",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/141/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Take-off Ramps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/141/D",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/141/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Hopscotch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/141/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Amusing Joke",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/141/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "New Year Snowflake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/F",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "New Year Garland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "New Year Contest",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "New Year Snowmen",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "New Year Cards",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "New Year Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/140/A",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Wallpaper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/139/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Petr and Book",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/139/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Hellish Constraints",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/138/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "title": "World of Darkraft",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/138/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Mushroom Gnomes - 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/138/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "probabilities",
      "sortings"
    ]
  },
  {
    "title": "Digits Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/138/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Literature Lesson",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/138/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Last Chance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/137/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Palindromes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/137/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "title": "History",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/137/C",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/137/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Postcards and photos",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/137/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ternary Logic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/136/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/136/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Weak Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/135/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/135/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Zero-One",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/135/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Rectangle and Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/135/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Replacement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/135/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Swaps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/134/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Pairs of Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/134/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Average Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/134/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Unary",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/133/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "HQ9+",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/133/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bits of merry old England",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/132/E",
    "difficulty": 2700,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "title": "Constants in the language of Shakespeare",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/132/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Logo Turtle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/132/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Piet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/132/B",
    "difficulty": 2100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Turing Tape",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/132/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Present to Mom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "title": "Yet Another Task with Queens",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/E",
    "difficulty": 1700,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Subway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "The World is a Theatre",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Opposites Attract",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "cAPS lOCK",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/131/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Date calculation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/J",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Array sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/I",
    "difficulty": 2300,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "title": "Balanced brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/H",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "CAPS LOCK ON",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/G",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Prime factorization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/F",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Tribonacci numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/E",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Exponentiation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/D",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Decimal sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Gnikool Ssalg",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Hexagonal numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/130/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Students and Shoelaces",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/129/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Cookies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/129/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Birthday",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/128/E",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/128/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Games with Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/128/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/128/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Statues",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/128/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "title": "Canvas Frames",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/127/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Wasted Time",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/127/A",
    "difficulty": 900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Pills",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/126/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "flows"
    ]
  },
  {
    "title": "Fibonacci Sums",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/126/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "E-reader Display",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/126/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/126/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "title": "Hot Bath",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/126/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "title": "MST Company",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/125/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "title": "Two progressions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/125/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Hobbits' Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/125/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Simple XML",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/125/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Measuring Lengths in Baden",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/125/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/124/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "title": "The number of positions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/124/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Maze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/123/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/123/D",
    "difficulty": 2300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "title": "Brackets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/123/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Squares",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/123/B",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Prime Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/123/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "number theory",
      "strings"
    ]
  },
  {
    "title": "Lucky Substring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/122/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lucky Division",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/122/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Lucky Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/121/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Lucky Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/121/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Lucky Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/121/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "title": "Lucky Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/121/B",
    "difficulty": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Lucky Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/121/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Minimum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/J",
    "difficulty": 1900,
    "tags": [
      "divide and conquer",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Luck is in Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/I",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Brevity is Soul of Wit",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/H",
    "difficulty": 1800,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "title": "Boom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/G",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Spiders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/F",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Put Knight!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/E",
    "difficulty": 1400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "title": "Three Sons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/D",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Winnie-the-Pooh and honey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Quiz League",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Elevator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/120/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Alternative Reality",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/119/E",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "String Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/119/D",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Education Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/119/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Before Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/119/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Epic Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/119/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bertown roads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/118/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Caesar's Legions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/118/D",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Fancy Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/118/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Present from Lena",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/118/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "String Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/118/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tree or not Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/117/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Not Quick Transformation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/117/D",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "math"
    ]
  },
  {
    "title": "Cycle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/117/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Very Interesting Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/117/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "title": "Elevator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/117/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Little Pigs and Wolves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/116/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Tram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/116/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Linear Kingdom Races",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/115/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Unambiguous Arithmetic Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/115/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "expression parsing"
    ]
  },
  {
    "title": "Plumber",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/115/C",
    "difficulty": 2200,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Lawnmower",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/115/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/115/A",
    "difficulty": 900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "PFAST Inc.",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/114/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs"
    ]
  },
  {
    "title": "Cifera",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/114/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Sleeping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/113/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Museum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/113/D",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "title": "Double Happiness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/113/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Petr#",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/113/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Grammar Lessons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/113/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Petya and Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/112/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Petya and Strings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/112/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Petya and Rectangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/111/E",
    "difficulty": 2900,
    "tags": []
  },
  {
    "title": "Petya and Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/111/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Petya and Spiders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/111/C",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Petya and Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/111/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory"
    ]
  },
  {
    "title": "Petya and Inequiations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/111/A",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Lucky String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/110/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "title": "Nearly Lucky Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/110/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lucky Interval",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/109/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Lucky Sorting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/109/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Lucky Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/109/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "title": "Lucky Probability",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/109/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "title": "Lucky Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/109/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Datatypes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/108/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "title": "Palindromic Times",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/108/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Darts",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/107/E",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "probabilities"
    ]
  },
  {
    "title": "Crime Management",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/107/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "title": "Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/107/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Basketball Team",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/107/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Dorm Water Supply",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/107/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Space Rescuers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/106/E",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Treasure Island",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/106/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Buns",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/106/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Choosing Laptop",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/106/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Card Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/106/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Lift and Throw",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/105/E",
    "difficulty": 2500,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Entertaining Geodetics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/105/D",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "title": "Item World",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/105/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Dark Assembly",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/105/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "title": "Transmigration",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/105/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Blackjack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/104/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Buying Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/103/E",
    "difficulty": 2900,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "title": "Time to Raid Cowavans",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/103/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Russian Roulette",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/103/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Cthulhu",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/103/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Testing Pants for Sadness",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/103/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sum of Digits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/102/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Clothes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/102/A",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Candies and Stones",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/101/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Castle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/101/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Vectors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/101/C",
    "difficulty": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Buses",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/101/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Homework",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/101/A",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Interval Coloring",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/J",
    "difficulty": 2400,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Rotation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/I",
    "difficulty": 1500,
    "tags": [
      "*special",
      "geometry",
      "math"
    ]
  },
  {
    "title": "Battleship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/H",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Name the album",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/G",
    "difficulty": 1800,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Polynom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/F",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Lamps in a Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/E",
    "difficulty": 1600,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "World of Mouth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "title": "A+B",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Friendly Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Carpeting the Room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/100/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Help Chef Gerasim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/99/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Help Far Away Kingdom",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/99/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Help Shrek and Donkey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/98/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Help Monks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/98/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Help Greg the Dwarf",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/98/C",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "title": "Help King",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/98/B",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "title": "Help Victoria the Wise",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/98/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Leaders",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/97/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Robot in Basement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/97/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Winning Strategy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/97/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Superset",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/97/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "title": "Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/97/A",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Lucky Numbers (easy)",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/96/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "title": "Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/96/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Lucky Country",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/95/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Horse Races",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/95/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Volleyball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/95/C",
    "difficulty": 1900,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "title": "Lucky Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/95/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Hockey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/95/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/94/B",
    "difficulty": 1300,
    "tags": [
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Restoring Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/94/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Lostborn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/93/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Flags",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/93/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Azembler",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/93/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "End of Exams",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/93/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Frames",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/93/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Binary Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/92/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Chips",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/92/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Igloo Skyscraper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/91/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Grocer's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/91/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Ski Base",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/91/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/91/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "title": "Newspaper Headline",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/91/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "African Crossword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/90/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Cableway",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/90/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Fire and Ice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/89/E",
    "difficulty": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Space mines",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/89/D",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Chip Play",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/89/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Widget Library",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/89/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "expression parsing",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Robbery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/89/A",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Keyboard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/88/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Chord",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/88/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Mogohu-Rea Idol",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/87/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Beautiful Road",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/87/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Interesting Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/87/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games",
      "math"
    ]
  },
  {
    "title": "Vasya and Types",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/87/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Trains",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/87/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Long sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/86/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "math",
      "matrices"
    ]
  },
  {
    "title": "Powerful array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/86/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Genetic engineering",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/86/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "title": "Tetris revisited",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/86/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Reflection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/86/A",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Guard Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/85/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "dsu",
      "geometry",
      "graphs",
      "sortings"
    ]
  },
  {
    "title": "Sum of Medians",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/85/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Petya and Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/85/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Embassy Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/85/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "title": "Domino",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/85/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Biathlon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/84/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Toy Army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/84/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Two Subsequences",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/83/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/83/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Track",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/83/C",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Doctor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/83/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Magical Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/83/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Corridor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/82/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Two out of Three",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/82/D",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "General Mobilization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/82/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "title": "Sets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/82/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Double Cola",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/82/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/81/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Polycarp's Picture Gallery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/81/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Average Score",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/81/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "title": "Sequence Formatting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/81/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Plug-in",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/81/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Depression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/80/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Panoramix's Prediction",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/80/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Security System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/79/E",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/79/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "title": "Beaver",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/79/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "title": "Colorful Field",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/79/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Bus Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/79/A",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Evacuation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/78/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Archer's Shot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/78/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "title": "Beaver Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/78/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games",
      "number theory"
    ]
  },
  {
    "title": "Easter Eggs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/78/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Haiku",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/78/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Martian Food",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/77/E",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Domino Carpet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/77/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Beavermuncher-0xFF",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/77/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Falling Anvils",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/77/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Heroes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/77/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Tourist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/E",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Plus and xor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Mutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "title": "Mice",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/B",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "Gift",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/76/A",
    "difficulty": 2200,
    "tags": [
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "title": "Ship's Shortest Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/75/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "shortest paths"
    ]
  },
  {
    "title": "Big Maximum Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/75/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "title": "Modified GCD",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/75/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "title": "Facetook Priority Wall",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/75/B",
    "difficulty": 1500,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Life Without Zeros",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/75/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Shift It!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/74/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Hanger",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/74/D",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Chessboard Billiard",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/74/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory"
    ]
  },
  {
    "title": "Train",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/74/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "title": "Room Leader",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/74/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Plane of Tanks",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Morrowindows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/E",
    "difficulty": 2400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "FreeDiv",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "LionAge II",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Need For Brake",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "The Elder Trolls IV: Oblivon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/73/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Goofy Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/I",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Reverse It!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/H",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Fibonacci army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/G",
    "difficulty": 1000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "title": "Oil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/F",
    "difficulty": 1900,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Ali goes shopping",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "strings"
    ]
  },
  {
    "title": "Perse-script",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/D",
    "difficulty": 2300,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "title": "Extraordinarily Nice Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/C",
    "difficulty": 1200,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "title": "INI-file",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/B",
    "difficulty": 2200,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Goshtasp, Vishtasp and Eidi",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/72/A",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "title": "Nuclear Fusion",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/71/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Solitaire",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/71/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Round Table Knights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/71/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Progress Bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/71/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Way Too Long Words",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/71/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Information Reform",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/70/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "title": "Professor's task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/70/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "title": "Lucky Tickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/70/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "title": "Text Messaging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/70/B",
    "difficulty": 1600,
    "tags": [
      "expression parsing",
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Cookies",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/70/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Subsegments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/69/E",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Dot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/69/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/69/C",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/69/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Young Physicist",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/69/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Contact",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/68/E",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Half-decay tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/68/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Synchrophasotron",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/68/C",
    "difficulty": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Energy exchange",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/68/B",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Irrational problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/68/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Save the City!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/67/E",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Optical Experiment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/67/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Sequence of Balls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/67/C",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Restoration of the Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/67/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Partial Teacher",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/67/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Petya and Post",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/66/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Petya and His Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/66/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Petya and File System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/66/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Petya and Countryside",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/66/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Petya and Java",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/66/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Harry Potter and Moving Staircases",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/65/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Harry Potter and the Sorting Hat",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/65/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "hashing"
    ]
  },
  {
    "title": "Harry Potter and the Golden Snitch",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/65/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Harry Potter and the History of Magic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/65/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Harry Potter and Three Spells",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/65/A",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Sort the Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/I",
    "difficulty": 2400,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "title": "Table Bowling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/H",
    "difficulty": 2300,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "title": "Path Canonization",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/G",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "title": "Domain",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "title": "Prime Segment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "title": "Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "title": "Factorial",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/64/A",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "title": "Sweets Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/63/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "games",
      "implementation"
    ]
  },
  {
    "title": "Dividing Island",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/63/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Bulls and Cows",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/63/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Settlers' Training",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/63/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sinking Ship",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/63/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "World Evil",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/62/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "title": "Wormhouse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/62/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Inquisition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/62/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Tyndex.Brome",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/62/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "A Student's Dream",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/62/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Enemy is weak",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/61/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "title": "Eternal Victory",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/61/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "title": "Capture Valerian",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/61/C",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Hard Work",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/61/B",
    "difficulty": 1300,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Ultra-Fast Mathematician",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/61/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mushroom Gnomes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/60/E",
    "difficulty": 2600,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "title": "Savior",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/60/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dsu",
      "math"
    ]
  },
  {
    "title": "Mushroom Strife",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/60/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "title": "Serial Time!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/60/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "title": "Where Are My Flakes?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/60/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Shortest Path",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/59/E",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Team Arrangement",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/59/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Title",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/59/C",
    "difficulty": 1600,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "title": "Fortune Telling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/59/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "title": "Word",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/59/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Expression",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/58/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Calendar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/58/D",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/58/C",
    "difficulty": 1800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/58/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Chat room",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/58/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "title": "Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/57/E",
    "difficulty": 3000,
    "tags": [
      "math",
      "shortest paths"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/57/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Array",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/57/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "title": "Martian Architecture",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/57/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Square Earth?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/57/A",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Domino Principle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/56/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Changing a String",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/56/D",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Corporation Mail",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/56/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Spoilt Permutation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/56/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Bar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/56/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Very simple problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/55/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "title": "Beautiful numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/55/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Pie or die",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/55/C",
    "difficulty": 1900,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Smallest number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/55/B",
    "difficulty": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Flea travel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/55/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Vacuum Сleaner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/54/E",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Writing a Song",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/54/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "title": "First Digit Law",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/54/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Cutting Jigsaw Puzzle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/54/B",
    "difficulty": 1800,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Presents",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/54/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Dead Ends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/53/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Physical Education",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/53/D",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Little Frog",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/53/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Blog Photo",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/53/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "title": "Autocomplete",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/53/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Circular RMQ",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/52/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Right Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/52/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "123-sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/52/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Caterpillar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/F",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Pentagon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "graphs",
      "matrices"
    ]
  },
  {
    "title": "Geometrical problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/D",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Three Base Stations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "title": "bHTML Tables Analisys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/B",
    "difficulty": 1700,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "title": "Cheaterius's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/51/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Square Equation Roots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/50/E",
    "difficulty": 2300,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Bombing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/50/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Happy Farm 5",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/50/C",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Choosing Symbol Pairs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/50/B",
    "difficulty": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Domino piling",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/50/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "title": "Common ancestor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/49/E",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/49/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Disposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/49/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/49/B",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Sleuth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/49/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Black and White",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/H",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Galaxy Union",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/G",
    "difficulty": 2700,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Snow sellers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/F",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Ivan the Fool VS Gorynych the Dragon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "title": "Permutations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "The Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/C",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Land Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Rock-paper-scissors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/48/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "schedules"
    ]
  },
  {
    "title": "Cannon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/47/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "title": "Safe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/47/D",
    "difficulty": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Crossword",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/47/C",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Coins",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/47/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Triangular numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/47/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Emperor's Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/G",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "Hercule Poirot Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/F",
    "difficulty": 2300,
    "tags": [
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Comb",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "title": "Parking Lot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Hamsters and Tigers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/C",
    "difficulty": 1600,
    "tags": [
      "two pointers"
    ]
  },
  {
    "title": "T-shirts from Sponsor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ball Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/46/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "title": "Planting Trees",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/J",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "TCMCF+++",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/I",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Road Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/H",
    "difficulty": 2100,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Prime Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/G",
    "difficulty": 2200,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Goats and Wolves",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/F",
    "difficulty": 2500,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Director",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Event Dates",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "meet-in-the-middle",
      "sortings"
    ]
  },
  {
    "title": "Dancing Lessons",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/C",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "School",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "dsu"
    ]
  },
  {
    "title": "Codecraft III",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/45/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Triminoes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/J",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Toys",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/I",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "title": "Phone Number",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/H",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Shooting Gallery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "BerPaint",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "title": "Anfisa the Monkey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/E",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Hyperdrive",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/D",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Holidays",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Cola",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Indian Summer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/44/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Race",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/43/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "title": "Journey",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/43/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "title": "Lucky Tickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/43/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/43/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Football",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/43/A",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Baldman and the military",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/42/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Strange town",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/42/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "title": "Safe cracking",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/42/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Game of chess unfinished",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/42/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Guilty --- to the kitchen!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/42/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "3-cycles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/41/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "title": "Pawn",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/41/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Email address",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/41/C",
    "difficulty": 1300,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Martian Dollar",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/41/B",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Translation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/41/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Number Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/40/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "title": "Interesting Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/40/D",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Berland Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/40/C",
    "difficulty": 2300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Repaintings",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/40/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Find Color",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/40/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Testing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/K",
    "difficulty": 2600,
    "tags": []
  },
  {
    "title": "Spelling Check",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/J",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Tram",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/I",
    "difficulty": 2500,
    "tags": []
  },
  {
    "title": "Multiplication Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/H",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Inverse Function",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/G",
    "difficulty": 2400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Pacifist frogs",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/F",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "What Has Dirichlet Got to Do with That?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "title": "Cubical Planet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/D",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Moon Craters",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Company Income Growth",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "C*++ Calculations",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/39/A",
    "difficulty": 2000,
    "tags": [
      "expression parsing",
      "greedy"
    ]
  },
  {
    "title": "The Great Marathon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/H",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/G",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Smart Boy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "strings"
    ]
  },
  {
    "title": "Let's Go Rolling!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Vasya the Architect",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/D",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Blinds",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/C",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Army",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/38/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Trial for Chief",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/37/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Lesson Timetable",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/37/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "title": "Old Berland Language",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/37/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "title": "Computer Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/37/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Towers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/37/A",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "title": "Two Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/36/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "New Game with a Chess Piece",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/36/D",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Bowls",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/36/C",
    "difficulty": 2200,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Fractal",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/36/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Extra-terrestrial Intelligence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/36/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Parade",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/35/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Animals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/35/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Fire Again",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/35/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "title": "Warehouse",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/35/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Shell Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/35/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Collisions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/34/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Road Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/34/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "title": "Page Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/34/C",
    "difficulty": 1300,
    "tags": [
      "expression parsing",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Sale",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/34/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Reconnaissance 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/34/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Helper",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/33/E",
    "difficulty": 2600,
    "tags": []
  },
  {
    "title": "Knights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/33/D",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "title": "Wonderful Randomized Sum",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/33/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "String Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/33/B",
    "difficulty": 1800,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "title": "What is for dinner?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/33/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Hide-and-Seek",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/32/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Constellation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/32/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Flea",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/32/C",
    "difficulty": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Borze",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/32/B",
    "difficulty": 800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Reconnaissance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/32/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "TV Game",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/31/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/31/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "title": "Schedule",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/31/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Sysadmin Bob",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/31/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Worms Evolution",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/31/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Tricky and Clever Password",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/30/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "title": "King's Problem?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/30/D",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "greedy"
    ]
  },
  {
    "title": "Shooting Gallery",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/30/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Codeforces World Finals",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/30/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Accounting",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/30/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Quarrel",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/29/E",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Ant on the Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/29/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "title": "Mail Stamps",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/29/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Traffic Lights",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/29/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Spit Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/29/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "DravDe saves the world",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/28/E",
    "difficulty": 2800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Don't fear, DravDe is kind",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/28/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "title": "Bath Queue",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/28/C",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "pSort",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/28/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Bender Problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/28/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Number With The Given Amount Of Divisors",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/27/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "title": "Ring Road 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/27/D",
    "difficulty": 2200,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "Unordered Subsequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/27/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Tournament",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/27/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "title": "Next Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/27/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Multithreading",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/26/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Tickets",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/26/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Parquet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/26/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "title": "Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/26/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Almost Prime",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/26/A",
    "difficulty": 900,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/25/E",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Roads not only in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/25/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Roads in Berland",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/25/C",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Phone numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/25/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "IQ test",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/25/A",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Berland collider",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/24/E",
    "difficulty": 2300,
    "tags": [
      "binary search"
    ]
  },
  {
    "title": "Broken robot",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/24/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Sequence of points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/24/C",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "F1 Champions",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/24/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Ring road",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/24/A",
    "difficulty": 1400,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Tree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/23/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Tetragon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/23/D",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Oranges and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/23/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "title": "Party",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/23/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "title": "You're Given a String...",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/23/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "title": "Scheme",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/22/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "title": "Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/22/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "System Administrator",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/22/C",
    "difficulty": 1700,
    "tags": [
      "graphs"
    ]
  },
  {
    "title": "Bargaining Table",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/22/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Second Order Statistics",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/22/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "title": "Traveling Graph",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/21/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "title": "Stripe 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/21/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Intersection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/21/B",
    "difficulty": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Jabber ID",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/21/A",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Dijkstra?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/20/C",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "title": "Equation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/20/B",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "title": "BerOS file system",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/20/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Fairy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/19/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "title": "Points",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/19/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Deletion of Repeats",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/19/C",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "title": "Checkout Assistant",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/19/B",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "World Football Cup",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/19/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Flag 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/18/E",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Seller Bob",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/18/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "Stripe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/18/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "title": "Platforms",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/18/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/18/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Palisection",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/17/E",
    "difficulty": 2900,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Notepad",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/17/D",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Balance",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/17/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Hierarchy",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/17/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Noldbach problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/17/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "title": "Fish",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/16/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "title": "Logging",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/16/D",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Monitor",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/16/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "title": "Burglar and Matches",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/16/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Flag",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/16/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/15/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "title": "Map",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/15/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Industrial Nim",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/15/C",
    "difficulty": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "title": "Laser",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/15/B",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Cottage Village",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/15/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Camels",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/14/E",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Two Paths",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/14/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Four Segments",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/14/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Young Photographer",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/14/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Letter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/14/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Holes",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/13/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "title": "Triangles",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/13/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "title": "Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/13/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Letter A",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/13/B",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/13/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Start of the session",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/12/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "Ball",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/12/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "title": "Fruits",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/12/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Correct Solution?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/12/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "title": "Super Agent",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/12/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Forward, march!",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/11/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "title": "A Simple Task",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/11/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "graphs"
    ]
  },
  {
    "title": "How Many Squares?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/11/C",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Jumping Jack",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/11/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "title": "Increasing Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/11/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Greedy Change",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/10/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "title": "LCIS",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/10/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "title": "Digital Root",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/10/C",
    "difficulty": 2000,
    "tags": [
      "number theory"
    ]
  },
  {
    "title": "Cinema Cashier",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/10/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "title": "Power Consumption Calculation",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/10/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Interestring graph and Apples",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/9/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "title": "How many trees?",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/9/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "title": "Hexadecimal's Numbers",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/9/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "title": "Running Student",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/9/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "title": "Die Roll",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/9/A",
    "difficulty": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "title": "Beads",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/8/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "title": "Two Friends",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/8/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "title": "Looking for Order",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/8/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "title": "Obsession with Robots",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/8/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "title": "Train and Peter",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/8/A",
    "difficulty": 1200,
    "tags": [
      "strings"
    ]
  },
  {
    "title": "Defining Macros",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/7/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "title": "Palindrome Degree",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/7/D",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "title": "Line",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/7/C",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "title": "Memory Manager",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/7/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Kalevitch and Chess",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/7/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "title": "Exposition",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/6/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "title": "Lizards and Basements 2",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/6/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "title": "Alice, Bob and Chocolate",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/6/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "title": "President's Office",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/6/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Triangle",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/6/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "title": "Bindian Signalizing",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/5/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "title": "Follow Traffic Rules",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/5/D",
    "difficulty": 2100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Longest Regular Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/5/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "title": "Center Alignment",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/5/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "title": "Chat Servers Outgoing Traffic",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/5/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "title": "Mysterious Present",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/4/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "title": "Registration System",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/4/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Before an Exam",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/4/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "title": "Watermelon",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/4/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "title": "Least Cost Bracket Sequence",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/3/D",
    "difficulty": 2600,
    "tags": [
      "greedy"
    ]
  },
  {
    "title": "Tic-tac-toe",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/3/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "games",
      "implementation"
    ]
  },
  {
    "title": "Lorry",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/3/B",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "title": "Shortest path of the king",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/3/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "shortest paths"
    ]
  },
  {
    "title": "Commentator problem",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2/C",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "title": "The least round way",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "title": "Winner",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/2/A",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "title": "Ancient Berland Circus",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1/C",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "title": "Spreadsheet",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "title": "Theatre Square",
    "platform": "Codeforces",
    "url": "https://codeforces.com/problemset/problem/1/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  }
]