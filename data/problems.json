[
  {
    "platform": "Codeforces",
    "title": "2162H. Beautiful Problem",
    "url": "https://codeforces.com/problemset/problem/2162/H",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162G. Beautiful Tree",
    "url": "https://codeforces.com/problemset/problem/2162/G",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162F. Beautiful Intervals",
    "url": "https://codeforces.com/problemset/problem/2162/F",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162E. Beautiful Palindromes",
    "url": "https://codeforces.com/problemset/problem/2162/E",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162D. Beautiful Permutation",
    "url": "https://codeforces.com/problemset/problem/2162/D",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162C. Beautiful XOR",
    "url": "https://codeforces.com/problemset/problem/2162/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162B. Beautiful String",
    "url": "https://codeforces.com/problemset/problem/2162/B",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2162A. Beautiful Average",
    "url": "https://codeforces.com/problemset/problem/2162/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2160C. Reverse XOR",
    "url": "https://codeforces.com/problemset/problem/2160/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2160B. Distinct Elements",
    "url": "https://codeforces.com/problemset/problem/2160/B",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2160A. MEX Partition",
    "url": "https://codeforces.com/problemset/problem/2160/A",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159F. Grand Finale: Snakes",
    "url": "https://codeforces.com/problemset/problem/2159/F",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159E. Super-Short-Polynomial-San",
    "url": "https://codeforces.com/problemset/problem/2159/E",
    "difficulty": "N/A",
    "tags": [
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159D2. Inverse Minimum Partition (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2159/D2",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159D1. Inverse Minimum Partition (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2159/D1",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "geometry",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159C. Twin Polynomials",
    "url": "https://codeforces.com/problemset/problem/2159/C",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "graph matchings",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159B. Rectangles",
    "url": "https://codeforces.com/problemset/problem/2159/B",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2159A. MAD Interactive Problem",
    "url": "https://codeforces.com/problemset/problem/2159/A",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155F. Juan's Colorful Tree",
    "url": "https://codeforces.com/problemset/problem/2155/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dfs and similar",
      "dsu",
      "graphs",
      "graphs",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155E. Mimo & Yuyu",
    "url": "https://codeforces.com/problemset/problem/2155/E",
    "difficulty": 2200,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155D. Batteries",
    "url": "https://codeforces.com/problemset/problem/2155/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "graphs",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155C. The Ancient Wizards' Capes",
    "url": "https://codeforces.com/problemset/problem/2155/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155B. Abraham's Great Escape",
    "url": "https://codeforces.com/problemset/problem/2155/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2155A. El fucho",
    "url": "https://codeforces.com/problemset/problem/2155/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154F2. Bombing (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2154/F2",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154F1. Bombing (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2154/F1",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154E. No Mind To Think",
    "url": "https://codeforces.com/problemset/problem/2154/E",
    "difficulty": "N/A",
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154D. Catshock",
    "url": "https://codeforces.com/problemset/problem/2154/D",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154C2. No Cost Too Great (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2154/C2",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154C1. No Cost Too Great (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2154/C1",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154B. Make it Zigzag",
    "url": "https://codeforces.com/problemset/problem/2154/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2154A. Notelock",
    "url": "https://codeforces.com/problemset/problem/2154/A",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153F. Odd Queries on Odd Array",
    "url": "https://codeforces.com/problemset/problem/2153/F",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153E. Zero Trailing Factorial",
    "url": "https://codeforces.com/problemset/problem/2153/E",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153D. Not Alone",
    "url": "https://codeforces.com/problemset/problem/2153/D",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153C. Symmetrical Polygons",
    "url": "https://codeforces.com/problemset/problem/2153/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153B. Bitwise Reversion",
    "url": "https://codeforces.com/problemset/problem/2153/B",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2153A. Circle of Apple Trees",
    "url": "https://codeforces.com/problemset/problem/2153/A",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152H2. Victorious Coloring (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2152/H2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152H1. Victorious Coloring (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2152/H1",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152G. Query Jungle",
    "url": "https://codeforces.com/problemset/problem/2152/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152F. Triple Attack",
    "url": "https://codeforces.com/problemset/problem/2152/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152E. Monotone Subsequence",
    "url": "https://codeforces.com/problemset/problem/2152/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152D. Division Versus Addition",
    "url": "https://codeforces.com/problemset/problem/2152/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152C. Triple Removal",
    "url": "https://codeforces.com/problemset/problem/2152/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152B. Catching the Krug",
    "url": "https://codeforces.com/problemset/problem/2152/B",
    "difficulty": 1300,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2152A. Increase or Smash",
    "url": "https://codeforces.com/problemset/problem/2152/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2151C. Incremental Stay",
    "url": "https://codeforces.com/problemset/problem/2151/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2151A. Incremental Subarray",
    "url": "https://codeforces.com/problemset/problem/2151/A",
    "difficulty": 800,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150G. Counting Is Fun: The Finale",
    "url": "https://codeforces.com/problemset/problem/2150/G",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150F. Cycle Closing",
    "url": "https://codeforces.com/problemset/problem/2150/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150E2. Hidden Single (Version 2)",
    "url": "https://codeforces.com/problemset/problem/2150/E2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150E1. Hidden Single (Version 1)",
    "url": "https://codeforces.com/problemset/problem/2150/E1",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "interactive",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150D. Attraction Theory",
    "url": "https://codeforces.com/problemset/problem/2150/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150C. Limited Edition Shop",
    "url": "https://codeforces.com/problemset/problem/2150/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150B. Grid Counting",
    "url": "https://codeforces.com/problemset/problem/2150/B",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2150A. Incremental Path",
    "url": "https://codeforces.com/problemset/problem/2150/A",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149G. Buratsuta 3",
    "url": "https://codeforces.com/problemset/problem/2149/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149F. Nezuko in the Clearing",
    "url": "https://codeforces.com/problemset/problem/2149/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149E. Hidden Knowledge of the Ancients",
    "url": "https://codeforces.com/problemset/problem/2149/E",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149D. A and B",
    "url": "https://codeforces.com/problemset/problem/2149/D",
    "difficulty": 1200,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149C. MEX rose",
    "url": "https://codeforces.com/problemset/problem/2149/C",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149B. Unconventional Pairs",
    "url": "https://codeforces.com/problemset/problem/2149/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2149A. Be Positive",
    "url": "https://codeforces.com/problemset/problem/2149/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148G. Farmer John's Last Wish",
    "url": "https://codeforces.com/problemset/problem/2148/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148F. Gravity Falls",
    "url": "https://codeforces.com/problemset/problem/2148/F",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148E. Split",
    "url": "https://codeforces.com/problemset/problem/2148/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148D. Destruction of the Dandelion Fields",
    "url": "https://codeforces.com/problemset/problem/2148/D",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148C. Pacer",
    "url": "https://codeforces.com/problemset/problem/2148/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148B. Lasers",
    "url": "https://codeforces.com/problemset/problem/2148/B",
    "difficulty": 800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2148A. Sublime Sequence",
    "url": "https://codeforces.com/problemset/problem/2148/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147I2. Longest Increasing Path (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2147/I2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147I1. Longest Increasing Path (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2147/I1",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147H. Maxflow GCD Coloring",
    "url": "https://codeforces.com/problemset/problem/2147/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147G. Modular Tetration",
    "url": "https://codeforces.com/problemset/problem/2147/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147F. Exchange Queries",
    "url": "https://codeforces.com/problemset/problem/2147/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147E. Maximum OR Popcount",
    "url": "https://codeforces.com/problemset/problem/2147/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147D. Game on Array",
    "url": "https://codeforces.com/problemset/problem/2147/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147C. Rabbits",
    "url": "https://codeforces.com/problemset/problem/2147/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147B. Multiple Construction",
    "url": "https://codeforces.com/problemset/problem/2147/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2147A. Shortest Increasing Path",
    "url": "https://codeforces.com/problemset/problem/2147/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146F. Bubble Sort",
    "url": "https://codeforces.com/problemset/problem/2146/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146E. Yet Another MEX Problem",
    "url": "https://codeforces.com/problemset/problem/2146/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146D2. Max Sum OR (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2146/D2",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146D1. Max Sum OR (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2146/D1",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146C. Wrong Binary Search",
    "url": "https://codeforces.com/problemset/problem/2146/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146B. Merging the Sets",
    "url": "https://codeforces.com/problemset/problem/2146/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2146A. Equal Occurrences",
    "url": "https://codeforces.com/problemset/problem/2146/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145G. Cost of Coloring",
    "url": "https://codeforces.com/problemset/problem/2145/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145F. Long Journey",
    "url": "https://codeforces.com/problemset/problem/2145/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145E. Predicting Popularity",
    "url": "https://codeforces.com/problemset/problem/2145/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145D. Inversion Value of a Permutation",
    "url": "https://codeforces.com/problemset/problem/2145/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145C. Monocarp's String",
    "url": "https://codeforces.com/problemset/problem/2145/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145B. Deck of Cards",
    "url": "https://codeforces.com/problemset/problem/2145/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2145A. Candies for Nephews",
    "url": "https://codeforces.com/problemset/problem/2145/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144F. Bracket Groups",
    "url": "https://codeforces.com/problemset/problem/2144/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144E2. Looking at Towers (difficult version)",
    "url": "https://codeforces.com/problemset/problem/2144/E2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144E1. Looking at Towers (easy version)",
    "url": "https://codeforces.com/problemset/problem/2144/E1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144D. Price Tags",
    "url": "https://codeforces.com/problemset/problem/2144/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144C. Non-Descending Arrays",
    "url": "https://codeforces.com/problemset/problem/2144/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144B. Maximum Cost Permutation",
    "url": "https://codeforces.com/problemset/problem/2144/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2144A. Cut the Array",
    "url": "https://codeforces.com/problemset/problem/2144/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143F. Increasing Xor",
    "url": "https://codeforces.com/problemset/problem/2143/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143E. Make Good",
    "url": "https://codeforces.com/problemset/problem/2143/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143D2. Inversion Graph Coloring (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2143/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143D1. Inversion Graph Coloring (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2143/D1",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143C. Max Tree",
    "url": "https://codeforces.com/problemset/problem/2143/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143B. Discounts",
    "url": "https://codeforces.com/problemset/problem/2143/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2143A. All Lengths Subtraction",
    "url": "https://codeforces.com/problemset/problem/2143/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141I. Color the Tree",
    "url": "https://codeforces.com/problemset/problem/2141/I",
    "difficulty": 3500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141H. Merging Vertices in a Graph",
    "url": "https://codeforces.com/problemset/problem/2141/H",
    "difficulty": 2700,
    "tags": [
      "*special",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141G. Good Robot Paths",
    "url": "https://codeforces.com/problemset/problem/2141/G",
    "difficulty": 2800,
    "tags": [
      "*special",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141F. Array Reduction",
    "url": "https://codeforces.com/problemset/problem/2141/F",
    "difficulty": 2200,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141E. Perfect Cut",
    "url": "https://codeforces.com/problemset/problem/2141/E",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141D. Avoid Minimums",
    "url": "https://codeforces.com/problemset/problem/2141/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141C. Minimum on Subarrays",
    "url": "https://codeforces.com/problemset/problem/2141/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141B. Games",
    "url": "https://codeforces.com/problemset/problem/2141/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2141A. Furniture Store",
    "url": "https://codeforces.com/problemset/problem/2141/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140F. Sum Minimisation",
    "url": "https://codeforces.com/problemset/problem/2140/F",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140E2. Prime Gaming (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2140/E2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140E1. Prime Gaming (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2140/E1",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140D. A Cruel Segment's Thesis",
    "url": "https://codeforces.com/problemset/problem/2140/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140C. Ultimate Value",
    "url": "https://codeforces.com/problemset/problem/2140/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140B. Another Divisibility Problem",
    "url": "https://codeforces.com/problemset/problem/2140/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2140A. Shift Sort",
    "url": "https://codeforces.com/problemset/problem/2140/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2139B. Cake Collection",
    "url": "https://codeforces.com/problemset/problem/2139/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2139A. Maple and Multiplication",
    "url": "https://codeforces.com/problemset/problem/2139/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138F. Ode to the Bridge Builder",
    "url": "https://codeforces.com/problemset/problem/2138/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138E2. Determinant Construction (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2138/E2",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138E1. Determinant Construction (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2138/E1",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138D. Antiamuny and Slider Movement",
    "url": "https://codeforces.com/problemset/problem/2138/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138C2. Maple and Tree Beauty (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2138/C2",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "fft",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138C1. Maple and Tree Beauty (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2138/C1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138B. Antiamuny Wants to Learn Swap",
    "url": "https://codeforces.com/problemset/problem/2138/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2138A. Cake Assignment",
    "url": "https://codeforces.com/problemset/problem/2138/A",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137G. Cry Me a River",
    "url": "https://codeforces.com/problemset/problem/2137/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137F. Prefix Maximum Invariance",
    "url": "https://codeforces.com/problemset/problem/2137/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137E. Mexification",
    "url": "https://codeforces.com/problemset/problem/2137/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137D. Replace with Occurrences",
    "url": "https://codeforces.com/problemset/problem/2137/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137C. Maximum Even Sum",
    "url": "https://codeforces.com/problemset/problem/2137/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137B. Fun Permutation",
    "url": "https://codeforces.com/problemset/problem/2137/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2137A. Collatz Conjecture",
    "url": "https://codeforces.com/problemset/problem/2137/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2136B. Like the Bitset",
    "url": "https://codeforces.com/problemset/problem/2136/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2136A. In the Dream",
    "url": "https://codeforces.com/problemset/problem/2136/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135F. To the Infinity",
    "url": "https://codeforces.com/problemset/problem/2135/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135E2. Beyond the Palindrome (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135E1. Beyond the Palindrome (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E1",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135D2. From the Unknown (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135D1. From the Unknown (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D1",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135C. By the Assignment",
    "url": "https://codeforces.com/problemset/problem/2135/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135B. For the Champion",
    "url": "https://codeforces.com/problemset/problem/2135/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2135A. Against the Difference",
    "url": "https://codeforces.com/problemset/problem/2135/A",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134F. Permutation Oddness",
    "url": "https://codeforces.com/problemset/problem/2134/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134E. Power Boxes",
    "url": "https://codeforces.com/problemset/problem/2134/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134D. Sliding Tree",
    "url": "https://codeforces.com/problemset/problem/2134/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134C. Even Larger",
    "url": "https://codeforces.com/problemset/problem/2134/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134B. Add 0 or K",
    "url": "https://codeforces.com/problemset/problem/2134/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2134A. Painting With Two Colors",
    "url": "https://codeforces.com/problemset/problem/2134/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133F. Flint and Steel",
    "url": "https://codeforces.com/problemset/problem/2133/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133E. I Yearned For The Mines",
    "url": "https://codeforces.com/problemset/problem/2133/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133D. Chicken Jockey",
    "url": "https://codeforces.com/problemset/problem/2133/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133C. The Nether",
    "url": "https://codeforces.com/problemset/problem/2133/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133B. Villagers",
    "url": "https://codeforces.com/problemset/problem/2133/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2133A. Redstone?",
    "url": "https://codeforces.com/problemset/problem/2133/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132G. Famous Choreographer",
    "url": "https://codeforces.com/problemset/problem/2132/G",
    "difficulty": 2600,
    "tags": [
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132F. Rada and the Chamomile Valley",
    "url": "https://codeforces.com/problemset/problem/2132/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132E. Arithmetics Competition",
    "url": "https://codeforces.com/problemset/problem/2132/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132D. From 1 to Infinity",
    "url": "https://codeforces.com/problemset/problem/2132/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132C2. The Cunning Seller (hard version)",
    "url": "https://codeforces.com/problemset/problem/2132/C2",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132C1. The Cunning Seller (easy version)",
    "url": "https://codeforces.com/problemset/problem/2132/C1",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132B. The Secret Number",
    "url": "https://codeforces.com/problemset/problem/2132/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2132A. Homework",
    "url": "https://codeforces.com/problemset/problem/2132/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131H. Sea, You & copriMe",
    "url": "https://codeforces.com/problemset/problem/2131/H",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131G. Wafu!",
    "url": "https://codeforces.com/problemset/problem/2131/G",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131F. Unjust Binary Life",
    "url": "https://codeforces.com/problemset/problem/2131/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131E. Adjacent XOR",
    "url": "https://codeforces.com/problemset/problem/2131/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131D. Arboris Contractio",
    "url": "https://codeforces.com/problemset/problem/2131/D",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131C. Make it Equal",
    "url": "https://codeforces.com/problemset/problem/2131/C",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131B. Alternating Series",
    "url": "https://codeforces.com/problemset/problem/2131/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2131A. Lever",
    "url": "https://codeforces.com/problemset/problem/2131/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2130B. Pathless",
    "url": "https://codeforces.com/problemset/problem/2130/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2130A. Submission is All You Need",
    "url": "https://codeforces.com/problemset/problem/2130/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129F2. Top-K Tracker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F2",
    "difficulty": 3500,
    "tags": [
      "interactive",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129F1. Top-K Tracker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F1",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129E. Induced Subgraph Queries",
    "url": "https://codeforces.com/problemset/problem/2129/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129D. Permutation Blackhole",
    "url": "https://codeforces.com/problemset/problem/2129/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129C3. Interactive RBS (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C3",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dp",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129C2. Interactive RBS (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129C1. Interactive RBS (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129B. Stay or Mirror",
    "url": "https://codeforces.com/problemset/problem/2129/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2129A. Double Perspective",
    "url": "https://codeforces.com/problemset/problem/2129/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128F. Strict Triangle",
    "url": "https://codeforces.com/problemset/problem/2128/F",
    "difficulty": 3200,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128E2. Submedians (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128E1. Submedians (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128D. Sum of LDS",
    "url": "https://codeforces.com/problemset/problem/2128/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128C. Leftmost Below",
    "url": "https://codeforces.com/problemset/problem/2128/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128B. Deque Process",
    "url": "https://codeforces.com/problemset/problem/2128/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2128A. Recycling Center",
    "url": "https://codeforces.com/problemset/problem/2128/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127H. 23 Rises Again",
    "url": "https://codeforces.com/problemset/problem/2127/H",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "greedy",
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127G2. Inter Active (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G2",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "implementation",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127G1. Inter Active (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G1",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127F. Hamed and AghaBalaSar",
    "url": "https://codeforces.com/problemset/problem/2127/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127E. Ancient Tree",
    "url": "https://codeforces.com/problemset/problem/2127/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127D. Root was Built by Love, Broken by Destiny",
    "url": "https://codeforces.com/problemset/problem/2127/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127C. Trip Shopping",
    "url": "https://codeforces.com/problemset/problem/2127/C",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127B. Hamiiid, Haaamid... Hamid?",
    "url": "https://codeforces.com/problemset/problem/2127/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2127A. Mix Mex Max",
    "url": "https://codeforces.com/problemset/problem/2127/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126G2. Big Wins!  (hard version)",
    "url": "https://codeforces.com/problemset/problem/2126/G2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126G1. Big Wins! (easy version)",
    "url": "https://codeforces.com/problemset/problem/2126/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126F. 1-1-1, Free Tree!",
    "url": "https://codeforces.com/problemset/problem/2126/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126E. G-C-D, Unlucky!",
    "url": "https://codeforces.com/problemset/problem/2126/E",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126D. This Is the Last Time",
    "url": "https://codeforces.com/problemset/problem/2126/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126C. I Will Definitely Make It",
    "url": "https://codeforces.com/problemset/problem/2126/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126B. No Casino in the Mountains",
    "url": "https://codeforces.com/problemset/problem/2126/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2126A. Only One Digit",
    "url": "https://codeforces.com/problemset/problem/2126/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125F. Timofey and Docker",
    "url": "https://codeforces.com/problemset/problem/2125/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125E. Sets of Complementary Sums",
    "url": "https://codeforces.com/problemset/problem/2125/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125D. Segments Covering",
    "url": "https://codeforces.com/problemset/problem/2125/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125C. Count Good Numbers",
    "url": "https://codeforces.com/problemset/problem/2125/C",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125B. Left and Down",
    "url": "https://codeforces.com/problemset/problem/2125/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2125A. Difficult Contest",
    "url": "https://codeforces.com/problemset/problem/2125/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124I. Lexicographic Partition",
    "url": "https://codeforces.com/problemset/problem/2124/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124H. Longest Good Subsequence",
    "url": "https://codeforces.com/problemset/problem/2124/H",
    "difficulty": 3400,
    "tags": [
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124G. Maximise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124F2. Appending Permutations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124F1. Appending Permutations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F1",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124E. Make it Zero",
    "url": "https://codeforces.com/problemset/problem/2124/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124D. Make a Palindrome",
    "url": "https://codeforces.com/problemset/problem/2124/D",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124C. Subset Multiplication",
    "url": "https://codeforces.com/problemset/problem/2124/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124B. Minimise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2124A. Deranged Deletions",
    "url": "https://codeforces.com/problemset/problem/2124/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123G. Modular Sorting",
    "url": "https://codeforces.com/problemset/problem/2123/G",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123F. Minimize Fixed Points",
    "url": "https://codeforces.com/problemset/problem/2123/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123E. MEX Count",
    "url": "https://codeforces.com/problemset/problem/2123/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123D. Binary String Battle",
    "url": "https://codeforces.com/problemset/problem/2123/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123C. Prefix Min and Suffix Max",
    "url": "https://codeforces.com/problemset/problem/2123/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123B. Tournament",
    "url": "https://codeforces.com/problemset/problem/2123/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2123A. Blackboard Game",
    "url": "https://codeforces.com/problemset/problem/2123/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122G. Tree Parking",
    "url": "https://codeforces.com/problemset/problem/2122/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122F. Colorful Polygon",
    "url": "https://codeforces.com/problemset/problem/2122/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122E. Greedy Grid Counting",
    "url": "https://codeforces.com/problemset/problem/2122/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122D. Traffic Lights",
    "url": "https://codeforces.com/problemset/problem/2122/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122C. Manhattan Pairs",
    "url": "https://codeforces.com/problemset/problem/2122/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122B. Pile Shuffling",
    "url": "https://codeforces.com/problemset/problem/2122/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2122A. Greedy Grid",
    "url": "https://codeforces.com/problemset/problem/2122/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121H. Ice Baby",
    "url": "https://codeforces.com/problemset/problem/2121/H",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121G. Gangsta",
    "url": "https://codeforces.com/problemset/problem/2121/G",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121F. Yamakasi",
    "url": "https://codeforces.com/problemset/problem/2121/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121E. Sponsor of Your Problems",
    "url": "https://codeforces.com/problemset/problem/2121/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121D. 1709",
    "url": "https://codeforces.com/problemset/problem/2121/D",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121C. Those Who Are With Us",
    "url": "https://codeforces.com/problemset/problem/2121/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121B. Above the Clouds",
    "url": "https://codeforces.com/problemset/problem/2121/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2121A. Letter Home",
    "url": "https://codeforces.com/problemset/problem/2121/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120G. Eulerian Line Graph",
    "url": "https://codeforces.com/problemset/problem/2120/G",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120F. Superb Graphs",
    "url": "https://codeforces.com/problemset/problem/2120/F",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120E. Lanes of Cars",
    "url": "https://codeforces.com/problemset/problem/2120/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120D. Matrix game",
    "url": "https://codeforces.com/problemset/problem/2120/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120C. Divine Tree",
    "url": "https://codeforces.com/problemset/problem/2120/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120B. Square Pool",
    "url": "https://codeforces.com/problemset/problem/2120/B",
    "difficulty": 1000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2120A. Square of Rectangles",
    "url": "https://codeforces.com/problemset/problem/2120/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119F. Volcanic Eruptions",
    "url": "https://codeforces.com/problemset/problem/2119/F",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119E. And Constraint",
    "url": "https://codeforces.com/problemset/problem/2119/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119D. Token Removing",
    "url": "https://codeforces.com/problemset/problem/2119/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119C. A Good Problem",
    "url": "https://codeforces.com/problemset/problem/2119/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119B. Line Segments",
    "url": "https://codeforces.com/problemset/problem/2119/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2119A. Add or XOR",
    "url": "https://codeforces.com/problemset/problem/2119/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118F. Shifts and Swaps",
    "url": "https://codeforces.com/problemset/problem/2118/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118E. Grid Coloring",
    "url": "https://codeforces.com/problemset/problem/2118/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118D2. Red Light, Green Light (Hard version)",
    "url": "https://codeforces.com/problemset/problem/2118/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118D1. Red Light, Green Light (Easy version)",
    "url": "https://codeforces.com/problemset/problem/2118/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118C. Make It Beautiful",
    "url": "https://codeforces.com/problemset/problem/2118/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118B. Make It Permutation",
    "url": "https://codeforces.com/problemset/problem/2118/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2118A. Equal Subsequences",
    "url": "https://codeforces.com/problemset/problem/2118/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117H. Incessant Rain",
    "url": "https://codeforces.com/problemset/problem/2117/H",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117G. Omg Graph",
    "url": "https://codeforces.com/problemset/problem/2117/G",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dsu",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117F. Wildflower",
    "url": "https://codeforces.com/problemset/problem/2117/F",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117E. Lost Soul",
    "url": "https://codeforces.com/problemset/problem/2117/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117D. Retaliation",
    "url": "https://codeforces.com/problemset/problem/2117/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117C. Cool Partition",
    "url": "https://codeforces.com/problemset/problem/2117/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117B. Shrink",
    "url": "https://codeforces.com/problemset/problem/2117/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2117A. False Alarm",
    "url": "https://codeforces.com/problemset/problem/2117/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2116B. Gellyfish and Baby's Breath",
    "url": "https://codeforces.com/problemset/problem/2116/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2116A. Gellyfish and Tricolor Pansy",
    "url": "https://codeforces.com/problemset/problem/2116/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115F2. Gellyfish and Lycoris Radiata (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2115/F2",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115F1. Gellyfish and Lycoris Radiata (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2115/F1",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115E. Gellyfish and Mayflower",
    "url": "https://codeforces.com/problemset/problem/2115/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115D. Gellyfish and Forget-Me-Not",
    "url": "https://codeforces.com/problemset/problem/2115/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115C. Gellyfish and Eternal Violet",
    "url": "https://codeforces.com/problemset/problem/2115/C",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115B. Gellyfish and Camellia Japonica",
    "url": "https://codeforces.com/problemset/problem/2115/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2115A. Gellyfish and Flaming Peony",
    "url": "https://codeforces.com/problemset/problem/2115/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114G. Build an Array",
    "url": "https://codeforces.com/problemset/problem/2114/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114F. Small Operations",
    "url": "https://codeforces.com/problemset/problem/2114/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114E. Kirei Attacks the Estate",
    "url": "https://codeforces.com/problemset/problem/2114/E",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114D. Come a Little Closer",
    "url": "https://codeforces.com/problemset/problem/2114/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114C. Need More Arrays",
    "url": "https://codeforces.com/problemset/problem/2114/C",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114B. Not Quite a Palindromic String",
    "url": "https://codeforces.com/problemset/problem/2114/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2114A. Square Year",
    "url": "https://codeforces.com/problemset/problem/2114/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113F. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/2113/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113E. From Kazan with Love",
    "url": "https://codeforces.com/problemset/problem/2113/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113D. Cheater",
    "url": "https://codeforces.com/problemset/problem/2113/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113C. Smilo and Minecraft",
    "url": "https://codeforces.com/problemset/problem/2113/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113B. Good Start",
    "url": "https://codeforces.com/problemset/problem/2113/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2113A. Shashliks",
    "url": "https://codeforces.com/problemset/problem/2113/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112F. Variables and Operations",
    "url": "https://codeforces.com/problemset/problem/2112/F",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112E. Tree Colorings",
    "url": "https://codeforces.com/problemset/problem/2112/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112D. Reachability and Tree",
    "url": "https://codeforces.com/problemset/problem/2112/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112C. Coloring Game",
    "url": "https://codeforces.com/problemset/problem/2112/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112B. Shrinking Array",
    "url": "https://codeforces.com/problemset/problem/2112/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2112A. Race",
    "url": "https://codeforces.com/problemset/problem/2112/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111G. Divisible Subarrays",
    "url": "https://codeforces.com/problemset/problem/2111/G",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111F. Puzzle",
    "url": "https://codeforces.com/problemset/problem/2111/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111E. Changing the String",
    "url": "https://codeforces.com/problemset/problem/2111/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111D. Creating a Schedule",
    "url": "https://codeforces.com/problemset/problem/2111/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111C. Equal Values",
    "url": "https://codeforces.com/problemset/problem/2111/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111B. Fibonacci Cubes",
    "url": "https://codeforces.com/problemset/problem/2111/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2111A. Energy Crystals",
    "url": "https://codeforces.com/problemset/problem/2111/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110F. Faculty",
    "url": "https://codeforces.com/problemset/problem/2110/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110E. Melody",
    "url": "https://codeforces.com/problemset/problem/2110/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110D. Fewer Batteries",
    "url": "https://codeforces.com/problemset/problem/2110/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110C. Racing",
    "url": "https://codeforces.com/problemset/problem/2110/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110B. Down with Brackets",
    "url": "https://codeforces.com/problemset/problem/2110/B",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2110A. Fashionable Array",
    "url": "https://codeforces.com/problemset/problem/2110/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109F. Penguin Steps",
    "url": "https://codeforces.com/problemset/problem/2109/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109E. Binary String Wowee",
    "url": "https://codeforces.com/problemset/problem/2109/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109D. D/D/D",
    "url": "https://codeforces.com/problemset/problem/2109/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109C3. Hacking Numbers (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C3",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109C2. Hacking Numbers (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C2",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109C1. Hacking Numbers (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C1",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109B. Slice to Survive",
    "url": "https://codeforces.com/problemset/problem/2109/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2109A. It's Time To Duel",
    "url": "https://codeforces.com/problemset/problem/2109/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108F. Fallen Towers",
    "url": "https://codeforces.com/problemset/problem/2108/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108E. Spruce Dispute",
    "url": "https://codeforces.com/problemset/problem/2108/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108D. Needle in a Numstack",
    "url": "https://codeforces.com/problemset/problem/2108/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108C. Neo's Escape",
    "url": "https://codeforces.com/problemset/problem/2108/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108B. SUMdamental Decomposition",
    "url": "https://codeforces.com/problemset/problem/2108/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2108A. Permutation Warm-Up",
    "url": "https://codeforces.com/problemset/problem/2108/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107F2. Cycling (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2107/F2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107F1. Cycling (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2107/F1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107E. Ain and Apple Tree",
    "url": "https://codeforces.com/problemset/problem/2107/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107D. Apple Tree Traversing",
    "url": "https://codeforces.com/problemset/problem/2107/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107C. Maximum Subarray Sum",
    "url": "https://codeforces.com/problemset/problem/2107/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107B. Apples in Boxes",
    "url": "https://codeforces.com/problemset/problem/2107/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2107A. LRC and VIP",
    "url": "https://codeforces.com/problemset/problem/2107/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106G2. Baudelaire (hard version)",
    "url": "https://codeforces.com/problemset/problem/2106/G2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dfs and similar",
      "divide and conquer",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106G1. Baudelaire (easy version)",
    "url": "https://codeforces.com/problemset/problem/2106/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106F. Goblin",
    "url": "https://codeforces.com/problemset/problem/2106/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106E. Wolf",
    "url": "https://codeforces.com/problemset/problem/2106/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106D. Flower Boy",
    "url": "https://codeforces.com/problemset/problem/2106/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106C. Cherry Bomb",
    "url": "https://codeforces.com/problemset/problem/2106/C",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106B. St. Chroma",
    "url": "https://codeforces.com/problemset/problem/2106/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2106A. Dr. TC",
    "url": "https://codeforces.com/problemset/problem/2106/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104G. Modulo 3",
    "url": "https://codeforces.com/problemset/problem/2104/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104F. Numbers and Strings",
    "url": "https://codeforces.com/problemset/problem/2104/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104E. Unpleasant Strings",
    "url": "https://codeforces.com/problemset/problem/2104/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104D. Array and GCD",
    "url": "https://codeforces.com/problemset/problem/2104/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104C. Card Game",
    "url": "https://codeforces.com/problemset/problem/2104/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104B. Move to the End",
    "url": "https://codeforces.com/problemset/problem/2104/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2104A. Three Decks",
    "url": "https://codeforces.com/problemset/problem/2104/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103F. Maximize Nor",
    "url": "https://codeforces.com/problemset/problem/2103/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103E. Keep the Sum",
    "url": "https://codeforces.com/problemset/problem/2103/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103D. Local Construction",
    "url": "https://codeforces.com/problemset/problem/2103/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103C. Median Splits",
    "url": "https://codeforces.com/problemset/problem/2103/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103B. Binary Typewriter",
    "url": "https://codeforces.com/problemset/problem/2103/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2103A. Common Multiple",
    "url": "https://codeforces.com/problemset/problem/2103/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2102B. The Picky Cat",
    "url": "https://codeforces.com/problemset/problem/2102/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2102A. Dinner Time",
    "url": "https://codeforces.com/problemset/problem/2102/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101F. Shoo Shatters the Sunshine",
    "url": "https://codeforces.com/problemset/problem/2101/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101E. Kia Bakes a Cake",
    "url": "https://codeforces.com/problemset/problem/2101/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101D. Mani and Segments",
    "url": "https://codeforces.com/problemset/problem/2101/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101C. 23 Kingdom",
    "url": "https://codeforces.com/problemset/problem/2101/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101B. Quartet Swapping",
    "url": "https://codeforces.com/problemset/problem/2101/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2101A. Mex in the Grid",
    "url": "https://codeforces.com/problemset/problem/2101/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2098B. Sasha and the Apartment Purchase",
    "url": "https://codeforces.com/problemset/problem/2098/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2098A. Vadim's Collection",
    "url": "https://codeforces.com/problemset/problem/2098/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097F. Lost Luggage",
    "url": "https://codeforces.com/problemset/problem/2097/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097E. Clearing the Snowdrift",
    "url": "https://codeforces.com/problemset/problem/2097/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097D. Homework",
    "url": "https://codeforces.com/problemset/problem/2097/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097C. Bermuda Triangle",
    "url": "https://codeforces.com/problemset/problem/2097/C",
    "difficulty": 2400,
    "tags": [
      "chinese remainder theorem",
      "geometry",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097B. Baggage Claim",
    "url": "https://codeforces.com/problemset/problem/2097/B",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2097A. Sports Betting",
    "url": "https://codeforces.com/problemset/problem/2097/A",
    "difficulty": 1400,
    "tags": [
      "2-sat",
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096H. Wonderful XOR Problem",
    "url": "https://codeforces.com/problemset/problem/2096/H",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096G. Wonderful Guessing Game",
    "url": "https://codeforces.com/problemset/problem/2096/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096F. Wonderful Impostors",
    "url": "https://codeforces.com/problemset/problem/2096/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096E. Wonderful Teddy Bears",
    "url": "https://codeforces.com/problemset/problem/2096/E",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096D. Wonderful Lightbulbs",
    "url": "https://codeforces.com/problemset/problem/2096/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096C. Wonderful City",
    "url": "https://codeforces.com/problemset/problem/2096/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096B. Wonderful Gloves",
    "url": "https://codeforces.com/problemset/problem/2096/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2096A. Wonderful Sticks",
    "url": "https://codeforces.com/problemset/problem/2096/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095J. Premiere at a Wrong Time",
    "url": "https://codeforces.com/problemset/problem/2095/J",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095I. Mysterious Script",
    "url": "https://codeforces.com/problemset/problem/2095/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "expression parsing",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095H. Blurry Vision",
    "url": "https://codeforces.com/problemset/problem/2095/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095G. Definitely a Geometry Problem",
    "url": "https://codeforces.com/problemset/problem/2095/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095F. ⅓ оf а Рrоblеm",
    "url": "https://codeforces.com/problemset/problem/2095/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095E. Pair Count",
    "url": "https://codeforces.com/problemset/problem/2095/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095D. Where Am I?",
    "url": "https://codeforces.com/problemset/problem/2095/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095C. Would It Be Unrated?",
    "url": "https://codeforces.com/problemset/problem/2095/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095B. Plinko",
    "url": "https://codeforces.com/problemset/problem/2095/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "games",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2095A. Piecing It Together",
    "url": "https://codeforces.com/problemset/problem/2095/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094H. La Vaca Saturno Saturnita",
    "url": "https://codeforces.com/problemset/problem/2094/H",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094G. Chimpanzini Bananini",
    "url": "https://codeforces.com/problemset/problem/2094/G",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094F. Trulimero Trulicina",
    "url": "https://codeforces.com/problemset/problem/2094/F",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094E. Boneca Ambalabu",
    "url": "https://codeforces.com/problemset/problem/2094/E",
    "difficulty": 1200,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094D. Tung Tung Sahur",
    "url": "https://codeforces.com/problemset/problem/2094/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094C. Brr Brrr Patapim",
    "url": "https://codeforces.com/problemset/problem/2094/C",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094B. Bobritto Bandito",
    "url": "https://codeforces.com/problemset/problem/2094/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2094A. Trippi Troppi",
    "url": "https://codeforces.com/problemset/problem/2094/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093G. Shorten the Array",
    "url": "https://codeforces.com/problemset/problem/2093/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093F. Hackers and Neural Networks",
    "url": "https://codeforces.com/problemset/problem/2093/F",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093E. Min Max MEX",
    "url": "https://codeforces.com/problemset/problem/2093/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093D. Skibidi Table",
    "url": "https://codeforces.com/problemset/problem/2093/D",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093C. Simple Repetition",
    "url": "https://codeforces.com/problemset/problem/2093/C",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093B. Expensive Number",
    "url": "https://codeforces.com/problemset/problem/2093/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2093A. Ideal Generator",
    "url": "https://codeforces.com/problemset/problem/2093/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092F. Andryusha and CCB",
    "url": "https://codeforces.com/problemset/problem/2092/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092E. She knows...",
    "url": "https://codeforces.com/problemset/problem/2092/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092D. Mishkin Energizer",
    "url": "https://codeforces.com/problemset/problem/2092/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092C. Asuna and the Mosquitoes",
    "url": "https://codeforces.com/problemset/problem/2092/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092B. Lady Bug",
    "url": "https://codeforces.com/problemset/problem/2092/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2092A. Kamilka and the Sheep",
    "url": "https://codeforces.com/problemset/problem/2092/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091G. Gleb and Boating",
    "url": "https://codeforces.com/problemset/problem/2091/G",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091F. Igor and Mountain",
    "url": "https://codeforces.com/problemset/problem/2091/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091E. Interesting Ratio",
    "url": "https://codeforces.com/problemset/problem/2091/E",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091D. Place of the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2091/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091C. Combination Lock",
    "url": "https://codeforces.com/problemset/problem/2091/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091B. Team Training",
    "url": "https://codeforces.com/problemset/problem/2091/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2091A. Olympiad Date",
    "url": "https://codeforces.com/problemset/problem/2091/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2090C. Dining Hall",
    "url": "https://codeforces.com/problemset/problem/2090/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2090B. Pushing Balls",
    "url": "https://codeforces.com/problemset/problem/2090/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2090A. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/2090/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089E. Black Cat Collapse",
    "url": "https://codeforces.com/problemset/problem/2089/E",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2089D. Conditional Operators",
    "url": "https://codeforces.com/problemset/problem/2089/D",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089C2. Key of Like (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2089/C2",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089C1. Key of Like (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2089/C1",
    "difficulty": 2200,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089B2. Canteen (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2089/B2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089B1. Canteen (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2089/B1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2089A. Simple Permutation",
    "url": "https://codeforces.com/problemset/problem/2089/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087I. Hamiltonian Partition",
    "url": "https://codeforces.com/problemset/problem/2087/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087H. Nim with Special Numbers",
    "url": "https://codeforces.com/problemset/problem/2087/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087G. Esports in Berland",
    "url": "https://codeforces.com/problemset/problem/2087/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "greedy",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087F. Weapon Upgrade",
    "url": "https://codeforces.com/problemset/problem/2087/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087E. Color the Arrows",
    "url": "https://codeforces.com/problemset/problem/2087/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "dp",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087D. Uppercase or Lowercase?",
    "url": "https://codeforces.com/problemset/problem/2087/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087C. Coin Game",
    "url": "https://codeforces.com/problemset/problem/2087/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087B. Showmatch",
    "url": "https://codeforces.com/problemset/problem/2087/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2087A. Password Generator",
    "url": "https://codeforces.com/problemset/problem/2087/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086F. Online Palindrome",
    "url": "https://codeforces.com/problemset/problem/2086/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086E. Zebra-like Numbers",
    "url": "https://codeforces.com/problemset/problem/2086/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086D. Even String",
    "url": "https://codeforces.com/problemset/problem/2086/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086C. Disappearing Permutation",
    "url": "https://codeforces.com/problemset/problem/2086/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086B. Large Array and Segments",
    "url": "https://codeforces.com/problemset/problem/2086/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2086A. Cloudberry Jam",
    "url": "https://codeforces.com/problemset/problem/2086/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085F2. Serval and Colorful Array (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2085/F2",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085F1. Serval and Colorful Array (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2085/F1",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085E. Serval and Modulo",
    "url": "https://codeforces.com/problemset/problem/2085/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085D. Serval and Kaitenzushi Buffet",
    "url": "https://codeforces.com/problemset/problem/2085/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085C. Serval and The Formula",
    "url": "https://codeforces.com/problemset/problem/2085/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085B. Serval and Final MEX",
    "url": "https://codeforces.com/problemset/problem/2085/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2085A. Serval and String Theory",
    "url": "https://codeforces.com/problemset/problem/2085/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084H. Turtle and Nediam 2",
    "url": "https://codeforces.com/problemset/problem/2084/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084G2. Wish Upon a Satellite (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2084/G2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084G1. Wish Upon a Satellite (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2084/G1",
    "difficulty": 2600,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084F. Skyscape",
    "url": "https://codeforces.com/problemset/problem/2084/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084E. Blossom",
    "url": "https://codeforces.com/problemset/problem/2084/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084D. Arcology On Permafrost",
    "url": "https://codeforces.com/problemset/problem/2084/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084C. You Soared Afar With Grace",
    "url": "https://codeforces.com/problemset/problem/2084/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084B. MIN = GCD",
    "url": "https://codeforces.com/problemset/problem/2084/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2084A. Max and Mod",
    "url": "https://codeforces.com/problemset/problem/2084/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2082B. Floor or Ceil",
    "url": "https://codeforces.com/problemset/problem/2082/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2082A. Binary Matrix",
    "url": "https://codeforces.com/problemset/problem/2082/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081G2. Hard Formula (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2081/G2",
    "difficulty": 3400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081G1. Hard Formula",
    "url": "https://codeforces.com/problemset/problem/2081/G1",
    "difficulty": 3100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081F. Hot Matrix",
    "url": "https://codeforces.com/problemset/problem/2081/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081E. Quantifier",
    "url": "https://codeforces.com/problemset/problem/2081/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081D. MST in Modulo Graph",
    "url": "https://codeforces.com/problemset/problem/2081/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081C. Quaternary Matrix",
    "url": "https://codeforces.com/problemset/problem/2081/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081B. Balancing",
    "url": "https://codeforces.com/problemset/problem/2081/B",
    "difficulty": 2500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2081A. Math Division",
    "url": "https://codeforces.com/problemset/problem/2081/A",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2080D. Order Statistics",
    "url": "https://codeforces.com/problemset/problem/2080/D",
    "difficulty": 3400,
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2080C. Card Flip",
    "url": "https://codeforces.com/problemset/problem/2080/C",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2080B. Best Runner",
    "url": "https://codeforces.com/problemset/problem/2080/B",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2080A. Strong Connectivity Strikes Back",
    "url": "https://codeforces.com/problemset/problem/2080/A",
    "difficulty": 3200,
    "tags": [
      "*special",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2079D. Cute Subsequences",
    "url": "https://codeforces.com/problemset/problem/2079/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2079C. Dreaming Is Not Harmful",
    "url": "https://codeforces.com/problemset/problem/2079/C",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2079B. Arithmetic Exercise",
    "url": "https://codeforces.com/problemset/problem/2079/B",
    "difficulty": 2600,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2079A. Alice, Bob, And Two Arrays",
    "url": "https://codeforces.com/problemset/problem/2079/A",
    "difficulty": 3300,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2078D. Scammy Game Ad",
    "url": "https://codeforces.com/problemset/problem/2078/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2078B. Vicious Labyrinth",
    "url": "https://codeforces.com/problemset/problem/2078/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2078A. Final Verdict",
    "url": "https://codeforces.com/problemset/problem/2078/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077G. RGB Walking",
    "url": "https://codeforces.com/problemset/problem/2077/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "dfs and similar",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077F. AND x OR",
    "url": "https://codeforces.com/problemset/problem/2077/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077E. Another Folding Strip",
    "url": "https://codeforces.com/problemset/problem/2077/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077D. Maximum Polygon",
    "url": "https://codeforces.com/problemset/problem/2077/D",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077C. Binary Subsequence Value Sum",
    "url": "https://codeforces.com/problemset/problem/2077/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077B. Finding OR Sum",
    "url": "https://codeforces.com/problemset/problem/2077/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2077A. Breach of Faith",
    "url": "https://codeforces.com/problemset/problem/2077/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075F. Beautiful Sequence Returns",
    "url": "https://codeforces.com/problemset/problem/2075/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075E. XOR Matrix",
    "url": "https://codeforces.com/problemset/problem/2075/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075D. Equalization",
    "url": "https://codeforces.com/problemset/problem/2075/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075C. Two Colors",
    "url": "https://codeforces.com/problemset/problem/2075/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075B. Array Recoloring",
    "url": "https://codeforces.com/problemset/problem/2075/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2075A. To Zero",
    "url": "https://codeforces.com/problemset/problem/2075/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074G. Game With Triangles: Season 2",
    "url": "https://codeforces.com/problemset/problem/2074/G",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074F. Counting Necessary Nodes",
    "url": "https://codeforces.com/problemset/problem/2074/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074E. Empty Triangle",
    "url": "https://codeforces.com/problemset/problem/2074/E",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074D. Counting Points",
    "url": "https://codeforces.com/problemset/problem/2074/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074C. XOR and Triangle",
    "url": "https://codeforces.com/problemset/problem/2074/C",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "geometry",
      "greedy",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074B. The Third Side",
    "url": "https://codeforces.com/problemset/problem/2074/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2074A. Draw a Square",
    "url": "https://codeforces.com/problemset/problem/2074/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2073M. Can You Reach There?",
    "url": "https://codeforces.com/problemset/problem/2073/M",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073L. Boarding Queue",
    "url": "https://codeforces.com/problemset/problem/2073/L",
    "difficulty": 1300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073K. Book Sorting",
    "url": "https://codeforces.com/problemset/problem/2073/K",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073J. Gathering Sharks",
    "url": "https://codeforces.com/problemset/problem/2073/J",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073I. Squares on Grid Lines",
    "url": "https://codeforces.com/problemset/problem/2073/I",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073H. Secret Lilies and Roses",
    "url": "https://codeforces.com/problemset/problem/2073/H",
    "difficulty": 2700,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2073G. Corrupted File",
    "url": "https://codeforces.com/problemset/problem/2073/G",
    "difficulty": 2200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073F. Hold the Star",
    "url": "https://codeforces.com/problemset/problem/2073/F",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073E. Minus Operator",
    "url": "https://codeforces.com/problemset/problem/2073/E",
    "difficulty": 3300,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2073D. Tower of Hanoi",
    "url": "https://codeforces.com/problemset/problem/2073/D",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073C. Cactus Connectivity",
    "url": "https://codeforces.com/problemset/problem/2073/C",
    "difficulty": 2700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073B. Three-Dimensional Embedding",
    "url": "https://codeforces.com/problemset/problem/2073/B",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2073A. Control Towers",
    "url": "https://codeforces.com/problemset/problem/2073/A",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2072G. I've Been Flipping Numbers for 300 Years and Calculated the Sum",
    "url": "https://codeforces.com/problemset/problem/2072/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072F. Goodbye, Banker Life",
    "url": "https://codeforces.com/problemset/problem/2072/F",
    "difficulty": 1700,
    "tags": [
      "2-sat",
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072E. Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
    "url": "https://codeforces.com/problemset/problem/2072/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072D. For Wizards, the Exam Is Easy, but I Couldn't Handle It",
    "url": "https://codeforces.com/problemset/problem/2072/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072C. Creating Keys for StORages Has Become My Main Skill",
    "url": "https://codeforces.com/problemset/problem/2072/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072B. Having Been a Treasurer in the Past, I Help Goblins Deceive",
    "url": "https://codeforces.com/problemset/problem/2072/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2072A. New World, New Me, New Array",
    "url": "https://codeforces.com/problemset/problem/2072/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071F. Towering Arrays",
    "url": "https://codeforces.com/problemset/problem/2071/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071E. LeaFall",
    "url": "https://codeforces.com/problemset/problem/2071/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071D2. Infinite Sequence (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2071/D2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071D1. Infinite Sequence (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2071/D1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071C. Trapmigiano Reggiano",
    "url": "https://codeforces.com/problemset/problem/2071/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071B. Perfecto",
    "url": "https://codeforces.com/problemset/problem/2071/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2071A. The Play Never Ends",
    "url": "https://codeforces.com/problemset/problem/2071/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070F. Friends and Pizza",
    "url": "https://codeforces.com/problemset/problem/2070/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070E. Game with Binary String",
    "url": "https://codeforces.com/problemset/problem/2070/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070D. Tree Jumps",
    "url": "https://codeforces.com/problemset/problem/2070/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070C. Limited Repainting",
    "url": "https://codeforces.com/problemset/problem/2070/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070B. Robot Program",
    "url": "https://codeforces.com/problemset/problem/2070/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2070A. FizzBuzz Remixed",
    "url": "https://codeforces.com/problemset/problem/2070/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069F. Graph Inclusion",
    "url": "https://codeforces.com/problemset/problem/2069/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069E. A, B, AB and BA",
    "url": "https://codeforces.com/problemset/problem/2069/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069D. Palindrome Shuffle",
    "url": "https://codeforces.com/problemset/problem/2069/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069C. Beautiful Sequence",
    "url": "https://codeforces.com/problemset/problem/2069/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069B. Set of Strangers",
    "url": "https://codeforces.com/problemset/problem/2069/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2069A. Was there an Array?",
    "url": "https://codeforces.com/problemset/problem/2069/A",
    "difficulty": 800,
    "tags": [
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068K. Amusement Park Rides",
    "url": "https://codeforces.com/problemset/problem/2068/K",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068J. The Ultimate Wine Tasting Event",
    "url": "https://codeforces.com/problemset/problem/2068/J",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068I. Pinball",
    "url": "https://codeforces.com/problemset/problem/2068/I",
    "difficulty": 3500,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068H. Statues",
    "url": "https://codeforces.com/problemset/problem/2068/H",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068G. A Very Long Hike",
    "url": "https://codeforces.com/problemset/problem/2068/G",
    "difficulty": 3500,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068F. Mascot Naming",
    "url": "https://codeforces.com/problemset/problem/2068/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068E. Porto Vs. Benfica",
    "url": "https://codeforces.com/problemset/problem/2068/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068D. Morse Code",
    "url": "https://codeforces.com/problemset/problem/2068/D",
    "difficulty": 3100,
    "tags": [
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068C. Ads",
    "url": "https://codeforces.com/problemset/problem/2068/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068B. Urban Planning",
    "url": "https://codeforces.com/problemset/problem/2068/B",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2068A. Condorcet Elections",
    "url": "https://codeforces.com/problemset/problem/2068/A",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2067C. Devyatkino",
    "url": "https://codeforces.com/problemset/problem/2067/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2067B. Two Large Bags",
    "url": "https://codeforces.com/problemset/problem/2067/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2067A. Adjacent Digit Sums",
    "url": "https://codeforces.com/problemset/problem/2067/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066F. Curse",
    "url": "https://codeforces.com/problemset/problem/2066/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066E. Tropical Season",
    "url": "https://codeforces.com/problemset/problem/2066/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066D2. Club of Young Aircraft Builders (hard version)",
    "url": "https://codeforces.com/problemset/problem/2066/D2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066D1. Club of Young Aircraft Builders (easy version)",
    "url": "https://codeforces.com/problemset/problem/2066/D1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066C. Bitwise Slides",
    "url": "https://codeforces.com/problemset/problem/2066/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066B. White Magic",
    "url": "https://codeforces.com/problemset/problem/2066/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2066A. Object Identification",
    "url": "https://codeforces.com/problemset/problem/2066/A",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065H. Bro Thinks He's Him",
    "url": "https://codeforces.com/problemset/problem/2065/H",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065G. Skibidus and Capping",
    "url": "https://codeforces.com/problemset/problem/2065/G",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065F. Skibidus and Slay",
    "url": "https://codeforces.com/problemset/problem/2065/F",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065E. Skibidus and Rizz",
    "url": "https://codeforces.com/problemset/problem/2065/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065D. Skibidus and Sigma",
    "url": "https://codeforces.com/problemset/problem/2065/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065C2. Skibidus and Fanum Tax (hard version)",
    "url": "https://codeforces.com/problemset/problem/2065/C2",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065C1. Skibidus and Fanum Tax (easy version)",
    "url": "https://codeforces.com/problemset/problem/2065/C1",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065B. Skibidus and Ohio",
    "url": "https://codeforces.com/problemset/problem/2065/B",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2065A. Skibidus and Amog'u",
    "url": "https://codeforces.com/problemset/problem/2065/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064F. We Be Summing",
    "url": "https://codeforces.com/problemset/problem/2064/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064E. Mycraft Sand Sort",
    "url": "https://codeforces.com/problemset/problem/2064/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064D. Eating",
    "url": "https://codeforces.com/problemset/problem/2064/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064C. Remove the Ends",
    "url": "https://codeforces.com/problemset/problem/2064/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064B. Variety is Discouraged",
    "url": "https://codeforces.com/problemset/problem/2064/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2064A. Brogramming Contest",
    "url": "https://codeforces.com/problemset/problem/2064/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063F2. Counting Is Not Fun (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2063/F2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063F1. Counting Is Not Fun (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2063/F1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "hashing",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063E. Triangle Tree",
    "url": "https://codeforces.com/problemset/problem/2063/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063D. Game With Triangles",
    "url": "https://codeforces.com/problemset/problem/2063/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063C. Remove Exactly Two",
    "url": "https://codeforces.com/problemset/problem/2063/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063B. Subsequence Update",
    "url": "https://codeforces.com/problemset/problem/2063/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2063A. Minimal Coprime",
    "url": "https://codeforces.com/problemset/problem/2063/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062H. Galaxy Generator",
    "url": "https://codeforces.com/problemset/problem/2062/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062G. Permutation Factory",
    "url": "https://codeforces.com/problemset/problem/2062/G",
    "difficulty": 3500,
    "tags": [
      "flows",
      "geometry",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062F. Traveling Salescat",
    "url": "https://codeforces.com/problemset/problem/2062/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062E2. The Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2062/E2",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062E1. The Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2062/E1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062D. Balanced Tree",
    "url": "https://codeforces.com/problemset/problem/2062/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062C. Cirno and Operations",
    "url": "https://codeforces.com/problemset/problem/2062/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062B. Clockwork",
    "url": "https://codeforces.com/problemset/problem/2062/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2062A. String",
    "url": "https://codeforces.com/problemset/problem/2062/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061I. Kevin and Nivek",
    "url": "https://codeforces.com/problemset/problem/2061/I",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061H2. Kevin and Stones (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2061/H2",
    "difficulty": 3500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061H1. Kevin and Stones (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2061/H1",
    "difficulty": 3500,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061G. Kevin and Teams",
    "url": "https://codeforces.com/problemset/problem/2061/G",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061F2. Kevin and Binary String (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2061/F2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061F1. Kevin and Binary String (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2061/F1",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061E. Kevin and And",
    "url": "https://codeforces.com/problemset/problem/2061/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061D. Kevin and Numbers",
    "url": "https://codeforces.com/problemset/problem/2061/D",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061C. Kevin and Puzzle",
    "url": "https://codeforces.com/problemset/problem/2061/C",
    "difficulty": 1600,
    "tags": [
      "2-sat",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061B. Kevin and Geometry",
    "url": "https://codeforces.com/problemset/problem/2061/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2061A. Kevin and Arithmetic",
    "url": "https://codeforces.com/problemset/problem/2061/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060G. Bugged Sort",
    "url": "https://codeforces.com/problemset/problem/2060/G",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060F. Multiplicative Arrays",
    "url": "https://codeforces.com/problemset/problem/2060/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060E. Graph Composition",
    "url": "https://codeforces.com/problemset/problem/2060/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060D. Subtract Min Sort",
    "url": "https://codeforces.com/problemset/problem/2060/D",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060C. Game of Mathletes",
    "url": "https://codeforces.com/problemset/problem/2060/C",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060B. Farmer John's Card Game",
    "url": "https://codeforces.com/problemset/problem/2060/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2060A. Fibonacciness",
    "url": "https://codeforces.com/problemset/problem/2060/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059E2. Stop Gaming (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2059/E2",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059E1. Stop Gaming (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2059/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059D. Graph and Graph",
    "url": "https://codeforces.com/problemset/problem/2059/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059C. Customer Service",
    "url": "https://codeforces.com/problemset/problem/2059/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059B. Cost of the Array",
    "url": "https://codeforces.com/problemset/problem/2059/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2059A. Milya and Two Arrays",
    "url": "https://codeforces.com/problemset/problem/2059/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057H. Coffee Break",
    "url": "https://codeforces.com/problemset/problem/2057/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057G. Secret Message",
    "url": "https://codeforces.com/problemset/problem/2057/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057F. Formation",
    "url": "https://codeforces.com/problemset/problem/2057/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057E2. Another Exercise on Graphs (hard version)",
    "url": "https://codeforces.com/problemset/problem/2057/E2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057E1. Another Exercise on Graphs (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2057/E1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057D. Gifts Order",
    "url": "https://codeforces.com/problemset/problem/2057/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057C. Trip to the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2057/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057B. Gorilla and the Exam",
    "url": "https://codeforces.com/problemset/problem/2057/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2057A. MEX Table",
    "url": "https://codeforces.com/problemset/problem/2057/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056F2. Xor of Median (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2056/F2",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056F1. Xor of Median (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2056/F1",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056E. Nested Segments",
    "url": "https://codeforces.com/problemset/problem/2056/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056D. Unique Median",
    "url": "https://codeforces.com/problemset/problem/2056/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056C. Palindromic Subsequences",
    "url": "https://codeforces.com/problemset/problem/2056/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056B. Find the Permutation",
    "url": "https://codeforces.com/problemset/problem/2056/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2056A. Shape Perimeter",
    "url": "https://codeforces.com/problemset/problem/2056/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055F. Cosmic Divide",
    "url": "https://codeforces.com/problemset/problem/2055/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "geometry",
      "hashing",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055E. Haystacks",
    "url": "https://codeforces.com/problemset/problem/2055/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055D. Scarecrow",
    "url": "https://codeforces.com/problemset/problem/2055/D",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055C. The Trail",
    "url": "https://codeforces.com/problemset/problem/2055/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055B. Crafting",
    "url": "https://codeforces.com/problemset/problem/2055/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2055A. Two Frogs",
    "url": "https://codeforces.com/problemset/problem/2055/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053I2. Affectionate Arrays (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2053/I2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053I1. Affectionate Arrays (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2053/I1",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053H. Delicate Anti-monotonous Operations",
    "url": "https://codeforces.com/problemset/problem/2053/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053G. Naive String Splits",
    "url": "https://codeforces.com/problemset/problem/2053/G",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "hashing",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053F. Earnest Matrix Complement",
    "url": "https://codeforces.com/problemset/problem/2053/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053E. Resourceful Caterpillar Sequence",
    "url": "https://codeforces.com/problemset/problem/2053/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053D. Refined Product Optimality",
    "url": "https://codeforces.com/problemset/problem/2053/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "schedules",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053C. Bewitching Stargazer",
    "url": "https://codeforces.com/problemset/problem/2053/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053B. Outstanding Impressionist",
    "url": "https://codeforces.com/problemset/problem/2053/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2053A. Tender Carpenter",
    "url": "https://codeforces.com/problemset/problem/2053/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052M. Managing Cluster",
    "url": "https://codeforces.com/problemset/problem/2052/M",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052L. Legacy Screensaver",
    "url": "https://codeforces.com/problemset/problem/2052/L",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2052K. Knowns and Unknowns",
    "url": "https://codeforces.com/problemset/problem/2052/K",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2052J. Judicious Watching",
    "url": "https://codeforces.com/problemset/problem/2052/J",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052I. Incompetent Delivery Guy",
    "url": "https://codeforces.com/problemset/problem/2052/I",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052H. Hunting Hoglins in Hogwarts",
    "url": "https://codeforces.com/problemset/problem/2052/H",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052G. Geometric Balance",
    "url": "https://codeforces.com/problemset/problem/2052/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052F. Fix Flooded Floor",
    "url": "https://codeforces.com/problemset/problem/2052/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052E. Expression Correction",
    "url": "https://codeforces.com/problemset/problem/2052/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "expression parsing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052D. DAG Serialization",
    "url": "https://codeforces.com/problemset/problem/2052/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052C. Cactus without Bridges",
    "url": "https://codeforces.com/problemset/problem/2052/C",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2052B. BitBitJump",
    "url": "https://codeforces.com/problemset/problem/2052/B",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2052A. Adrenaline Rush",
    "url": "https://codeforces.com/problemset/problem/2052/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051G. Snakes",
    "url": "https://codeforces.com/problemset/problem/2051/G",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051F. Joker",
    "url": "https://codeforces.com/problemset/problem/2051/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051E. Best Price",
    "url": "https://codeforces.com/problemset/problem/2051/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051D. Counting Pairs",
    "url": "https://codeforces.com/problemset/problem/2051/D",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051C. Preparing for the Exam",
    "url": "https://codeforces.com/problemset/problem/2051/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051B. Journey",
    "url": "https://codeforces.com/problemset/problem/2051/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2051A. Preparing for the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2051/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050G. Tree Destruction",
    "url": "https://codeforces.com/problemset/problem/2050/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050F. Maximum modulo equality",
    "url": "https://codeforces.com/problemset/problem/2050/F",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050E. Three Strings",
    "url": "https://codeforces.com/problemset/problem/2050/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050D. Digital string maximization",
    "url": "https://codeforces.com/problemset/problem/2050/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050C. Uninteresting Number",
    "url": "https://codeforces.com/problemset/problem/2050/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050B. Transfusion",
    "url": "https://codeforces.com/problemset/problem/2050/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2050A. Line Breaks",
    "url": "https://codeforces.com/problemset/problem/2050/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049F. MEX OR Mania",
    "url": "https://codeforces.com/problemset/problem/2049/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049E. Broken Queries",
    "url": "https://codeforces.com/problemset/problem/2049/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049D. Shift + Esc",
    "url": "https://codeforces.com/problemset/problem/2049/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049C. MEX Cycle",
    "url": "https://codeforces.com/problemset/problem/2049/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049B. pspspsps",
    "url": "https://codeforces.com/problemset/problem/2049/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graph matchings",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2049A. MEX Destruction",
    "url": "https://codeforces.com/problemset/problem/2049/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048I2. Kevin and Puzzle (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2048/I2",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048I1. Kevin and Puzzle (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2048/I1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048H. Kevin and Strange Operation",
    "url": "https://codeforces.com/problemset/problem/2048/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048G. Kevin and Matrices",
    "url": "https://codeforces.com/problemset/problem/2048/G",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048F. Kevin and Math Class",
    "url": "https://codeforces.com/problemset/problem/2048/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048E. Kevin and Bipartite Graph",
    "url": "https://codeforces.com/problemset/problem/2048/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048D. Kevin and Competition Memories",
    "url": "https://codeforces.com/problemset/problem/2048/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048C. Kevin and Binary Strings",
    "url": "https://codeforces.com/problemset/problem/2048/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048B. Kevin and Permutation",
    "url": "https://codeforces.com/problemset/problem/2048/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2048A. Kevin and Combination Lock",
    "url": "https://codeforces.com/problemset/problem/2048/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2047B. Replace Character",
    "url": "https://codeforces.com/problemset/problem/2047/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2047A. Alyona and a Square Jigsaw Puzzle",
    "url": "https://codeforces.com/problemset/problem/2047/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046F2. Yandex Cuneiform (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2046/F2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046F1. Yandex Cuneiform (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2046/F1",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046E2. Cheops and a Contest (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2046/E2",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046E1. Cheops and a Contest (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2046/E1",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046D. For the Emperor!",
    "url": "https://codeforces.com/problemset/problem/2046/D",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046C. Adventurers",
    "url": "https://codeforces.com/problemset/problem/2046/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046B. Move Back at a Cost",
    "url": "https://codeforces.com/problemset/problem/2046/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2046A. Swap Columns and Find a Path",
    "url": "https://codeforces.com/problemset/problem/2046/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045M. Mirror Maze",
    "url": "https://codeforces.com/problemset/problem/2045/M",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045L. Buggy DFS",
    "url": "https://codeforces.com/problemset/problem/2045/L",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045K. GCDDCG",
    "url": "https://codeforces.com/problemset/problem/2045/K",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2045J. Xorderable Array",
    "url": "https://codeforces.com/problemset/problem/2045/J",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045I. Microwavable Subsequence",
    "url": "https://codeforces.com/problemset/problem/2045/I",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045H. Missing Separators",
    "url": "https://codeforces.com/problemset/problem/2045/H",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045G. X Aura",
    "url": "https://codeforces.com/problemset/problem/2045/G",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045F. Grid Game 3-angle",
    "url": "https://codeforces.com/problemset/problem/2045/F",
    "difficulty": 3000,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045E. Narrower Passageway",
    "url": "https://codeforces.com/problemset/problem/2045/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045D. Aquatic Dragon",
    "url": "https://codeforces.com/problemset/problem/2045/D",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2045C. Saraga",
    "url": "https://codeforces.com/problemset/problem/2045/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045B. ICPC Square",
    "url": "https://codeforces.com/problemset/problem/2045/B",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2045A. Scrambled Scrabble",
    "url": "https://codeforces.com/problemset/problem/2045/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044H. Hard Demon Problem",
    "url": "https://codeforces.com/problemset/problem/2044/H",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044G2. Medium Demon Problem (hard version)",
    "url": "https://codeforces.com/problemset/problem/2044/G2",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044G1. Medium Demon Problem (easy version)",
    "url": "https://codeforces.com/problemset/problem/2044/G1",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graph matchings",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044F. Easy Demon Problem",
    "url": "https://codeforces.com/problemset/problem/2044/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044E. Insane Problem",
    "url": "https://codeforces.com/problemset/problem/2044/E",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044D. Harder Problem",
    "url": "https://codeforces.com/problemset/problem/2044/D",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044C. Hard Problem",
    "url": "https://codeforces.com/problemset/problem/2044/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044B. Normal Problem",
    "url": "https://codeforces.com/problemset/problem/2044/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2044A. Easy Problem",
    "url": "https://codeforces.com/problemset/problem/2044/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043G. Problem with Queries",
    "url": "https://codeforces.com/problemset/problem/2043/G",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043F. Nim",
    "url": "https://codeforces.com/problemset/problem/2043/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "games",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043E. Matrix Transformation",
    "url": "https://codeforces.com/problemset/problem/2043/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043D. Problem about GCD",
    "url": "https://codeforces.com/problemset/problem/2043/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "flows",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043C. Sums on Segments",
    "url": "https://codeforces.com/problemset/problem/2043/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043B. Digits",
    "url": "https://codeforces.com/problemset/problem/2043/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2043A. Coin Transformation",
    "url": "https://codeforces.com/problemset/problem/2043/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042F. Two Subarrays",
    "url": "https://codeforces.com/problemset/problem/2042/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042E. Vertex Pairs",
    "url": "https://codeforces.com/problemset/problem/2042/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042D. Recommendations",
    "url": "https://codeforces.com/problemset/problem/2042/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042C. Competitive Fishing",
    "url": "https://codeforces.com/problemset/problem/2042/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042B. Game with Colored Marbles",
    "url": "https://codeforces.com/problemset/problem/2042/B",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2042A. Greedy Monocarp",
    "url": "https://codeforces.com/problemset/problem/2042/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041N. Railway Construction",
    "url": "https://codeforces.com/problemset/problem/2041/N",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2041M. Selection Sort",
    "url": "https://codeforces.com/problemset/problem/2041/M",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041L. Building Castle",
    "url": "https://codeforces.com/problemset/problem/2041/L",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2041K. Trophic Balance Species",
    "url": "https://codeforces.com/problemset/problem/2041/K",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041J. Bottle Arrangement",
    "url": "https://codeforces.com/problemset/problem/2041/J",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041I. Auto Complete",
    "url": "https://codeforces.com/problemset/problem/2041/I",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "implementation",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041H. Sheet Music",
    "url": "https://codeforces.com/problemset/problem/2041/H",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041G. Grid Game",
    "url": "https://codeforces.com/problemset/problem/2041/G",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "2041F. Segmentation Folds",
    "url": "https://codeforces.com/problemset/problem/2041/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041E. Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/2041/E",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041D. Drunken Maze",
    "url": "https://codeforces.com/problemset/problem/2041/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041C. Cube",
    "url": "https://codeforces.com/problemset/problem/2041/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041B. Bowling Frame",
    "url": "https://codeforces.com/problemset/problem/2041/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2041A. The Bento Box Adventure",
    "url": "https://codeforces.com/problemset/problem/2041/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040F. Number of Cubes",
    "url": "https://codeforces.com/problemset/problem/2040/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040E. Control of Randomness",
    "url": "https://codeforces.com/problemset/problem/2040/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040D. Non Prime Tree",
    "url": "https://codeforces.com/problemset/problem/2040/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "number theory",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040C. Ordered Permutations",
    "url": "https://codeforces.com/problemset/problem/2040/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040B. Paint a Strip",
    "url": "https://codeforces.com/problemset/problem/2040/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2040A. Game of Division",
    "url": "https://codeforces.com/problemset/problem/2040/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039H2. Cool Swap Walk (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/H2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "constructive algorithms",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039H1. Cool Swap Walk (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/H1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039G. Shohag Loves Pebae",
    "url": "https://codeforces.com/problemset/problem/2039/G",
    "difficulty": 3500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039F2. Shohag Loves Counting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/F2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039F1. Shohag Loves Counting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/F1",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039E. Shohag Loves Inversions",
    "url": "https://codeforces.com/problemset/problem/2039/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039D. Shohag Loves GCD",
    "url": "https://codeforces.com/problemset/problem/2039/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039C2. Shohag Loves XOR (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/C2",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039C1. Shohag Loves XOR (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/C1",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039B. Shohag Loves Strings",
    "url": "https://codeforces.com/problemset/problem/2039/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2039A. Shohag Loves Mod",
    "url": "https://codeforces.com/problemset/problem/2039/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038N. Fixing the Expression",
    "url": "https://codeforces.com/problemset/problem/2038/N",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038M. Royal Flush",
    "url": "https://codeforces.com/problemset/problem/2038/M",
    "difficulty": 2800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038L. Bridge Renovation",
    "url": "https://codeforces.com/problemset/problem/2038/L",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038K. Grid Walk",
    "url": "https://codeforces.com/problemset/problem/2038/K",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038J. Waiting for...",
    "url": "https://codeforces.com/problemset/problem/2038/J",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038I. Polyathlon",
    "url": "https://codeforces.com/problemset/problem/2038/I",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038H. Galactic Council",
    "url": "https://codeforces.com/problemset/problem/2038/H",
    "difficulty": 3000,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038G. Guess One Character",
    "url": "https://codeforces.com/problemset/problem/2038/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038F. Alternative Platforms",
    "url": "https://codeforces.com/problemset/problem/2038/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "fft",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038E. Barrels",
    "url": "https://codeforces.com/problemset/problem/2038/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038D. Divide OR Conquer",
    "url": "https://codeforces.com/problemset/problem/2038/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038C. DIY",
    "url": "https://codeforces.com/problemset/problem/2038/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038B. Make It Equal",
    "url": "https://codeforces.com/problemset/problem/2038/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2038A. Bonus Project",
    "url": "https://codeforces.com/problemset/problem/2038/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037G. Natlan Exploring",
    "url": "https://codeforces.com/problemset/problem/2037/G",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037F. Ardent Flames",
    "url": "https://codeforces.com/problemset/problem/2037/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037E. Kachina's Favorite Binary String",
    "url": "https://codeforces.com/problemset/problem/2037/E",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "interactive",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037D. Sharky Surfing",
    "url": "https://codeforces.com/problemset/problem/2037/D",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037C. Superultra's Favorite Permutation",
    "url": "https://codeforces.com/problemset/problem/2037/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037B. Intercepted Inputs",
    "url": "https://codeforces.com/problemset/problem/2037/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2037A. Twice",
    "url": "https://codeforces.com/problemset/problem/2037/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036G. Library of Magic",
    "url": "https://codeforces.com/problemset/problem/2036/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036F. XORificator 3000",
    "url": "https://codeforces.com/problemset/problem/2036/F",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036E. Reverse the Rivers",
    "url": "https://codeforces.com/problemset/problem/2036/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036D. I Love 1543",
    "url": "https://codeforces.com/problemset/problem/2036/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036C. Anya and 1100",
    "url": "https://codeforces.com/problemset/problem/2036/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036B. Startup",
    "url": "https://codeforces.com/problemset/problem/2036/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2036A. Quintomania",
    "url": "https://codeforces.com/problemset/problem/2036/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035H. Peak Productivity Forces",
    "url": "https://codeforces.com/problemset/problem/2035/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035G2. Go Learn! (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2035/G2",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035G1. Go Learn! (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2035/G1",
    "difficulty": 3300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035F. Tree Operations",
    "url": "https://codeforces.com/problemset/problem/2035/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035E. Monster",
    "url": "https://codeforces.com/problemset/problem/2035/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035D. Yet Another Real Number Problem",
    "url": "https://codeforces.com/problemset/problem/2035/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035C. Alya and Permutation",
    "url": "https://codeforces.com/problemset/problem/2035/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035B. Everyone Loves Tres",
    "url": "https://codeforces.com/problemset/problem/2035/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2035A. Sliding",
    "url": "https://codeforces.com/problemset/problem/2035/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034H. Rayan vs. Rayaneh",
    "url": "https://codeforces.com/problemset/problem/2034/H",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034G2. Simurgh's Watch (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2034/G2",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034G1. Simurgh's Watch (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2034/G1",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034F2. Khayyam's Royal Decree (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2034/F2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034F1. Khayyam's Royal Decree (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2034/F1",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034E. Permutations Harmony",
    "url": "https://codeforces.com/problemset/problem/2034/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034D. Darius' Wisdom",
    "url": "https://codeforces.com/problemset/problem/2034/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034C. Trapped in the Witch's Labyrinth",
    "url": "https://codeforces.com/problemset/problem/2034/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034B. Rakhsh's Revival",
    "url": "https://codeforces.com/problemset/problem/2034/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2034A. King Keykhosrow's Mystery",
    "url": "https://codeforces.com/problemset/problem/2034/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033G. Sakurako and Chefir",
    "url": "https://codeforces.com/problemset/problem/2033/G",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033F. Kosuke's Sloth",
    "url": "https://codeforces.com/problemset/problem/2033/F",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033E. Sakurako, Kosuke, and the Permutation",
    "url": "https://codeforces.com/problemset/problem/2033/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033D. Kousuke's Assignment",
    "url": "https://codeforces.com/problemset/problem/2033/D",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033C. Sakurako's Field Trip",
    "url": "https://codeforces.com/problemset/problem/2033/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033B. Sakurako and Water",
    "url": "https://codeforces.com/problemset/problem/2033/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2033A. Sakurako and Kosuke",
    "url": "https://codeforces.com/problemset/problem/2033/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032F. Peanuts",
    "url": "https://codeforces.com/problemset/problem/2032/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032E. Balanced",
    "url": "https://codeforces.com/problemset/problem/2032/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032D. Genokraken",
    "url": "https://codeforces.com/problemset/problem/2032/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "interactive",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032C. Trinity",
    "url": "https://codeforces.com/problemset/problem/2032/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032B. Medians",
    "url": "https://codeforces.com/problemset/problem/2032/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2032A. Circuit",
    "url": "https://codeforces.com/problemset/problem/2032/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031F. Penchick and Even Medians",
    "url": "https://codeforces.com/problemset/problem/2031/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031E. Penchick and Chloe's Trees",
    "url": "https://codeforces.com/problemset/problem/2031/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031D. Penchick and Desert Rabbit",
    "url": "https://codeforces.com/problemset/problem/2031/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031C. Penchick and BBQ Buns",
    "url": "https://codeforces.com/problemset/problem/2031/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031B. Penchick and Satay Sticks",
    "url": "https://codeforces.com/problemset/problem/2031/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2031A. Penchick and Modern Monument",
    "url": "https://codeforces.com/problemset/problem/2031/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030G2. The Destruction of the Universe (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2030/G2",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030G1. The Destruction of the Universe (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2030/G1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030F. Orangutan Approved Subarrays",
    "url": "https://codeforces.com/problemset/problem/2030/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030E. MEXimize the Score",
    "url": "https://codeforces.com/problemset/problem/2030/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030D. QED's Favorite Permutation",
    "url": "https://codeforces.com/problemset/problem/2030/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030C. A TRUE Battle",
    "url": "https://codeforces.com/problemset/problem/2030/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030B. Minimise Oneness",
    "url": "https://codeforces.com/problemset/problem/2030/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2030A. A Gift From Orangutan",
    "url": "https://codeforces.com/problemset/problem/2030/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029I. Variance Challenge",
    "url": "https://codeforces.com/problemset/problem/2029/I",
    "difficulty": 3400,
    "tags": [
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029H. Message Spread",
    "url": "https://codeforces.com/problemset/problem/2029/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029G. Balanced Problem",
    "url": "https://codeforces.com/problemset/problem/2029/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029F. Palindrome Everywhere",
    "url": "https://codeforces.com/problemset/problem/2029/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029E. Common Generator",
    "url": "https://codeforces.com/problemset/problem/2029/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029D. Cool Graph",
    "url": "https://codeforces.com/problemset/problem/2029/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029C. New Rating",
    "url": "https://codeforces.com/problemset/problem/2029/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029B. Replacement",
    "url": "https://codeforces.com/problemset/problem/2029/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "games",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2029A. Set",
    "url": "https://codeforces.com/problemset/problem/2029/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028F. Alice's Adventures in Addition",
    "url": "https://codeforces.com/problemset/problem/2028/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028E. Alice's Adventures in the Rabbit Hole",
    "url": "https://codeforces.com/problemset/problem/2028/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "games",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028D. Alice's Adventures in Cards",
    "url": "https://codeforces.com/problemset/problem/2028/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028C. Alice's Adventures in Cutting Cake",
    "url": "https://codeforces.com/problemset/problem/2028/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028B. Alice's Adventures in Permuting",
    "url": "https://codeforces.com/problemset/problem/2028/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2028A. Alice's Adventures in ''Chess''",
    "url": "https://codeforces.com/problemset/problem/2028/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027E2. Bit Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2027/E2",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027E1. Bit Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2027/E1",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027D2. The Endspeaker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2027/D2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027D1. The Endspeaker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2027/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027C. Add Zeros",
    "url": "https://codeforces.com/problemset/problem/2027/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027B. Stalin Sort",
    "url": "https://codeforces.com/problemset/problem/2027/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2027A. Rectangle Arrangement",
    "url": "https://codeforces.com/problemset/problem/2027/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026F. Bermart Ice Cream",
    "url": "https://codeforces.com/problemset/problem/2026/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026E. Best Subsequence",
    "url": "https://codeforces.com/problemset/problem/2026/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026D. Sums of Segments",
    "url": "https://codeforces.com/problemset/problem/2026/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026C. Action Figures",
    "url": "https://codeforces.com/problemset/problem/2026/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026B. Black Cells",
    "url": "https://codeforces.com/problemset/problem/2026/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2026A. Perpendicular Segments",
    "url": "https://codeforces.com/problemset/problem/2026/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025G. Variable Damage",
    "url": "https://codeforces.com/problemset/problem/2025/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025F. Choose Your Queries",
    "url": "https://codeforces.com/problemset/problem/2025/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025E. Card Game",
    "url": "https://codeforces.com/problemset/problem/2025/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025D. Attribute Checks",
    "url": "https://codeforces.com/problemset/problem/2025/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025C. New Game",
    "url": "https://codeforces.com/problemset/problem/2025/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025B. Binomial Coefficients, Kind Of",
    "url": "https://codeforces.com/problemset/problem/2025/B",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2025A. Two Screens",
    "url": "https://codeforces.com/problemset/problem/2025/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2024B. Buying Lemonade",
    "url": "https://codeforces.com/problemset/problem/2024/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2024A. Profitable Interest Rate",
    "url": "https://codeforces.com/problemset/problem/2024/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023F. Hills and Pits",
    "url": "https://codeforces.com/problemset/problem/2023/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023E. Tree of Life",
    "url": "https://codeforces.com/problemset/problem/2023/E",
    "difficulty": 3300,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023D. Many Games",
    "url": "https://codeforces.com/problemset/problem/2023/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023C. C+K+S",
    "url": "https://codeforces.com/problemset/problem/2023/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023B. Skipping",
    "url": "https://codeforces.com/problemset/problem/2023/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2023A. Concatenation of Arrays",
    "url": "https://codeforces.com/problemset/problem/2023/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022E2. Billetes MX (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2022/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022E1. Billetes MX (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2022/E1",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022D2. Asesino (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2022/D2",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022D1. Asesino (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2022/D1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022C. Gerrymandering",
    "url": "https://codeforces.com/problemset/problem/2022/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022B. Kar Salesman",
    "url": "https://codeforces.com/problemset/problem/2022/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2022A. Bus to Pénjamo",
    "url": "https://codeforces.com/problemset/problem/2022/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021E3. Digital Village (Extreme Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E3",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021E2. Digital Village (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021E1. Digital Village (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E1",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021D. Boss, Thirsty",
    "url": "https://codeforces.com/problemset/problem/2021/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021C2. Adjust The Presentation (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2021/C2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021C1. Adjust The Presentation (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2021/C1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021B. Maximize Mex",
    "url": "https://codeforces.com/problemset/problem/2021/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2021A. Meaning Mean",
    "url": "https://codeforces.com/problemset/problem/2021/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020F. Count Leaves",
    "url": "https://codeforces.com/problemset/problem/2020/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020E. Expected Power",
    "url": "https://codeforces.com/problemset/problem/2020/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020D. Connect the Dots",
    "url": "https://codeforces.com/problemset/problem/2020/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020C. Bitwise Balancing",
    "url": "https://codeforces.com/problemset/problem/2020/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "hashing",
      "implementation",
      "math",
      "schedules",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020B. Brightness Begins",
    "url": "https://codeforces.com/problemset/problem/2020/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2020A. Find Minimum Operations",
    "url": "https://codeforces.com/problemset/problem/2020/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2019B. All Pairs Segments",
    "url": "https://codeforces.com/problemset/problem/2019/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2019A. Max Plus Size",
    "url": "https://codeforces.com/problemset/problem/2019/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018F3. Speedbreaker Counting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F3",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018F2. Speedbreaker Counting (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F2",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018F1. Speedbreaker Counting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018E2. Complex Segments (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2018/E2",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018E1. Complex Segments (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2018/E1",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018D. Max Plus Min Plus Size",
    "url": "https://codeforces.com/problemset/problem/2018/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "matrices",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018C. Tree Pruning",
    "url": "https://codeforces.com/problemset/problem/2018/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018B. Speedbreaker",
    "url": "https://codeforces.com/problemset/problem/2018/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2018A. Cards Partition",
    "url": "https://codeforces.com/problemset/problem/2018/A",
    "difficulty": 1600,
    "tags": [
      "2-sat",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014H. Robin Hood Archery",
    "url": "https://codeforces.com/problemset/problem/2014/H",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014G. Milky Days",
    "url": "https://codeforces.com/problemset/problem/2014/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014F. Sheriff's Defense",
    "url": "https://codeforces.com/problemset/problem/2014/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014E. Rendez-vous de Marian et Robin",
    "url": "https://codeforces.com/problemset/problem/2014/E",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014D. Robert Hood and Mrs Hood",
    "url": "https://codeforces.com/problemset/problem/2014/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014C. Robin Hood in Town",
    "url": "https://codeforces.com/problemset/problem/2014/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014B. Robin Hood and the Major Oak",
    "url": "https://codeforces.com/problemset/problem/2014/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2014A. Robin Helps",
    "url": "https://codeforces.com/problemset/problem/2014/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013F2. Game in Tree (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2013/F2",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013F1. Game in Tree (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2013/F1",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "games",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013E. Prefix GCD",
    "url": "https://codeforces.com/problemset/problem/2013/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013D. Minimize the Difference",
    "url": "https://codeforces.com/problemset/problem/2013/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013C. Password Cracking",
    "url": "https://codeforces.com/problemset/problem/2013/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013B. Battle for Survive",
    "url": "https://codeforces.com/problemset/problem/2013/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2013A. Zhan's Blender",
    "url": "https://codeforces.com/problemset/problem/2013/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011I. Stack and Queue",
    "url": "https://codeforces.com/problemset/problem/2011/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011H. Strange Matrix",
    "url": "https://codeforces.com/problemset/problem/2011/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011G. Removal of a Permutation",
    "url": "https://codeforces.com/problemset/problem/2011/G",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011F. Good Subarray",
    "url": "https://codeforces.com/problemset/problem/2011/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011E. Rock-Paper-Scissors Bot",
    "url": "https://codeforces.com/problemset/problem/2011/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011D. Among Wolves",
    "url": "https://codeforces.com/problemset/problem/2011/D",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011C. Split the Expression",
    "url": "https://codeforces.com/problemset/problem/2011/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011B. Shuffle",
    "url": "https://codeforces.com/problemset/problem/2011/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2011A. Problem Solving",
    "url": "https://codeforces.com/problemset/problem/2011/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2010C2. Message Transmission Error (hard version)",
    "url": "https://codeforces.com/problemset/problem/2010/C2",
    "difficulty": 1700,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2010C1. Message Transmission Error (easy version)",
    "url": "https://codeforces.com/problemset/problem/2010/C1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2010B. Three Brothers",
    "url": "https://codeforces.com/problemset/problem/2010/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2010A. Alternating Sum of Numbers",
    "url": "https://codeforces.com/problemset/problem/2010/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009G3. Yunli's Subarray Queries (extreme version)",
    "url": "https://codeforces.com/problemset/problem/2009/G3",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009G2. Yunli's Subarray Queries (hard version)",
    "url": "https://codeforces.com/problemset/problem/2009/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009G1. Yunli's Subarray Queries (easy version)",
    "url": "https://codeforces.com/problemset/problem/2009/G1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009F. Firefly's Queries",
    "url": "https://codeforces.com/problemset/problem/2009/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "data structures",
      "flows",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009E. Klee's SUPER DUPER LARGE Array!!!",
    "url": "https://codeforces.com/problemset/problem/2009/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009D. Satyam and Counting",
    "url": "https://codeforces.com/problemset/problem/2009/D",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009C. The Legend of Freya the Frog",
    "url": "https://codeforces.com/problemset/problem/2009/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009B. osu!mania",
    "url": "https://codeforces.com/problemset/problem/2009/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2009A. Minimize!",
    "url": "https://codeforces.com/problemset/problem/2009/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008H. Sakurako's Test",
    "url": "https://codeforces.com/problemset/problem/2008/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008G. Sakurako's Task",
    "url": "https://codeforces.com/problemset/problem/2008/G",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008F. Sakurako's Box",
    "url": "https://codeforces.com/problemset/problem/2008/F",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008E. Alternating String",
    "url": "https://codeforces.com/problemset/problem/2008/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008D. Sakurako's Hobby",
    "url": "https://codeforces.com/problemset/problem/2008/D",
    "difficulty": 1100,
    "tags": [
      "dp",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008C. Longest Good Array",
    "url": "https://codeforces.com/problemset/problem/2008/C",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008B. Square or Not",
    "url": "https://codeforces.com/problemset/problem/2008/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2008A. Sakurako's Exam",
    "url": "https://codeforces.com/problemset/problem/2008/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2007C. Dora and C++",
    "url": "https://codeforces.com/problemset/problem/2007/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2007B. Index and Maximum Value",
    "url": "https://codeforces.com/problemset/problem/2007/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2007A. Dora's Set",
    "url": "https://codeforces.com/problemset/problem/2007/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006F. Dora's Paint",
    "url": "https://codeforces.com/problemset/problem/2006/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006E. Iris's Full Binary Tree",
    "url": "https://codeforces.com/problemset/problem/2006/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006D. Iris and Adjacent Products",
    "url": "https://codeforces.com/problemset/problem/2006/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006C. Eri and Expanded Sets",
    "url": "https://codeforces.com/problemset/problem/2006/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006B. Iris and the Tree",
    "url": "https://codeforces.com/problemset/problem/2006/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2006A. Iris and Game on the Tree",
    "url": "https://codeforces.com/problemset/problem/2006/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005E2. Subtangle Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2005/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005E1. Subtangle Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2005/E1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005D. Alter the GCD",
    "url": "https://codeforces.com/problemset/problem/2005/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005C. Lazy Narek",
    "url": "https://codeforces.com/problemset/problem/2005/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005B2. The Strict Teacher (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2005/B2",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005B1. The Strict Teacher (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2005/B1",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2005A. Simple Palindrome",
    "url": "https://codeforces.com/problemset/problem/2005/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004G. Substring Compression",
    "url": "https://codeforces.com/problemset/problem/2004/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004F. Make a Palindrome",
    "url": "https://codeforces.com/problemset/problem/2004/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004E. Not a Nim Problem",
    "url": "https://codeforces.com/problemset/problem/2004/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004D. Colored Portals",
    "url": "https://codeforces.com/problemset/problem/2004/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004C. Splitting Items",
    "url": "https://codeforces.com/problemset/problem/2004/C",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004B. Game with Doors",
    "url": "https://codeforces.com/problemset/problem/2004/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2004A. Closest Point",
    "url": "https://codeforces.com/problemset/problem/2004/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003F. Turtle and Three Sequences",
    "url": "https://codeforces.com/problemset/problem/2003/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003E2. Turtle and Inversions (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2003/E2",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003E1. Turtle and Inversions (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2003/E1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003D2. Turtle and a MEX Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2003/D2",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003D1. Turtle and a MEX Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2003/D1",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003C. Turtle and Good Pairs",
    "url": "https://codeforces.com/problemset/problem/2003/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003B. Turtle and Piggy Are Playing a Game 2",
    "url": "https://codeforces.com/problemset/problem/2003/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2003A. Turtle and Good Strings",
    "url": "https://codeforces.com/problemset/problem/2003/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002H. Counting 101",
    "url": "https://codeforces.com/problemset/problem/2002/H",
    "difficulty": 3500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002G. Lattice Optimizing",
    "url": "https://codeforces.com/problemset/problem/2002/G",
    "difficulty": 3400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002F2. Court Blue (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2002/F2",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002F1. Court Blue (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2002/F1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002E. Cosmic Rays",
    "url": "https://codeforces.com/problemset/problem/2002/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002D2. DFS Checker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2002/D2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002D1. DFS Checker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2002/D1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002C. Black Circles",
    "url": "https://codeforces.com/problemset/problem/2002/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002B. Removals Game",
    "url": "https://codeforces.com/problemset/problem/2002/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2002A. Distanced Coloring",
    "url": "https://codeforces.com/problemset/problem/2002/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001E2. Deterministic Heap (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2001/E2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001E1. Deterministic Heap (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2001/E1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001D. Longest Max Min Subsequence",
    "url": "https://codeforces.com/problemset/problem/2001/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001C. Guess The Tree",
    "url": "https://codeforces.com/problemset/problem/2001/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001B. Generate Permutation",
    "url": "https://codeforces.com/problemset/problem/2001/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2001A. Make All Equal",
    "url": "https://codeforces.com/problemset/problem/2001/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000H. Ksyusha and the Loaded Set",
    "url": "https://codeforces.com/problemset/problem/2000/H",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000G. Call During the Journey",
    "url": "https://codeforces.com/problemset/problem/2000/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000F. Color Rows and Columns",
    "url": "https://codeforces.com/problemset/problem/2000/F",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000E. Photoshoot for Gorillas",
    "url": "https://codeforces.com/problemset/problem/2000/E",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000D. Right Left Wrong",
    "url": "https://codeforces.com/problemset/problem/2000/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000C. Numeric String Template",
    "url": "https://codeforces.com/problemset/problem/2000/C",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000B. Seating in a Bus",
    "url": "https://codeforces.com/problemset/problem/2000/B",
    "difficulty": 800,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2000A. Primary Task",
    "url": "https://codeforces.com/problemset/problem/2000/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999G2. Ruler (hard version)",
    "url": "https://codeforces.com/problemset/problem/1999/G2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999G1. Ruler (easy version)",
    "url": "https://codeforces.com/problemset/problem/1999/G1",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999F. Expected Median",
    "url": "https://codeforces.com/problemset/problem/1999/F",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999E. Triple Operations",
    "url": "https://codeforces.com/problemset/problem/1999/E",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999D. Slavic's Exam",
    "url": "https://codeforces.com/problemset/problem/1999/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999C. Showering",
    "url": "https://codeforces.com/problemset/problem/1999/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999B. Card Game",
    "url": "https://codeforces.com/problemset/problem/1999/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1999A. A+B Again?",
    "url": "https://codeforces.com/problemset/problem/1999/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998E2. Eliminating Balls With Merging (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1998/E2",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998E1. Eliminating Balls With Merging (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1998/E1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998D. Determine Winning Islands in Race",
    "url": "https://codeforces.com/problemset/problem/1998/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998C. Perform Operations to Maximize Score",
    "url": "https://codeforces.com/problemset/problem/1998/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998B. Minimize Equal Sum Subarrays",
    "url": "https://codeforces.com/problemset/problem/1998/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1998A. Find K Distinct Points with Fixed Center",
    "url": "https://codeforces.com/problemset/problem/1998/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997F. Chips on a Line",
    "url": "https://codeforces.com/problemset/problem/1997/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997E. Level Up",
    "url": "https://codeforces.com/problemset/problem/1997/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997D. Maximize the Root",
    "url": "https://codeforces.com/problemset/problem/1997/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997C. Even Positions",
    "url": "https://codeforces.com/problemset/problem/1997/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997B. Make Three Regions",
    "url": "https://codeforces.com/problemset/problem/1997/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1997A. Strong Password",
    "url": "https://codeforces.com/problemset/problem/1997/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996G. Penacony",
    "url": "https://codeforces.com/problemset/problem/1996/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996F. Bomb",
    "url": "https://codeforces.com/problemset/problem/1996/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996E. Decode",
    "url": "https://codeforces.com/problemset/problem/1996/E",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996D. Fun",
    "url": "https://codeforces.com/problemset/problem/1996/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996C. Sort",
    "url": "https://codeforces.com/problemset/problem/1996/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996B. Scale",
    "url": "https://codeforces.com/problemset/problem/1996/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1996A. Legs",
    "url": "https://codeforces.com/problemset/problem/1996/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995E2. Let Me Teach You a Lesson (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1995/E2",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995E1. Let Me Teach You a Lesson (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1995/E1",
    "difficulty": 2700,
    "tags": [
      "2-sat",
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995D. Cases",
    "url": "https://codeforces.com/problemset/problem/1995/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995C. Squaring",
    "url": "https://codeforces.com/problemset/problem/1995/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995B2. Bouquet (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1995/B2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995B1. Bouquet (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1995/B1",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1995A. Diagonals",
    "url": "https://codeforces.com/problemset/problem/1995/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994H. Fortnite",
    "url": "https://codeforces.com/problemset/problem/1994/H",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "games",
      "greedy",
      "hashing",
      "interactive",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994G. Minecraft",
    "url": "https://codeforces.com/problemset/problem/1994/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994F. Stardew Valley",
    "url": "https://codeforces.com/problemset/problem/1994/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994E. Wooden Game",
    "url": "https://codeforces.com/problemset/problem/1994/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994D. Funny Game",
    "url": "https://codeforces.com/problemset/problem/1994/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994C. Hungry Games",
    "url": "https://codeforces.com/problemset/problem/1994/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994B. Fun Game",
    "url": "https://codeforces.com/problemset/problem/1994/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1994A. Diverse Game",
    "url": "https://codeforces.com/problemset/problem/1994/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993F2. Dyn-scripted Robot (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1993/F2",
    "difficulty": 2800,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993F1. Dyn-scripted Robot (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1993/F1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993E. Xor-Grid Problem",
    "url": "https://codeforces.com/problemset/problem/1993/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993D. Med-imize",
    "url": "https://codeforces.com/problemset/problem/1993/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993C. Light Switches",
    "url": "https://codeforces.com/problemset/problem/1993/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993B. Parity and Sum",
    "url": "https://codeforces.com/problemset/problem/1993/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1993A. Question Marks",
    "url": "https://codeforces.com/problemset/problem/1993/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992G. Ultra-Meow",
    "url": "https://codeforces.com/problemset/problem/1992/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992F. Valuable Cards",
    "url": "https://codeforces.com/problemset/problem/1992/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992E. Novice's Mistake",
    "url": "https://codeforces.com/problemset/problem/1992/E",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992D. Test of Love",
    "url": "https://codeforces.com/problemset/problem/1992/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992C. Gorilla and Permutation",
    "url": "https://codeforces.com/problemset/problem/1992/C",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992B. Angry Monk",
    "url": "https://codeforces.com/problemset/problem/1992/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1992A. Only Pluses",
    "url": "https://codeforces.com/problemset/problem/1992/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991I. Grid Game",
    "url": "https://codeforces.com/problemset/problem/1991/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "games",
      "graph matchings",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991H. Prime Split Game",
    "url": "https://codeforces.com/problemset/problem/1991/H",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp",
      "fft",
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991G. Grid Reset",
    "url": "https://codeforces.com/problemset/problem/1991/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991F. Triangle Formation",
    "url": "https://codeforces.com/problemset/problem/1991/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991E. Coloring Game",
    "url": "https://codeforces.com/problemset/problem/1991/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991D. Prime XOR Coloring",
    "url": "https://codeforces.com/problemset/problem/1991/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991C. Absolute Zero",
    "url": "https://codeforces.com/problemset/problem/1991/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991B. AND Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1991/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1991A. Maximize the Last Element",
    "url": "https://codeforces.com/problemset/problem/1991/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990F. Polygonal Segments",
    "url": "https://codeforces.com/problemset/problem/1990/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990E2. Catch the Mole(Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1990/E2",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990E1. Catch the Mole(Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1990/E1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990D. Grid Puzzle",
    "url": "https://codeforces.com/problemset/problem/1990/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990C. Mad MAD Sum",
    "url": "https://codeforces.com/problemset/problem/1990/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990B. Array Craft",
    "url": "https://codeforces.com/problemset/problem/1990/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1990A. Submission Bait",
    "url": "https://codeforces.com/problemset/problem/1990/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989F. Simultaneous Coloring",
    "url": "https://codeforces.com/problemset/problem/1989/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989E. Distance to Different",
    "url": "https://codeforces.com/problemset/problem/1989/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989D. Smithing Skill",
    "url": "https://codeforces.com/problemset/problem/1989/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989C. Two Movies",
    "url": "https://codeforces.com/problemset/problem/1989/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989B. Substring and Subsequence",
    "url": "https://codeforces.com/problemset/problem/1989/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1989A. Catch the Coin",
    "url": "https://codeforces.com/problemset/problem/1989/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988F. Heartbeat",
    "url": "https://codeforces.com/problemset/problem/1988/F",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988E. Range Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/1988/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988D. The Omnipotent Monster Killer",
    "url": "https://codeforces.com/problemset/problem/1988/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988C. Increasing Sequence with Fixed OR",
    "url": "https://codeforces.com/problemset/problem/1988/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988B. Make Majority",
    "url": "https://codeforces.com/problemset/problem/1988/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1988A. Split the Multiset",
    "url": "https://codeforces.com/problemset/problem/1988/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987H. Fumo Temple",
    "url": "https://codeforces.com/problemset/problem/1987/H",
    "difficulty": 3500,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987G2. Spinning Round (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1987/G2",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987G1. Spinning Round (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1987/G1",
    "difficulty": 2900,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987F2. Interesting Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1987/F2",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987F1. Interesting Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1987/F1",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987E. Wonderful Tree!",
    "url": "https://codeforces.com/problemset/problem/1987/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987D. World is Mine",
    "url": "https://codeforces.com/problemset/problem/1987/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987C. Basil's Garden",
    "url": "https://codeforces.com/problemset/problem/1987/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987B. K-Sort",
    "url": "https://codeforces.com/problemset/problem/1987/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1987A. Upload More RAM",
    "url": "https://codeforces.com/problemset/problem/1987/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986G2. Permutation Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1986/G2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986G1. Permutation Problem (Simple Version)",
    "url": "https://codeforces.com/problemset/problem/1986/G1",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986F. Non-academic Problem",
    "url": "https://codeforces.com/problemset/problem/1986/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986E. Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1986/E",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986D. Mathematical Problem",
    "url": "https://codeforces.com/problemset/problem/1986/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986C. Update Queries",
    "url": "https://codeforces.com/problemset/problem/1986/C",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986B. Matrix Stabilization",
    "url": "https://codeforces.com/problemset/problem/1986/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1986A. X Axis",
    "url": "https://codeforces.com/problemset/problem/1986/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985H2. Maximize the Largest Component (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1985/H2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985H1. Maximize the Largest Component (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1985/H1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985G. D-Function",
    "url": "https://codeforces.com/problemset/problem/1985/G",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985F. Final Boss",
    "url": "https://codeforces.com/problemset/problem/1985/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985E. Secret Box",
    "url": "https://codeforces.com/problemset/problem/1985/E",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985D. Manhattan Circle",
    "url": "https://codeforces.com/problemset/problem/1985/D",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985C. Good Prefixes",
    "url": "https://codeforces.com/problemset/problem/1985/C",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985B. Maximum Multiple Sum",
    "url": "https://codeforces.com/problemset/problem/1985/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1985A. Creating Words",
    "url": "https://codeforces.com/problemset/problem/1985/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984H. Tower Capturing",
    "url": "https://codeforces.com/problemset/problem/1984/H",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984G. Magic Trick II",
    "url": "https://codeforces.com/problemset/problem/1984/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984F. Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1984/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984E. Shuffle",
    "url": "https://codeforces.com/problemset/problem/1984/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984D. ''a'' String Problem",
    "url": "https://codeforces.com/problemset/problem/1984/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984C2. Magnitude (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1984/C2",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984C1. Magnitude (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1984/C1",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984B. Large Addition",
    "url": "https://codeforces.com/problemset/problem/1984/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1984A. Strange Splitting",
    "url": "https://codeforces.com/problemset/problem/1984/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983G. Your Loss",
    "url": "https://codeforces.com/problemset/problem/1983/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983F. array-value",
    "url": "https://codeforces.com/problemset/problem/1983/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983E. I Love Balls",
    "url": "https://codeforces.com/problemset/problem/1983/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983D. Swap Dilemma",
    "url": "https://codeforces.com/problemset/problem/1983/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983C. Have Your Cake and Eat It Too",
    "url": "https://codeforces.com/problemset/problem/1983/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983B. Corner Twist",
    "url": "https://codeforces.com/problemset/problem/1983/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1983A. Array Divisibility",
    "url": "https://codeforces.com/problemset/problem/1983/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982F. Sorting Problem Again",
    "url": "https://codeforces.com/problemset/problem/1982/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982E. Number of k-good subarrays",
    "url": "https://codeforces.com/problemset/problem/1982/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982D. Beauty of the mountains",
    "url": "https://codeforces.com/problemset/problem/1982/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982C. Boring Day",
    "url": "https://codeforces.com/problemset/problem/1982/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982B. Collatz Conjecture",
    "url": "https://codeforces.com/problemset/problem/1982/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1982A. Soccer",
    "url": "https://codeforces.com/problemset/problem/1982/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981F. Turtle and Paths on a Tree",
    "url": "https://codeforces.com/problemset/problem/1981/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981E. Turtle and Intersected Segments",
    "url": "https://codeforces.com/problemset/problem/1981/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981D. Turtle and Multiplication",
    "url": "https://codeforces.com/problemset/problem/1981/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981C. Turtle and an Incomplete Sequence",
    "url": "https://codeforces.com/problemset/problem/1981/C",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981B. Turtle and an Infinite Sequence",
    "url": "https://codeforces.com/problemset/problem/1981/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1981A. Turtle and Piggy Are Playing a Game",
    "url": "https://codeforces.com/problemset/problem/1981/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980G. Yasya and the Mysterious Tree",
    "url": "https://codeforces.com/problemset/problem/1980/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980F2. Field Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1980/F2",
    "difficulty": 2400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980F1. Field Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1980/F1",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980E. Permutation of Rows and Columns",
    "url": "https://codeforces.com/problemset/problem/1980/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980D. GCD-sequence",
    "url": "https://codeforces.com/problemset/problem/1980/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980C. Sofia and the Lost Operations",
    "url": "https://codeforces.com/problemset/problem/1980/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980B. Choosing Cubes",
    "url": "https://codeforces.com/problemset/problem/1980/B",
    "difficulty": 800,
    "tags": [
      "sortings",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1980A. Problem Generator",
    "url": "https://codeforces.com/problemset/problem/1980/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979F. Kostyanych's Theorem",
    "url": "https://codeforces.com/problemset/problem/1979/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979E. Manhattan Triangle",
    "url": "https://codeforces.com/problemset/problem/1979/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979D. Fixing a Binary String",
    "url": "https://codeforces.com/problemset/problem/1979/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979C. Earning on Bets",
    "url": "https://codeforces.com/problemset/problem/1979/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979B. XOR Sequences",
    "url": "https://codeforces.com/problemset/problem/1979/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1979A. Guess the Maximum",
    "url": "https://codeforces.com/problemset/problem/1979/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978F. Large Graph",
    "url": "https://codeforces.com/problemset/problem/1978/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978E. Computing Machine",
    "url": "https://codeforces.com/problemset/problem/1978/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978D. Elections",
    "url": "https://codeforces.com/problemset/problem/1978/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978C. Manhattan Permutations",
    "url": "https://codeforces.com/problemset/problem/1978/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978B. New Bakery",
    "url": "https://codeforces.com/problemset/problem/1978/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1978A. Alice and Books",
    "url": "https://codeforces.com/problemset/problem/1978/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1977E. Tensor",
    "url": "https://codeforces.com/problemset/problem/1977/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1977D. XORificator",
    "url": "https://codeforces.com/problemset/problem/1977/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1977C. Nikita and LCM",
    "url": "https://codeforces.com/problemset/problem/1977/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1977B. Binary Colouring",
    "url": "https://codeforces.com/problemset/problem/1977/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1977A. Little Nikita",
    "url": "https://codeforces.com/problemset/problem/1977/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976F. Remove Bridges",
    "url": "https://codeforces.com/problemset/problem/1976/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976E. Splittable Permutations",
    "url": "https://codeforces.com/problemset/problem/1976/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976D. Invertible Bracket Sequences",
    "url": "https://codeforces.com/problemset/problem/1976/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976C. Job Interview",
    "url": "https://codeforces.com/problemset/problem/1976/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976B. Increase/Decrease/Copy",
    "url": "https://codeforces.com/problemset/problem/1976/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1976A. Verify Password",
    "url": "https://codeforces.com/problemset/problem/1976/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975I. Mind Bloom",
    "url": "https://codeforces.com/problemset/problem/1975/I",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975H. 378QAQ and Core",
    "url": "https://codeforces.com/problemset/problem/1975/H",
    "difficulty": 3500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975G. Zimpha Fan Club",
    "url": "https://codeforces.com/problemset/problem/1975/G",
    "difficulty": 3000,
    "tags": [
      "fft",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975F. Set",
    "url": "https://codeforces.com/problemset/problem/1975/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975E. Chain Queries",
    "url": "https://codeforces.com/problemset/problem/1975/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975D. Paint the Tree",
    "url": "https://codeforces.com/problemset/problem/1975/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975C. Chamo and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975B. 378QAQ and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1975A. Bazoka and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974G. Money Buys Less Happiness Now ",
    "url": "https://codeforces.com/problemset/problem/1974/G",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974F. Cutting Game",
    "url": "https://codeforces.com/problemset/problem/1974/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974E. Money Buys Happiness",
    "url": "https://codeforces.com/problemset/problem/1974/E",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974D. Ingenuity-2",
    "url": "https://codeforces.com/problemset/problem/1974/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974C. Beautiful Triple Pairs",
    "url": "https://codeforces.com/problemset/problem/1974/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974B. Symmetric Encoding",
    "url": "https://codeforces.com/problemset/problem/1974/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1974A. Phone Desktop",
    "url": "https://codeforces.com/problemset/problem/1974/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973F. Maximum GCD Sum Queries",
    "url": "https://codeforces.com/problemset/problem/1973/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973E. Cat, Fox and Swaps ",
    "url": "https://codeforces.com/problemset/problem/1973/E",
    "difficulty": 2500,
    "tags": [
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973D. Cat, Fox and Maximum Array Split",
    "url": "https://codeforces.com/problemset/problem/1973/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973C. Cat, Fox and Double Maximum",
    "url": "https://codeforces.com/problemset/problem/1973/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973B. Cat, Fox and the Lonely Array",
    "url": "https://codeforces.com/problemset/problem/1973/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1973A. Chess For Three",
    "url": "https://codeforces.com/problemset/problem/1973/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1972B. Coin Games",
    "url": "https://codeforces.com/problemset/problem/1972/B",
    "difficulty": 900,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1972A. Contest Proposal",
    "url": "https://codeforces.com/problemset/problem/1972/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971H. ±1",
    "url": "https://codeforces.com/problemset/problem/1971/H",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971G. XOUR",
    "url": "https://codeforces.com/problemset/problem/1971/G",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dsu",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971F. Circle Perimeter",
    "url": "https://codeforces.com/problemset/problem/1971/F",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971E. Find the Car",
    "url": "https://codeforces.com/problemset/problem/1971/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971D. Binary Cut",
    "url": "https://codeforces.com/problemset/problem/1971/D",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971C. Clock and Strings",
    "url": "https://codeforces.com/problemset/problem/1971/C",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971B. Different String",
    "url": "https://codeforces.com/problemset/problem/1971/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1971A. My First Sorting Problem",
    "url": "https://codeforces.com/problemset/problem/1971/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970G3. Min-Fund Prison (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/G3",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970G2. Min-Fund Prison (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/G2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970G1. Min-Fund Prison (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/G1",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970F3. Playing Quidditch (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/F3",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970F2. Playing Quidditch (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/F2",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970F1. Playing Quidditch (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/F1",
    "difficulty": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970E3. Trails (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/E3",
    "difficulty": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970E2. Trails (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/E2",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970E1. Trails (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/E1",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970D3. Arithmancy (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/D3",
    "difficulty": 3100,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970D2. Arithmancy (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/D2",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970D1. Arithmancy (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/D1",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970C3. Game on Tree (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/C3",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970C2. Game on Tree (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/C2",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970C1. Game on Tree (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/C1",
    "difficulty": 1400,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970B3. Exact Neighbours (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/B3",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970B2. Exact Neighbours (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970B1. Exact Neighbours (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/B1",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970A3. Balanced Unshuffle (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/A3",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970A2. Balanced Unshuffle (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/A2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1970A1. Balanced Shuffle (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/A1",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969F. Card Pairing",
    "url": "https://codeforces.com/problemset/problem/1969/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969E. Unique Array",
    "url": "https://codeforces.com/problemset/problem/1969/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969D. Shop Game",
    "url": "https://codeforces.com/problemset/problem/1969/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969C. Minimizing the Sum",
    "url": "https://codeforces.com/problemset/problem/1969/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969B. Shifts and Sorting",
    "url": "https://codeforces.com/problemset/problem/1969/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1969A. Two Friends",
    "url": "https://codeforces.com/problemset/problem/1969/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968G2. Division + LCP (hard version)",
    "url": "https://codeforces.com/problemset/problem/1968/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968G1. Division + LCP (easy version)",
    "url": "https://codeforces.com/problemset/problem/1968/G1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968F. Equal XOR Segments",
    "url": "https://codeforces.com/problemset/problem/1968/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968E. Cells Arrangement",
    "url": "https://codeforces.com/problemset/problem/1968/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968D. Permutation Game",
    "url": "https://codeforces.com/problemset/problem/1968/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968C. Assembly via Remainders",
    "url": "https://codeforces.com/problemset/problem/1968/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968B. Prefiquence",
    "url": "https://codeforces.com/problemset/problem/1968/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1968A. Maximize?",
    "url": "https://codeforces.com/problemset/problem/1968/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967F. Next and Prev",
    "url": "https://codeforces.com/problemset/problem/1967/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967E2. Again Counting Arrays (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1967/E2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967E1. Again Counting Arrays (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1967/E1",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967D. Long Way to be Non-decreasing",
    "url": "https://codeforces.com/problemset/problem/1967/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967C. Fenwick Tree",
    "url": "https://codeforces.com/problemset/problem/1967/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967B2. Reverse Card (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1967/B2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967B1. Reverse Card (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1967/B1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1967A. Permutation Counting",
    "url": "https://codeforces.com/problemset/problem/1967/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1966B. Rectangle Filling",
    "url": "https://codeforces.com/problemset/problem/1966/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1966A. Card Exchange",
    "url": "https://codeforces.com/problemset/problem/1966/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965F. Conference",
    "url": "https://codeforces.com/problemset/problem/1965/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965E. Connected Cubes",
    "url": "https://codeforces.com/problemset/problem/1965/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965D. Missing Subarray Sum",
    "url": "https://codeforces.com/problemset/problem/1965/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965C. Folding Strip",
    "url": "https://codeforces.com/problemset/problem/1965/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965B. Missing Subsequence Sum",
    "url": "https://codeforces.com/problemset/problem/1965/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1965A. Everything Nim",
    "url": "https://codeforces.com/problemset/problem/1965/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958J. Necromancer",
    "url": "https://codeforces.com/problemset/problem/1958/J",
    "difficulty": 3200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958I. Equal Trees",
    "url": "https://codeforces.com/problemset/problem/1958/I",
    "difficulty": 3100,
    "tags": [
      "*special",
      "graphs",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958H. Composite Spells",
    "url": "https://codeforces.com/problemset/problem/1958/H",
    "difficulty": 2600,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958G. Observation Towers",
    "url": "https://codeforces.com/problemset/problem/1958/G",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958F. Narrow Paths",
    "url": "https://codeforces.com/problemset/problem/1958/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958E. Yet Another Permutation Constructive",
    "url": "https://codeforces.com/problemset/problem/1958/E",
    "difficulty": 1900,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958D. Staircase",
    "url": "https://codeforces.com/problemset/problem/1958/D",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958C. Firewood",
    "url": "https://codeforces.com/problemset/problem/1958/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958B. Clock in the Pool",
    "url": "https://codeforces.com/problemset/problem/1958/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1958A. 1-3-5",
    "url": "https://codeforces.com/problemset/problem/1958/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957F2. Frequency Mismatch (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1957/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957F1. Frequency Mismatch (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1957/F1",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957E. Carousel of Combinations",
    "url": "https://codeforces.com/problemset/problem/1957/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957D. A BIT of an Inequality",
    "url": "https://codeforces.com/problemset/problem/1957/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957C. How Does the Rook Move?",
    "url": "https://codeforces.com/problemset/problem/1957/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957B. A BIT of a Construction",
    "url": "https://codeforces.com/problemset/problem/1957/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1957A. Stickogon",
    "url": "https://codeforces.com/problemset/problem/1957/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956F. Nene and the Passing Game",
    "url": "https://codeforces.com/problemset/problem/1956/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956E2. Nene vs. Monsters (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1956/E2",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956E1. Nene vs. Monsters (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1956/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956D. Nene and the Mex Operator",
    "url": "https://codeforces.com/problemset/problem/1956/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956C. Nene's Magical Matrix",
    "url": "https://codeforces.com/problemset/problem/1956/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956B. Nene and the Card Game",
    "url": "https://codeforces.com/problemset/problem/1956/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1956A. Nene's Game",
    "url": "https://codeforces.com/problemset/problem/1956/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955H. The Most Reckless Defense",
    "url": "https://codeforces.com/problemset/problem/1955/H",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955G. GCD on a grid",
    "url": "https://codeforces.com/problemset/problem/1955/G",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955F. Unfair Game",
    "url": "https://codeforces.com/problemset/problem/1955/F",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955E. Long Inversions",
    "url": "https://codeforces.com/problemset/problem/1955/E",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955D. Inaccurate Subsequence Search",
    "url": "https://codeforces.com/problemset/problem/1955/D",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955C. Inhabitant of the Deep Sea",
    "url": "https://codeforces.com/problemset/problem/1955/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955B. Progressive Square",
    "url": "https://codeforces.com/problemset/problem/1955/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1955A. Yogurt Sale",
    "url": "https://codeforces.com/problemset/problem/1955/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954F. Unique Strings",
    "url": "https://codeforces.com/problemset/problem/1954/F",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954E. Chain Reaction",
    "url": "https://codeforces.com/problemset/problem/1954/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954D. Colored Balls",
    "url": "https://codeforces.com/problemset/problem/1954/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954C. Long Multiplication",
    "url": "https://codeforces.com/problemset/problem/1954/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954B. Make It Ugly",
    "url": "https://codeforces.com/problemset/problem/1954/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1954A. Painting the Ribbon",
    "url": "https://codeforces.com/problemset/problem/1954/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1953A. Accuracy-Preserving Summation Algorithm",
    "url": "https://codeforces.com/problemset/problem/1953/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952J. Help, what does it mean to be \"Based\"",
    "url": "https://codeforces.com/problemset/problem/1952/J",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "expression parsing",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952I. Dark Matter",
    "url": "https://codeforces.com/problemset/problem/1952/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952H. Palindrome",
    "url": "https://codeforces.com/problemset/problem/1952/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952G. Mathematician Takeover",
    "url": "https://codeforces.com/problemset/problem/1952/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952F. Grid",
    "url": "https://codeforces.com/problemset/problem/1952/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952E. Sweep Line",
    "url": "https://codeforces.com/problemset/problem/1952/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "combinatorics",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952D. Are You a Procrastinator?",
    "url": "https://codeforces.com/problemset/problem/1952/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952C. They Have Fooled",
    "url": "https://codeforces.com/problemset/problem/1952/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952B. Is it stated?",
    "url": "https://codeforces.com/problemset/problem/1952/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1952A. Are You a Robot, Again?",
    "url": "https://codeforces.com/problemset/problem/1952/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951I. Growing Trees",
    "url": "https://codeforces.com/problemset/problem/1951/I",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951H. Thanos Snap",
    "url": "https://codeforces.com/problemset/problem/1951/H",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951G. Clacking Balls",
    "url": "https://codeforces.com/problemset/problem/1951/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951F. Inversion Composition",
    "url": "https://codeforces.com/problemset/problem/1951/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951E. No Palindromes",
    "url": "https://codeforces.com/problemset/problem/1951/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951D. Buying Jewels",
    "url": "https://codeforces.com/problemset/problem/1951/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951C. Ticket Hoarding",
    "url": "https://codeforces.com/problemset/problem/1951/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951B. Battle Cows",
    "url": "https://codeforces.com/problemset/problem/1951/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1951A. Dual Trigger",
    "url": "https://codeforces.com/problemset/problem/1951/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950G. Shuffling Songs",
    "url": "https://codeforces.com/problemset/problem/1950/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950F. 0, 1, 2, Tree!",
    "url": "https://codeforces.com/problemset/problem/1950/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950E. Nearly Shortest Repeating Substring",
    "url": "https://codeforces.com/problemset/problem/1950/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950D. Product of Binary Decimals",
    "url": "https://codeforces.com/problemset/problem/1950/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950C. Clock Conversion",
    "url": "https://codeforces.com/problemset/problem/1950/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950B. Upscaling",
    "url": "https://codeforces.com/problemset/problem/1950/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1950A. Stair, Peak, or Neither?",
    "url": "https://codeforces.com/problemset/problem/1950/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949K. Make Triangle",
    "url": "https://codeforces.com/problemset/problem/1949/K",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949J. Amanda the Amoeba",
    "url": "https://codeforces.com/problemset/problem/1949/J",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "implementation",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949I. Disks",
    "url": "https://codeforces.com/problemset/problem/1949/I",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "geometry",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949H. Division Avoidance",
    "url": "https://codeforces.com/problemset/problem/1949/H",
    "difficulty": 3100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949G. Scooter",
    "url": "https://codeforces.com/problemset/problem/1949/G",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949F. Dating",
    "url": "https://codeforces.com/problemset/problem/1949/F",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949E. Damage per Second",
    "url": "https://codeforces.com/problemset/problem/1949/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949D. Funny or Scary?",
    "url": "https://codeforces.com/problemset/problem/1949/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949C. Annual Ants' Gathering",
    "url": "https://codeforces.com/problemset/problem/1949/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949B. Charming Meals",
    "url": "https://codeforces.com/problemset/problem/1949/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1949A. Grove",
    "url": "https://codeforces.com/problemset/problem/1949/A",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948G. MST with Matching",
    "url": "https://codeforces.com/problemset/problem/1948/G",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dsu",
      "graph matchings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948F. Rare Coins",
    "url": "https://codeforces.com/problemset/problem/1948/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948E. Clique Partition",
    "url": "https://codeforces.com/problemset/problem/1948/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948D. Tandem Repeats?",
    "url": "https://codeforces.com/problemset/problem/1948/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948C. Arrow Path",
    "url": "https://codeforces.com/problemset/problem/1948/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948B. Array Fix",
    "url": "https://codeforces.com/problemset/problem/1948/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1948A. Special Characters",
    "url": "https://codeforces.com/problemset/problem/1948/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946F. Nobody is needed",
    "url": "https://codeforces.com/problemset/problem/1946/F",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946E. Girl Permutation",
    "url": "https://codeforces.com/problemset/problem/1946/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946D. Birthday Gift",
    "url": "https://codeforces.com/problemset/problem/1946/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946C. Tree Cutting",
    "url": "https://codeforces.com/problemset/problem/1946/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946B. Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/1946/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1946A. Median of an Array",
    "url": "https://codeforces.com/problemset/problem/1946/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945H. GCD is Greater",
    "url": "https://codeforces.com/problemset/problem/1945/H",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945G. Cook and Porridge",
    "url": "https://codeforces.com/problemset/problem/1945/G",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945F. Kirill and Mushrooms",
    "url": "https://codeforces.com/problemset/problem/1945/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945E. Binary Search",
    "url": "https://codeforces.com/problemset/problem/1945/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945D. Seraphim the Owl",
    "url": "https://codeforces.com/problemset/problem/1945/D",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945C. Left and Right Houses",
    "url": "https://codeforces.com/problemset/problem/1945/C",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945B. Fireworks",
    "url": "https://codeforces.com/problemset/problem/1945/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1945A. Setting up Camp",
    "url": "https://codeforces.com/problemset/problem/1945/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1944B. Equal XOR",
    "url": "https://codeforces.com/problemset/problem/1944/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1944A. Destroying Bridges",
    "url": "https://codeforces.com/problemset/problem/1944/A",
    "difficulty": 800,
    "tags": [
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943F. Minimum Hamming Distance",
    "url": "https://codeforces.com/problemset/problem/1943/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943E2. MEX Game 2 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1943/E2",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943E1. MEX Game 2 (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1943/E1",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943D2. Counting Is Fun (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1943/D2",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943D1. Counting Is Fun (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1943/D1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943C. Tree Compass",
    "url": "https://codeforces.com/problemset/problem/1943/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943B. Non-Palindromic Substring",
    "url": "https://codeforces.com/problemset/problem/1943/B",
    "difficulty": 2000,
    "tags": [
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1943A. MEX Game 1",
    "url": "https://codeforces.com/problemset/problem/1943/A",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942H. Farmer John's Favorite Intern",
    "url": "https://codeforces.com/problemset/problem/1942/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942G. Bessie and Cards",
    "url": "https://codeforces.com/problemset/problem/1942/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942F. Farmer John's Favorite Function",
    "url": "https://codeforces.com/problemset/problem/1942/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942E. Farm Game",
    "url": "https://codeforces.com/problemset/problem/1942/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942D. Learning to Paint",
    "url": "https://codeforces.com/problemset/problem/1942/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942C2. Bessie's Birthday Cake (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1942/C2",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942C1. Bessie's Birthday Cake (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1942/C1",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942B. Bessie and MEX",
    "url": "https://codeforces.com/problemset/problem/1942/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1942A. Farmer John's Challenge",
    "url": "https://codeforces.com/problemset/problem/1942/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941G. Rudolf and Subway",
    "url": "https://codeforces.com/problemset/problem/1941/G",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941F. Rudolf and Imbalance",
    "url": "https://codeforces.com/problemset/problem/1941/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941E. Rudolf and k Bridges",
    "url": "https://codeforces.com/problemset/problem/1941/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941D. Rudolf and the Ball Game",
    "url": "https://codeforces.com/problemset/problem/1941/D",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941C. Rudolf and the Ugly String",
    "url": "https://codeforces.com/problemset/problem/1941/C",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941B. Rudolf and 121",
    "url": "https://codeforces.com/problemset/problem/1941/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1941A. Rudolf and the Ticket",
    "url": "https://codeforces.com/problemset/problem/1941/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1940D. Almost Certainly",
    "url": "https://codeforces.com/problemset/problem/1940/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1940C. Burenka and Pether",
    "url": "https://codeforces.com/problemset/problem/1940/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1940B. Three Arrays",
    "url": "https://codeforces.com/problemset/problem/1940/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1940A. Parallel Universes",
    "url": "https://codeforces.com/problemset/problem/1940/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1939D. Big Persimmon",
    "url": "https://codeforces.com/problemset/problem/1939/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1939C. More Gifts",
    "url": "https://codeforces.com/problemset/problem/1939/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1939B. Evidence Board",
    "url": "https://codeforces.com/problemset/problem/1939/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1939A. Draw Polygon Lines",
    "url": "https://codeforces.com/problemset/problem/1939/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dp",
      "geometry",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1938M. Zig-zag",
    "url": "https://codeforces.com/problemset/problem/1938/M",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938L. XOR Operations",
    "url": "https://codeforces.com/problemset/problem/1938/L",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938K. Tree Quiz",
    "url": "https://codeforces.com/problemset/problem/1938/K",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938J. There and Back Again",
    "url": "https://codeforces.com/problemset/problem/1938/J",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938I. Symmetric Boundary",
    "url": "https://codeforces.com/problemset/problem/1938/I",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938H. Pho Restaurant",
    "url": "https://codeforces.com/problemset/problem/1938/H",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938G. Personality Test",
    "url": "https://codeforces.com/problemset/problem/1938/G",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938F. Forming Groups",
    "url": "https://codeforces.com/problemset/problem/1938/F",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938E. Duplicates",
    "url": "https://codeforces.com/problemset/problem/1938/E",
    "difficulty": 2200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938D. Bánh Bò",
    "url": "https://codeforces.com/problemset/problem/1938/D",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938C. Bit Counting Sequence",
    "url": "https://codeforces.com/problemset/problem/1938/C",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938B. Attraction Score",
    "url": "https://codeforces.com/problemset/problem/1938/B",
    "difficulty": 3000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1938A. Antiparticle Antiphysics",
    "url": "https://codeforces.com/problemset/problem/1938/A",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1937B. Binary Path",
    "url": "https://codeforces.com/problemset/problem/1937/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1937A. Shuffle Party",
    "url": "https://codeforces.com/problemset/problem/1937/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936F. Grand Finale: Circles",
    "url": "https://codeforces.com/problemset/problem/1936/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936E. Yet Yet Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1936/E",
    "difficulty": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936D. Bitwise Paradox",
    "url": "https://codeforces.com/problemset/problem/1936/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936C. Pokémon Arena",
    "url": "https://codeforces.com/problemset/problem/1936/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936B. Pinball",
    "url": "https://codeforces.com/problemset/problem/1936/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1936A. Bitwise Operation Wizard",
    "url": "https://codeforces.com/problemset/problem/1936/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935F. Andrey's Tree",
    "url": "https://codeforces.com/problemset/problem/1935/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935E. Distance Learning Courses in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935D. Exam in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935C. Messenger in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935B. Informatics in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1935A. Entertainment in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934E. Weird LCM Operations",
    "url": "https://codeforces.com/problemset/problem/1934/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934D2. XOR Break --- Game Version",
    "url": "https://codeforces.com/problemset/problem/1934/D2",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934D1. XOR Break --- Solo Version",
    "url": "https://codeforces.com/problemset/problem/1934/D1",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934C. Find a Mine",
    "url": "https://codeforces.com/problemset/problem/1934/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "geometry",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934B. Yet Another Coin Problem",
    "url": "https://codeforces.com/problemset/problem/1934/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1934A. Too Min Too Max",
    "url": "https://codeforces.com/problemset/problem/1934/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933G. Turtle Magic: Royal Turtle Shell Pattern",
    "url": "https://codeforces.com/problemset/problem/1933/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933F. Turtle Mission: Robot and the Earthquake",
    "url": "https://codeforces.com/problemset/problem/1933/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933E. Turtle vs. Rabbit Race: Optimal Trainings",
    "url": "https://codeforces.com/problemset/problem/1933/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933D. Turtle Tenacity: Continual Mods",
    "url": "https://codeforces.com/problemset/problem/1933/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933C. Turtle Fingers: Count the Values of k",
    "url": "https://codeforces.com/problemset/problem/1933/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933B. Turtle Math: Fast Three Task",
    "url": "https://codeforces.com/problemset/problem/1933/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1933A. Turtle Puzzle: Rearrange and Negate",
    "url": "https://codeforces.com/problemset/problem/1933/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932G. Moving Platforms",
    "url": "https://codeforces.com/problemset/problem/1932/G",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932F. Feed Cats",
    "url": "https://codeforces.com/problemset/problem/1932/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932E. Final Countdown",
    "url": "https://codeforces.com/problemset/problem/1932/E",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932D. Card Game",
    "url": "https://codeforces.com/problemset/problem/1932/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932C. LR-remainders",
    "url": "https://codeforces.com/problemset/problem/1932/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932B. Chaya Calendar",
    "url": "https://codeforces.com/problemset/problem/1932/B",
    "difficulty": 1100,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1932A. Thorns and Coins",
    "url": "https://codeforces.com/problemset/problem/1932/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931G. One-Dimensional Puzzle",
    "url": "https://codeforces.com/problemset/problem/1931/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931F. Chat Screenshots",
    "url": "https://codeforces.com/problemset/problem/1931/F",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931E. Anna and the Valentine's Day Gift",
    "url": "https://codeforces.com/problemset/problem/1931/E",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931D. Divisible Pairs",
    "url": "https://codeforces.com/problemset/problem/1931/D",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931C. Make Equal Again",
    "url": "https://codeforces.com/problemset/problem/1931/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931B. Make Equal",
    "url": "https://codeforces.com/problemset/problem/1931/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1931A. Recovering a Small String",
    "url": "https://codeforces.com/problemset/problem/1931/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930I. Counting Is Fun",
    "url": "https://codeforces.com/problemset/problem/1930/I",
    "difficulty": 3500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930H. Interactive Mex Tree",
    "url": "https://codeforces.com/problemset/problem/1930/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930G. Prefix Max Set Counting",
    "url": "https://codeforces.com/problemset/problem/1930/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930F. Maximize the Difference",
    "url": "https://codeforces.com/problemset/problem/1930/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930E. 2..3...4.... Wonderful! Wonderful!",
    "url": "https://codeforces.com/problemset/problem/1930/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930D2. Sum over all Substrings (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1930/D2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930D1. Sum over all Substrings (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1930/D1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930C. Lexicographically Largest",
    "url": "https://codeforces.com/problemset/problem/1930/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930B. Permutation Printing",
    "url": "https://codeforces.com/problemset/problem/1930/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1930A. Maximise The Score",
    "url": "https://codeforces.com/problemset/problem/1930/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929F. Sasha and the Wedding Binary Search Tree",
    "url": "https://codeforces.com/problemset/problem/1929/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929E. Sasha and the Happy Tree Cutting",
    "url": "https://codeforces.com/problemset/problem/1929/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929D. Sasha and a Walk in the City",
    "url": "https://codeforces.com/problemset/problem/1929/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929C. Sasha and the Casino",
    "url": "https://codeforces.com/problemset/problem/1929/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929B. Sasha and the Drawing",
    "url": "https://codeforces.com/problemset/problem/1929/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1929A. Sasha and the Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1929/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928F. Digital Patterns",
    "url": "https://codeforces.com/problemset/problem/1928/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928E. Modular Sequence",
    "url": "https://codeforces.com/problemset/problem/1928/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928D. Lonely Mountain Dungeons",
    "url": "https://codeforces.com/problemset/problem/1928/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928C. Physical Education Lesson",
    "url": "https://codeforces.com/problemset/problem/1928/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928B. Equalize",
    "url": "https://codeforces.com/problemset/problem/1928/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1928A. Rectangle Cutting",
    "url": "https://codeforces.com/problemset/problem/1928/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927G. Paint Charges",
    "url": "https://codeforces.com/problemset/problem/1927/G",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927F. Microcycle",
    "url": "https://codeforces.com/problemset/problem/1927/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927E. Klever Permutation",
    "url": "https://codeforces.com/problemset/problem/1927/E",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927D. Find the Different Ones!",
    "url": "https://codeforces.com/problemset/problem/1927/D",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927C. Choose the Different Ones!",
    "url": "https://codeforces.com/problemset/problem/1927/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927B. Following the String",
    "url": "https://codeforces.com/problemset/problem/1927/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1927A. Make it White",
    "url": "https://codeforces.com/problemset/problem/1927/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926G. Vlad and Trouble at MIT",
    "url": "https://codeforces.com/problemset/problem/1926/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926F. Vlad and Avoiding X",
    "url": "https://codeforces.com/problemset/problem/1926/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926E. Vlad and an Odd Ordering",
    "url": "https://codeforces.com/problemset/problem/1926/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926D. Vlad and Division",
    "url": "https://codeforces.com/problemset/problem/1926/D",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926C. Vlad and a Sum of Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1926/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926B. Vlad and Shapes",
    "url": "https://codeforces.com/problemset/problem/1926/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1926A. Vlad and the Best of Five",
    "url": "https://codeforces.com/problemset/problem/1926/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1925D. Good Trip",
    "url": "https://codeforces.com/problemset/problem/1925/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1925B. A Balanced Problemset?",
    "url": "https://codeforces.com/problemset/problem/1925/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1925A. We Got Everything Covered!",
    "url": "https://codeforces.com/problemset/problem/1925/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924F. Anti-Proxy Attendance",
    "url": "https://codeforces.com/problemset/problem/1924/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924E. Paper Cutting Again",
    "url": "https://codeforces.com/problemset/problem/1924/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924D. Balanced Subsequences",
    "url": "https://codeforces.com/problemset/problem/1924/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924C. Fractal Origami",
    "url": "https://codeforces.com/problemset/problem/1924/C",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924B. Space Harbour",
    "url": "https://codeforces.com/problemset/problem/1924/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1924A. Did We Get Everything Covered?",
    "url": "https://codeforces.com/problemset/problem/1924/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "shortest paths",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923F. Shrink-Reverse",
    "url": "https://codeforces.com/problemset/problem/1923/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923E. Count Paths",
    "url": "https://codeforces.com/problemset/problem/1923/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923D. Slimes",
    "url": "https://codeforces.com/problemset/problem/1923/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923C. Find B",
    "url": "https://codeforces.com/problemset/problem/1923/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923B. Monsters Attack!",
    "url": "https://codeforces.com/problemset/problem/1923/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1923A. Moving Chips",
    "url": "https://codeforces.com/problemset/problem/1923/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922F. Replace on Segment",
    "url": "https://codeforces.com/problemset/problem/1922/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922E. Increasing Subsequences",
    "url": "https://codeforces.com/problemset/problem/1922/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922D. Berserk Monsters",
    "url": "https://codeforces.com/problemset/problem/1922/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922C. Closest Cities",
    "url": "https://codeforces.com/problemset/problem/1922/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922B. Forming Triangles",
    "url": "https://codeforces.com/problemset/problem/1922/B",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1922A. Tricky Template",
    "url": "https://codeforces.com/problemset/problem/1922/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921G. Mischievous Shooter",
    "url": "https://codeforces.com/problemset/problem/1921/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921F. Sum of Progression",
    "url": "https://codeforces.com/problemset/problem/1921/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921E. Eat the Chip",
    "url": "https://codeforces.com/problemset/problem/1921/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921D. Very Different Array",
    "url": "https://codeforces.com/problemset/problem/1921/D",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921C. Sending Messages",
    "url": "https://codeforces.com/problemset/problem/1921/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921B. Arranging Cats",
    "url": "https://codeforces.com/problemset/problem/1921/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1921A. Square",
    "url": "https://codeforces.com/problemset/problem/1921/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920F2. Smooth Sailing (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1920/F2",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920F1. Smooth Sailing (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1920/F1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920E. Counting Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1920/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920D. Array Repetition",
    "url": "https://codeforces.com/problemset/problem/1920/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920C. Partitioning the Array",
    "url": "https://codeforces.com/problemset/problem/1920/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920B. Summation Game",
    "url": "https://codeforces.com/problemset/problem/1920/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1920A. Satisfying Constraints",
    "url": "https://codeforces.com/problemset/problem/1920/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919H. Tree Diameter",
    "url": "https://codeforces.com/problemset/problem/1919/H",
    "difficulty": 2000,
    "tags": [
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919G. Tree LGM",
    "url": "https://codeforces.com/problemset/problem/1919/G",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919F2. Wine Factory (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1919/F2",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "greedy",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919F1. Wine Factory (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1919/F1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919E. Counting Prefixes",
    "url": "https://codeforces.com/problemset/problem/1919/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919D. 01 Tree",
    "url": "https://codeforces.com/problemset/problem/1919/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919C. Grouping Increases",
    "url": "https://codeforces.com/problemset/problem/1919/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919B. Plus-Minus Split",
    "url": "https://codeforces.com/problemset/problem/1919/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1919A. Wallet Exchange",
    "url": "https://codeforces.com/problemset/problem/1919/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918G. Permutation of Given",
    "url": "https://codeforces.com/problemset/problem/1918/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918F. Caterpillar on a Tree",
    "url": "https://codeforces.com/problemset/problem/1918/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918E. ace5 and Task Order",
    "url": "https://codeforces.com/problemset/problem/1918/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "implementation",
      "interactive",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918D. Blocking Elements",
    "url": "https://codeforces.com/problemset/problem/1918/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918C. XOR-distance",
    "url": "https://codeforces.com/problemset/problem/1918/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918B. Minimize Inversions",
    "url": "https://codeforces.com/problemset/problem/1918/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1918A. Brick Wall",
    "url": "https://codeforces.com/problemset/problem/1918/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917F. Construct Tree",
    "url": "https://codeforces.com/problemset/problem/1917/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917E. Construct Matrix",
    "url": "https://codeforces.com/problemset/problem/1917/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917D. Yet Another Inversions Problem",
    "url": "https://codeforces.com/problemset/problem/1917/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917C. Watering an Array",
    "url": "https://codeforces.com/problemset/problem/1917/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917B. Erase First or Second Letter",
    "url": "https://codeforces.com/problemset/problem/1917/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1917A. Least Product",
    "url": "https://codeforces.com/problemset/problem/1917/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916H2. Matrix Rank (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1916/H2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916H1. Matrix Rank (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1916/H1",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916G. Optimizations From Chelsu",
    "url": "https://codeforces.com/problemset/problem/1916/G",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916F. Group Division",
    "url": "https://codeforces.com/problemset/problem/1916/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916E. Happy Life in University",
    "url": "https://codeforces.com/problemset/problem/1916/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916D. Mathematical Problem",
    "url": "https://codeforces.com/problemset/problem/1916/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916C. Training Before the Olympiad",
    "url": "https://codeforces.com/problemset/problem/1916/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916B. Two Divisors",
    "url": "https://codeforces.com/problemset/problem/1916/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1916A. 2023",
    "url": "https://codeforces.com/problemset/problem/1916/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915G. Bicycles",
    "url": "https://codeforces.com/problemset/problem/1915/G",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915F. Greetings",
    "url": "https://codeforces.com/problemset/problem/1915/F",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915E. Romantic Glasses",
    "url": "https://codeforces.com/problemset/problem/1915/E",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915D. Unnatural Language Processing",
    "url": "https://codeforces.com/problemset/problem/1915/D",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915C. Can I Square?",
    "url": "https://codeforces.com/problemset/problem/1915/C",
    "difficulty": 800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915B. Not Quite Latin Square",
    "url": "https://codeforces.com/problemset/problem/1915/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1915A. Odd One Out",
    "url": "https://codeforces.com/problemset/problem/1915/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914G2. Light Bulbs (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1914/G2",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914G1. Light Bulbs (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1914/G1",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914F. Programming Competition",
    "url": "https://codeforces.com/problemset/problem/1914/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914E2. Game with Marbles (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1914/E2",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914E1. Game with Marbles (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1914/E1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914D. Three Activities",
    "url": "https://codeforces.com/problemset/problem/1914/D",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914C. Quests",
    "url": "https://codeforces.com/problemset/problem/1914/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914B. Preparing for the Contest",
    "url": "https://codeforces.com/problemset/problem/1914/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1914A. Problemsolving Log",
    "url": "https://codeforces.com/problemset/problem/1914/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913F. Palindromic Problem",
    "url": "https://codeforces.com/problemset/problem/1913/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913E. Matrix Problem",
    "url": "https://codeforces.com/problemset/problem/1913/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913D. Array Collapse",
    "url": "https://codeforces.com/problemset/problem/1913/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913C. Game with Multiset",
    "url": "https://codeforces.com/problemset/problem/1913/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913B. Swap and Delete",
    "url": "https://codeforces.com/problemset/problem/1913/B",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1913A. Rating Increase",
    "url": "https://codeforces.com/problemset/problem/1913/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912L. LOL Lovers",
    "url": "https://codeforces.com/problemset/problem/1912/L",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912K. Kim's Quest",
    "url": "https://codeforces.com/problemset/problem/1912/K",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912J. Joy of Pokémon Observation",
    "url": "https://codeforces.com/problemset/problem/1912/J",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1912I. Innovative Washing Machine",
    "url": "https://codeforces.com/problemset/problem/1912/I",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912H. Hypercatapult Commute",
    "url": "https://codeforces.com/problemset/problem/1912/H",
    "difficulty": 2400,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912G. Great City Saint Petersburg",
    "url": "https://codeforces.com/problemset/problem/1912/G",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912F. Fugitive Frenzy",
    "url": "https://codeforces.com/problemset/problem/1912/F",
    "difficulty": 3100,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912E. Evaluate It and Back Again",
    "url": "https://codeforces.com/problemset/problem/1912/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912D. Divisibility Test",
    "url": "https://codeforces.com/problemset/problem/1912/D",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912C. Cactus Transformation",
    "url": "https://codeforces.com/problemset/problem/1912/C",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912B. Blueprint for Seating",
    "url": "https://codeforces.com/problemset/problem/1912/B",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1912A. Accumulator Apex",
    "url": "https://codeforces.com/problemset/problem/1912/A",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910J. Two Colors",
    "url": "https://codeforces.com/problemset/problem/1910/J",
    "difficulty": 2900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910I. Inverse Problem",
    "url": "https://codeforces.com/problemset/problem/1910/I",
    "difficulty": 2700,
    "tags": [
      "*special",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910H. Sum of Digits of Sums",
    "url": "https://codeforces.com/problemset/problem/1910/H",
    "difficulty": 2400,
    "tags": [
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910G. Pool Records",
    "url": "https://codeforces.com/problemset/problem/1910/G",
    "difficulty": 2700,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910F. Build Railway Stations",
    "url": "https://codeforces.com/problemset/problem/1910/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910E. Maximum Sum Subarrays",
    "url": "https://codeforces.com/problemset/problem/1910/E",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910D. Remove and Add",
    "url": "https://codeforces.com/problemset/problem/1910/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910C. Poisonous Swamp",
    "url": "https://codeforces.com/problemset/problem/1910/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "*special",
      "implementation",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910B. Security Guard",
    "url": "https://codeforces.com/problemset/problem/1910/B",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1910A. Username",
    "url": "https://codeforces.com/problemset/problem/1910/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909I. Short Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1909/I",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909H. Parallel Swaps Sort",
    "url": "https://codeforces.com/problemset/problem/1909/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909G. Pumping Lemma",
    "url": "https://codeforces.com/problemset/problem/1909/G",
    "difficulty": 3000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909F2. Small Permutation Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1909/F2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909F1. Small Permutation Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1909/F1",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909E. Multiple Lamps",
    "url": "https://codeforces.com/problemset/problem/1909/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909D. Split Plus K",
    "url": "https://codeforces.com/problemset/problem/1909/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909C. Heavy Intervals",
    "url": "https://codeforces.com/problemset/problem/1909/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909B. Make Almost Equal With Mod",
    "url": "https://codeforces.com/problemset/problem/1909/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1909A. Distinct Buttons",
    "url": "https://codeforces.com/problemset/problem/1909/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907G. Lights",
    "url": "https://codeforces.com/problemset/problem/1907/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907F. Shift and Reverse",
    "url": "https://codeforces.com/problemset/problem/1907/F",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907E. Good Triples",
    "url": "https://codeforces.com/problemset/problem/1907/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907D. Jumping Through Segments",
    "url": "https://codeforces.com/problemset/problem/1907/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907C. Removal of Unattractive Pairs",
    "url": "https://codeforces.com/problemset/problem/1907/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907B. YetnotherrokenKeoard",
    "url": "https://codeforces.com/problemset/problem/1907/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1907A. Rook",
    "url": "https://codeforces.com/problemset/problem/1907/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906M. Triangle Construction",
    "url": "https://codeforces.com/problemset/problem/1906/M",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906L. Palindromic Parentheses",
    "url": "https://codeforces.com/problemset/problem/1906/L",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906K. Deck-Building Game",
    "url": "https://codeforces.com/problemset/problem/1906/K",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906J. Count BFS Graph",
    "url": "https://codeforces.com/problemset/problem/1906/J",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906I. Contingency Plan 2",
    "url": "https://codeforces.com/problemset/problem/1906/I",
    "difficulty": 2900,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906H. Twin Friends",
    "url": "https://codeforces.com/problemset/problem/1906/H",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906G. Grid Game 2",
    "url": "https://codeforces.com/problemset/problem/1906/G",
    "difficulty": 2900,
    "tags": [
      "games",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906F. Maximize The Value",
    "url": "https://codeforces.com/problemset/problem/1906/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906E. Merge Not Sort",
    "url": "https://codeforces.com/problemset/problem/1906/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906D. Spaceship Exploration",
    "url": "https://codeforces.com/problemset/problem/1906/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906C. Cursed Game",
    "url": "https://codeforces.com/problemset/problem/1906/C",
    "difficulty": 3000,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906B. Button Pressing",
    "url": "https://codeforces.com/problemset/problem/1906/B",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1906A. Easy As ABC",
    "url": "https://codeforces.com/problemset/problem/1906/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905F. Field Should Not Be Empty",
    "url": "https://codeforces.com/problemset/problem/1905/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905E. One-X",
    "url": "https://codeforces.com/problemset/problem/1905/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905D. Cyclic MEX",
    "url": "https://codeforces.com/problemset/problem/1905/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905C. Largest Subsequence",
    "url": "https://codeforces.com/problemset/problem/1905/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905B. Begginer's Zelda",
    "url": "https://codeforces.com/problemset/problem/1905/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1905A. Constructive Problems",
    "url": "https://codeforces.com/problemset/problem/1905/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904F. Beautiful Tree",
    "url": "https://codeforces.com/problemset/problem/1904/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904E. Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1904/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904D2. Set To Max (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1904/D2",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904D1. Set To Max (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1904/D1",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904C. Array Game",
    "url": "https://codeforces.com/problemset/problem/1904/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904B. Collecting Game",
    "url": "https://codeforces.com/problemset/problem/1904/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1904A. Forked!",
    "url": "https://codeforces.com/problemset/problem/1904/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903F. Babysitting",
    "url": "https://codeforces.com/problemset/problem/1903/F",
    "difficulty": 2500,
    "tags": [
      "2-sat",
      "binary search",
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903E. Geo Game",
    "url": "https://codeforces.com/problemset/problem/1903/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903D2. Maximum And Queries (hard version)",
    "url": "https://codeforces.com/problemset/problem/1903/D2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903D1. Maximum And Queries (easy version)",
    "url": "https://codeforces.com/problemset/problem/1903/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903C. Theofanis' Nightmare",
    "url": "https://codeforces.com/problemset/problem/1903/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903B. StORage room",
    "url": "https://codeforces.com/problemset/problem/1903/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1903A. Halloumi Boxes",
    "url": "https://codeforces.com/problemset/problem/1903/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902F. Trees and XOR Queries Again",
    "url": "https://codeforces.com/problemset/problem/1902/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902E. Collapsing Strings",
    "url": "https://codeforces.com/problemset/problem/1902/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902D. Robot Queries",
    "url": "https://codeforces.com/problemset/problem/1902/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902C. Insert and Equalize",
    "url": "https://codeforces.com/problemset/problem/1902/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902B. Getting Points",
    "url": "https://codeforces.com/problemset/problem/1902/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1902A. Binary Imbalance",
    "url": "https://codeforces.com/problemset/problem/1902/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901F. Landscaping",
    "url": "https://codeforces.com/problemset/problem/1901/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901E. Compressed Tree",
    "url": "https://codeforces.com/problemset/problem/1901/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901D. Yet Another Monster Fight",
    "url": "https://codeforces.com/problemset/problem/1901/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901C. Add, Divide and Floor",
    "url": "https://codeforces.com/problemset/problem/1901/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901B. Chip and Ribbon",
    "url": "https://codeforces.com/problemset/problem/1901/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1901A. Line Trip",
    "url": "https://codeforces.com/problemset/problem/1901/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900F. Local Deletions",
    "url": "https://codeforces.com/problemset/problem/1900/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900E. Transitive Graph",
    "url": "https://codeforces.com/problemset/problem/1900/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900D. Small GCD",
    "url": "https://codeforces.com/problemset/problem/1900/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900C. Anji's Binary Tree",
    "url": "https://codeforces.com/problemset/problem/1900/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900B. Laura and Operations",
    "url": "https://codeforces.com/problemset/problem/1900/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1900A. Cover in Water",
    "url": "https://codeforces.com/problemset/problem/1900/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899G. Unusual Entertainment",
    "url": "https://codeforces.com/problemset/problem/1899/G",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "shortest paths",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899F. Alex's whims",
    "url": "https://codeforces.com/problemset/problem/1899/F",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899E. Queue Sort",
    "url": "https://codeforces.com/problemset/problem/1899/E",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899D. Yarik and Musical Notes",
    "url": "https://codeforces.com/problemset/problem/1899/D",
    "difficulty": 1300,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899C. Yarik and Array",
    "url": "https://codeforces.com/problemset/problem/1899/C",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899B. 250 Thousand Tons of TNT",
    "url": "https://codeforces.com/problemset/problem/1899/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1899A. Game with Integers",
    "url": "https://codeforces.com/problemset/problem/1899/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898F. Vova Escapes the Matrix",
    "url": "https://codeforces.com/problemset/problem/1898/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898E. Sofia and Strings",
    "url": "https://codeforces.com/problemset/problem/1898/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898D. Absolute Beauty",
    "url": "https://codeforces.com/problemset/problem/1898/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898C. Colorful Grid",
    "url": "https://codeforces.com/problemset/problem/1898/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898B. Milena and Admirer",
    "url": "https://codeforces.com/problemset/problem/1898/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1898A. Milica and String",
    "url": "https://codeforces.com/problemset/problem/1898/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896H2. Cyclic Hamming (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1896/H2",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896H1. Cyclic Hamming (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1896/H1",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896G. Pepe Racing",
    "url": "https://codeforces.com/problemset/problem/1896/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896F. Bracket Xoring",
    "url": "https://codeforces.com/problemset/problem/1896/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896E. Permutation Sorting",
    "url": "https://codeforces.com/problemset/problem/1896/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896D. Ones and Twos",
    "url": "https://codeforces.com/problemset/problem/1896/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896C. Matching Arrays",
    "url": "https://codeforces.com/problemset/problem/1896/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896B. AB Flipping",
    "url": "https://codeforces.com/problemset/problem/1896/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1896A. Jagged Swaps",
    "url": "https://codeforces.com/problemset/problem/1896/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895G. Two Characters, Two Colors",
    "url": "https://codeforces.com/problemset/problem/1895/G",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895F. Fancy Arrays",
    "url": "https://codeforces.com/problemset/problem/1895/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895E. Infinite Card Game",
    "url": "https://codeforces.com/problemset/problem/1895/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "games",
      "graphs",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895D. XOR Construction",
    "url": "https://codeforces.com/problemset/problem/1895/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895C. Torn Lucky Ticket",
    "url": "https://codeforces.com/problemset/problem/1895/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895B. Points and Minimum Distance",
    "url": "https://codeforces.com/problemset/problem/1895/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1895A. Treasure Chest",
    "url": "https://codeforces.com/problemset/problem/1895/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1894B. Two Out of Three",
    "url": "https://codeforces.com/problemset/problem/1894/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1894A. Secret Sport",
    "url": "https://codeforces.com/problemset/problem/1894/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1893E. Cacti Symphony",
    "url": "https://codeforces.com/problemset/problem/1893/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1893D. Colorful Constructive",
    "url": "https://codeforces.com/problemset/problem/1893/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1893C. Freedom of Choice",
    "url": "https://codeforces.com/problemset/problem/1893/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1893B. Neutral Tonality",
    "url": "https://codeforces.com/problemset/problem/1893/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1893A. Anonymous Informant",
    "url": "https://codeforces.com/problemset/problem/1893/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891F. A Growing Tree",
    "url": "https://codeforces.com/problemset/problem/1891/F",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891E. Brukhovich and Exams",
    "url": "https://codeforces.com/problemset/problem/1891/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891D. Suspicious logarithms",
    "url": "https://codeforces.com/problemset/problem/1891/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891C. Smilo and Monsters",
    "url": "https://codeforces.com/problemset/problem/1891/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891B. Deja Vu",
    "url": "https://codeforces.com/problemset/problem/1891/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1891A. Sorting with Twos",
    "url": "https://codeforces.com/problemset/problem/1891/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1890B. Qingshan Loves Strings",
    "url": "https://codeforces.com/problemset/problem/1890/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1890A. Doremy's Paint 3",
    "url": "https://codeforces.com/problemset/problem/1890/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889F. Doremy's Average Tree",
    "url": "https://codeforces.com/problemset/problem/1889/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889E. Doremy's Swapping Trees",
    "url": "https://codeforces.com/problemset/problem/1889/E",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889D. Game of Stacks",
    "url": "https://codeforces.com/problemset/problem/1889/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889C2. Doremy's Drying Plan (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1889/C2",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889C1. Doremy's Drying Plan (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1889/C1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889B. Doremy's Connecting Plan",
    "url": "https://codeforces.com/problemset/problem/1889/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1889A. Qingshan Loves Strings 2",
    "url": "https://codeforces.com/problemset/problem/1889/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1887F. Minimum Segments",
    "url": "https://codeforces.com/problemset/problem/1887/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1887E. Good Colorings",
    "url": "https://codeforces.com/problemset/problem/1887/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1887D. Split",
    "url": "https://codeforces.com/problemset/problem/1887/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1887C. Minimum Array",
    "url": "https://codeforces.com/problemset/problem/1887/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1887B. Time Travel",
    "url": "https://codeforces.com/problemset/problem/1887/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886F. Diamond Theft",
    "url": "https://codeforces.com/problemset/problem/1886/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886E. I Wanna be the Team Leader",
    "url": "https://codeforces.com/problemset/problem/1886/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886D. Monocarp and the Set",
    "url": "https://codeforces.com/problemset/problem/1886/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886C. Decreasing String",
    "url": "https://codeforces.com/problemset/problem/1886/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886B. Fear of the Dark",
    "url": "https://codeforces.com/problemset/problem/1886/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1886A. Sum of Three",
    "url": "https://codeforces.com/problemset/problem/1886/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1885A. Deterministic Scheduling for Extended Reality over 5G and Beyond",
    "url": "https://codeforces.com/problemset/problem/1885/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1884E. Hard Design",
    "url": "https://codeforces.com/problemset/problem/1884/E",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1884D. Counting Rhyme",
    "url": "https://codeforces.com/problemset/problem/1884/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1884C. Medium Design",
    "url": "https://codeforces.com/problemset/problem/1884/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1884B. Haunted House",
    "url": "https://codeforces.com/problemset/problem/1884/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1884A. Simple Design",
    "url": "https://codeforces.com/problemset/problem/1884/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883G2. Dances (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1883/G2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883G1. Dances (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1883/G1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883F. You Are So Beautiful",
    "url": "https://codeforces.com/problemset/problem/1883/F",
    "difficulty": 1400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883E. Look Back",
    "url": "https://codeforces.com/problemset/problem/1883/E",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883D. In Love",
    "url": "https://codeforces.com/problemset/problem/1883/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883C. Raspberries",
    "url": "https://codeforces.com/problemset/problem/1883/C",
    "difficulty": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883B. Chemistry",
    "url": "https://codeforces.com/problemset/problem/1883/B",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1883A. Morning",
    "url": "https://codeforces.com/problemset/problem/1883/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882E2. Two Permutations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1882/E2",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882E1. Two Permutations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1882/E1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882D. Tree XOR",
    "url": "https://codeforces.com/problemset/problem/1882/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882C. Card Game",
    "url": "https://codeforces.com/problemset/problem/1882/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882B. Sets and Union",
    "url": "https://codeforces.com/problemset/problem/1882/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1882A. Increasing Sequence",
    "url": "https://codeforces.com/problemset/problem/1882/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881G. Anya and the Mysterious String",
    "url": "https://codeforces.com/problemset/problem/1881/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881F. Minimum Maximum Distance",
    "url": "https://codeforces.com/problemset/problem/1881/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881E. Block Sequence",
    "url": "https://codeforces.com/problemset/problem/1881/E",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881D. Divide and Equalize",
    "url": "https://codeforces.com/problemset/problem/1881/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881C. Perfect Square",
    "url": "https://codeforces.com/problemset/problem/1881/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881B. Three Threadlets",
    "url": "https://codeforces.com/problemset/problem/1881/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1881A. Don't Try to Count",
    "url": "https://codeforces.com/problemset/problem/1881/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879F. Last Man Standing",
    "url": "https://codeforces.com/problemset/problem/1879/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879E. Interactive Game with Coloring",
    "url": "https://codeforces.com/problemset/problem/1879/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879D. Sum of XOR Functions",
    "url": "https://codeforces.com/problemset/problem/1879/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879C. Make it Alternating",
    "url": "https://codeforces.com/problemset/problem/1879/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879B. Chips on the Board",
    "url": "https://codeforces.com/problemset/problem/1879/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1879A. Rigged!",
    "url": "https://codeforces.com/problemset/problem/1879/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878G. wxhtzdy ORO Tree",
    "url": "https://codeforces.com/problemset/problem/1878/G",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878F. Vasilije Loves Number Theory",
    "url": "https://codeforces.com/problemset/problem/1878/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878E. Iva & Pav",
    "url": "https://codeforces.com/problemset/problem/1878/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878D. Reverse Madness",
    "url": "https://codeforces.com/problemset/problem/1878/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878C. Vasilije in Cacak",
    "url": "https://codeforces.com/problemset/problem/1878/C",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878B. Aleksa and Stack",
    "url": "https://codeforces.com/problemset/problem/1878/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1878A. How Much Does Daytona Cost?",
    "url": "https://codeforces.com/problemset/problem/1878/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1877C. Joyboard",
    "url": "https://codeforces.com/problemset/problem/1877/C",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1877A. Goals of Victory",
    "url": "https://codeforces.com/problemset/problem/1877/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876G. Clubstep",
    "url": "https://codeforces.com/problemset/problem/1876/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876F. Indefinite Clownfish",
    "url": "https://codeforces.com/problemset/problem/1876/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876E. Ball-Stackable",
    "url": "https://codeforces.com/problemset/problem/1876/E",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876D. Lexichromatography",
    "url": "https://codeforces.com/problemset/problem/1876/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876C. Autosynthesis",
    "url": "https://codeforces.com/problemset/problem/1876/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876B. Effects of Anti Pimples",
    "url": "https://codeforces.com/problemset/problem/1876/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1876A. Helmets in Night Light",
    "url": "https://codeforces.com/problemset/problem/1876/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1875D. Jellyfish and Mex",
    "url": "https://codeforces.com/problemset/problem/1875/D",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1875C. Jellyfish and Green Apple",
    "url": "https://codeforces.com/problemset/problem/1875/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1875A. Jellyfish and Undertale",
    "url": "https://codeforces.com/problemset/problem/1875/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874G. Jellyfish and Inscryption",
    "url": "https://codeforces.com/problemset/problem/1874/G",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874F. Jellyfish and OEIS",
    "url": "https://codeforces.com/problemset/problem/1874/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874E. Jellyfish and Hack",
    "url": "https://codeforces.com/problemset/problem/1874/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874D. Jellyfish and Miku",
    "url": "https://codeforces.com/problemset/problem/1874/D",
    "difficulty": 2800,
    "tags": [
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874C. Jellyfish and EVA",
    "url": "https://codeforces.com/problemset/problem/1874/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874B. Jellyfish and Math",
    "url": "https://codeforces.com/problemset/problem/1874/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1874A. Jellyfish and Game",
    "url": "https://codeforces.com/problemset/problem/1874/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873H. Mad City",
    "url": "https://codeforces.com/problemset/problem/1873/H",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "games",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873G. ABBC or BACB",
    "url": "https://codeforces.com/problemset/problem/1873/G",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873F. Money Trees",
    "url": "https://codeforces.com/problemset/problem/1873/F",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873E. Building an Aquarium",
    "url": "https://codeforces.com/problemset/problem/1873/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873D. 1D Eraser",
    "url": "https://codeforces.com/problemset/problem/1873/D",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873C. Target Practice",
    "url": "https://codeforces.com/problemset/problem/1873/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873B. Good Kid",
    "url": "https://codeforces.com/problemset/problem/1873/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1873A. Short Sort",
    "url": "https://codeforces.com/problemset/problem/1873/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872G. Replace With Product",
    "url": "https://codeforces.com/problemset/problem/1872/G",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872F. Selling a Menagerie",
    "url": "https://codeforces.com/problemset/problem/1872/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872E. Data Structures Fan",
    "url": "https://codeforces.com/problemset/problem/1872/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872D. Plus Minus Permutation",
    "url": "https://codeforces.com/problemset/problem/1872/D",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872C. Non-coprime Split",
    "url": "https://codeforces.com/problemset/problem/1872/C",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872B. The Corridor or There and Back Again",
    "url": "https://codeforces.com/problemset/problem/1872/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1872A. Two Vessels",
    "url": "https://codeforces.com/problemset/problem/1872/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870H. Standard Graph Problem",
    "url": "https://codeforces.com/problemset/problem/1870/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870G. MEXanization",
    "url": "https://codeforces.com/problemset/problem/1870/G",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870F. Lazy Numbers",
    "url": "https://codeforces.com/problemset/problem/1870/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870E. Another MEX Problem",
    "url": "https://codeforces.com/problemset/problem/1870/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870D. Prefix Purchase",
    "url": "https://codeforces.com/problemset/problem/1870/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870C. Colorful Table",
    "url": "https://codeforces.com/problemset/problem/1870/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870B. Friendly Arrays",
    "url": "https://codeforces.com/problemset/problem/1870/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1870A. MEXanized Array",
    "url": "https://codeforces.com/problemset/problem/1870/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1869B. 2D Traveling",
    "url": "https://codeforces.com/problemset/problem/1869/B",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1869A. Make It Zero",
    "url": "https://codeforces.com/problemset/problem/1869/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868F. LIS?",
    "url": "https://codeforces.com/problemset/problem/1868/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868E. Min-Sum-Max",
    "url": "https://codeforces.com/problemset/problem/1868/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868D. Flower-like Pseudotree",
    "url": "https://codeforces.com/problemset/problem/1868/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868C. Travel Plan",
    "url": "https://codeforces.com/problemset/problem/1868/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868B2. Candy Party (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1868/B2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868B1. Candy Party (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1868/B1",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1868A. Fill in the Matrix",
    "url": "https://codeforces.com/problemset/problem/1868/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867F. Most Different Tree",
    "url": "https://codeforces.com/problemset/problem/1867/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867E2. Salyg1n and Array (hard version)",
    "url": "https://codeforces.com/problemset/problem/1867/E2",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867E1. Salyg1n and Array (simple version)",
    "url": "https://codeforces.com/problemset/problem/1867/E1",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867D. Cyclic Operations",
    "url": "https://codeforces.com/problemset/problem/1867/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867C. Salyg1n and the MEX Game",
    "url": "https://codeforces.com/problemset/problem/1867/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867B. XOR Palindromes",
    "url": "https://codeforces.com/problemset/problem/1867/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1867A. green_gold_dog, array and permutation",
    "url": "https://codeforces.com/problemset/problem/1867/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866M. Mighty Rock Tower",
    "url": "https://codeforces.com/problemset/problem/1866/M",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866L. Lihmuf Balling",
    "url": "https://codeforces.com/problemset/problem/1866/L",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866K. Keen Tree Calculation",
    "url": "https://codeforces.com/problemset/problem/1866/K",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866J. Jackets and Packets",
    "url": "https://codeforces.com/problemset/problem/1866/J",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866I. Imagination Castle",
    "url": "https://codeforces.com/problemset/problem/1866/I",
    "difficulty": 2300,
    "tags": [
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866H. Happy Sets",
    "url": "https://codeforces.com/problemset/problem/1866/H",
    "difficulty": 2100,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866G. Grouped Carriages",
    "url": "https://codeforces.com/problemset/problem/1866/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866F. Freak Joker Process",
    "url": "https://codeforces.com/problemset/problem/1866/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866E. Elevators of Tamem",
    "url": "https://codeforces.com/problemset/problem/1866/E",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866D. Digital Wallet",
    "url": "https://codeforces.com/problemset/problem/1866/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866C. Completely Searching for Inversions",
    "url": "https://codeforces.com/problemset/problem/1866/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866B. Battling with Numbers",
    "url": "https://codeforces.com/problemset/problem/1866/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1866A. Ambitious Kid",
    "url": "https://codeforces.com/problemset/problem/1866/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864I. Future Dominators",
    "url": "https://codeforces.com/problemset/problem/1864/I",
    "difficulty": 3500,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864H. Asterism Stream",
    "url": "https://codeforces.com/problemset/problem/1864/H",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864G. Magic Square",
    "url": "https://codeforces.com/problemset/problem/1864/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864F. Exotic Queries",
    "url": "https://codeforces.com/problemset/problem/1864/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864E. Guess Game",
    "url": "https://codeforces.com/problemset/problem/1864/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "math",
      "probabilities",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864D. Matrix Cascade",
    "url": "https://codeforces.com/problemset/problem/1864/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864C. Divisor Chain",
    "url": "https://codeforces.com/problemset/problem/1864/C",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864B. Swap and Reverse",
    "url": "https://codeforces.com/problemset/problem/1864/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1864A. Increasing and Decreasing",
    "url": "https://codeforces.com/problemset/problem/1864/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863I. Redundant Routes",
    "url": "https://codeforces.com/problemset/problem/1863/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863H. Goldberg Machine 3",
    "url": "https://codeforces.com/problemset/problem/1863/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863G. Swaps",
    "url": "https://codeforces.com/problemset/problem/1863/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863F. Divide, XOR, and Conquer",
    "url": "https://codeforces.com/problemset/problem/1863/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863E. Speedrun",
    "url": "https://codeforces.com/problemset/problem/1863/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863D. Two-Colored Dominoes",
    "url": "https://codeforces.com/problemset/problem/1863/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863C. MEX Repetition",
    "url": "https://codeforces.com/problemset/problem/1863/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863B. Split Sort",
    "url": "https://codeforces.com/problemset/problem/1863/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1863A. Channel",
    "url": "https://codeforces.com/problemset/problem/1863/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862G. The Great Equalizer",
    "url": "https://codeforces.com/problemset/problem/1862/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862F. Magic Will Save the World",
    "url": "https://codeforces.com/problemset/problem/1862/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862E. Kolya and Movie Theatre",
    "url": "https://codeforces.com/problemset/problem/1862/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862D. Ice Cream Balls",
    "url": "https://codeforces.com/problemset/problem/1862/D",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862C. Flower City Fence",
    "url": "https://codeforces.com/problemset/problem/1862/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862B. Sequence Game",
    "url": "https://codeforces.com/problemset/problem/1862/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1862A. Gift Carpet",
    "url": "https://codeforces.com/problemset/problem/1862/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861F. Four Suits",
    "url": "https://codeforces.com/problemset/problem/1861/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "bitmasks",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861E. Non-Intersecting Subpermutations",
    "url": "https://codeforces.com/problemset/problem/1861/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861D. Sorting By Multiplication",
    "url": "https://codeforces.com/problemset/problem/1861/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861C. Queries for the Array",
    "url": "https://codeforces.com/problemset/problem/1861/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861B. Two Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1861/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1861A. Prime Deletion",
    "url": "https://codeforces.com/problemset/problem/1861/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860F. Evaluate RBS",
    "url": "https://codeforces.com/problemset/problem/1860/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860E. Fast Travel Text Editor",
    "url": "https://codeforces.com/problemset/problem/1860/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860D. Balanced String",
    "url": "https://codeforces.com/problemset/problem/1860/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860C. Game on Permutation",
    "url": "https://codeforces.com/problemset/problem/1860/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860B. Fancy Coins",
    "url": "https://codeforces.com/problemset/problem/1860/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1860A. Not a Substring",
    "url": "https://codeforces.com/problemset/problem/1860/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859F. Teleportation in Byteland",
    "url": "https://codeforces.com/problemset/problem/1859/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859E. Maximum Monogonosity",
    "url": "https://codeforces.com/problemset/problem/1859/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859D. Andrey and Escape from Capygrad",
    "url": "https://codeforces.com/problemset/problem/1859/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859C. Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1859/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859B. Olya and Game with Arrays",
    "url": "https://codeforces.com/problemset/problem/1859/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1859A. United We Stand",
    "url": "https://codeforces.com/problemset/problem/1859/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858E2. Rollbacks (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1858/E2",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858E1. Rollbacks (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1858/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858D. Trees and Segments",
    "url": "https://codeforces.com/problemset/problem/1858/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858C. Yet Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1858/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858B. The Walkway",
    "url": "https://codeforces.com/problemset/problem/1858/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1858A. Buttons",
    "url": "https://codeforces.com/problemset/problem/1858/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857G. Counting Graphs",
    "url": "https://codeforces.com/problemset/problem/1857/G",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857F. Sum and Product",
    "url": "https://codeforces.com/problemset/problem/1857/F",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857E. Power of Points",
    "url": "https://codeforces.com/problemset/problem/1857/E",
    "difficulty": 1500,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857D. Strong Vertices",
    "url": "https://codeforces.com/problemset/problem/1857/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857C. Assembly via Minimums",
    "url": "https://codeforces.com/problemset/problem/1857/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857B. Maximum Rounding",
    "url": "https://codeforces.com/problemset/problem/1857/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1857A. Array Coloring",
    "url": "https://codeforces.com/problemset/problem/1857/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856E2. PermuTree (hard version)",
    "url": "https://codeforces.com/problemset/problem/1856/E2",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "fft",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856E1. PermuTree (easy version)",
    "url": "https://codeforces.com/problemset/problem/1856/E1",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856D. More Wrong",
    "url": "https://codeforces.com/problemset/problem/1856/D",
    "difficulty": 2100,
    "tags": [
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856C. To Become Max",
    "url": "https://codeforces.com/problemset/problem/1856/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856B. Good Arrays",
    "url": "https://codeforces.com/problemset/problem/1856/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1856A. Tales of a Sort",
    "url": "https://codeforces.com/problemset/problem/1856/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1855B. Longest Divisors Interval",
    "url": "https://codeforces.com/problemset/problem/1855/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1855A. Dalton the Teacher",
    "url": "https://codeforces.com/problemset/problem/1855/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854F. Mark and Spaceship",
    "url": "https://codeforces.com/problemset/problem/1854/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854E. Game Bundles",
    "url": "https://codeforces.com/problemset/problem/1854/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854D. Michael and Hotel",
    "url": "https://codeforces.com/problemset/problem/1854/D",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854C. Expected Destruction",
    "url": "https://codeforces.com/problemset/problem/1854/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854B. Earn or Unlock",
    "url": "https://codeforces.com/problemset/problem/1854/B",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854A2. Dual (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1854/A2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1854A1. Dual (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1854/A1",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1853B. Fibonaccharsis",
    "url": "https://codeforces.com/problemset/problem/1853/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1853A. Desorting",
    "url": "https://codeforces.com/problemset/problem/1853/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852F. Panda Meetups",
    "url": "https://codeforces.com/problemset/problem/1852/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852E. Rivalries",
    "url": "https://codeforces.com/problemset/problem/1852/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852D. Miriany and Matchstick",
    "url": "https://codeforces.com/problemset/problem/1852/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852C. Ina of the Mountain",
    "url": "https://codeforces.com/problemset/problem/1852/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852B. Imbalanced Arrays",
    "url": "https://codeforces.com/problemset/problem/1852/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1852A. Ntarsis' Set",
    "url": "https://codeforces.com/problemset/problem/1852/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851G. Vlad and the Mountains",
    "url": "https://codeforces.com/problemset/problem/1851/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851F. Lisa and the Martians",
    "url": "https://codeforces.com/problemset/problem/1851/F",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851E. Nastya and Potions",
    "url": "https://codeforces.com/problemset/problem/1851/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851D. Prefix Permutation Sums",
    "url": "https://codeforces.com/problemset/problem/1851/D",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851C. Tiles Comeback",
    "url": "https://codeforces.com/problemset/problem/1851/C",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851B. Parity Sort",
    "url": "https://codeforces.com/problemset/problem/1851/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1851A. Escalator Conversations",
    "url": "https://codeforces.com/problemset/problem/1851/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850H. The Third Letter",
    "url": "https://codeforces.com/problemset/problem/1850/H",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850G. The Morning Star",
    "url": "https://codeforces.com/problemset/problem/1850/G",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850F. We Were Both Children",
    "url": "https://codeforces.com/problemset/problem/1850/F",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850E. Cardboard for Pictures",
    "url": "https://codeforces.com/problemset/problem/1850/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850D. Balanced Round",
    "url": "https://codeforces.com/problemset/problem/1850/D",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850C. Word on the Paper",
    "url": "https://codeforces.com/problemset/problem/1850/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850B. Ten Words of Wisdom",
    "url": "https://codeforces.com/problemset/problem/1850/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1850A. To My Critics",
    "url": "https://codeforces.com/problemset/problem/1850/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849F. XOR Partition",
    "url": "https://codeforces.com/problemset/problem/1849/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849E. Max to the Right of Min",
    "url": "https://codeforces.com/problemset/problem/1849/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849D. Array Painting",
    "url": "https://codeforces.com/problemset/problem/1849/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849C. Binary String Copying",
    "url": "https://codeforces.com/problemset/problem/1849/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849B. Monsters",
    "url": "https://codeforces.com/problemset/problem/1849/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1849A. Morning Sandwich",
    "url": "https://codeforces.com/problemset/problem/1849/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848F. Vika and Wiki",
    "url": "https://codeforces.com/problemset/problem/1848/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848E. Vika and Stone Skipping",
    "url": "https://codeforces.com/problemset/problem/1848/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848D. Vika and Bonuses",
    "url": "https://codeforces.com/problemset/problem/1848/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848C. Vika and Price Tags",
    "url": "https://codeforces.com/problemset/problem/1848/C",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848B. Vika and the Bridge",
    "url": "https://codeforces.com/problemset/problem/1848/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1848A. Vika and Her Friends",
    "url": "https://codeforces.com/problemset/problem/1848/A",
    "difficulty": 900,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847F. The Boss's Identity",
    "url": "https://codeforces.com/problemset/problem/1847/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847E. Triangle Platinum?",
    "url": "https://codeforces.com/problemset/problem/1847/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847D. Professor Higashikata",
    "url": "https://codeforces.com/problemset/problem/1847/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847C. Vampiric Powers, anyone?",
    "url": "https://codeforces.com/problemset/problem/1847/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847B. Hamon Odyssey",
    "url": "https://codeforces.com/problemset/problem/1847/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1847A. The Man who became a God ",
    "url": "https://codeforces.com/problemset/problem/1847/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846G. Rudolf and CodeVid-23",
    "url": "https://codeforces.com/problemset/problem/1846/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846F. Rudolph and Mimic",
    "url": "https://codeforces.com/problemset/problem/1846/F",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846E2. Rudolf and Snowflakes (hard version)",
    "url": "https://codeforces.com/problemset/problem/1846/E2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846E1. Rudolf and Snowflakes (simple version)",
    "url": "https://codeforces.com/problemset/problem/1846/E1",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846D. Rudolph and Christmas Tree",
    "url": "https://codeforces.com/problemset/problem/1846/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846C. Rudolf and the Another Competition",
    "url": "https://codeforces.com/problemset/problem/1846/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846B. Rudolph and Tic-Tac-Toe",
    "url": "https://codeforces.com/problemset/problem/1846/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1846A. Rudolph and Cut the Rope ",
    "url": "https://codeforces.com/problemset/problem/1846/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845F. Swimmers in the Pool",
    "url": "https://codeforces.com/problemset/problem/1845/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845E. Boxes and Balls",
    "url": "https://codeforces.com/problemset/problem/1845/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845D. Rating System",
    "url": "https://codeforces.com/problemset/problem/1845/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845C. Strong Password",
    "url": "https://codeforces.com/problemset/problem/1845/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845B. Come Together",
    "url": "https://codeforces.com/problemset/problem/1845/B",
    "difficulty": 900,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1845A. Forbidden Integer",
    "url": "https://codeforces.com/problemset/problem/1845/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844H. Multiple of Three Cycles",
    "url": "https://codeforces.com/problemset/problem/1844/H",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844G. Tree Weights",
    "url": "https://codeforces.com/problemset/problem/1844/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "implementation",
      "math",
      "matrices",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844F2. Min Cost Permutation (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1844/F2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844F1. Min Cost Permutation (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1844/F1",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844E. Great Grids",
    "url": "https://codeforces.com/problemset/problem/1844/E",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844D. Row Major",
    "url": "https://codeforces.com/problemset/problem/1844/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844C. Particles",
    "url": "https://codeforces.com/problemset/problem/1844/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844B. Permutations & Primes",
    "url": "https://codeforces.com/problemset/problem/1844/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1844A. Subtraction Game",
    "url": "https://codeforces.com/problemset/problem/1844/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843F2. Omsk Metro (hard version)",
    "url": "https://codeforces.com/problemset/problem/1843/F2",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843F1. Omsk Metro (simple version)",
    "url": "https://codeforces.com/problemset/problem/1843/F1",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843E. Tracking Segments",
    "url": "https://codeforces.com/problemset/problem/1843/E",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843D. Apple Tree",
    "url": "https://codeforces.com/problemset/problem/1843/D",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843C. Sum in Binary Tree",
    "url": "https://codeforces.com/problemset/problem/1843/C",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843B. Long Long",
    "url": "https://codeforces.com/problemset/problem/1843/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1843A. Sasha and Array Coloring",
    "url": "https://codeforces.com/problemset/problem/1843/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842I. Tenzing and Necklace",
    "url": "https://codeforces.com/problemset/problem/1842/I",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842H. Tenzing and Random Real Numbers",
    "url": "https://codeforces.com/problemset/problem/1842/H",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842G. Tenzing and Random Operations",
    "url": "https://codeforces.com/problemset/problem/1842/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842F. Tenzing and Tree",
    "url": "https://codeforces.com/problemset/problem/1842/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842E. Tenzing and Triangle",
    "url": "https://codeforces.com/problemset/problem/1842/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842D. Tenzing and His Animal Friends ",
    "url": "https://codeforces.com/problemset/problem/1842/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842C. Tenzing and Balls",
    "url": "https://codeforces.com/problemset/problem/1842/C",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842B. Tenzing and Books",
    "url": "https://codeforces.com/problemset/problem/1842/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1842A. Tenzing and Tsondu",
    "url": "https://codeforces.com/problemset/problem/1842/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841F. Monocarp and a Strategic Game",
    "url": "https://codeforces.com/problemset/problem/1841/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841E. Fill the Matrix",
    "url": "https://codeforces.com/problemset/problem/1841/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841D. Pairs of Segments",
    "url": "https://codeforces.com/problemset/problem/1841/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841C. Ranom Numbers",
    "url": "https://codeforces.com/problemset/problem/1841/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841B. Keep it Beautiful",
    "url": "https://codeforces.com/problemset/problem/1841/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1841A. Game with Board",
    "url": "https://codeforces.com/problemset/problem/1841/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840G2. In Search of Truth (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1840/G2",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "meet-in-the-middle",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840G1. In Search of Truth (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1840/G1",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "meet-in-the-middle",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840F. Railguns",
    "url": "https://codeforces.com/problemset/problem/1840/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840E. Character Blocking",
    "url": "https://codeforces.com/problemset/problem/1840/E",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840D. Wooden Toy Festival",
    "url": "https://codeforces.com/problemset/problem/1840/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840C. Ski Resort",
    "url": "https://codeforces.com/problemset/problem/1840/C",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840B. Binary Cafe",
    "url": "https://codeforces.com/problemset/problem/1840/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1840A. Cipher Shifer",
    "url": "https://codeforces.com/problemset/problem/1840/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1839E. Decreasing Game",
    "url": "https://codeforces.com/problemset/problem/1839/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1839D. Ball Sorting",
    "url": "https://codeforces.com/problemset/problem/1839/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1839C. Insert Zero and Invert Prefix",
    "url": "https://codeforces.com/problemset/problem/1839/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1839B. Lamps",
    "url": "https://codeforces.com/problemset/problem/1839/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1839A. The Good Array",
    "url": "https://codeforces.com/problemset/problem/1839/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838F. Stuck Conveyor",
    "url": "https://codeforces.com/problemset/problem/1838/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838E. Count Supersequences",
    "url": "https://codeforces.com/problemset/problem/1838/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838D. Bracket Walk",
    "url": "https://codeforces.com/problemset/problem/1838/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838C. No Prime Differences",
    "url": "https://codeforces.com/problemset/problem/1838/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838B. Minimize Permutation Subarrays",
    "url": "https://codeforces.com/problemset/problem/1838/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1838A. Blackboard List",
    "url": "https://codeforces.com/problemset/problem/1838/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837F. Editorial for Two",
    "url": "https://codeforces.com/problemset/problem/1837/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837E. Playoff Fixing",
    "url": "https://codeforces.com/problemset/problem/1837/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837D. Bracket Coloring",
    "url": "https://codeforces.com/problemset/problem/1837/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837C. Best Binary String",
    "url": "https://codeforces.com/problemset/problem/1837/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837B. Comparison String",
    "url": "https://codeforces.com/problemset/problem/1837/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1837A. Grasshopper on a Line",
    "url": "https://codeforces.com/problemset/problem/1837/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1836B. Astrophysicists",
    "url": "https://codeforces.com/problemset/problem/1836/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1836A. Destroyer",
    "url": "https://codeforces.com/problemset/problem/1836/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835F. Good Graph",
    "url": "https://codeforces.com/problemset/problem/1835/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835E. Old Mobile",
    "url": "https://codeforces.com/problemset/problem/1835/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835D. Doctor's Brown Hypothesis",
    "url": "https://codeforces.com/problemset/problem/1835/D",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835C. Twin Clusters",
    "url": "https://codeforces.com/problemset/problem/1835/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835B. Lottery",
    "url": "https://codeforces.com/problemset/problem/1835/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1835A. k-th equality",
    "url": "https://codeforces.com/problemset/problem/1835/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834F. Typewriter",
    "url": "https://codeforces.com/problemset/problem/1834/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834E. MEX of LCM",
    "url": "https://codeforces.com/problemset/problem/1834/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834D. Survey in Class",
    "url": "https://codeforces.com/problemset/problem/1834/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834C. Game with Reversing",
    "url": "https://codeforces.com/problemset/problem/1834/C",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834B. Maximum Strength",
    "url": "https://codeforces.com/problemset/problem/1834/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1834A. Unit Array",
    "url": "https://codeforces.com/problemset/problem/1834/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833G. Ksyusha and Chinchilla",
    "url": "https://codeforces.com/problemset/problem/1833/G",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833F. Ira and Flamenco",
    "url": "https://codeforces.com/problemset/problem/1833/F",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833E. Round Dance",
    "url": "https://codeforces.com/problemset/problem/1833/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833D. Flipper",
    "url": "https://codeforces.com/problemset/problem/1833/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833C. Vlad Building Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1833/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833B. Restore the Weather",
    "url": "https://codeforces.com/problemset/problem/1833/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1833A. Musical Puzzle",
    "url": "https://codeforces.com/problemset/problem/1833/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832F. Zombies",
    "url": "https://codeforces.com/problemset/problem/1832/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832E. Combinatorics Problem",
    "url": "https://codeforces.com/problemset/problem/1832/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832D2. Red-Blue Operations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1832/D2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832D1. Red-Blue Operations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1832/D1",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832C. Contrast Value",
    "url": "https://codeforces.com/problemset/problem/1832/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832B. Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/1832/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1832A. New Palindrome",
    "url": "https://codeforces.com/problemset/problem/1832/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1831B. Array merging",
    "url": "https://codeforces.com/problemset/problem/1831/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1831A. Twin Permutations",
    "url": "https://codeforces.com/problemset/problem/1831/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830F. The Third Grace",
    "url": "https://codeforces.com/problemset/problem/1830/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830E. Bully Sort",
    "url": "https://codeforces.com/problemset/problem/1830/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830D. Mex Tree",
    "url": "https://codeforces.com/problemset/problem/1830/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830C. Hyperregular Bracket Strings",
    "url": "https://codeforces.com/problemset/problem/1830/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830B. The BOSS Can Count Pairs",
    "url": "https://codeforces.com/problemset/problem/1830/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1830A. Copil Copac Draws Trees",
    "url": "https://codeforces.com/problemset/problem/1830/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829H. Don't Blame Me",
    "url": "https://codeforces.com/problemset/problem/1829/H",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829G. Hits Different",
    "url": "https://codeforces.com/problemset/problem/1829/G",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829F. Forever Winter",
    "url": "https://codeforces.com/problemset/problem/1829/F",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829E. The Lakes",
    "url": "https://codeforces.com/problemset/problem/1829/E",
    "difficulty": 1100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829D. Gold Rush",
    "url": "https://codeforces.com/problemset/problem/1829/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829C. Mr. Perfectly Fine",
    "url": "https://codeforces.com/problemset/problem/1829/C",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829B. Blank Space",
    "url": "https://codeforces.com/problemset/problem/1829/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1829A. Love Story",
    "url": "https://codeforces.com/problemset/problem/1829/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1828B. Permutation Swap",
    "url": "https://codeforces.com/problemset/problem/1828/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1828A. Divisible Array",
    "url": "https://codeforces.com/problemset/problem/1828/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827F. Copium Permutation",
    "url": "https://codeforces.com/problemset/problem/1827/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827E. Bus Routes",
    "url": "https://codeforces.com/problemset/problem/1827/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827D. Two Centroids",
    "url": "https://codeforces.com/problemset/problem/1827/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827C. Palindrome Partition",
    "url": "https://codeforces.com/problemset/problem/1827/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827B2. Range Sorting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1827/B2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827B1. Range Sorting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1827/B1",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1827A. Counting Orders",
    "url": "https://codeforces.com/problemset/problem/1827/A",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826F. Fading into Fog",
    "url": "https://codeforces.com/problemset/problem/1826/F",
    "difficulty": 2800,
    "tags": [
      "geometry",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826E. Walk the Runway",
    "url": "https://codeforces.com/problemset/problem/1826/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826D. Running Miles",
    "url": "https://codeforces.com/problemset/problem/1826/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826C. Dreaming of Freedom",
    "url": "https://codeforces.com/problemset/problem/1826/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826B. Lunatic Never Content",
    "url": "https://codeforces.com/problemset/problem/1826/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1826A. Trust Nobody",
    "url": "https://codeforces.com/problemset/problem/1826/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1825B. LuoTianyi and the Table",
    "url": "https://codeforces.com/problemset/problem/1825/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1825A. LuoTianyi and the Palindrome String",
    "url": "https://codeforces.com/problemset/problem/1825/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824E. LuoTianyi and Cartridge",
    "url": "https://codeforces.com/problemset/problem/1824/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824D. LuoTianyi and the Function",
    "url": "https://codeforces.com/problemset/problem/1824/D",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824C. LuoTianyi and XOR-Tree",
    "url": "https://codeforces.com/problemset/problem/1824/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824B2. LuoTianyi and the Floating Islands (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1824/B2",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824B1. LuoTianyi and the Floating Islands (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1824/B1",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1824A. LuoTianyi and the Show",
    "url": "https://codeforces.com/problemset/problem/1824/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823F. Random Walk",
    "url": "https://codeforces.com/problemset/problem/1823/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823E. Removing Graph",
    "url": "https://codeforces.com/problemset/problem/1823/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "games",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823D. Unique Palindromes",
    "url": "https://codeforces.com/problemset/problem/1823/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823C. Strongly Composite",
    "url": "https://codeforces.com/problemset/problem/1823/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823B. Sort with Step",
    "url": "https://codeforces.com/problemset/problem/1823/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1823A. A-characteristic",
    "url": "https://codeforces.com/problemset/problem/1823/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822G2. Magic Triples (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1822/G2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822G1. Magic Triples (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1822/G1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822F. Gardening Friends",
    "url": "https://codeforces.com/problemset/problem/1822/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822E. Making Anti-Palindromes",
    "url": "https://codeforces.com/problemset/problem/1822/E",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822D. Super-Permutation",
    "url": "https://codeforces.com/problemset/problem/1822/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822C. Bun Lover",
    "url": "https://codeforces.com/problemset/problem/1822/C",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822B. Karina and Array",
    "url": "https://codeforces.com/problemset/problem/1822/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1822A. TubeTube Feed",
    "url": "https://codeforces.com/problemset/problem/1822/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821F. Timber",
    "url": "https://codeforces.com/problemset/problem/1821/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821E. Rearrange Brackets",
    "url": "https://codeforces.com/problemset/problem/1821/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821D. Black Cells",
    "url": "https://codeforces.com/problemset/problem/1821/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821C. Tear It Apart",
    "url": "https://codeforces.com/problemset/problem/1821/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821B. Sort the Subarray",
    "url": "https://codeforces.com/problemset/problem/1821/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1821A. Matching",
    "url": "https://codeforces.com/problemset/problem/1821/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1820B. JoJo's Incredible Adventures",
    "url": "https://codeforces.com/problemset/problem/1820/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1820A. Yura's New Name",
    "url": "https://codeforces.com/problemset/problem/1820/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819F. Willy-nilly, Crack, Into Release!",
    "url": "https://codeforces.com/problemset/problem/1819/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819E. Roads in E City",
    "url": "https://codeforces.com/problemset/problem/1819/E",
    "difficulty": 3200,
    "tags": [
      "interactive",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819D. Misha and Apples",
    "url": "https://codeforces.com/problemset/problem/1819/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819C. The Fox and the Complete Tree Traversal",
    "url": "https://codeforces.com/problemset/problem/1819/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819B. The Butcher",
    "url": "https://codeforces.com/problemset/problem/1819/B",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1819A. Constructive Problem",
    "url": "https://codeforces.com/problemset/problem/1819/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1818B. Indivisible",
    "url": "https://codeforces.com/problemset/problem/1818/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1818A. Politics",
    "url": "https://codeforces.com/problemset/problem/1818/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817F. Entangled Substrings",
    "url": "https://codeforces.com/problemset/problem/1817/F",
    "difficulty": 3500,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817E. Half-sum",
    "url": "https://codeforces.com/problemset/problem/1817/E",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817D. Toy Machine",
    "url": "https://codeforces.com/problemset/problem/1817/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817C. Similar Polynomials",
    "url": "https://codeforces.com/problemset/problem/1817/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817B. Fish Graph",
    "url": "https://codeforces.com/problemset/problem/1817/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1817A. Almost Increasing Subsequence",
    "url": "https://codeforces.com/problemset/problem/1817/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1816B. Grid Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1816/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1816A. Ian Visits Mary",
    "url": "https://codeforces.com/problemset/problem/1816/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "geometry",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815F. OH NO1 (-2-3-4)",
    "url": "https://codeforces.com/problemset/problem/1815/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815E. Bosco and Particle",
    "url": "https://codeforces.com/problemset/problem/1815/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815D. XOR Counting",
    "url": "https://codeforces.com/problemset/problem/1815/D",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815C. Between",
    "url": "https://codeforces.com/problemset/problem/1815/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815B. Sum Graph",
    "url": "https://codeforces.com/problemset/problem/1815/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "implementation",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1815A. Ian and Array Sorting",
    "url": "https://codeforces.com/problemset/problem/1815/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814F. Communication Towers",
    "url": "https://codeforces.com/problemset/problem/1814/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814E. Chain Chips",
    "url": "https://codeforces.com/problemset/problem/1814/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814D. Balancing Weapons",
    "url": "https://codeforces.com/problemset/problem/1814/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814C. Search in Parallel",
    "url": "https://codeforces.com/problemset/problem/1814/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814B. Long Legs",
    "url": "https://codeforces.com/problemset/problem/1814/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1814A. Coins",
    "url": "https://codeforces.com/problemset/problem/1814/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812J. Unmysterious Language",
    "url": "https://codeforces.com/problemset/problem/1812/J",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812I. Mountain Climber",
    "url": "https://codeforces.com/problemset/problem/1812/I",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812H. Expected Twist",
    "url": "https://codeforces.com/problemset/problem/1812/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812G. Colour Vision",
    "url": "https://codeforces.com/problemset/problem/1812/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812F. Factorization",
    "url": "https://codeforces.com/problemset/problem/1812/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812E. Not a Geometry Problem",
    "url": "https://codeforces.com/problemset/problem/1812/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812D. Trivial Conjecture",
    "url": "https://codeforces.com/problemset/problem/1812/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812C. Digits",
    "url": "https://codeforces.com/problemset/problem/1812/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812B. Was it Rated?",
    "url": "https://codeforces.com/problemset/problem/1812/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1812A. Are You a Robot?",
    "url": "https://codeforces.com/problemset/problem/1812/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "*special",
      "expression parsing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811G2. Vlad and the Nice Paths (hard version)",
    "url": "https://codeforces.com/problemset/problem/1811/G2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811G1. Vlad and the Nice Paths (easy version)",
    "url": "https://codeforces.com/problemset/problem/1811/G1",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811F. Is It Flower?",
    "url": "https://codeforces.com/problemset/problem/1811/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811E. Living Sequence",
    "url": "https://codeforces.com/problemset/problem/1811/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811D. Umka and a Long Flight",
    "url": "https://codeforces.com/problemset/problem/1811/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811C. Restore the Array",
    "url": "https://codeforces.com/problemset/problem/1811/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811B. Conveyor Belts",
    "url": "https://codeforces.com/problemset/problem/1811/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1811A. Insert Digit",
    "url": "https://codeforces.com/problemset/problem/1811/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810H. Last Number",
    "url": "https://codeforces.com/problemset/problem/1810/H",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810G. The Maximum Prefix",
    "url": "https://codeforces.com/problemset/problem/1810/G",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810F. M-tree",
    "url": "https://codeforces.com/problemset/problem/1810/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810E. Monsters",
    "url": "https://codeforces.com/problemset/problem/1810/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810D. Climbing the Tree",
    "url": "https://codeforces.com/problemset/problem/1810/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810C. Make It Permutation",
    "url": "https://codeforces.com/problemset/problem/1810/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810B. Candies",
    "url": "https://codeforces.com/problemset/problem/1810/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1810A. Beautiful Sequence",
    "url": "https://codeforces.com/problemset/problem/1810/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809G. Prediction",
    "url": "https://codeforces.com/problemset/problem/1809/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809F. Traveling in Berland",
    "url": "https://codeforces.com/problemset/problem/1809/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809E. Two Tanks",
    "url": "https://codeforces.com/problemset/problem/1809/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809D. Binary String Sorting",
    "url": "https://codeforces.com/problemset/problem/1809/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809C. Sum on Subarrays",
    "url": "https://codeforces.com/problemset/problem/1809/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809B. Points on Plane",
    "url": "https://codeforces.com/problemset/problem/1809/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1809A. Garland",
    "url": "https://codeforces.com/problemset/problem/1809/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808E3. Minibuses on Venus (hard version)",
    "url": "https://codeforces.com/problemset/problem/1808/E3",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808E2. Minibuses on Venus (medium version)",
    "url": "https://codeforces.com/problemset/problem/1808/E2",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808E1. Minibuses on Venus (easy version)",
    "url": "https://codeforces.com/problemset/problem/1808/E1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808D. Petya, Petya, Petr, and Palindromes",
    "url": "https://codeforces.com/problemset/problem/1808/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808C. Unlucky Numbers",
    "url": "https://codeforces.com/problemset/problem/1808/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808B. Playing in a Casino",
    "url": "https://codeforces.com/problemset/problem/1808/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1808A. Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/1808/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807G2. Subsequence Addition (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1807/G2",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807G1. Subsequence Addition (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1807/G1",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807F. Bouncy Ball",
    "url": "https://codeforces.com/problemset/problem/1807/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807E. Interview",
    "url": "https://codeforces.com/problemset/problem/1807/E",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807D. Odd Queries",
    "url": "https://codeforces.com/problemset/problem/1807/D",
    "difficulty": 900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807C. Find and Replace",
    "url": "https://codeforces.com/problemset/problem/1807/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807B. Grab the Candies",
    "url": "https://codeforces.com/problemset/problem/1807/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1807A. Plus or Minus",
    "url": "https://codeforces.com/problemset/problem/1807/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806F2. GCD Master (hard version)",
    "url": "https://codeforces.com/problemset/problem/1806/F2",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806F1. GCD Master (easy version)",
    "url": "https://codeforces.com/problemset/problem/1806/F1",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806E. Tree Master",
    "url": "https://codeforces.com/problemset/problem/1806/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806D. DSU Master",
    "url": "https://codeforces.com/problemset/problem/1806/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806C. Sequence Master",
    "url": "https://codeforces.com/problemset/problem/1806/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806B. Mex Master",
    "url": "https://codeforces.com/problemset/problem/1806/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1806A. Walking Master",
    "url": "https://codeforces.com/problemset/problem/1806/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805F2. Survival of the Weakest (hard version)",
    "url": "https://codeforces.com/problemset/problem/1805/F2",
    "difficulty": 3100,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805F1. Survival of the Weakest (easy version)",
    "url": "https://codeforces.com/problemset/problem/1805/F1",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805E. There Should Be a Lot of Maximums",
    "url": "https://codeforces.com/problemset/problem/1805/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805D. A Wide, Wide Graph",
    "url": "https://codeforces.com/problemset/problem/1805/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805C. Place for a Selfie",
    "url": "https://codeforces.com/problemset/problem/1805/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805B. The String Has a Target",
    "url": "https://codeforces.com/problemset/problem/1805/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1805A. We Need the Zero",
    "url": "https://codeforces.com/problemset/problem/1805/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804H. Code Lock",
    "url": "https://codeforces.com/problemset/problem/1804/H",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804G. Flow Control",
    "url": "https://codeforces.com/problemset/problem/1804/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804F. Approximate Diameter",
    "url": "https://codeforces.com/problemset/problem/1804/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "divide and conquer",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804E. Routing",
    "url": "https://codeforces.com/problemset/problem/1804/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804D. Accommodation",
    "url": "https://codeforces.com/problemset/problem/1804/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804C. Pull Your Luck",
    "url": "https://codeforces.com/problemset/problem/1804/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804B. Vaccination",
    "url": "https://codeforces.com/problemset/problem/1804/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1804A. Lame King",
    "url": "https://codeforces.com/problemset/problem/1804/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1802B. Settlement of Guinea Pigs",
    "url": "https://codeforces.com/problemset/problem/1802/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1802A. Likes",
    "url": "https://codeforces.com/problemset/problem/1802/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801G. A task for substrings",
    "url": "https://codeforces.com/problemset/problem/1801/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801F. Another n-dimensional chocolate bar",
    "url": "https://codeforces.com/problemset/problem/1801/F",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801E. Gasoline prices",
    "url": "https://codeforces.com/problemset/problem/1801/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801D. The way home",
    "url": "https://codeforces.com/problemset/problem/1801/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801C. Music Festival",
    "url": "https://codeforces.com/problemset/problem/1801/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801B. Buying gifts",
    "url": "https://codeforces.com/problemset/problem/1801/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1801A. The Very Beautiful Blanket",
    "url": "https://codeforces.com/problemset/problem/1801/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800G. Symmetree",
    "url": "https://codeforces.com/problemset/problem/1800/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800F. Dasha and Nightmares",
    "url": "https://codeforces.com/problemset/problem/1800/F",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "hashing",
      "meet-in-the-middle",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800E2. Unforgivable Curse (hard version)",
    "url": "https://codeforces.com/problemset/problem/1800/E2",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800E1. Unforgivable Curse (easy version)",
    "url": "https://codeforces.com/problemset/problem/1800/E1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800D. Remove Two Letters",
    "url": "https://codeforces.com/problemset/problem/1800/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800C2. Powering the Hero (hard version)",
    "url": "https://codeforces.com/problemset/problem/1800/C2",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800C1. Powering the Hero (easy version)",
    "url": "https://codeforces.com/problemset/problem/1800/C1",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800B. Count the Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1800/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1800A. Is It a Cat?",
    "url": "https://codeforces.com/problemset/problem/1800/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799H. Tree Cutting",
    "url": "https://codeforces.com/problemset/problem/1799/H",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799G. Count Voting",
    "url": "https://codeforces.com/problemset/problem/1799/G",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799F. Halve or Subtract",
    "url": "https://codeforces.com/problemset/problem/1799/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799E. City Union",
    "url": "https://codeforces.com/problemset/problem/1799/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799D2. Hot Start Up (hard version)",
    "url": "https://codeforces.com/problemset/problem/1799/D2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799D1. Hot Start Up (easy version)",
    "url": "https://codeforces.com/problemset/problem/1799/D1",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799C. Double Lexicographically Minimum",
    "url": "https://codeforces.com/problemset/problem/1799/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799B. Equalize by Divide",
    "url": "https://codeforces.com/problemset/problem/1799/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1799A. Recent Actions",
    "url": "https://codeforces.com/problemset/problem/1799/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798F. Gifts from Grandfather Ahmed",
    "url": "https://codeforces.com/problemset/problem/1798/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798E. Multitest Generator",
    "url": "https://codeforces.com/problemset/problem/1798/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798D. Shocking Arrangement",
    "url": "https://codeforces.com/problemset/problem/1798/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798C. Candy Store",
    "url": "https://codeforces.com/problemset/problem/1798/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798B. Three Sevens",
    "url": "https://codeforces.com/problemset/problem/1798/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1798A. Showstopper",
    "url": "https://codeforces.com/problemset/problem/1798/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797F. Li Hua and Path",
    "url": "https://codeforces.com/problemset/problem/1797/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797E. Li Hua and Array",
    "url": "https://codeforces.com/problemset/problem/1797/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797D. Li Hua and Tree",
    "url": "https://codeforces.com/problemset/problem/1797/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797C. Li Hua and Chess",
    "url": "https://codeforces.com/problemset/problem/1797/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797B. Li Hua and Pattern",
    "url": "https://codeforces.com/problemset/problem/1797/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1797A. Li Hua and Maze",
    "url": "https://codeforces.com/problemset/problem/1797/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796F. Strange Triples",
    "url": "https://codeforces.com/problemset/problem/1796/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796E. Colored Subgraphs",
    "url": "https://codeforces.com/problemset/problem/1796/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796D. Maximum Subarray",
    "url": "https://codeforces.com/problemset/problem/1796/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796C. Maximum Set",
    "url": "https://codeforces.com/problemset/problem/1796/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796B. Asterisk-Minor Template",
    "url": "https://codeforces.com/problemset/problem/1796/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1796A. Typical Interview Problem",
    "url": "https://codeforces.com/problemset/problem/1796/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795G. Removal Sequences",
    "url": "https://codeforces.com/problemset/problem/1795/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795F. Blocking Chips",
    "url": "https://codeforces.com/problemset/problem/1795/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795E. Explosions?",
    "url": "https://codeforces.com/problemset/problem/1795/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795D. Triangle Coloring",
    "url": "https://codeforces.com/problemset/problem/1795/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795C. Tea Tasting",
    "url": "https://codeforces.com/problemset/problem/1795/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795B. Ideal Point",
    "url": "https://codeforces.com/problemset/problem/1795/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1795A. Two Towers",
    "url": "https://codeforces.com/problemset/problem/1795/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1794E. Labeling the Tree with Distances",
    "url": "https://codeforces.com/problemset/problem/1794/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1794D. Counting Factorizations",
    "url": "https://codeforces.com/problemset/problem/1794/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1794C. Scoring Subsequences",
    "url": "https://codeforces.com/problemset/problem/1794/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1794B. Not Dividing",
    "url": "https://codeforces.com/problemset/problem/1794/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1794A. Prefix and Suffix Array",
    "url": "https://codeforces.com/problemset/problem/1794/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793F. Rebrending",
    "url": "https://codeforces.com/problemset/problem/1793/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793E. Velepin and Marketing",
    "url": "https://codeforces.com/problemset/problem/1793/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793D. Moscow Gorillas",
    "url": "https://codeforces.com/problemset/problem/1793/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793C. Dora and Search",
    "url": "https://codeforces.com/problemset/problem/1793/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793B. Fedya and Array",
    "url": "https://codeforces.com/problemset/problem/1793/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1793A. Yet Another Promotion",
    "url": "https://codeforces.com/problemset/problem/1793/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792F2. Graph Coloring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1792/F2",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792F1. Graph Coloring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1792/F1",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792E. Divisors and Table",
    "url": "https://codeforces.com/problemset/problem/1792/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792D. Fixed Prefix Permutations",
    "url": "https://codeforces.com/problemset/problem/1792/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792C. Min Max Sort",
    "url": "https://codeforces.com/problemset/problem/1792/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792B. Stand-up Comedian",
    "url": "https://codeforces.com/problemset/problem/1792/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1792A. GamingForces",
    "url": "https://codeforces.com/problemset/problem/1792/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791G2. Teleporters (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1791/G2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791G1. Teleporters (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1791/G1",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791F. Range Update Point Query",
    "url": "https://codeforces.com/problemset/problem/1791/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791E. Negatives and Positives",
    "url": "https://codeforces.com/problemset/problem/1791/E",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791D. Distinct Split",
    "url": "https://codeforces.com/problemset/problem/1791/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791C. Prepend and Append",
    "url": "https://codeforces.com/problemset/problem/1791/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791B. Following Directions",
    "url": "https://codeforces.com/problemset/problem/1791/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1791A. Codeforces Checking",
    "url": "https://codeforces.com/problemset/problem/1791/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790G. Tokens on Graph",
    "url": "https://codeforces.com/problemset/problem/1790/G",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790F. Timofey and Black-White Tree",
    "url": "https://codeforces.com/problemset/problem/1790/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "greedy",
      "math",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790E. Vlad and a Pair of Numbers",
    "url": "https://codeforces.com/problemset/problem/1790/E",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790D. Matryoshkas",
    "url": "https://codeforces.com/problemset/problem/1790/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790C. Premutation",
    "url": "https://codeforces.com/problemset/problem/1790/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790B. Taisia and Dice",
    "url": "https://codeforces.com/problemset/problem/1790/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1790A. Polycarp and the Day of Pi",
    "url": "https://codeforces.com/problemset/problem/1790/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789F. Serval and Brain Power",
    "url": "https://codeforces.com/problemset/problem/1789/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789E. Serval and Music Game",
    "url": "https://codeforces.com/problemset/problem/1789/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789D. Serval and Shift-Shift-Shift",
    "url": "https://codeforces.com/problemset/problem/1789/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789C. Serval and Toxel's Arrays",
    "url": "https://codeforces.com/problemset/problem/1789/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789B. Serval and Inversion Magic",
    "url": "https://codeforces.com/problemset/problem/1789/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1789A. Serval and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1789/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788F. XOR, Tree, and Queries",
    "url": "https://codeforces.com/problemset/problem/1788/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788E. Sum Over Zero",
    "url": "https://codeforces.com/problemset/problem/1788/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788D. Moving Dots",
    "url": "https://codeforces.com/problemset/problem/1788/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788C. Matching Numbers",
    "url": "https://codeforces.com/problemset/problem/1788/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788B. Sum of Two Numbers",
    "url": "https://codeforces.com/problemset/problem/1788/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1788A. One and Two",
    "url": "https://codeforces.com/problemset/problem/1788/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787I. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1787/I",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787H. Codeforces Scoreboard",
    "url": "https://codeforces.com/problemset/problem/1787/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787G. Colorful Tree Again",
    "url": "https://codeforces.com/problemset/problem/1787/G",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787F. Inverse Transformation",
    "url": "https://codeforces.com/problemset/problem/1787/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787E. The Harmonization of XOR",
    "url": "https://codeforces.com/problemset/problem/1787/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787D. Game on Axis",
    "url": "https://codeforces.com/problemset/problem/1787/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787C. Remove the Bracket",
    "url": "https://codeforces.com/problemset/problem/1787/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787B. Number Factorization",
    "url": "https://codeforces.com/problemset/problem/1787/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1787A. Exponential Equation",
    "url": "https://codeforces.com/problemset/problem/1787/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1786B. Cake Assembly Line",
    "url": "https://codeforces.com/problemset/problem/1786/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1786A2. Alternating Deck (hard version)",
    "url": "https://codeforces.com/problemset/problem/1786/A2",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1786A1. Non-alternating Deck (easy version)",
    "url": "https://codeforces.com/problemset/problem/1786/A1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1784F. Minimums or Medians",
    "url": "https://codeforces.com/problemset/problem/1784/F",
    "difficulty": 3400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1784E. Infinite Game",
    "url": "https://codeforces.com/problemset/problem/1784/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "games",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1784D. Wooden Spoon",
    "url": "https://codeforces.com/problemset/problem/1784/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1784C. Monsters (hard version)",
    "url": "https://codeforces.com/problemset/problem/1784/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1784B. Letter Exchange",
    "url": "https://codeforces.com/problemset/problem/1784/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1784A. Monsters (easy version)",
    "url": "https://codeforces.com/problemset/problem/1784/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783G. Weighed Tree Radius",
    "url": "https://codeforces.com/problemset/problem/1783/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783F. Double Sort II",
    "url": "https://codeforces.com/problemset/problem/1783/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783E. Game of the Year",
    "url": "https://codeforces.com/problemset/problem/1783/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783D. Different Arrays",
    "url": "https://codeforces.com/problemset/problem/1783/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783C. Yet Another Tournament",
    "url": "https://codeforces.com/problemset/problem/1783/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783B. Matrix of Differences",
    "url": "https://codeforces.com/problemset/problem/1783/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1783A. Make it Beautiful",
    "url": "https://codeforces.com/problemset/problem/1783/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781H2. Window Signals (hard version)",
    "url": "https://codeforces.com/problemset/problem/1781/H2",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1781H1. Window Signals (easy version)",
    "url": "https://codeforces.com/problemset/problem/1781/H1",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1781G. Diverse Coloring",
    "url": "https://codeforces.com/problemset/problem/1781/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781F. Bracket Insertion",
    "url": "https://codeforces.com/problemset/problem/1781/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781E. Rectangle Shrinking",
    "url": "https://codeforces.com/problemset/problem/1781/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781D. Many Perfect Squares",
    "url": "https://codeforces.com/problemset/problem/1781/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781C. Equal Frequencies",
    "url": "https://codeforces.com/problemset/problem/1781/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781B. Going to the Cinema",
    "url": "https://codeforces.com/problemset/problem/1781/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1781A. Parallel Projection",
    "url": "https://codeforces.com/problemset/problem/1781/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780G. Delicious Dessert",
    "url": "https://codeforces.com/problemset/problem/1780/G",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dsu",
      "hashing",
      "math",
      "number theory",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780F. Three Chairs",
    "url": "https://codeforces.com/problemset/problem/1780/F",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780E. Josuke and Complete Graph",
    "url": "https://codeforces.com/problemset/problem/1780/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780D. Bit Guessing Game",
    "url": "https://codeforces.com/problemset/problem/1780/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780B. GCD Partition",
    "url": "https://codeforces.com/problemset/problem/1780/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1780A. Hayato and School",
    "url": "https://codeforces.com/problemset/problem/1780/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779H. Olympic Team Building",
    "url": "https://codeforces.com/problemset/problem/1779/H",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779G. The Game of the Century",
    "url": "https://codeforces.com/problemset/problem/1779/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779F. Xorcerer's Stones",
    "url": "https://codeforces.com/problemset/problem/1779/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779E. Anya's Simultaneous Exhibition",
    "url": "https://codeforces.com/problemset/problem/1779/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779D. Boris and His Amazing Haircut",
    "url": "https://codeforces.com/problemset/problem/1779/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779C. Least Prefix Sum",
    "url": "https://codeforces.com/problemset/problem/1779/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779B. MKnez's ConstructiveForces Task",
    "url": "https://codeforces.com/problemset/problem/1779/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1779A. Hall of Fame",
    "url": "https://codeforces.com/problemset/problem/1779/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778F. Maximizing Root",
    "url": "https://codeforces.com/problemset/problem/1778/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778E. The Tree Has Fallen!",
    "url": "https://codeforces.com/problemset/problem/1778/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778D. Flexible String Revisit",
    "url": "https://codeforces.com/problemset/problem/1778/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778C. Flexible String",
    "url": "https://codeforces.com/problemset/problem/1778/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778B. The Forbidden Permutation",
    "url": "https://codeforces.com/problemset/problem/1778/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1778A. Flip Flop Sum",
    "url": "https://codeforces.com/problemset/problem/1778/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777F. Comfortably Numb",
    "url": "https://codeforces.com/problemset/problem/1777/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777E. Edge Reverse",
    "url": "https://codeforces.com/problemset/problem/1777/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777D. Score of a Tree",
    "url": "https://codeforces.com/problemset/problem/1777/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777C. Quiz Master",
    "url": "https://codeforces.com/problemset/problem/1777/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777B. Emordnilap",
    "url": "https://codeforces.com/problemset/problem/1777/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1777A. Everybody Likes Good Arrays!",
    "url": "https://codeforces.com/problemset/problem/1777/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776N. Count Permutations",
    "url": "https://codeforces.com/problemset/problem/1776/N",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776M. Parmigiana With Seafood",
    "url": "https://codeforces.com/problemset/problem/1776/M",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776L. Controllers",
    "url": "https://codeforces.com/problemset/problem/1776/L",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776K. Uniform Chemistry",
    "url": "https://codeforces.com/problemset/problem/1776/K",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776J. Italian Data Centers",
    "url": "https://codeforces.com/problemset/problem/1776/J",
    "difficulty": 2500,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776I. Spinach Pizza",
    "url": "https://codeforces.com/problemset/problem/1776/I",
    "difficulty": 2500,
    "tags": [
      "games",
      "geometry",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776H. Beppa and SwerChat",
    "url": "https://codeforces.com/problemset/problem/1776/H",
    "difficulty": 1300,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776G. Another Wine Tasting Event",
    "url": "https://codeforces.com/problemset/problem/1776/G",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776F. Train Splitting",
    "url": "https://codeforces.com/problemset/problem/1776/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776E. Crossing the Railways",
    "url": "https://codeforces.com/problemset/problem/1776/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776D. Teamwork",
    "url": "https://codeforces.com/problemset/problem/1776/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776C. Library game",
    "url": "https://codeforces.com/problemset/problem/1776/C",
    "difficulty": 2500,
    "tags": [
      "games",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776B. Vittorio Plays with LEGO Bricks",
    "url": "https://codeforces.com/problemset/problem/1776/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1776A. Walking Boy",
    "url": "https://codeforces.com/problemset/problem/1776/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775F. Laboratory on Pluto",
    "url": "https://codeforces.com/problemset/problem/1775/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775E. The Human Equation",
    "url": "https://codeforces.com/problemset/problem/1775/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775D. Friendly Spiders",
    "url": "https://codeforces.com/problemset/problem/1775/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775C. Interesting Sequence",
    "url": "https://codeforces.com/problemset/problem/1775/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775B. Gardener and the Array",
    "url": "https://codeforces.com/problemset/problem/1775/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775A2. Gardener and the Capybaras (hard version)",
    "url": "https://codeforces.com/problemset/problem/1775/A2",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1775A1. Gardener and the Capybaras (easy version)",
    "url": "https://codeforces.com/problemset/problem/1775/A1",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774H. Maximum Permutation",
    "url": "https://codeforces.com/problemset/problem/1774/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774G. Segment Covering",
    "url": "https://codeforces.com/problemset/problem/1774/G",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774F2. Magician and Pigs (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1774/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774F1. Magician and Pigs (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1774/F1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774E. Two Chess Pieces",
    "url": "https://codeforces.com/problemset/problem/1774/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774D. Same Count One",
    "url": "https://codeforces.com/problemset/problem/1774/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774C. Ice and Fire",
    "url": "https://codeforces.com/problemset/problem/1774/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774B. Coloring",
    "url": "https://codeforces.com/problemset/problem/1774/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1774A. Add Plus Minus Sign",
    "url": "https://codeforces.com/problemset/problem/1774/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773L. Lisa's Sequences",
    "url": "https://codeforces.com/problemset/problem/1773/L",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773K. King's Puzzle",
    "url": "https://codeforces.com/problemset/problem/1773/K",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773J. Jumbled Trees",
    "url": "https://codeforces.com/problemset/problem/1773/J",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773I. Interactive Factorial Guessing",
    "url": "https://codeforces.com/problemset/problem/1773/I",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "games",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773H. Hot and Cold",
    "url": "https://codeforces.com/problemset/problem/1773/H",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773G. Game of Questions",
    "url": "https://codeforces.com/problemset/problem/1773/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "fft",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773F. Football",
    "url": "https://codeforces.com/problemset/problem/1773/F",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773E. Easy Assembly",
    "url": "https://codeforces.com/problemset/problem/1773/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773D. Dominoes",
    "url": "https://codeforces.com/problemset/problem/1773/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773C. Cactus Meets Torus",
    "url": "https://codeforces.com/problemset/problem/1773/C",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1773B. BinCoin",
    "url": "https://codeforces.com/problemset/problem/1773/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "divide and conquer",
      "hashing",
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1773A. Amazing Trick",
    "url": "https://codeforces.com/problemset/problem/1773/A",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772G. Gaining Rating",
    "url": "https://codeforces.com/problemset/problem/1772/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772F. Copy of a Copy of a Copy",
    "url": "https://codeforces.com/problemset/problem/1772/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772E. Permutation Game",
    "url": "https://codeforces.com/problemset/problem/1772/E",
    "difficulty": 1700,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772D. Absolute Sorting",
    "url": "https://codeforces.com/problemset/problem/1772/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772C. Different Differences",
    "url": "https://codeforces.com/problemset/problem/1772/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772B. Matrix Rotation",
    "url": "https://codeforces.com/problemset/problem/1772/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1772A. A+B?",
    "url": "https://codeforces.com/problemset/problem/1772/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771F. Hossam and Range Minimum Query",
    "url": "https://codeforces.com/problemset/problem/1771/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "probabilities",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771E. Hossam and a Letter",
    "url": "https://codeforces.com/problemset/problem/1771/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771D. Hossam and (sub-)palindromic tree",
    "url": "https://codeforces.com/problemset/problem/1771/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771C. Hossam and Trainees",
    "url": "https://codeforces.com/problemset/problem/1771/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771B. Hossam and Friends",
    "url": "https://codeforces.com/problemset/problem/1771/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1771A. Hossam and Combinatorics",
    "url": "https://codeforces.com/problemset/problem/1771/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770H. Koxia, Mahiru and Winter Festival",
    "url": "https://codeforces.com/problemset/problem/1770/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770G. Koxia and Bracket",
    "url": "https://codeforces.com/problemset/problem/1770/G",
    "difficulty": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770F. Koxia and Sequence",
    "url": "https://codeforces.com/problemset/problem/1770/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770E. Koxia and Tree",
    "url": "https://codeforces.com/problemset/problem/1770/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770D. Koxia and Game",
    "url": "https://codeforces.com/problemset/problem/1770/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "flows",
      "games",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770C. Koxia and Number Theory",
    "url": "https://codeforces.com/problemset/problem/1770/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770B. Koxia and Permutation",
    "url": "https://codeforces.com/problemset/problem/1770/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1770A. Koxia and Whiteboards",
    "url": "https://codeforces.com/problemset/problem/1770/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769D3. Игра в Девятку III",
    "url": "https://codeforces.com/problemset/problem/1769/D3",
    "difficulty": 2300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769D2. Игра в Девятку II",
    "url": "https://codeforces.com/problemset/problem/1769/D2",
    "difficulty": 2200,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769D1. Игра в Девятку I",
    "url": "https://codeforces.com/problemset/problem/1769/D1",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769C2. Подкрутка II",
    "url": "https://codeforces.com/problemset/problem/1769/C2",
    "difficulty": 1300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769C1. Подкрутка I",
    "url": "https://codeforces.com/problemset/problem/1769/C1",
    "difficulty": 1200,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769B2. Копирование файлов II",
    "url": "https://codeforces.com/problemset/problem/1769/B2",
    "difficulty": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769B1. Копирование файлов I",
    "url": "https://codeforces.com/problemset/problem/1769/B1",
    "difficulty": 1000,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1769A. Узкая дорога",
    "url": "https://codeforces.com/problemset/problem/1769/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768F. Wonderful Jump",
    "url": "https://codeforces.com/problemset/problem/1768/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768E. Partial Sorting",
    "url": "https://codeforces.com/problemset/problem/1768/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768D. Lucky Permutation",
    "url": "https://codeforces.com/problemset/problem/1768/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768C. Elemental Decompress",
    "url": "https://codeforces.com/problemset/problem/1768/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768B. Quick Sort",
    "url": "https://codeforces.com/problemset/problem/1768/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1768A. Greatest Convex",
    "url": "https://codeforces.com/problemset/problem/1768/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767F. Two Subtrees",
    "url": "https://codeforces.com/problemset/problem/1767/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767E. Algebra Flash",
    "url": "https://codeforces.com/problemset/problem/1767/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767D. Playoff",
    "url": "https://codeforces.com/problemset/problem/1767/D",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767C. Count Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1767/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767B. Block Towers",
    "url": "https://codeforces.com/problemset/problem/1767/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1767A. Cut the Triangle",
    "url": "https://codeforces.com/problemset/problem/1767/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766F. MCF",
    "url": "https://codeforces.com/problemset/problem/1766/F",
    "difficulty": 2800,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766E. Decomposition",
    "url": "https://codeforces.com/problemset/problem/1766/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766D. Lucky Chains",
    "url": "https://codeforces.com/problemset/problem/1766/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766C. Hamiltonian Wall",
    "url": "https://codeforces.com/problemset/problem/1766/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766B. Notepad#",
    "url": "https://codeforces.com/problemset/problem/1766/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1766A. Extremely Round",
    "url": "https://codeforces.com/problemset/problem/1766/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765N. Number Reduction",
    "url": "https://codeforces.com/problemset/problem/1765/N",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765M. Minimum LCM",
    "url": "https://codeforces.com/problemset/problem/1765/M",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765L. Project Manager",
    "url": "https://codeforces.com/problemset/problem/1765/L",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765K. Torus Path",
    "url": "https://codeforces.com/problemset/problem/1765/K",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765J. Hero to Zero",
    "url": "https://codeforces.com/problemset/problem/1765/J",
    "difficulty": 2900,
    "tags": [
      "graph matchings",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765I. Infinite Chess",
    "url": "https://codeforces.com/problemset/problem/1765/I",
    "difficulty": 2800,
    "tags": [
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765H. Hospital Queue",
    "url": "https://codeforces.com/problemset/problem/1765/H",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765G. Guess the String",
    "url": "https://codeforces.com/problemset/problem/1765/G",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765F. Chemistry Lab",
    "url": "https://codeforces.com/problemset/problem/1765/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765E. Exchange",
    "url": "https://codeforces.com/problemset/problem/1765/E",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765D. Watch the Videos",
    "url": "https://codeforces.com/problemset/problem/1765/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765C. Card Guessing",
    "url": "https://codeforces.com/problemset/problem/1765/C",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765B. Broken Keyboard",
    "url": "https://codeforces.com/problemset/problem/1765/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1765A. Access Levels",
    "url": "https://codeforces.com/problemset/problem/1765/A",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dsu",
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764H. Doremy's Paint 2",
    "url": "https://codeforces.com/problemset/problem/1764/H",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764G3. Doremy's Perfect DS Class (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1764/G3",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764G2. Doremy's Perfect DS Class (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/1764/G2",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764G1. Doremy's Perfect DS Class (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1764/G1",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764F. Doremy's Experimental Tree",
    "url": "https://codeforces.com/problemset/problem/1764/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764E. Doremy's Number Line",
    "url": "https://codeforces.com/problemset/problem/1764/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764D. Doremy's Pegging Game",
    "url": "https://codeforces.com/problemset/problem/1764/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764C. Doremy's City Construction",
    "url": "https://codeforces.com/problemset/problem/1764/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764B. Doremy's Perfect Math Class",
    "url": "https://codeforces.com/problemset/problem/1764/B",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1764A. Doremy's Paint",
    "url": "https://codeforces.com/problemset/problem/1764/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763F. Edge Queries",
    "url": "https://codeforces.com/problemset/problem/1763/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763E. Node Pairs",
    "url": "https://codeforces.com/problemset/problem/1763/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763D. Valid Bitonic Permutations",
    "url": "https://codeforces.com/problemset/problem/1763/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763C. Another Array Problem",
    "url": "https://codeforces.com/problemset/problem/1763/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763B. Incinerate",
    "url": "https://codeforces.com/problemset/problem/1763/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1763A. Absolute Maximization",
    "url": "https://codeforces.com/problemset/problem/1763/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762G. Unequal Adjacent Elements",
    "url": "https://codeforces.com/problemset/problem/1762/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762F. Good Pairs ",
    "url": "https://codeforces.com/problemset/problem/1762/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762E. Tree Sum",
    "url": "https://codeforces.com/problemset/problem/1762/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762D. GCD Queries ",
    "url": "https://codeforces.com/problemset/problem/1762/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762C. Binary Strings are Fun",
    "url": "https://codeforces.com/problemset/problem/1762/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762B. Make Array Good",
    "url": "https://codeforces.com/problemset/problem/1762/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1762A. Divide and Conquer",
    "url": "https://codeforces.com/problemset/problem/1762/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761G. Centroid Guess",
    "url": "https://codeforces.com/problemset/problem/1761/G",
    "difficulty": 3500,
    "tags": [
      "interactive",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761F2. Anti-median (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1761/F2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761F1. Anti-median (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1761/F1",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761E. Make It Connected",
    "url": "https://codeforces.com/problemset/problem/1761/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "matrices",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761D. Carry Bit",
    "url": "https://codeforces.com/problemset/problem/1761/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761C. Set Construction",
    "url": "https://codeforces.com/problemset/problem/1761/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761B. Elimination of a Ring",
    "url": "https://codeforces.com/problemset/problem/1761/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1761A. Two Permutations",
    "url": "https://codeforces.com/problemset/problem/1761/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760G. SlavicG's Favorite Problem",
    "url": "https://codeforces.com/problemset/problem/1760/G",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760F. Quests",
    "url": "https://codeforces.com/problemset/problem/1760/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760E. Binary Inversions",
    "url": "https://codeforces.com/problemset/problem/1760/E",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760D. Challenging Valleys",
    "url": "https://codeforces.com/problemset/problem/1760/D",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760C. Advantage",
    "url": "https://codeforces.com/problemset/problem/1760/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760B. Atilla's Favorite Problem",
    "url": "https://codeforces.com/problemset/problem/1760/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1760A. Medium Number",
    "url": "https://codeforces.com/problemset/problem/1760/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759G. Restore the Permutation",
    "url": "https://codeforces.com/problemset/problem/1759/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759F. All Possible Digits",
    "url": "https://codeforces.com/problemset/problem/1759/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759E. The Humanoid",
    "url": "https://codeforces.com/problemset/problem/1759/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759D. Make It Round",
    "url": "https://codeforces.com/problemset/problem/1759/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759C. Thermostat",
    "url": "https://codeforces.com/problemset/problem/1759/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759B. Lost Permutation",
    "url": "https://codeforces.com/problemset/problem/1759/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1759A. Yes-Yes?",
    "url": "https://codeforces.com/problemset/problem/1759/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758F. Decent Division",
    "url": "https://codeforces.com/problemset/problem/1758/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758E. Tick, Tock",
    "url": "https://codeforces.com/problemset/problem/1758/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758D. Range = √Sum",
    "url": "https://codeforces.com/problemset/problem/1758/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758C. Almost All Multiples",
    "url": "https://codeforces.com/problemset/problem/1758/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758B. XOR = Average",
    "url": "https://codeforces.com/problemset/problem/1758/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1758A. SSeeeeiinngg DDoouubbllee",
    "url": "https://codeforces.com/problemset/problem/1758/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1754B. Kevin and Permutation",
    "url": "https://codeforces.com/problemset/problem/1754/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1754A. Technical Support",
    "url": "https://codeforces.com/problemset/problem/1754/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753F. Minecraft Series",
    "url": "https://codeforces.com/problemset/problem/1753/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753E. N Machines",
    "url": "https://codeforces.com/problemset/problem/1753/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753D. The Beach",
    "url": "https://codeforces.com/problemset/problem/1753/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753C. Wish I Knew How to Sort",
    "url": "https://codeforces.com/problemset/problem/1753/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753B. Factorial Divisibility",
    "url": "https://codeforces.com/problemset/problem/1753/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753A2. Make Nonzero Sum (hard version)",
    "url": "https://codeforces.com/problemset/problem/1753/A2",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1753A1. Make Nonzero Sum (easy version)",
    "url": "https://codeforces.com/problemset/problem/1753/A1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750H. BinaryStringForces",
    "url": "https://codeforces.com/problemset/problem/1750/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750G. Doping",
    "url": "https://codeforces.com/problemset/problem/1750/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750F. Majority",
    "url": "https://codeforces.com/problemset/problem/1750/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750E. Bracket Cost",
    "url": "https://codeforces.com/problemset/problem/1750/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750D. Count GCD",
    "url": "https://codeforces.com/problemset/problem/1750/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750C. Complementary XOR",
    "url": "https://codeforces.com/problemset/problem/1750/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750B. Maximum Substring",
    "url": "https://codeforces.com/problemset/problem/1750/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1750A. Indirect Sort",
    "url": "https://codeforces.com/problemset/problem/1750/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749F. Distance to the Path",
    "url": "https://codeforces.com/problemset/problem/1749/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749E. Cactus Wall",
    "url": "https://codeforces.com/problemset/problem/1749/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749D. Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/1749/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749C. Number Game",
    "url": "https://codeforces.com/problemset/problem/1749/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749B. Death's Blessing",
    "url": "https://codeforces.com/problemset/problem/1749/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1749A. Cowardly Rooks",
    "url": "https://codeforces.com/problemset/problem/1749/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748F. Circular Xor Reversal",
    "url": "https://codeforces.com/problemset/problem/1748/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748E. Yet Another Array Counting Problem",
    "url": "https://codeforces.com/problemset/problem/1748/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748D. ConstructOR ",
    "url": "https://codeforces.com/problemset/problem/1748/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748C. Zero-Sum Prefixes",
    "url": "https://codeforces.com/problemset/problem/1748/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748B. Diverse Substrings",
    "url": "https://codeforces.com/problemset/problem/1748/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1748A. The Ultimate Square",
    "url": "https://codeforces.com/problemset/problem/1748/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1747E. List Generation",
    "url": "https://codeforces.com/problemset/problem/1747/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1747D. Yet Another Problem",
    "url": "https://codeforces.com/problemset/problem/1747/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1747C. Swap Game",
    "url": "https://codeforces.com/problemset/problem/1747/C",
    "difficulty": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1747B. BAN BAN",
    "url": "https://codeforces.com/problemset/problem/1747/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1747A. Two Groups",
    "url": "https://codeforces.com/problemset/problem/1747/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746G. Olympiad Training",
    "url": "https://codeforces.com/problemset/problem/1746/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746F. Kazaee",
    "url": "https://codeforces.com/problemset/problem/1746/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "hashing",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746E2. Joking (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1746/E2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746E1. Joking (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1746/E1",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746D. Paths on the Tree",
    "url": "https://codeforces.com/problemset/problem/1746/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746C. Permutation Operations",
    "url": "https://codeforces.com/problemset/problem/1746/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746B. Rebellion",
    "url": "https://codeforces.com/problemset/problem/1746/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1746A. Maxmina",
    "url": "https://codeforces.com/problemset/problem/1746/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744F. MEX vs MED",
    "url": "https://codeforces.com/problemset/problem/1744/F",
    "difficulty": 2000,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744E2. Divisible Numbers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1744/E2",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744E1. Divisible Numbers (easy version)",
    "url": "https://codeforces.com/problemset/problem/1744/E1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744D. Divisibility by 2^n",
    "url": "https://codeforces.com/problemset/problem/1744/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744C. Traffic Light",
    "url": "https://codeforces.com/problemset/problem/1744/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744B. Even-Odd Increments ",
    "url": "https://codeforces.com/problemset/problem/1744/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1744A. Number Replacement",
    "url": "https://codeforces.com/problemset/problem/1744/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743G. Antifibonacci Cut",
    "url": "https://codeforces.com/problemset/problem/1743/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743F. Intersection and Union",
    "url": "https://codeforces.com/problemset/problem/1743/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743E. FTL",
    "url": "https://codeforces.com/problemset/problem/1743/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743D. Problem with Random Tests",
    "url": "https://codeforces.com/problemset/problem/1743/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743C. Save the Magazines",
    "url": "https://codeforces.com/problemset/problem/1743/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743B. Permutation Value",
    "url": "https://codeforces.com/problemset/problem/1743/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1743A. Password",
    "url": "https://codeforces.com/problemset/problem/1743/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742G. Orray",
    "url": "https://codeforces.com/problemset/problem/1742/G",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742F. Smaller",
    "url": "https://codeforces.com/problemset/problem/1742/F",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742E. Scuza",
    "url": "https://codeforces.com/problemset/problem/1742/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742D. Coprime",
    "url": "https://codeforces.com/problemset/problem/1742/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742C. Stripes",
    "url": "https://codeforces.com/problemset/problem/1742/C",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742B. Increasing",
    "url": "https://codeforces.com/problemset/problem/1742/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1742A. Sum",
    "url": "https://codeforces.com/problemset/problem/1742/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741G. Kirill and Company",
    "url": "https://codeforces.com/problemset/problem/1741/G",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741F. Multi-Colored Segments",
    "url": "https://codeforces.com/problemset/problem/1741/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741E. Sending a Sequence Over the Network",
    "url": "https://codeforces.com/problemset/problem/1741/E",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741D. Masha and a Beautiful Tree",
    "url": "https://codeforces.com/problemset/problem/1741/D",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741C. Minimize the Thickness",
    "url": "https://codeforces.com/problemset/problem/1741/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741B. Funny Permutation",
    "url": "https://codeforces.com/problemset/problem/1741/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1741A. Compare T-Shirt Sizes",
    "url": "https://codeforces.com/problemset/problem/1741/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740I. Arranging Crystal Balls",
    "url": "https://codeforces.com/problemset/problem/1740/I",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740H. MEX Tree Manipulation",
    "url": "https://codeforces.com/problemset/problem/1740/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740G. Dangerous Laser Power",
    "url": "https://codeforces.com/problemset/problem/1740/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740F. Conditional Mix",
    "url": "https://codeforces.com/problemset/problem/1740/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740E. Hanging Hearts",
    "url": "https://codeforces.com/problemset/problem/1740/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740D. Knowledge Cards",
    "url": "https://codeforces.com/problemset/problem/1740/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740C. Bricks and Bags",
    "url": "https://codeforces.com/problemset/problem/1740/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740B. Jumbo Extra Cheese 2",
    "url": "https://codeforces.com/problemset/problem/1740/B",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1740A. Factorise N+M",
    "url": "https://codeforces.com/problemset/problem/1740/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739F. Keyboard Design",
    "url": "https://codeforces.com/problemset/problem/1739/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739E. Cleaning Robot",
    "url": "https://codeforces.com/problemset/problem/1739/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739D. Reset K Edges",
    "url": "https://codeforces.com/problemset/problem/1739/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739C. Card Game",
    "url": "https://codeforces.com/problemset/problem/1739/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739B. Array Recovery",
    "url": "https://codeforces.com/problemset/problem/1739/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1739A. Immobile Knight",
    "url": "https://codeforces.com/problemset/problem/1739/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738H. Palindrome Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738G. Anti-Increasing Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/G",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738F. Connectivity Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738E. Balance Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738D. Permutation Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738C. Even Number Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738B. Prefix Sum Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1738A. Glory Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737G. Ela Takes Dancing Class",
    "url": "https://codeforces.com/problemset/problem/1737/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737F. Ela and Prime GCD",
    "url": "https://codeforces.com/problemset/problem/1737/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737E. Ela Goes Hiking",
    "url": "https://codeforces.com/problemset/problem/1737/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737D. Ela and the Wiring Wizard",
    "url": "https://codeforces.com/problemset/problem/1737/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737C. Ela and Crickets",
    "url": "https://codeforces.com/problemset/problem/1737/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737B. Ela's Fitness and the Luxury Number",
    "url": "https://codeforces.com/problemset/problem/1737/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1737A. Ela Sorting Books",
    "url": "https://codeforces.com/problemset/problem/1737/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736E. Swap and Take",
    "url": "https://codeforces.com/problemset/problem/1736/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736D. Equal Binary Subsequences",
    "url": "https://codeforces.com/problemset/problem/1736/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736C2. Good Subarrays (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1736/C2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736C1. Good Subarrays (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1736/C1",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "schedules",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736B. Playing with GCD",
    "url": "https://codeforces.com/problemset/problem/1736/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1736A. Make A Equal to B",
    "url": "https://codeforces.com/problemset/problem/1736/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735F. Pebbles and Beads",
    "url": "https://codeforces.com/problemset/problem/1735/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735E. House Planning",
    "url": "https://codeforces.com/problemset/problem/1735/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735D. Meta-set",
    "url": "https://codeforces.com/problemset/problem/1735/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735C. Phase Shift",
    "url": "https://codeforces.com/problemset/problem/1735/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735B. Tea with Tangerines",
    "url": "https://codeforces.com/problemset/problem/1735/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1735A. Working Week",
    "url": "https://codeforces.com/problemset/problem/1735/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734F. Zeros and Ones",
    "url": "https://codeforces.com/problemset/problem/1734/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734E. Rectangular Congruence",
    "url": "https://codeforces.com/problemset/problem/1734/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734D. Slime Escape",
    "url": "https://codeforces.com/problemset/problem/1734/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734C. Removing Smallest Multiples",
    "url": "https://codeforces.com/problemset/problem/1734/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734B. Bright, Nice, Brilliant",
    "url": "https://codeforces.com/problemset/problem/1734/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1734A. Select Three Sticks",
    "url": "https://codeforces.com/problemset/problem/1734/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733E. Conveyor",
    "url": "https://codeforces.com/problemset/problem/1733/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733D2. Zero-One (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1733/D2",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733D1. Zero-One (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1733/D1",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733C. Parity Shuffle Sorting",
    "url": "https://codeforces.com/problemset/problem/1733/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733B. Rule of League",
    "url": "https://codeforces.com/problemset/problem/1733/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1733A. Consecutive Sum",
    "url": "https://codeforces.com/problemset/problem/1733/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732E. Location",
    "url": "https://codeforces.com/problemset/problem/1732/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732D2. Balance (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1732/D2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732D1. Balance (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1732/D1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732C2. Sheikh (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1732/C2",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732C1. Sheikh (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1732/C1",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732B. Ugu",
    "url": "https://codeforces.com/problemset/problem/1732/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1732A. Bestie",
    "url": "https://codeforces.com/problemset/problem/1732/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731F. Function Sum",
    "url": "https://codeforces.com/problemset/problem/1731/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731E. Graph Cost",
    "url": "https://codeforces.com/problemset/problem/1731/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731D. Valiant's New Map",
    "url": "https://codeforces.com/problemset/problem/1731/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731C. Even Subarrays",
    "url": "https://codeforces.com/problemset/problem/1731/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731B. Kill Demodogs",
    "url": "https://codeforces.com/problemset/problem/1731/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1731A. Joey Takes Money",
    "url": "https://codeforces.com/problemset/problem/1731/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730F. Almost Sorted",
    "url": "https://codeforces.com/problemset/problem/1730/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730E. Maximums and Minimums",
    "url": "https://codeforces.com/problemset/problem/1730/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730D. Prefixes and Suffixes",
    "url": "https://codeforces.com/problemset/problem/1730/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730C. Minimum Notation",
    "url": "https://codeforces.com/problemset/problem/1730/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730B. Meeting on the Line",
    "url": "https://codeforces.com/problemset/problem/1730/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1730A. Planets",
    "url": "https://codeforces.com/problemset/problem/1730/A",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729G. Cut Substrings",
    "url": "https://codeforces.com/problemset/problem/1729/G",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729F. Kirei and the Linear Function",
    "url": "https://codeforces.com/problemset/problem/1729/F",
    "difficulty": 1900,
    "tags": [
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729E. Guess the Cycle Size",
    "url": "https://codeforces.com/problemset/problem/1729/E",
    "difficulty": 1800,
    "tags": [
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729D. Friends and the Restaurant",
    "url": "https://codeforces.com/problemset/problem/1729/D",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729C. Jumping on Tiles",
    "url": "https://codeforces.com/problemset/problem/1729/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729B. Decode String",
    "url": "https://codeforces.com/problemset/problem/1729/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1729A. Two Elevators",
    "url": "https://codeforces.com/problemset/problem/1729/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728G. Illumination",
    "url": "https://codeforces.com/problemset/problem/1728/G",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728F. Fishermen",
    "url": "https://codeforces.com/problemset/problem/1728/F",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728E. Red-Black Pepper",
    "url": "https://codeforces.com/problemset/problem/1728/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728D. Letter Picking",
    "url": "https://codeforces.com/problemset/problem/1728/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728C. Digital Logarithm",
    "url": "https://codeforces.com/problemset/problem/1728/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728B. Best Permutation",
    "url": "https://codeforces.com/problemset/problem/1728/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1728A. Colored Balls: Revisited",
    "url": "https://codeforces.com/problemset/problem/1728/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726H. Mainak and the Bleeding Polygon",
    "url": "https://codeforces.com/problemset/problem/1726/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726G. A Certain Magical Party",
    "url": "https://codeforces.com/problemset/problem/1726/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726F. Late For Work (submissions are not allowed)",
    "url": "https://codeforces.com/problemset/problem/1726/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy",
      "schedules",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726E. Almost Perfect",
    "url": "https://codeforces.com/problemset/problem/1726/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726D. Edge Split",
    "url": "https://codeforces.com/problemset/problem/1726/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726C. Jatayu's Balanced Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/1726/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726B. Mainak and Interesting Sequence",
    "url": "https://codeforces.com/problemset/problem/1726/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1726A. Mainak and Array",
    "url": "https://codeforces.com/problemset/problem/1726/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725M. Moving Both Hands",
    "url": "https://codeforces.com/problemset/problem/1725/M",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725L. Lemper Cooking Competition",
    "url": "https://codeforces.com/problemset/problem/1725/L",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725K. Kingdom of Criticism",
    "url": "https://codeforces.com/problemset/problem/1725/K",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725J. Journey",
    "url": "https://codeforces.com/problemset/problem/1725/J",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725I. Imitating the Key Tree",
    "url": "https://codeforces.com/problemset/problem/1725/I",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725H. Hot Black Hot White",
    "url": "https://codeforces.com/problemset/problem/1725/H",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725G. Garage",
    "url": "https://codeforces.com/problemset/problem/1725/G",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725F. Field Photography",
    "url": "https://codeforces.com/problemset/problem/1725/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725E. Electrical Efficiency",
    "url": "https://codeforces.com/problemset/problem/1725/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725D. Deducing Sortability",
    "url": "https://codeforces.com/problemset/problem/1725/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725C. Circular Mirror",
    "url": "https://codeforces.com/problemset/problem/1725/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725B. Basketball Together",
    "url": "https://codeforces.com/problemset/problem/1725/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1725A. Accumulation of Dominoes",
    "url": "https://codeforces.com/problemset/problem/1725/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722G. Even-Odd XOR",
    "url": "https://codeforces.com/problemset/problem/1722/G",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722F. L-shapes",
    "url": "https://codeforces.com/problemset/problem/1722/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722E. Counting Rectangles",
    "url": "https://codeforces.com/problemset/problem/1722/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722D. Line",
    "url": "https://codeforces.com/problemset/problem/1722/D",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722C. Word Game",
    "url": "https://codeforces.com/problemset/problem/1722/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722B. Colourblindness",
    "url": "https://codeforces.com/problemset/problem/1722/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1722A. Spell Check",
    "url": "https://codeforces.com/problemset/problem/1722/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721F. Matching Reduction",
    "url": "https://codeforces.com/problemset/problem/1721/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721E. Prefix Function Queries",
    "url": "https://codeforces.com/problemset/problem/1721/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721D. Maximum AND",
    "url": "https://codeforces.com/problemset/problem/1721/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721C. Min-Max Array Transformation",
    "url": "https://codeforces.com/problemset/problem/1721/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721B. Deadly Laser",
    "url": "https://codeforces.com/problemset/problem/1721/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1721A. Image",
    "url": "https://codeforces.com/problemset/problem/1721/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720E. Misha and Paintings",
    "url": "https://codeforces.com/problemset/problem/1720/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720D2. Xor-Subsequence (hard version)",
    "url": "https://codeforces.com/problemset/problem/1720/D2",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720D1. Xor-Subsequence (easy version)",
    "url": "https://codeforces.com/problemset/problem/1720/D1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720C. Corners",
    "url": "https://codeforces.com/problemset/problem/1720/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720B. Interesting Sum",
    "url": "https://codeforces.com/problemset/problem/1720/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1720A. Burenka Plays with Fractions",
    "url": "https://codeforces.com/problemset/problem/1720/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1719C. Fighting Tournament",
    "url": "https://codeforces.com/problemset/problem/1719/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1719B. Mathematical Circus",
    "url": "https://codeforces.com/problemset/problem/1719/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1719A. Chip Game",
    "url": "https://codeforces.com/problemset/problem/1719/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718F. Burenka, an Array and Queries",
    "url": "https://codeforces.com/problemset/problem/1718/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718E. Impressionism",
    "url": "https://codeforces.com/problemset/problem/1718/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718D. Permutation for Burenka",
    "url": "https://codeforces.com/problemset/problem/1718/D",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718C. Tonya and Burenka-179",
    "url": "https://codeforces.com/problemset/problem/1718/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718B. Fibonacci Strings",
    "url": "https://codeforces.com/problemset/problem/1718/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718A2. Burenka and Traditions (hard version)",
    "url": "https://codeforces.com/problemset/problem/1718/A2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1718A1. Burenka and Traditions (easy version)",
    "url": "https://codeforces.com/problemset/problem/1718/A1",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717F. Madoka and The First Session",
    "url": "https://codeforces.com/problemset/problem/1717/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717E. Madoka and The Best University",
    "url": "https://codeforces.com/problemset/problem/1717/E",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717D. Madoka and The Corruption Scheme",
    "url": "https://codeforces.com/problemset/problem/1717/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717C. Madoka and Formal Statement",
    "url": "https://codeforces.com/problemset/problem/1717/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717B. Madoka and Underground Competitions",
    "url": "https://codeforces.com/problemset/problem/1717/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1717A. Madoka and Strange Thoughts",
    "url": "https://codeforces.com/problemset/problem/1717/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716F. Bags with Balls",
    "url": "https://codeforces.com/problemset/problem/1716/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716E. Swap and Maximum Block",
    "url": "https://codeforces.com/problemset/problem/1716/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716D. Chip Move",
    "url": "https://codeforces.com/problemset/problem/1716/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716C. Robot in a Hallway",
    "url": "https://codeforces.com/problemset/problem/1716/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716B. Permutation Chain",
    "url": "https://codeforces.com/problemset/problem/1716/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1716A. 2-3 Moves",
    "url": "https://codeforces.com/problemset/problem/1716/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715F. Crop Squares",
    "url": "https://codeforces.com/problemset/problem/1715/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715E. Long Way Home",
    "url": "https://codeforces.com/problemset/problem/1715/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715D. 2+ doors",
    "url": "https://codeforces.com/problemset/problem/1715/D",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "bitmasks",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715C. Monoblock",
    "url": "https://codeforces.com/problemset/problem/1715/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715B. Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1715/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1715A. Crossmarket",
    "url": "https://codeforces.com/problemset/problem/1715/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714G. Path Prefixes",
    "url": "https://codeforces.com/problemset/problem/1714/G",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714F. Build a Tree and That Is It",
    "url": "https://codeforces.com/problemset/problem/1714/F",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714E. Add Modulo 10",
    "url": "https://codeforces.com/problemset/problem/1714/E",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714D. Color with Occurrences",
    "url": "https://codeforces.com/problemset/problem/1714/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714C. Minimum  Varied Number",
    "url": "https://codeforces.com/problemset/problem/1714/C",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714B. Remove Prefix",
    "url": "https://codeforces.com/problemset/problem/1714/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1714A. Everyone Loves to Sleep",
    "url": "https://codeforces.com/problemset/problem/1714/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713F. Lost Array",
    "url": "https://codeforces.com/problemset/problem/1713/F",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713E. Cross Swapping",
    "url": "https://codeforces.com/problemset/problem/1713/E",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "data structures",
      "dsu",
      "greedy",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713D. Tournament Countdown",
    "url": "https://codeforces.com/problemset/problem/1713/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713C. Build Permutation",
    "url": "https://codeforces.com/problemset/problem/1713/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713B. Optimal Reduction",
    "url": "https://codeforces.com/problemset/problem/1713/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1713A. Traveling Salesman Problem",
    "url": "https://codeforces.com/problemset/problem/1713/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712F. Triameter",
    "url": "https://codeforces.com/problemset/problem/1712/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712E2. LCM Sum (hard version)",
    "url": "https://codeforces.com/problemset/problem/1712/E2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712E1. LCM Sum (easy version)",
    "url": "https://codeforces.com/problemset/problem/1712/E1",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712D. Empty Graph",
    "url": "https://codeforces.com/problemset/problem/1712/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712C. Sort Zero",
    "url": "https://codeforces.com/problemset/problem/1712/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712B. Woeful Permutation",
    "url": "https://codeforces.com/problemset/problem/1712/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1712A. Wonderful Permutation",
    "url": "https://codeforces.com/problemset/problem/1712/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1711B. Party",
    "url": "https://codeforces.com/problemset/problem/1711/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1711A. Perfect Permutation",
    "url": "https://codeforces.com/problemset/problem/1711/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1710E. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1710/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "games",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1710D. Recover the Tree",
    "url": "https://codeforces.com/problemset/problem/1710/D",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1710C. XOR Triangle",
    "url": "https://codeforces.com/problemset/problem/1710/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1710B. Rain",
    "url": "https://codeforces.com/problemset/problem/1710/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1710A. Color the Picture",
    "url": "https://codeforces.com/problemset/problem/1710/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709F. Multiset of Strings",
    "url": "https://codeforces.com/problemset/problem/1709/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "fft",
      "flows",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709E. XOR Tree",
    "url": "https://codeforces.com/problemset/problem/1709/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709D. Rorororobot",
    "url": "https://codeforces.com/problemset/problem/1709/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709C. Recover an RBS",
    "url": "https://codeforces.com/problemset/problem/1709/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709B. Also Try Minecraft",
    "url": "https://codeforces.com/problemset/problem/1709/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1709A. Three Doors",
    "url": "https://codeforces.com/problemset/problem/1709/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1708B. Difference of GCDs",
    "url": "https://codeforces.com/problemset/problem/1708/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1708A. Difference Operations",
    "url": "https://codeforces.com/problemset/problem/1708/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707F. Bugaboo",
    "url": "https://codeforces.com/problemset/problem/1707/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707E. Replace",
    "url": "https://codeforces.com/problemset/problem/1707/E",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707D. Partial Virtual Trees",
    "url": "https://codeforces.com/problemset/problem/1707/D",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707C. DFS Trees",
    "url": "https://codeforces.com/problemset/problem/1707/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707B. Difference Array",
    "url": "https://codeforces.com/problemset/problem/1707/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1707A. Doremy's IQ",
    "url": "https://codeforces.com/problemset/problem/1707/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706E. Qpwoeirut and Vertices",
    "url": "https://codeforces.com/problemset/problem/1706/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706D2. Chopping Carrots (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1706/D2",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706D1. Chopping Carrots (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1706/D1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706C. Qpwoeirut And The City",
    "url": "https://codeforces.com/problemset/problem/1706/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "flows",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706B. Making Towers",
    "url": "https://codeforces.com/problemset/problem/1706/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1706A. Another String Minimization Problem",
    "url": "https://codeforces.com/problemset/problem/1706/A",
    "difficulty": 800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705F. Mark and the Online Exam",
    "url": "https://codeforces.com/problemset/problem/1705/F",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705E. Mark and Professor Koro",
    "url": "https://codeforces.com/problemset/problem/1705/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705D. Mark and Lightbulbs",
    "url": "https://codeforces.com/problemset/problem/1705/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705C. Mark and His Unfinished Essay",
    "url": "https://codeforces.com/problemset/problem/1705/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705B. Mark the Dust Sweeper",
    "url": "https://codeforces.com/problemset/problem/1705/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1705A. Mark the Photographer",
    "url": "https://codeforces.com/problemset/problem/1705/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704H2. Game of AI (hard version)",
    "url": "https://codeforces.com/problemset/problem/1704/H2",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704H1. Game of AI (easy version)",
    "url": "https://codeforces.com/problemset/problem/1704/H1",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704G. Mio and Lucky Array",
    "url": "https://codeforces.com/problemset/problem/1704/G",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704F. Colouring Game",
    "url": "https://codeforces.com/problemset/problem/1704/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704E. Count Seconds",
    "url": "https://codeforces.com/problemset/problem/1704/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704D. Magical Array",
    "url": "https://codeforces.com/problemset/problem/1704/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704C. Virus",
    "url": "https://codeforces.com/problemset/problem/1704/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704B. Luke is a Foodie",
    "url": "https://codeforces.com/problemset/problem/1704/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1704A. Two 0-1 Sequences",
    "url": "https://codeforces.com/problemset/problem/1704/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703G. Good Key, Bad Key",
    "url": "https://codeforces.com/problemset/problem/1703/G",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703F. Yet Another Problem About Pairs Satisfying an Inequality",
    "url": "https://codeforces.com/problemset/problem/1703/F",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703E. Mirror Grid",
    "url": "https://codeforces.com/problemset/problem/1703/E",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703D. Double Strings",
    "url": "https://codeforces.com/problemset/problem/1703/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703C. Cypher",
    "url": "https://codeforces.com/problemset/problem/1703/C",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703B. ICPC Balloons",
    "url": "https://codeforces.com/problemset/problem/1703/B",
    "difficulty": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1703A. YES or YES?",
    "url": "https://codeforces.com/problemset/problem/1703/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702G2. Passable Paths (hard version)",
    "url": "https://codeforces.com/problemset/problem/1702/G2",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702G1. Passable Paths (easy version)",
    "url": "https://codeforces.com/problemset/problem/1702/G1",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702F. Equate Multisets",
    "url": "https://codeforces.com/problemset/problem/1702/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702E. Split Into Two Sets",
    "url": "https://codeforces.com/problemset/problem/1702/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702D. Not a Cheap String",
    "url": "https://codeforces.com/problemset/problem/1702/D",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702C. Train and Queries",
    "url": "https://codeforces.com/problemset/problem/1702/C",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702B. Polycarp Writes a String from Memory",
    "url": "https://codeforces.com/problemset/problem/1702/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1702A. Round Down the Price",
    "url": "https://codeforces.com/problemset/problem/1702/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701F. Points",
    "url": "https://codeforces.com/problemset/problem/1701/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701E. Text Editor",
    "url": "https://codeforces.com/problemset/problem/1701/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701D. Permutation Restoration",
    "url": "https://codeforces.com/problemset/problem/1701/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701C. Schedule Management",
    "url": "https://codeforces.com/problemset/problem/1701/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701B. Permutation",
    "url": "https://codeforces.com/problemset/problem/1701/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1701A. Grass Field",
    "url": "https://codeforces.com/problemset/problem/1701/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700F. Puzzle",
    "url": "https://codeforces.com/problemset/problem/1700/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700E. Serega the Pirate",
    "url": "https://codeforces.com/problemset/problem/1700/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700D. River Locks",
    "url": "https://codeforces.com/problemset/problem/1700/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700C. Helping the Nature",
    "url": "https://codeforces.com/problemset/problem/1700/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700B. Palindromic Numbers ",
    "url": "https://codeforces.com/problemset/problem/1700/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1700A. Optimal Path",
    "url": "https://codeforces.com/problemset/problem/1700/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1699E. Three Days Grace",
    "url": "https://codeforces.com/problemset/problem/1699/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1699D. Almost Triple Deletions",
    "url": "https://codeforces.com/problemset/problem/1699/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1699C. The Third Problem",
    "url": "https://codeforces.com/problemset/problem/1699/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1699B. Almost Ternary Matrix",
    "url": "https://codeforces.com/problemset/problem/1699/B",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1699A. The Third Three Number Problem",
    "url": "https://codeforces.com/problemset/problem/1699/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698G. Long Binary String",
    "url": "https://codeforces.com/problemset/problem/1698/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698F. Equal Reversal",
    "url": "https://codeforces.com/problemset/problem/1698/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698E. PermutationForces II",
    "url": "https://codeforces.com/problemset/problem/1698/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698D. Fixed Point Guessing",
    "url": "https://codeforces.com/problemset/problem/1698/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698C. 3SUM Closure",
    "url": "https://codeforces.com/problemset/problem/1698/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698B. Rising Sand",
    "url": "https://codeforces.com/problemset/problem/1698/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1698A. XOR Mixup",
    "url": "https://codeforces.com/problemset/problem/1698/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697F. Too Many Constraints",
    "url": "https://codeforces.com/problemset/problem/1697/F",
    "difficulty": 2800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697E. Coloring",
    "url": "https://codeforces.com/problemset/problem/1697/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697D. Guess The String",
    "url": "https://codeforces.com/problemset/problem/1697/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697C. awoo's Favorite Problem",
    "url": "https://codeforces.com/problemset/problem/1697/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697B. Promo",
    "url": "https://codeforces.com/problemset/problem/1697/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1697A. Parkway Walk",
    "url": "https://codeforces.com/problemset/problem/1697/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696H. Maximum Product?",
    "url": "https://codeforces.com/problemset/problem/1696/H",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696G. Fishingprince Plays With Array Again",
    "url": "https://codeforces.com/problemset/problem/1696/G",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696F. Tree Recovery",
    "url": "https://codeforces.com/problemset/problem/1696/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696E. Placing Jinas",
    "url": "https://codeforces.com/problemset/problem/1696/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696D. Permutation Graph",
    "url": "https://codeforces.com/problemset/problem/1696/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696C. Fishingprince Plays With Array",
    "url": "https://codeforces.com/problemset/problem/1696/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696B. NIT Destroys the Universe",
    "url": "https://codeforces.com/problemset/problem/1696/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1696A. NIT orz!",
    "url": "https://codeforces.com/problemset/problem/1696/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695E. Ambiguous Dominoes",
    "url": "https://codeforces.com/problemset/problem/1695/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695D2. Tree Queries (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1695/D2",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695D1. Tree Queries (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1695/D1",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695C. Zero Path",
    "url": "https://codeforces.com/problemset/problem/1695/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695B. Circle Game",
    "url": "https://codeforces.com/problemset/problem/1695/B",
    "difficulty": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1695A. Subrectangle Guess",
    "url": "https://codeforces.com/problemset/problem/1695/A",
    "difficulty": 800,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1694B. Paranoid String",
    "url": "https://codeforces.com/problemset/problem/1694/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1694A. Creep",
    "url": "https://codeforces.com/problemset/problem/1694/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693F. I Might Be Wrong",
    "url": "https://codeforces.com/problemset/problem/1693/F",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693E. Outermost Maximums",
    "url": "https://codeforces.com/problemset/problem/1693/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693D. Decinc Dividing",
    "url": "https://codeforces.com/problemset/problem/1693/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693C. Keshi in Search of AmShZ",
    "url": "https://codeforces.com/problemset/problem/1693/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693B. Fake Plastic Trees",
    "url": "https://codeforces.com/problemset/problem/1693/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1693A. Directional Increase",
    "url": "https://codeforces.com/problemset/problem/1693/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692H. Gambling",
    "url": "https://codeforces.com/problemset/problem/1692/H",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692G. 2^Sort",
    "url": "https://codeforces.com/problemset/problem/1692/G",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692F. 3SUM",
    "url": "https://codeforces.com/problemset/problem/1692/F",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692E. Binary Deque",
    "url": "https://codeforces.com/problemset/problem/1692/E",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692D. The Clock",
    "url": "https://codeforces.com/problemset/problem/1692/D",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692C. Where's the Bishop?",
    "url": "https://codeforces.com/problemset/problem/1692/C",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692B. All Distinct",
    "url": "https://codeforces.com/problemset/problem/1692/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1692A. Marathon",
    "url": "https://codeforces.com/problemset/problem/1692/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691F. K-Set Tree",
    "url": "https://codeforces.com/problemset/problem/1691/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691E. Number of Groups",
    "url": "https://codeforces.com/problemset/problem/1691/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691D. Max GEQ Sum",
    "url": "https://codeforces.com/problemset/problem/1691/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691C. Sum of Substrings",
    "url": "https://codeforces.com/problemset/problem/1691/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691B. Shoe Shuffling",
    "url": "https://codeforces.com/problemset/problem/1691/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1691A. Beat The Odds",
    "url": "https://codeforces.com/problemset/problem/1691/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690G. Count the Trains",
    "url": "https://codeforces.com/problemset/problem/1690/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690F. Shifting String",
    "url": "https://codeforces.com/problemset/problem/1690/F",
    "difficulty": 1700,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690E. Price Maximization",
    "url": "https://codeforces.com/problemset/problem/1690/E",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690D. Black and White Stripe",
    "url": "https://codeforces.com/problemset/problem/1690/D",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690C. Restoring the Duration of Tasks",
    "url": "https://codeforces.com/problemset/problem/1690/C",
    "difficulty": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690B. Array Decrements",
    "url": "https://codeforces.com/problemset/problem/1690/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1690A. Print a Pedestal (Codeforces logo?)",
    "url": "https://codeforces.com/problemset/problem/1690/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1689E. ANDfinity",
    "url": "https://codeforces.com/problemset/problem/1689/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1689D. Lena and Matrix",
    "url": "https://codeforces.com/problemset/problem/1689/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1689C. Infected Tree",
    "url": "https://codeforces.com/problemset/problem/1689/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1689B. Mystic Permutation",
    "url": "https://codeforces.com/problemset/problem/1689/B",
    "difficulty": 900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1689A. Lex String",
    "url": "https://codeforces.com/problemset/problem/1689/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1688C. Manipulating History",
    "url": "https://codeforces.com/problemset/problem/1688/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1688B. Patchouli's Magical Talisman",
    "url": "https://codeforces.com/problemset/problem/1688/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1688A. Cirno's Perfect Bitmasks Classroom",
    "url": "https://codeforces.com/problemset/problem/1688/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687F. Koishi's Unconscious Permutation",
    "url": "https://codeforces.com/problemset/problem/1687/F",
    "difficulty": 3500,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687E. Become Big For Me",
    "url": "https://codeforces.com/problemset/problem/1687/E",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687D. Cute number",
    "url": "https://codeforces.com/problemset/problem/1687/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687C. Sanae and Giant Robot",
    "url": "https://codeforces.com/problemset/problem/1687/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687B. Railway System",
    "url": "https://codeforces.com/problemset/problem/1687/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1687A. The Enchanted Forest",
    "url": "https://codeforces.com/problemset/problem/1687/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1686B. Odd Subarrays",
    "url": "https://codeforces.com/problemset/problem/1686/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1686A. Everything Everywhere All But One",
    "url": "https://codeforces.com/problemset/problem/1686/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685E. The Ultimate LIS Problem",
    "url": "https://codeforces.com/problemset/problem/1685/E",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685D2. Permutation Weight (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1685/D2",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685D1. Permutation Weight (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1685/D1",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685C. Bring Balance",
    "url": "https://codeforces.com/problemset/problem/1685/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685B. Linguistics",
    "url": "https://codeforces.com/problemset/problem/1685/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1685A. Circular Local MiniMax",
    "url": "https://codeforces.com/problemset/problem/1685/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684H. Hard Cut",
    "url": "https://codeforces.com/problemset/problem/1684/H",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684G. Euclid Guess",
    "url": "https://codeforces.com/problemset/problem/1684/G",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684F. Diverse Segments",
    "url": "https://codeforces.com/problemset/problem/1684/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684E. MEX vs DIFF",
    "url": "https://codeforces.com/problemset/problem/1684/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684D. Traps",
    "url": "https://codeforces.com/problemset/problem/1684/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684C. Column Swapping",
    "url": "https://codeforces.com/problemset/problem/1684/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684B. Z mod X = C",
    "url": "https://codeforces.com/problemset/problem/1684/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1684A. Digit Minimization",
    "url": "https://codeforces.com/problemset/problem/1684/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682F. MCMF?",
    "url": "https://codeforces.com/problemset/problem/1682/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682E. Unordered Swaps",
    "url": "https://codeforces.com/problemset/problem/1682/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682D. Circular Spanning Tree",
    "url": "https://codeforces.com/problemset/problem/1682/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682C. LIS or Reverse LIS?",
    "url": "https://codeforces.com/problemset/problem/1682/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682B. AND Sorting",
    "url": "https://codeforces.com/problemset/problem/1682/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1682A. Palindromic Indices",
    "url": "https://codeforces.com/problemset/problem/1682/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681F. Unique Occurrences",
    "url": "https://codeforces.com/problemset/problem/1681/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681E. Labyrinth Adventures",
    "url": "https://codeforces.com/problemset/problem/1681/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681D. Required Length",
    "url": "https://codeforces.com/problemset/problem/1681/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681C. Double Sort",
    "url": "https://codeforces.com/problemset/problem/1681/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681B. Card Trick",
    "url": "https://codeforces.com/problemset/problem/1681/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1681A. Game with Cards",
    "url": "https://codeforces.com/problemset/problem/1681/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680F. Lenient Vertex Cover",
    "url": "https://codeforces.com/problemset/problem/1680/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680E. Moving Chips",
    "url": "https://codeforces.com/problemset/problem/1680/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680D. Dog Walking",
    "url": "https://codeforces.com/problemset/problem/1680/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680C. Binary String",
    "url": "https://codeforces.com/problemset/problem/1680/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680B. Robots",
    "url": "https://codeforces.com/problemset/problem/1680/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1680A. Minimums and Maximums",
    "url": "https://codeforces.com/problemset/problem/1680/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679F. Formalism for Formalism",
    "url": "https://codeforces.com/problemset/problem/1679/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679E. Typical Party in Dorm",
    "url": "https://codeforces.com/problemset/problem/1679/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679D. Toss a Coin to Your Graph...",
    "url": "https://codeforces.com/problemset/problem/1679/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679C. Rooks Defenders",
    "url": "https://codeforces.com/problemset/problem/1679/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679B. Stone Age Problem",
    "url": "https://codeforces.com/problemset/problem/1679/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1679A. AvtoBus",
    "url": "https://codeforces.com/problemset/problem/1679/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1678B2. Tokitsukaze and Good 01-String (hard version)",
    "url": "https://codeforces.com/problemset/problem/1678/B2",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1678B1. Tokitsukaze and Good 01-String (easy version)",
    "url": "https://codeforces.com/problemset/problem/1678/B1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1678A. Tokitsukaze and All Zero Sequence",
    "url": "https://codeforces.com/problemset/problem/1678/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677F. Tokitsukaze and Gems",
    "url": "https://codeforces.com/problemset/problem/1677/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677E. Tokitsukaze and Beautiful Subsegments",
    "url": "https://codeforces.com/problemset/problem/1677/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677D. Tokitsukaze and Permutations",
    "url": "https://codeforces.com/problemset/problem/1677/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677C. Tokitsukaze and Two Colorful Tapes",
    "url": "https://codeforces.com/problemset/problem/1677/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677B. Tokitsukaze and Meeting",
    "url": "https://codeforces.com/problemset/problem/1677/B",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1677A. Tokitsukaze and Strange Inequality",
    "url": "https://codeforces.com/problemset/problem/1677/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676H2. Maximum Crossings (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1676/H2",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676H1. Maximum Crossings (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1676/H1",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676G. White-Black Balanced Subtrees",
    "url": "https://codeforces.com/problemset/problem/1676/G",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676F. Longest Strike",
    "url": "https://codeforces.com/problemset/problem/1676/F",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676E. Eating Queries",
    "url": "https://codeforces.com/problemset/problem/1676/E",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676D. X-Sum",
    "url": "https://codeforces.com/problemset/problem/1676/D",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676C. Most Similar Words",
    "url": "https://codeforces.com/problemset/problem/1676/C",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676B. Equal Candies",
    "url": "https://codeforces.com/problemset/problem/1676/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1676A. Lucky?",
    "url": "https://codeforces.com/problemset/problem/1676/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675G. Sorting Pancakes",
    "url": "https://codeforces.com/problemset/problem/1675/G",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675F. Vlad and Unfinished Business",
    "url": "https://codeforces.com/problemset/problem/1675/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675E. Replace With the Previous, Minimize",
    "url": "https://codeforces.com/problemset/problem/1675/E",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675D. Vertical Paths",
    "url": "https://codeforces.com/problemset/problem/1675/D",
    "difficulty": 1300,
    "tags": [
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675C. Detective Task",
    "url": "https://codeforces.com/problemset/problem/1675/C",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675B. Make It Increasing",
    "url": "https://codeforces.com/problemset/problem/1675/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1675A. Food for Animals",
    "url": "https://codeforces.com/problemset/problem/1675/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674G. Remove Directed Edges",
    "url": "https://codeforces.com/problemset/problem/1674/G",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674F. Desktop Rearrangement",
    "url": "https://codeforces.com/problemset/problem/1674/F",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674E. Breaking the Wall",
    "url": "https://codeforces.com/problemset/problem/1674/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674D. A-B-C Sort",
    "url": "https://codeforces.com/problemset/problem/1674/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674C. Infinite Replacement",
    "url": "https://codeforces.com/problemset/problem/1674/C",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674B. Dictionary",
    "url": "https://codeforces.com/problemset/problem/1674/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1674A. Number Transformation",
    "url": "https://codeforces.com/problemset/problem/1674/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673F. Anti-Theft Road Planning",
    "url": "https://codeforces.com/problemset/problem/1673/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673E. Power or XOR?",
    "url": "https://codeforces.com/problemset/problem/1673/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673D. Lost Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/1673/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673C. Palindrome Basis",
    "url": "https://codeforces.com/problemset/problem/1673/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673B. A Perfectly Balanced String?",
    "url": "https://codeforces.com/problemset/problem/1673/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1673A. Subtle Substring Subtraction",
    "url": "https://codeforces.com/problemset/problem/1673/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672I. PermutationForces",
    "url": "https://codeforces.com/problemset/problem/1672/I",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672H. Zigu Zagu",
    "url": "https://codeforces.com/problemset/problem/1672/H",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672G. Cross Xor",
    "url": "https://codeforces.com/problemset/problem/1672/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672F2. Checker for Array Shuffling",
    "url": "https://codeforces.com/problemset/problem/1672/F2",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672F1. Array Shuffling",
    "url": "https://codeforces.com/problemset/problem/1672/F1",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672E. notepad.exe",
    "url": "https://codeforces.com/problemset/problem/1672/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672D. Cyclic Rotation",
    "url": "https://codeforces.com/problemset/problem/1672/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672C. Unequal Array",
    "url": "https://codeforces.com/problemset/problem/1672/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672B. I love AAAB",
    "url": "https://codeforces.com/problemset/problem/1672/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1672A. Log Chopping",
    "url": "https://codeforces.com/problemset/problem/1672/A",
    "difficulty": 800,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671F. Permutation Counting",
    "url": "https://codeforces.com/problemset/problem/1671/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671E. Preorder",
    "url": "https://codeforces.com/problemset/problem/1671/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "dsu",
      "hashing",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671D. Insert a Progression",
    "url": "https://codeforces.com/problemset/problem/1671/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671C. Dolce Vita",
    "url": "https://codeforces.com/problemset/problem/1671/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671B. Consecutive Points Segment",
    "url": "https://codeforces.com/problemset/problem/1671/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1671A. String Building",
    "url": "https://codeforces.com/problemset/problem/1671/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670F. Jee, You See?",
    "url": "https://codeforces.com/problemset/problem/1670/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670E. Hemose on the Tree",
    "url": "https://codeforces.com/problemset/problem/1670/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670D. Very Suspicious",
    "url": "https://codeforces.com/problemset/problem/1670/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670C. Where is the Pizza?",
    "url": "https://codeforces.com/problemset/problem/1670/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670B. Dorms War",
    "url": "https://codeforces.com/problemset/problem/1670/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1670A. Prof. Slim",
    "url": "https://codeforces.com/problemset/problem/1670/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669H. Maximal AND",
    "url": "https://codeforces.com/problemset/problem/1669/H",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669G. Fall Down",
    "url": "https://codeforces.com/problemset/problem/1669/G",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669F. Eating Candies",
    "url": "https://codeforces.com/problemset/problem/1669/F",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669E. 2-Letter Strings",
    "url": "https://codeforces.com/problemset/problem/1669/E",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669D. Colorful Stamp",
    "url": "https://codeforces.com/problemset/problem/1669/D",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669C. Odd/Even Increments",
    "url": "https://codeforces.com/problemset/problem/1669/C",
    "difficulty": 800,
    "tags": [
      "greedy",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669B. Triple",
    "url": "https://codeforces.com/problemset/problem/1669/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1669A. Division?",
    "url": "https://codeforces.com/problemset/problem/1669/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1668B. Social Distance",
    "url": "https://codeforces.com/problemset/problem/1668/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1668A. Direction Change",
    "url": "https://codeforces.com/problemset/problem/1668/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667F. Yin Yang",
    "url": "https://codeforces.com/problemset/problem/1667/F",
    "difficulty": 3500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667E. Centroid Probabilities",
    "url": "https://codeforces.com/problemset/problem/1667/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667D. Edge Elimination",
    "url": "https://codeforces.com/problemset/problem/1667/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667C. Half Queen Cover",
    "url": "https://codeforces.com/problemset/problem/1667/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667B. Optimal Partition",
    "url": "https://codeforces.com/problemset/problem/1667/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1667A. Make it Increasing",
    "url": "https://codeforces.com/problemset/problem/1667/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666L. Labyrinth",
    "url": "https://codeforces.com/problemset/problem/1666/L",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666K. Kingdom Partition",
    "url": "https://codeforces.com/problemset/problem/1666/K",
    "difficulty": 3200,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666J. Job Lookup",
    "url": "https://codeforces.com/problemset/problem/1666/J",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dp",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666I. Interactive Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1666/I",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666H. Heroes of Might",
    "url": "https://codeforces.com/problemset/problem/1666/H",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666G. Global Warming",
    "url": "https://codeforces.com/problemset/problem/1666/G",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666F. Fancy Stack",
    "url": "https://codeforces.com/problemset/problem/1666/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666E. Even Split",
    "url": "https://codeforces.com/problemset/problem/1666/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666D. Deletive Editing",
    "url": "https://codeforces.com/problemset/problem/1666/D",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666C. Connect the Points",
    "url": "https://codeforces.com/problemset/problem/1666/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1666B. Budget Distribution",
    "url": "https://codeforces.com/problemset/problem/1666/B",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1666A. Admissible Map",
    "url": "https://codeforces.com/problemset/problem/1666/A",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1665E. MinimizOR",
    "url": "https://codeforces.com/problemset/problem/1665/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1665D. GCD Guess",
    "url": "https://codeforces.com/problemset/problem/1665/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "games",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1665C. Tree Infection",
    "url": "https://codeforces.com/problemset/problem/1665/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1665B. Array Cloning Technique",
    "url": "https://codeforces.com/problemset/problem/1665/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1665A. GCD vs LCM",
    "url": "https://codeforces.com/problemset/problem/1665/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663H. Cross-Language Program",
    "url": "https://codeforces.com/problemset/problem/1663/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663G. Six Characters",
    "url": "https://codeforces.com/problemset/problem/1663/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663F. In Every Generation...",
    "url": "https://codeforces.com/problemset/problem/1663/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663E. Are You Safe?",
    "url": "https://codeforces.com/problemset/problem/1663/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663D. Is it rated - 3",
    "url": "https://codeforces.com/problemset/problem/1663/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663C. Pōja Verdon",
    "url": "https://codeforces.com/problemset/problem/1663/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663B. Mike's Sequence",
    "url": "https://codeforces.com/problemset/problem/1663/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "divide and conquer",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1663A. Who Tested?",
    "url": "https://codeforces.com/problemset/problem/1663/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "expression parsing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662O. Circular Maze",
    "url": "https://codeforces.com/problemset/problem/1662/O",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662N. Drone Photo",
    "url": "https://codeforces.com/problemset/problem/1662/N",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662M. Bottle Arrangements",
    "url": "https://codeforces.com/problemset/problem/1662/M",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662L. Il Derby della Madonnina",
    "url": "https://codeforces.com/problemset/problem/1662/L",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662K. Pandemic Restrictions",
    "url": "https://codeforces.com/problemset/problem/1662/K",
    "difficulty": "N/A",
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662J. Training Camp",
    "url": "https://codeforces.com/problemset/problem/1662/J",
    "difficulty": "N/A",
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662I. Ice Cream Shop",
    "url": "https://codeforces.com/problemset/problem/1662/I",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662H. Boundary",
    "url": "https://codeforces.com/problemset/problem/1662/H",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662G. Gastronomic Event",
    "url": "https://codeforces.com/problemset/problem/1662/G",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662F. Antennas",
    "url": "https://codeforces.com/problemset/problem/1662/F",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "graphs",
      "implementation",
      "implementation",
      "shortest paths",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662E. Round Table",
    "url": "https://codeforces.com/problemset/problem/1662/E",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662D. Evolution of Weasels",
    "url": "https://codeforces.com/problemset/problem/1662/D",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662C. European Trip",
    "url": "https://codeforces.com/problemset/problem/1662/C",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662B. Toys",
    "url": "https://codeforces.com/problemset/problem/1662/B",
    "difficulty": "N/A",
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1662A. Organizing SWERC",
    "url": "https://codeforces.com/problemset/problem/1662/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661F. Teleporters",
    "url": "https://codeforces.com/problemset/problem/1661/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661E. Narrow Components",
    "url": "https://codeforces.com/problemset/problem/1661/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661D. Progressions Covering",
    "url": "https://codeforces.com/problemset/problem/1661/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661C. Water the Trees",
    "url": "https://codeforces.com/problemset/problem/1661/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661B. Getting Zero",
    "url": "https://codeforces.com/problemset/problem/1661/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1661A. Array Balancing",
    "url": "https://codeforces.com/problemset/problem/1661/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660F2. Promising String (hard version)",
    "url": "https://codeforces.com/problemset/problem/1660/F2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660F1. Promising String (easy version)",
    "url": "https://codeforces.com/problemset/problem/1660/F1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660E. Matrix and Shifts",
    "url": "https://codeforces.com/problemset/problem/1660/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660D. Maximum Product Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1660/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660C. Get an Even String",
    "url": "https://codeforces.com/problemset/problem/1660/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660B. Vlad and Candies",
    "url": "https://codeforces.com/problemset/problem/1660/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1660A. Vasya and Coins",
    "url": "https://codeforces.com/problemset/problem/1660/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659F. Tree and Permutation Game",
    "url": "https://codeforces.com/problemset/problem/1659/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659E. AND-MEX Walk",
    "url": "https://codeforces.com/problemset/problem/1659/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659D. Reverse Sort Sum",
    "url": "https://codeforces.com/problemset/problem/1659/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659C. Line Empire",
    "url": "https://codeforces.com/problemset/problem/1659/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659B. Bit Flipping",
    "url": "https://codeforces.com/problemset/problem/1659/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1659A. Red Versus Blue",
    "url": "https://codeforces.com/problemset/problem/1659/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658F. Juju and Binary String",
    "url": "https://codeforces.com/problemset/problem/1658/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658E. Gojou and Matrix Game",
    "url": "https://codeforces.com/problemset/problem/1658/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "games",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658D2. 388535 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1658/D2",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658D1. 388535 (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1658/D1",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658C. Shinju and the Lost Permutation",
    "url": "https://codeforces.com/problemset/problem/1658/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658B. Marin and Anti-coprime Permutation",
    "url": "https://codeforces.com/problemset/problem/1658/B",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1658A. Marin and Photoshoot",
    "url": "https://codeforces.com/problemset/problem/1658/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657F. Words on Tree",
    "url": "https://codeforces.com/problemset/problem/1657/F",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657E. Star MST",
    "url": "https://codeforces.com/problemset/problem/1657/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "graph matchings",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657D. For Gamers. By Gamers.",
    "url": "https://codeforces.com/problemset/problem/1657/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657C. Bracket Sequence Deletion",
    "url": "https://codeforces.com/problemset/problem/1657/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657B. XY Sequence",
    "url": "https://codeforces.com/problemset/problem/1657/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1657A. Integer Moves",
    "url": "https://codeforces.com/problemset/problem/1657/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656I. Neighbour Ordering",
    "url": "https://codeforces.com/problemset/problem/1656/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656H. Equal LCM Subsets",
    "url": "https://codeforces.com/problemset/problem/1656/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656G. Cycle Palindrome",
    "url": "https://codeforces.com/problemset/problem/1656/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656F. Parametric MST",
    "url": "https://codeforces.com/problemset/problem/1656/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656E. Equal Tree Sums",
    "url": "https://codeforces.com/problemset/problem/1656/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656D. K-good",
    "url": "https://codeforces.com/problemset/problem/1656/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656C. Make Equal With Mod",
    "url": "https://codeforces.com/problemset/problem/1656/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656B. Subtract Operation",
    "url": "https://codeforces.com/problemset/problem/1656/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1656A. Good Pairs",
    "url": "https://codeforces.com/problemset/problem/1656/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654H. Three Minimums",
    "url": "https://codeforces.com/problemset/problem/1654/H",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654G. Snowy Mountain",
    "url": "https://codeforces.com/problemset/problem/1654/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654F. Minimal String Xoration",
    "url": "https://codeforces.com/problemset/problem/1654/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "greedy",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654E. Arithmetic Operations",
    "url": "https://codeforces.com/problemset/problem/1654/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654D. Potion Brewing Class",
    "url": "https://codeforces.com/problemset/problem/1654/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654C. Alice and the Cake",
    "url": "https://codeforces.com/problemset/problem/1654/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654B. Prefix Removals",
    "url": "https://codeforces.com/problemset/problem/1654/B",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1654A. Maximum Cake Tastiness",
    "url": "https://codeforces.com/problemset/problem/1654/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651F. Tower Defense",
    "url": "https://codeforces.com/problemset/problem/1651/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651E. Sum of Matchings",
    "url": "https://codeforces.com/problemset/problem/1651/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651D. Nearest Excluded Points",
    "url": "https://codeforces.com/problemset/problem/1651/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651C. Fault-tolerant Network",
    "url": "https://codeforces.com/problemset/problem/1651/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651B. Prove Him Wrong",
    "url": "https://codeforces.com/problemset/problem/1651/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1651A. Playoff",
    "url": "https://codeforces.com/problemset/problem/1651/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650G. Counting Shortcuts",
    "url": "https://codeforces.com/problemset/problem/1650/G",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650F. Vitaly and Advanced Useless Algorithms",
    "url": "https://codeforces.com/problemset/problem/1650/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650E. Rescheduling the Exam",
    "url": "https://codeforces.com/problemset/problem/1650/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650D. Twist the Permutation",
    "url": "https://codeforces.com/problemset/problem/1650/D",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650C. Weight of the System of Nested Segments",
    "url": "https://codeforces.com/problemset/problem/1650/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "hashing",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650B. DIV + MOD",
    "url": "https://codeforces.com/problemset/problem/1650/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1650A. Deletions of Two Adjacent Letters",
    "url": "https://codeforces.com/problemset/problem/1650/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1649B. Game of Ball Passing",
    "url": "https://codeforces.com/problemset/problem/1649/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1649A. Game",
    "url": "https://codeforces.com/problemset/problem/1649/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648F. Two Avenues",
    "url": "https://codeforces.com/problemset/problem/1648/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648E. Air Reform",
    "url": "https://codeforces.com/problemset/problem/1648/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648D. Serious Business",
    "url": "https://codeforces.com/problemset/problem/1648/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648C. Tyler and Strings",
    "url": "https://codeforces.com/problemset/problem/1648/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648B. Integral Array",
    "url": "https://codeforces.com/problemset/problem/1648/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1648A. Weird Sum",
    "url": "https://codeforces.com/problemset/problem/1648/A",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647F. Madoka and Laziness",
    "url": "https://codeforces.com/problemset/problem/1647/F",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647E. Madoka and the Sixth-graders",
    "url": "https://codeforces.com/problemset/problem/1647/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647D. Madoka and the Best School in Russia",
    "url": "https://codeforces.com/problemset/problem/1647/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647C. Madoka and Childish Pranks",
    "url": "https://codeforces.com/problemset/problem/1647/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647B. Madoka and the Elegant Gift",
    "url": "https://codeforces.com/problemset/problem/1647/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1647A. Madoka and Math Dad",
    "url": "https://codeforces.com/problemset/problem/1647/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646F. Playing Around the Table",
    "url": "https://codeforces.com/problemset/problem/1646/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646E. Power Board",
    "url": "https://codeforces.com/problemset/problem/1646/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646D. Weight the Tree",
    "url": "https://codeforces.com/problemset/problem/1646/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646C. Factorials and Powers of Two",
    "url": "https://codeforces.com/problemset/problem/1646/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646B. Quality vs Quantity",
    "url": "https://codeforces.com/problemset/problem/1646/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1646A. Square Counting",
    "url": "https://codeforces.com/problemset/problem/1646/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644F. Basis",
    "url": "https://codeforces.com/problemset/problem/1644/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644E. Expand the Path",
    "url": "https://codeforces.com/problemset/problem/1644/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644D. Cross Coloring",
    "url": "https://codeforces.com/problemset/problem/1644/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644C. Increase Subarray Sums",
    "url": "https://codeforces.com/problemset/problem/1644/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644B. Anti-Fibonacci Permutation",
    "url": "https://codeforces.com/problemset/problem/1644/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1644A. Doors and Keys",
    "url": "https://codeforces.com/problemset/problem/1644/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1642B. Power Walking",
    "url": "https://codeforces.com/problemset/problem/1642/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1642A. Hard Way",
    "url": "https://codeforces.com/problemset/problem/1642/A",
    "difficulty": 800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641F. Covering Circle",
    "url": "https://codeforces.com/problemset/problem/1641/F",
    "difficulty": 3500,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641E. Special Positions",
    "url": "https://codeforces.com/problemset/problem/1641/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641D. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1641/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641C. Anonymity Is Important",
    "url": "https://codeforces.com/problemset/problem/1641/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641B. Repetitions Decoding",
    "url": "https://codeforces.com/problemset/problem/1641/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1641A. Great Sequence",
    "url": "https://codeforces.com/problemset/problem/1641/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639K. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/K",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639J. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/J",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639I. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/I",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639H. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/H",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639G. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/G",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639F. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/F",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639E. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/E",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639D. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/D",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639C. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/C",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639B. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/B",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1639A. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1639/A",
    "difficulty": "N/A",
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638F. Two Posters",
    "url": "https://codeforces.com/problemset/problem/1638/F",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638E. Colorful Operations",
    "url": "https://codeforces.com/problemset/problem/1638/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638D. Big Brush",
    "url": "https://codeforces.com/problemset/problem/1638/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638C. Inversion Graph",
    "url": "https://codeforces.com/problemset/problem/1638/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638B. Odd Swap Sort",
    "url": "https://codeforces.com/problemset/problem/1638/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1638A. Reverse",
    "url": "https://codeforces.com/problemset/problem/1638/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637H. Minimize Inversions Number",
    "url": "https://codeforces.com/problemset/problem/1637/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637G. Birthday",
    "url": "https://codeforces.com/problemset/problem/1637/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637F. Towers",
    "url": "https://codeforces.com/problemset/problem/1637/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637E. Best Pair",
    "url": "https://codeforces.com/problemset/problem/1637/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637D. Yet Another Minimization Problem",
    "url": "https://codeforces.com/problemset/problem/1637/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637C. Andrew and Stones",
    "url": "https://codeforces.com/problemset/problem/1637/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637B. MEX and Array",
    "url": "https://codeforces.com/problemset/problem/1637/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1637A. Sorting Parts",
    "url": "https://codeforces.com/problemset/problem/1637/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635F. Closest Pair ",
    "url": "https://codeforces.com/problemset/problem/1635/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635E. Cars ",
    "url": "https://codeforces.com/problemset/problem/1635/E",
    "difficulty": 2200,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635D. Infinite Set",
    "url": "https://codeforces.com/problemset/problem/1635/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635C. Differential Sorting",
    "url": "https://codeforces.com/problemset/problem/1635/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635B. Avoid Local Maximums",
    "url": "https://codeforces.com/problemset/problem/1635/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1635A. Min Or Sum",
    "url": "https://codeforces.com/problemset/problem/1635/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634F. Fibonacci Additions",
    "url": "https://codeforces.com/problemset/problem/1634/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634E. Fair Share",
    "url": "https://codeforces.com/problemset/problem/1634/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634D. Finding Zero",
    "url": "https://codeforces.com/problemset/problem/1634/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634C. OKEA",
    "url": "https://codeforces.com/problemset/problem/1634/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634B. Fortune Telling",
    "url": "https://codeforces.com/problemset/problem/1634/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1634A. Reverse and Concatenate",
    "url": "https://codeforces.com/problemset/problem/1634/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633F. Perfect Matching",
    "url": "https://codeforces.com/problemset/problem/1633/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633E. Spanning Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1633/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633D. Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1633/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633C. Kill the Monster",
    "url": "https://codeforces.com/problemset/problem/1633/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633B. Minority",
    "url": "https://codeforces.com/problemset/problem/1633/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1633A. Div. 7",
    "url": "https://codeforces.com/problemset/problem/1633/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632E2. Distance Tree (hard version)",
    "url": "https://codeforces.com/problemset/problem/1632/E2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632E1. Distance Tree (easy version)",
    "url": "https://codeforces.com/problemset/problem/1632/E1",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632D. New Year Concert",
    "url": "https://codeforces.com/problemset/problem/1632/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632C. Strange Test",
    "url": "https://codeforces.com/problemset/problem/1632/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632B. Roof Construction",
    "url": "https://codeforces.com/problemset/problem/1632/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1632A. ABC",
    "url": "https://codeforces.com/problemset/problem/1632/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1631B. Fun with Even Subarrays",
    "url": "https://codeforces.com/problemset/problem/1631/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1631A. Min Max Swap",
    "url": "https://codeforces.com/problemset/problem/1631/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630F. Making It Bipartite",
    "url": "https://codeforces.com/problemset/problem/1630/F",
    "difficulty": 3400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630E. Expected Components",
    "url": "https://codeforces.com/problemset/problem/1630/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630D. Flipping Range",
    "url": "https://codeforces.com/problemset/problem/1630/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630C. Paint the Middle",
    "url": "https://codeforces.com/problemset/problem/1630/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630B. Range and Partition",
    "url": "https://codeforces.com/problemset/problem/1630/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1630A. And Matching",
    "url": "https://codeforces.com/problemset/problem/1630/A",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1629B. GCD Arrays",
    "url": "https://codeforces.com/problemset/problem/1629/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1629A. Download More RAM",
    "url": "https://codeforces.com/problemset/problem/1629/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628F. Spaceship Crisis Management",
    "url": "https://codeforces.com/problemset/problem/1628/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628E. Groceries in Meteor Town",
    "url": "https://codeforces.com/problemset/problem/1628/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628D2. Game on Sum (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1628/D2",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628D1. Game on Sum (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1628/D1",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628C. Grid Xor",
    "url": "https://codeforces.com/problemset/problem/1628/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628B. Peculiar Movie Preferences",
    "url": "https://codeforces.com/problemset/problem/1628/B",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1628A. Meximum Array",
    "url": "https://codeforces.com/problemset/problem/1628/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627F. Not Splitting",
    "url": "https://codeforces.com/problemset/problem/1627/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627E. Not Escaping",
    "url": "https://codeforces.com/problemset/problem/1627/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627D. Not Adding",
    "url": "https://codeforces.com/problemset/problem/1627/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627C. Not Assigning",
    "url": "https://codeforces.com/problemset/problem/1627/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627B. Not Sitting",
    "url": "https://codeforces.com/problemset/problem/1627/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1627A. Not Shading",
    "url": "https://codeforces.com/problemset/problem/1627/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626F. A Random Code Problem",
    "url": "https://codeforces.com/problemset/problem/1626/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626E. Black and White Tree",
    "url": "https://codeforces.com/problemset/problem/1626/E",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626D. Martial Arts Tournament",
    "url": "https://codeforces.com/problemset/problem/1626/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626C. Monsters And Spells",
    "url": "https://codeforces.com/problemset/problem/1626/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626B. Minor Reduction",
    "url": "https://codeforces.com/problemset/problem/1626/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1626A. Equidistant Letters",
    "url": "https://codeforces.com/problemset/problem/1626/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625E2. Cats on the Upgrade (hard version)",
    "url": "https://codeforces.com/problemset/problem/1625/E2",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625E1. Cats on the Upgrade (easy version)",
    "url": "https://codeforces.com/problemset/problem/1625/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625D. Binary Spiders",
    "url": "https://codeforces.com/problemset/problem/1625/D",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625C. Road Optimization",
    "url": "https://codeforces.com/problemset/problem/1625/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625B. Elementary Particles",
    "url": "https://codeforces.com/problemset/problem/1625/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1625A. Ancient Civilization",
    "url": "https://codeforces.com/problemset/problem/1625/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624G. MinOr Tree",
    "url": "https://codeforces.com/problemset/problem/1624/G",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624F. Interacdive Problem",
    "url": "https://codeforces.com/problemset/problem/1624/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624E. Masha-forgetful",
    "url": "https://codeforces.com/problemset/problem/1624/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624D. Palindromes Coloring",
    "url": "https://codeforces.com/problemset/problem/1624/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624C. Division by Two and Permutation",
    "url": "https://codeforces.com/problemset/problem/1624/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624B. Make AP",
    "url": "https://codeforces.com/problemset/problem/1624/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1624A. Plus One on the Subset",
    "url": "https://codeforces.com/problemset/problem/1624/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1623E. Middle Duplication",
    "url": "https://codeforces.com/problemset/problem/1623/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1623D. Robot Cleaner Revisit",
    "url": "https://codeforces.com/problemset/problem/1623/D",
    "difficulty": 2300,
    "tags": [
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1623C. Balanced Stone Heaps",
    "url": "https://codeforces.com/problemset/problem/1623/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1623B. Game on Ranges",
    "url": "https://codeforces.com/problemset/problem/1623/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1623A. Robot Cleaner",
    "url": "https://codeforces.com/problemset/problem/1623/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622F. Quadratic Set",
    "url": "https://codeforces.com/problemset/problem/1622/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622E. Math Test",
    "url": "https://codeforces.com/problemset/problem/1622/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622D. Shuffle",
    "url": "https://codeforces.com/problemset/problem/1622/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622C. Set or Decrease",
    "url": "https://codeforces.com/problemset/problem/1622/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622B. Berland Music",
    "url": "https://codeforces.com/problemset/problem/1622/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1622A. Construct a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1622/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621I. Two Sequences",
    "url": "https://codeforces.com/problemset/problem/1621/I",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621H. Trains and Airplanes",
    "url": "https://codeforces.com/problemset/problem/1621/H",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621G. Weighted Increasing Subsequences",
    "url": "https://codeforces.com/problemset/problem/1621/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621F. Strange Instructions",
    "url": "https://codeforces.com/problemset/problem/1621/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621E. New School",
    "url": "https://codeforces.com/problemset/problem/1621/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621D. The Winter Hike",
    "url": "https://codeforces.com/problemset/problem/1621/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621C. Hidden Permutations",
    "url": "https://codeforces.com/problemset/problem/1621/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621B. Integers Shop",
    "url": "https://codeforces.com/problemset/problem/1621/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1621A. Stable Arrangement of Rooks",
    "url": "https://codeforces.com/problemset/problem/1621/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620G. Subsequences Galore",
    "url": "https://codeforces.com/problemset/problem/1620/G",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620F. Bipartite Array",
    "url": "https://codeforces.com/problemset/problem/1620/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620E. Replace the Numbers",
    "url": "https://codeforces.com/problemset/problem/1620/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620D. Exact Change",
    "url": "https://codeforces.com/problemset/problem/1620/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620C. BA-String",
    "url": "https://codeforces.com/problemset/problem/1620/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620B. Triangles on a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1620/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1620A. Equal or Not Equal",
    "url": "https://codeforces.com/problemset/problem/1620/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619H. Permutation and Queries",
    "url": "https://codeforces.com/problemset/problem/1619/H",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619G. Unusual Minesweeper",
    "url": "https://codeforces.com/problemset/problem/1619/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619F. Let's Play the Hat?",
    "url": "https://codeforces.com/problemset/problem/1619/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619E. MEX and Increments",
    "url": "https://codeforces.com/problemset/problem/1619/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619D. New Year's Problem",
    "url": "https://codeforces.com/problemset/problem/1619/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619C. Wrong Addition",
    "url": "https://codeforces.com/problemset/problem/1619/C",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619B. Squares and Cubes",
    "url": "https://codeforces.com/problemset/problem/1619/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1619A. Square String?",
    "url": "https://codeforces.com/problemset/problem/1619/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618G. Trader Problem",
    "url": "https://codeforces.com/problemset/problem/1618/G",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618F. Reverse",
    "url": "https://codeforces.com/problemset/problem/1618/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618E. Singers' Tour",
    "url": "https://codeforces.com/problemset/problem/1618/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618D. Array and Operations",
    "url": "https://codeforces.com/problemset/problem/1618/D",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618C. Paint the Array",
    "url": "https://codeforces.com/problemset/problem/1618/C",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618B. Missing Bigram",
    "url": "https://codeforces.com/problemset/problem/1618/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1618A. Polycarp and Sums of Subsequences",
    "url": "https://codeforces.com/problemset/problem/1618/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617E. Christmas Chocolates",
    "url": "https://codeforces.com/problemset/problem/1617/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "implementation",
      "math",
      "number theory",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617D2. Too Many Impostors (hard version)",
    "url": "https://codeforces.com/problemset/problem/1617/D2",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617D1. Too Many Impostors (easy version)",
    "url": "https://codeforces.com/problemset/problem/1617/D1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617C. Paprika and Permutation",
    "url": "https://codeforces.com/problemset/problem/1617/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617B. GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1617/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1617A. Forbidden Subsequence",
    "url": "https://codeforces.com/problemset/problem/1617/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616H. Keep XOR Low",
    "url": "https://codeforces.com/problemset/problem/1616/H",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616G. Just Add an Edge",
    "url": "https://codeforces.com/problemset/problem/1616/G",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616F. Tricolor Triangles",
    "url": "https://codeforces.com/problemset/problem/1616/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616E. Lexicographically Small Enough",
    "url": "https://codeforces.com/problemset/problem/1616/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616D. Keep the Average High",
    "url": "https://codeforces.com/problemset/problem/1616/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616C. Representative Edges",
    "url": "https://codeforces.com/problemset/problem/1616/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616B. Mirror in the String",
    "url": "https://codeforces.com/problemset/problem/1616/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1616A. Integer Diversity",
    "url": "https://codeforces.com/problemset/problem/1616/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615H. Reindeer Games",
    "url": "https://codeforces.com/problemset/problem/1615/H",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615G. Maximum Adjacent Pairs",
    "url": "https://codeforces.com/problemset/problem/1615/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615F. LEGOndary Grandmaster",
    "url": "https://codeforces.com/problemset/problem/1615/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615E. Purple Crayon",
    "url": "https://codeforces.com/problemset/problem/1615/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615D. X(or)-mas Tree",
    "url": "https://codeforces.com/problemset/problem/1615/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615C. Menorah",
    "url": "https://codeforces.com/problemset/problem/1615/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615B. And It's Non-Zero",
    "url": "https://codeforces.com/problemset/problem/1615/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1615A. Closing The Gap",
    "url": "https://codeforces.com/problemset/problem/1615/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614E. Divan and a Cottage",
    "url": "https://codeforces.com/problemset/problem/1614/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614D2. Divan and Kostomuksha (hard version)",
    "url": "https://codeforces.com/problemset/problem/1614/D2",
    "difficulty": 2300,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614D1. Divan and Kostomuksha (easy version)",
    "url": "https://codeforces.com/problemset/problem/1614/D1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614C. Divan and bitwise operations",
    "url": "https://codeforces.com/problemset/problem/1614/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614B. Divan and a New Project ",
    "url": "https://codeforces.com/problemset/problem/1614/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1614A. Divan and a Store",
    "url": "https://codeforces.com/problemset/problem/1614/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613F. Tree Coloring",
    "url": "https://codeforces.com/problemset/problem/1613/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613E. Crazy Robot",
    "url": "https://codeforces.com/problemset/problem/1613/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613D. MEX Sequences",
    "url": "https://codeforces.com/problemset/problem/1613/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613C. Poisoned Dagger",
    "url": "https://codeforces.com/problemset/problem/1613/C",
    "difficulty": 1200,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613B. Absent Remainder",
    "url": "https://codeforces.com/problemset/problem/1613/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1613A. Long Comparison",
    "url": "https://codeforces.com/problemset/problem/1613/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612G. Max Sum Array",
    "url": "https://codeforces.com/problemset/problem/1612/G",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612F. Armor and Weapons",
    "url": "https://codeforces.com/problemset/problem/1612/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612E. Messages",
    "url": "https://codeforces.com/problemset/problem/1612/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612D. X-Magic Pair",
    "url": "https://codeforces.com/problemset/problem/1612/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612C. Chat Ban",
    "url": "https://codeforces.com/problemset/problem/1612/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612B. Special Permutation",
    "url": "https://codeforces.com/problemset/problem/1612/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1612A. Distance",
    "url": "https://codeforces.com/problemset/problem/1612/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611G. Robot and Candies",
    "url": "https://codeforces.com/problemset/problem/1611/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611F. ATM and Students",
    "url": "https://codeforces.com/problemset/problem/1611/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611E2. Escape The Maze (hard version)",
    "url": "https://codeforces.com/problemset/problem/1611/E2",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611E1. Escape The Maze (easy version)",
    "url": "https://codeforces.com/problemset/problem/1611/E1",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611D. Weights Assignment For Tree Edges",
    "url": "https://codeforces.com/problemset/problem/1611/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611C. Polycarp Recovers the Permutation",
    "url": "https://codeforces.com/problemset/problem/1611/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611B. Team Composition: Programmers and Mathematicians",
    "url": "https://codeforces.com/problemset/problem/1611/B",
    "difficulty": 800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1611A. Make Even",
    "url": "https://codeforces.com/problemset/problem/1611/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610I. Mashtali vs AtCoder",
    "url": "https://codeforces.com/problemset/problem/1610/I",
    "difficulty": 3100,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610H. Squid Game",
    "url": "https://codeforces.com/problemset/problem/1610/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610G. AmShZ Wins a Bet",
    "url": "https://codeforces.com/problemset/problem/1610/G",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610F. Mashtali: a Space Oddysey",
    "url": "https://codeforces.com/problemset/problem/1610/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610E. AmShZ and G.O.A.T.",
    "url": "https://codeforces.com/problemset/problem/1610/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610D. Not Quite Lee",
    "url": "https://codeforces.com/problemset/problem/1610/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610C. Keshi Is Throwing a Party",
    "url": "https://codeforces.com/problemset/problem/1610/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610B. Kalindrome Array",
    "url": "https://codeforces.com/problemset/problem/1610/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1610A. Anti Light's Cell Guessing",
    "url": "https://codeforces.com/problemset/problem/1610/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609H. Pushing Robots",
    "url": "https://codeforces.com/problemset/problem/1609/H",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1609G. A Stroll Around the Matrix",
    "url": "https://codeforces.com/problemset/problem/1609/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609F. Interesting Sections",
    "url": "https://codeforces.com/problemset/problem/1609/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609E. William The Oblivious ",
    "url": "https://codeforces.com/problemset/problem/1609/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609D. Social Network",
    "url": "https://codeforces.com/problemset/problem/1609/D",
    "difficulty": 1600,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609C. Complex Market Analysis",
    "url": "https://codeforces.com/problemset/problem/1609/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "number theory",
      "schedules",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609B. William the Vigilant",
    "url": "https://codeforces.com/problemset/problem/1609/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1609A. Divide and Multiply",
    "url": "https://codeforces.com/problemset/problem/1609/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608G. Alphabetic Tree",
    "url": "https://codeforces.com/problemset/problem/1608/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608F. MEX counting",
    "url": "https://codeforces.com/problemset/problem/1608/F",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608E. The Cells on the Paper",
    "url": "https://codeforces.com/problemset/problem/1608/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608D. Dominoes",
    "url": "https://codeforces.com/problemset/problem/1608/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608C. Game Master",
    "url": "https://codeforces.com/problemset/problem/1608/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608B. Build the Permutation",
    "url": "https://codeforces.com/problemset/problem/1608/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1608A. Find Array",
    "url": "https://codeforces.com/problemset/problem/1608/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607H. Banquet Preparations 2",
    "url": "https://codeforces.com/problemset/problem/1607/H",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607G. Banquet Preparations 1",
    "url": "https://codeforces.com/problemset/problem/1607/G",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607F. Robot on the Board 2",
    "url": "https://codeforces.com/problemset/problem/1607/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607E. Robot on the Board 1",
    "url": "https://codeforces.com/problemset/problem/1607/E",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607D. Blue-Red Permutation",
    "url": "https://codeforces.com/problemset/problem/1607/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607C. Minimum Extraction",
    "url": "https://codeforces.com/problemset/problem/1607/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607B. Odd Grasshopper",
    "url": "https://codeforces.com/problemset/problem/1607/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1607A. Linear Keyboard",
    "url": "https://codeforces.com/problemset/problem/1607/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606F. Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1606/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606E. Arena",
    "url": "https://codeforces.com/problemset/problem/1606/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606D. Red-Blue Matrix",
    "url": "https://codeforces.com/problemset/problem/1606/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606C. Banknotes",
    "url": "https://codeforces.com/problemset/problem/1606/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606B. Update Files",
    "url": "https://codeforces.com/problemset/problem/1606/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1606A. AB Balance",
    "url": "https://codeforces.com/problemset/problem/1606/A",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605F. PalindORme",
    "url": "https://codeforces.com/problemset/problem/1605/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605E. Array Equalizer",
    "url": "https://codeforces.com/problemset/problem/1605/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605D. Treelabeling",
    "url": "https://codeforces.com/problemset/problem/1605/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "games",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605C. Dominant Character",
    "url": "https://codeforces.com/problemset/problem/1605/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605B. Reverse Sort",
    "url": "https://codeforces.com/problemset/problem/1605/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1605A. A.M. Deviation",
    "url": "https://codeforces.com/problemset/problem/1605/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1604B. XOR Specia-LIS-t",
    "url": "https://codeforces.com/problemset/problem/1604/B",
    "difficulty": 1100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1604A. Era",
    "url": "https://codeforces.com/problemset/problem/1604/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603F. October 18, 2017",
    "url": "https://codeforces.com/problemset/problem/1603/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603E. A Perfect Problem",
    "url": "https://codeforces.com/problemset/problem/1603/E",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603D. Artistic Partition",
    "url": "https://codeforces.com/problemset/problem/1603/D",
    "difficulty": 3000,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603C. Extreme Extension",
    "url": "https://codeforces.com/problemset/problem/1603/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603B. Moderate Modular Mode",
    "url": "https://codeforces.com/problemset/problem/1603/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1603A. Di-visible Confusion",
    "url": "https://codeforces.com/problemset/problem/1603/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1602B. Divine Array",
    "url": "https://codeforces.com/problemset/problem/1602/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1602A. Two Subsequences",
    "url": "https://codeforces.com/problemset/problem/1602/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601F. Two Sorts",
    "url": "https://codeforces.com/problemset/problem/1601/F",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601E. Phys Ed Online",
    "url": "https://codeforces.com/problemset/problem/1601/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601D. Difficult Mountain",
    "url": "https://codeforces.com/problemset/problem/1601/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601C. Optimal Insertion",
    "url": "https://codeforces.com/problemset/problem/1601/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601B. Frog Traveler",
    "url": "https://codeforces.com/problemset/problem/1601/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1601A. Array Elimination",
    "url": "https://codeforces.com/problemset/problem/1601/A",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1600J. Robot Factory",
    "url": "https://codeforces.com/problemset/problem/1600/J",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1600F. Party Organization",
    "url": "https://codeforces.com/problemset/problem/1600/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1600E. Array Game",
    "url": "https://codeforces.com/problemset/problem/1600/E",
    "difficulty": 1900,
    "tags": [
      "games",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599J. Bob's Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1599/J",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599I. Desert",
    "url": "https://codeforces.com/problemset/problem/1599/I",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599H. Hidden Fortress",
    "url": "https://codeforces.com/problemset/problem/1599/H",
    "difficulty": 2100,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599G. Shortest path",
    "url": "https://codeforces.com/problemset/problem/1599/G",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599F. Mars",
    "url": "https://codeforces.com/problemset/problem/1599/F",
    "difficulty": 2700,
    "tags": [
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599E. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1599/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599D. Bubble Popping",
    "url": "https://codeforces.com/problemset/problem/1599/D",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1599C. Bubble Strike",
    "url": "https://codeforces.com/problemset/problem/1599/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1599B. Restaurant Game",
    "url": "https://codeforces.com/problemset/problem/1599/B",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1599A. Weights",
    "url": "https://codeforces.com/problemset/problem/1599/A",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598G. The Sum of Good Numbers",
    "url": "https://codeforces.com/problemset/problem/1598/G",
    "difficulty": 3200,
    "tags": [
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598F. RBS",
    "url": "https://codeforces.com/problemset/problem/1598/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598E. Staircases",
    "url": "https://codeforces.com/problemset/problem/1598/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598D. Training Session",
    "url": "https://codeforces.com/problemset/problem/1598/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598C. Delete Two Elements",
    "url": "https://codeforces.com/problemset/problem/1598/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598B. Groups",
    "url": "https://codeforces.com/problemset/problem/1598/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1598A. Computer Game",
    "url": "https://codeforces.com/problemset/problem/1598/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594F. Ideal Farm",
    "url": "https://codeforces.com/problemset/problem/1594/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594E2. Rubik's Cube Coloring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1594/E2",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594E1. Rubik's Cube Coloring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1594/E1",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594D. The Number of Imposters",
    "url": "https://codeforces.com/problemset/problem/1594/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594C. Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1594/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594B. Special Numbers",
    "url": "https://codeforces.com/problemset/problem/1594/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1594A. Consecutive Sum Riddle",
    "url": "https://codeforces.com/problemset/problem/1594/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593G. Changing Brackets",
    "url": "https://codeforces.com/problemset/problem/1593/G",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593F. Red-Black Number",
    "url": "https://codeforces.com/problemset/problem/1593/F",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593E. Gardener and Tree",
    "url": "https://codeforces.com/problemset/problem/1593/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593D2. Half of Same",
    "url": "https://codeforces.com/problemset/problem/1593/D2",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593D1. All are Same",
    "url": "https://codeforces.com/problemset/problem/1593/D1",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593C. Save More Mice",
    "url": "https://codeforces.com/problemset/problem/1593/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "greedy",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593B. Make it Divisible by 25",
    "url": "https://codeforces.com/problemset/problem/1593/B",
    "difficulty": 900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "math",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1593A. Elections",
    "url": "https://codeforces.com/problemset/problem/1593/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592F2. Alice and Recoloring 2",
    "url": "https://codeforces.com/problemset/problem/1592/F2",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592F1. Alice and Recoloring 1",
    "url": "https://codeforces.com/problemset/problem/1592/F1",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592E. Bored Bakry",
    "url": "https://codeforces.com/problemset/problem/1592/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592D. Hemose in ICPC ?",
    "url": "https://codeforces.com/problemset/problem/1592/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dfs and similar",
      "implementation",
      "interactive",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592C. Bakry and Partitioning",
    "url": "https://codeforces.com/problemset/problem/1592/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592B. Hemose Shopping",
    "url": "https://codeforces.com/problemset/problem/1592/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1592A. Gamer Hemose",
    "url": "https://codeforces.com/problemset/problem/1592/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1588F. Jumping Through the Array",
    "url": "https://codeforces.com/problemset/problem/1588/F",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1586I. Omkar and Mosaic",
    "url": "https://codeforces.com/problemset/problem/1586/I",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585G. Poachers",
    "url": "https://codeforces.com/problemset/problem/1585/G",
    "difficulty": 2500,
    "tags": [
      "dp",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585F. Non-equal Neighbours",
    "url": "https://codeforces.com/problemset/problem/1585/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585E. Frequency Queries",
    "url": "https://codeforces.com/problemset/problem/1585/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585D. Yet Another Sorting Problem",
    "url": "https://codeforces.com/problemset/problem/1585/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585C. Minimize Distance",
    "url": "https://codeforces.com/problemset/problem/1585/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585B. Array Eversion",
    "url": "https://codeforces.com/problemset/problem/1585/B",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1585A. Life of a Flower",
    "url": "https://codeforces.com/problemset/problem/1585/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584G. Eligible Segments",
    "url": "https://codeforces.com/problemset/problem/1584/G",
    "difficulty": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584F. Strange LCS",
    "url": "https://codeforces.com/problemset/problem/1584/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584E. Game with Stones",
    "url": "https://codeforces.com/problemset/problem/1584/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584D. Guess the Permutation",
    "url": "https://codeforces.com/problemset/problem/1584/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584C. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1584/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584B. Coloring Rectangles",
    "url": "https://codeforces.com/problemset/problem/1584/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1584A. Mathematical Addition",
    "url": "https://codeforces.com/problemset/problem/1584/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583H. Omkar and Tours",
    "url": "https://codeforces.com/problemset/problem/1583/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583G. Omkar and Time Travel",
    "url": "https://codeforces.com/problemset/problem/1583/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583F. Defender of Childhood Dreams",
    "url": "https://codeforces.com/problemset/problem/1583/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583E. Moment of Bloom",
    "url": "https://codeforces.com/problemset/problem/1583/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583D. Omkar and the Meaning of Life",
    "url": "https://codeforces.com/problemset/problem/1583/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583C. Omkar and Determination",
    "url": "https://codeforces.com/problemset/problem/1583/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583B. Omkar and Heavenly Tree",
    "url": "https://codeforces.com/problemset/problem/1583/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1583A. Windblume Ode",
    "url": "https://codeforces.com/problemset/problem/1583/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582G. Kuzya and Homework",
    "url": "https://codeforces.com/problemset/problem/1582/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582F2. Korney Korneevich and XOR (hard version)",
    "url": "https://codeforces.com/problemset/problem/1582/F2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582F1. Korney Korneevich and XOR (easy version)",
    "url": "https://codeforces.com/problemset/problem/1582/F1",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582E. Pchelyonok and Segments",
    "url": "https://codeforces.com/problemset/problem/1582/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582D. Vupsen, Pupsen and 0",
    "url": "https://codeforces.com/problemset/problem/1582/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582C. Grandma Capa Knits a Scarf",
    "url": "https://codeforces.com/problemset/problem/1582/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582B. Luntik and Subsequences",
    "url": "https://codeforces.com/problemset/problem/1582/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1582A. Luntik and Concerts",
    "url": "https://codeforces.com/problemset/problem/1582/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1581B. Diameter of Graph",
    "url": "https://codeforces.com/problemset/problem/1581/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1581A. CQXYM Count Permutations",
    "url": "https://codeforces.com/problemset/problem/1581/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580F. Problems for Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580E. Railway Construction",
    "url": "https://codeforces.com/problemset/problem/1580/E",
    "difficulty": 3400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580D. Subsequence",
    "url": "https://codeforces.com/problemset/problem/1580/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580C. Train Maintenance",
    "url": "https://codeforces.com/problemset/problem/1580/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580B. Mathematics Curriculum",
    "url": "https://codeforces.com/problemset/problem/1580/B",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1580A. Portal",
    "url": "https://codeforces.com/problemset/problem/1580/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579G. Minimal Coverage",
    "url": "https://codeforces.com/problemset/problem/1579/G",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579F. Array Stabilization (AND version)",
    "url": "https://codeforces.com/problemset/problem/1579/F",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579E2. Array Optimization by Deque",
    "url": "https://codeforces.com/problemset/problem/1579/E2",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579E1. Permutation Minimization by Deque",
    "url": "https://codeforces.com/problemset/problem/1579/E1",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579D. Productive Meeting",
    "url": "https://codeforces.com/problemset/problem/1579/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579C. Ticks",
    "url": "https://codeforces.com/problemset/problem/1579/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579B. Shifting Sort",
    "url": "https://codeforces.com/problemset/problem/1579/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1579A. Casimir's String Solitaire",
    "url": "https://codeforces.com/problemset/problem/1579/A",
    "difficulty": 800,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578M. The Mind",
    "url": "https://codeforces.com/problemset/problem/1578/M",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578L. Labyrinth",
    "url": "https://codeforces.com/problemset/problem/1578/L",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578K. Kingdom of Islands",
    "url": "https://codeforces.com/problemset/problem/1578/K",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578J. Just Kingdom",
    "url": "https://codeforces.com/problemset/problem/1578/J",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578I. Interactive Rays",
    "url": "https://codeforces.com/problemset/problem/1578/I",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578H. Higher Order Functions",
    "url": "https://codeforces.com/problemset/problem/1578/H",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578G. Game of Chance",
    "url": "https://codeforces.com/problemset/problem/1578/G",
    "difficulty": 3500,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578F. Framing Pictures",
    "url": "https://codeforces.com/problemset/problem/1578/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578E. Easy Scheduling",
    "url": "https://codeforces.com/problemset/problem/1578/E",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578D. Dragon Curve",
    "url": "https://codeforces.com/problemset/problem/1578/D",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1578C. Cactus Lady and her Cing",
    "url": "https://codeforces.com/problemset/problem/1578/C",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1578B. Building Forest Trails",
    "url": "https://codeforces.com/problemset/problem/1578/B",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1578A. Anti-Tetris",
    "url": "https://codeforces.com/problemset/problem/1578/A",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1576A. Communication Routing Challenge",
    "url": "https://codeforces.com/problemset/problem/1576/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575M. Managing Telephone Poles",
    "url": "https://codeforces.com/problemset/problem/1575/M",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575L. Longest Array Deconstruction",
    "url": "https://codeforces.com/problemset/problem/1575/L",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575K. Knitting Batik",
    "url": "https://codeforces.com/problemset/problem/1575/K",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575J. Jeopardy of Dropped Balls",
    "url": "https://codeforces.com/problemset/problem/1575/J",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575I. Illusions of the Desert",
    "url": "https://codeforces.com/problemset/problem/1575/I",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575H. Holiday Wall Ornaments",
    "url": "https://codeforces.com/problemset/problem/1575/H",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575G. GCD Festival",
    "url": "https://codeforces.com/problemset/problem/1575/G",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575F. Finding Expected Value",
    "url": "https://codeforces.com/problemset/problem/1575/F",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575E. Eye-Pleasing City Park Tour",
    "url": "https://codeforces.com/problemset/problem/1575/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575D. Divisible by Twenty-Five",
    "url": "https://codeforces.com/problemset/problem/1575/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575C. Cyclic Sum",
    "url": "https://codeforces.com/problemset/problem/1575/C",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "fft",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575B. Building an Amusement Park",
    "url": "https://codeforces.com/problemset/problem/1575/B",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1575A. Another Sorting Problem",
    "url": "https://codeforces.com/problemset/problem/1575/A",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574F. Occurrences",
    "url": "https://codeforces.com/problemset/problem/1574/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574E. Coloring",
    "url": "https://codeforces.com/problemset/problem/1574/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574D. The Strongest Build",
    "url": "https://codeforces.com/problemset/problem/1574/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574C. Slay the Dragon",
    "url": "https://codeforces.com/problemset/problem/1574/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574B. Combinatorics Homework",
    "url": "https://codeforces.com/problemset/problem/1574/B",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1574A. Regular Bracket Sequences",
    "url": "https://codeforces.com/problemset/problem/1574/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1573B. Swaps",
    "url": "https://codeforces.com/problemset/problem/1573/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1573A. Countdown",
    "url": "https://codeforces.com/problemset/problem/1573/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572F. Stations",
    "url": "https://codeforces.com/problemset/problem/1572/F",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572E. Polygon",
    "url": "https://codeforces.com/problemset/problem/1572/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572D. Bridge Club",
    "url": "https://codeforces.com/problemset/problem/1572/D",
    "difficulty": 2800,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572C. Paint",
    "url": "https://codeforces.com/problemset/problem/1572/C",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572B. Xor of 3",
    "url": "https://codeforces.com/problemset/problem/1572/B",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1572A. Book",
    "url": "https://codeforces.com/problemset/problem/1572/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571J. Two Railroads",
    "url": "https://codeforces.com/problemset/problem/1571/J",
    "difficulty": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571I. Physical Examination",
    "url": "https://codeforces.com/problemset/problem/1571/I",
    "difficulty": 3200,
    "tags": [
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571H. Laser Beams",
    "url": "https://codeforces.com/problemset/problem/1571/H",
    "difficulty": 2900,
    "tags": [
      "*special",
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571G. A Battle Against a Dragon",
    "url": "https://codeforces.com/problemset/problem/1571/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571F. Kotlinforces",
    "url": "https://codeforces.com/problemset/problem/1571/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571E. Fix the String",
    "url": "https://codeforces.com/problemset/problem/1571/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571D. Sweepstake",
    "url": "https://codeforces.com/problemset/problem/1571/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571C. Rhyme",
    "url": "https://codeforces.com/problemset/problem/1571/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571B. Epic Novel",
    "url": "https://codeforces.com/problemset/problem/1571/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1571A. Sequence of Comparisons",
    "url": "https://codeforces.com/problemset/problem/1571/A",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569F. Palindromic Hamiltonian Path",
    "url": "https://codeforces.com/problemset/problem/1569/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569E. Playoff Restoration",
    "url": "https://codeforces.com/problemset/problem/1569/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569D. Inconvenient Pairs",
    "url": "https://codeforces.com/problemset/problem/1569/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569C. Jury Meeting",
    "url": "https://codeforces.com/problemset/problem/1569/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569B. Chess Tournament",
    "url": "https://codeforces.com/problemset/problem/1569/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1569A. Balanced Substring",
    "url": "https://codeforces.com/problemset/problem/1569/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567F. One-Four Overload",
    "url": "https://codeforces.com/problemset/problem/1567/F",
    "difficulty": 2700,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567E. Non-Decreasing Dilemma",
    "url": "https://codeforces.com/problemset/problem/1567/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567D. Expression Evaluation Error",
    "url": "https://codeforces.com/problemset/problem/1567/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567C. Carrying Conundrum",
    "url": "https://codeforces.com/problemset/problem/1567/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567B. MEXor Mixup",
    "url": "https://codeforces.com/problemset/problem/1567/B",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1567A. Domino Disaster",
    "url": "https://codeforces.com/problemset/problem/1567/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566H. Xor-quiz",
    "url": "https://codeforces.com/problemset/problem/1566/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dp",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566G. Four Vertices",
    "url": "https://codeforces.com/problemset/problem/1566/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566F. Points Movement",
    "url": "https://codeforces.com/problemset/problem/1566/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566E. Buds Re-hanging",
    "url": "https://codeforces.com/problemset/problem/1566/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566D2. Seating Arrangements (hard version) ",
    "url": "https://codeforces.com/problemset/problem/1566/D2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566D1. Seating Arrangements (easy version) ",
    "url": "https://codeforces.com/problemset/problem/1566/D1",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566C. MAX-MEX Cut",
    "url": "https://codeforces.com/problemset/problem/1566/C",
    "difficulty": 1000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566B. MIN-MEX Cut",
    "url": "https://codeforces.com/problemset/problem/1566/B",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1566A. Median Maximization",
    "url": "https://codeforces.com/problemset/problem/1566/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562F. Tubular Bells",
    "url": "https://codeforces.com/problemset/problem/1562/F",
    "difficulty": 2900,
    "tags": [
      "interactive",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562E. Rescue Niwen!",
    "url": "https://codeforces.com/problemset/problem/1562/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562D2. Two Hundred Twenty One (hard version)",
    "url": "https://codeforces.com/problemset/problem/1562/D2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562D1. Two Hundred Twenty One (easy version)",
    "url": "https://codeforces.com/problemset/problem/1562/D1",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562C. Rings",
    "url": "https://codeforces.com/problemset/problem/1562/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562B. Scenes From a Memory",
    "url": "https://codeforces.com/problemset/problem/1562/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1562A. The Miracle and the Sleeper",
    "url": "https://codeforces.com/problemset/problem/1562/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1561D1. Up the Strip (simplified version)",
    "url": "https://codeforces.com/problemset/problem/1561/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1561C. Deep Down Below",
    "url": "https://codeforces.com/problemset/problem/1561/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1561A. Simply Strange Sort",
    "url": "https://codeforces.com/problemset/problem/1561/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560F2. Nearest Beautiful Number (hard version)",
    "url": "https://codeforces.com/problemset/problem/1560/F2",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560F1. Nearest Beautiful Number (easy version)",
    "url": "https://codeforces.com/problemset/problem/1560/F1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560E. Polycarp and String Transformation",
    "url": "https://codeforces.com/problemset/problem/1560/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560D. Make a Power of Two",
    "url": "https://codeforces.com/problemset/problem/1560/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560C. Infinity Table",
    "url": "https://codeforces.com/problemset/problem/1560/C",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560B. Who's Opposite?",
    "url": "https://codeforces.com/problemset/problem/1560/B",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1560A. Dislike of Threes",
    "url": "https://codeforces.com/problemset/problem/1560/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559E. Mocha and Stars",
    "url": "https://codeforces.com/problemset/problem/1559/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559D2. Mocha and Diana (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1559/D2",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559D1. Mocha and Diana (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1559/D1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559C. Mocha and Hiking",
    "url": "https://codeforces.com/problemset/problem/1559/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559B. Mocha and Red and Blue",
    "url": "https://codeforces.com/problemset/problem/1559/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1559A. Mocha and Math",
    "url": "https://codeforces.com/problemset/problem/1559/A",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558F. Strange Sort",
    "url": "https://codeforces.com/problemset/problem/1558/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558E. Down Below",
    "url": "https://codeforces.com/problemset/problem/1558/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "meet-in-the-middle",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558D. Top-Notch Insertions",
    "url": "https://codeforces.com/problemset/problem/1558/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558C. Bottom-Tier Reversals",
    "url": "https://codeforces.com/problemset/problem/1558/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558B. Up the Strip",
    "url": "https://codeforces.com/problemset/problem/1558/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1558A. Charmed by the Game",
    "url": "https://codeforces.com/problemset/problem/1558/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1557E. Assiut Chess",
    "url": "https://codeforces.com/problemset/problem/1557/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1557D. Ezzat and Grid",
    "url": "https://codeforces.com/problemset/problem/1557/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1557C. Moamen and XOR",
    "url": "https://codeforces.com/problemset/problem/1557/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1557B. Moamen and k-subarrays",
    "url": "https://codeforces.com/problemset/problem/1557/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1557A. Ezzat and Two Subsequences",
    "url": "https://codeforces.com/problemset/problem/1557/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556H. DIY Tree",
    "url": "https://codeforces.com/problemset/problem/1556/H",
    "difficulty": 3300,
    "tags": [
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556G. Gates to Another World",
    "url": "https://codeforces.com/problemset/problem/1556/G",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "data structures",
      "dsu",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556F. Sports Betting",
    "url": "https://codeforces.com/problemset/problem/1556/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556E. Equilibrium",
    "url": "https://codeforces.com/problemset/problem/1556/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556D. Take a Guess",
    "url": "https://codeforces.com/problemset/problem/1556/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556C. Compressed Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/1556/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556B. Take Your Places!",
    "url": "https://codeforces.com/problemset/problem/1556/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1556A. A Variety of Operations",
    "url": "https://codeforces.com/problemset/problem/1556/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555F. Good Graph",
    "url": "https://codeforces.com/problemset/problem/1555/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555E. Boring Segments",
    "url": "https://codeforces.com/problemset/problem/1555/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555D. Say No to Palindromes",
    "url": "https://codeforces.com/problemset/problem/1555/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555C. Coin Rows",
    "url": "https://codeforces.com/problemset/problem/1555/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555B. Two Tables",
    "url": "https://codeforces.com/problemset/problem/1555/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1555A. PizzaForces",
    "url": "https://codeforces.com/problemset/problem/1555/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1554E. You",
    "url": "https://codeforces.com/problemset/problem/1554/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1554D. Diane",
    "url": "https://codeforces.com/problemset/problem/1554/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1554C. Mikasa",
    "url": "https://codeforces.com/problemset/problem/1554/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1554B. Cobb",
    "url": "https://codeforces.com/problemset/problem/1554/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1554A. Cherry",
    "url": "https://codeforces.com/problemset/problem/1554/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553I. Stairs",
    "url": "https://codeforces.com/problemset/problem/1553/I",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553H. XOR and Distance",
    "url": "https://codeforces.com/problemset/problem/1553/H",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553G. Common Divisor Graph",
    "url": "https://codeforces.com/problemset/problem/1553/G",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553F. Pairwise Modulo",
    "url": "https://codeforces.com/problemset/problem/1553/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553E. Permutation Shift",
    "url": "https://codeforces.com/problemset/problem/1553/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553D. Backspace",
    "url": "https://codeforces.com/problemset/problem/1553/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553C. Penalty",
    "url": "https://codeforces.com/problemset/problem/1553/C",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553B. Reverse String",
    "url": "https://codeforces.com/problemset/problem/1553/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1553A. Digits Sum",
    "url": "https://codeforces.com/problemset/problem/1553/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552I. Organizing a Music Festival",
    "url": "https://codeforces.com/problemset/problem/1552/I",
    "difficulty": 3400,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552H. Guess the Perimeter",
    "url": "https://codeforces.com/problemset/problem/1552/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "interactive",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552G. A Serious Referee",
    "url": "https://codeforces.com/problemset/problem/1552/G",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552F. Telepanting",
    "url": "https://codeforces.com/problemset/problem/1552/F",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552E. Colors and Intervals",
    "url": "https://codeforces.com/problemset/problem/1552/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552D. Array Differentiation",
    "url": "https://codeforces.com/problemset/problem/1552/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552C. Maximize the Intersections",
    "url": "https://codeforces.com/problemset/problem/1552/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552B. Running for Gold",
    "url": "https://codeforces.com/problemset/problem/1552/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1552A. Subsequence Permutation",
    "url": "https://codeforces.com/problemset/problem/1552/A",
    "difficulty": 800,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551F. Equidistant Vertices",
    "url": "https://codeforces.com/problemset/problem/1551/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551E. Fixed Points",
    "url": "https://codeforces.com/problemset/problem/1551/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551D2. Domino (hard version)",
    "url": "https://codeforces.com/problemset/problem/1551/D2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551D1. Domino (easy version)",
    "url": "https://codeforces.com/problemset/problem/1551/D1",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551C. Interesting Story",
    "url": "https://codeforces.com/problemset/problem/1551/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551B2. Wonderful Coloring - 2",
    "url": "https://codeforces.com/problemset/problem/1551/B2",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551B1. Wonderful Coloring - 1",
    "url": "https://codeforces.com/problemset/problem/1551/B1",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1551A. Polycarp and Coins",
    "url": "https://codeforces.com/problemset/problem/1551/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550F. Jumping Around",
    "url": "https://codeforces.com/problemset/problem/1550/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550E. Stringforces",
    "url": "https://codeforces.com/problemset/problem/1550/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550D. Excellent Arrays",
    "url": "https://codeforces.com/problemset/problem/1550/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550C. Manhattan Subarrays",
    "url": "https://codeforces.com/problemset/problem/1550/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550B. Maximum Cost Deletion",
    "url": "https://codeforces.com/problemset/problem/1550/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1550A. Find The Array",
    "url": "https://codeforces.com/problemset/problem/1550/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1549B. Gregor and the Pawn Game",
    "url": "https://codeforces.com/problemset/problem/1549/B",
    "difficulty": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1549A. Gregor and Cryptography",
    "url": "https://codeforces.com/problemset/problem/1549/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548E. Gregor and the Two Painters",
    "url": "https://codeforces.com/problemset/problem/1548/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548D2. Gregor and the Odd Cows (Hard)",
    "url": "https://codeforces.com/problemset/problem/1548/D2",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548D1. Gregor and the Odd Cows (Easy)",
    "url": "https://codeforces.com/problemset/problem/1548/D1",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548C. The Three Little Pigs",
    "url": "https://codeforces.com/problemset/problem/1548/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548B. Integers Have Friends",
    "url": "https://codeforces.com/problemset/problem/1548/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1548A. Web of Lies",
    "url": "https://codeforces.com/problemset/problem/1548/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547G. How Many Paths?",
    "url": "https://codeforces.com/problemset/problem/1547/G",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547F. Array Stabilization (GCD version)",
    "url": "https://codeforces.com/problemset/problem/1547/F",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547E. Air Conditioners",
    "url": "https://codeforces.com/problemset/problem/1547/E",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547D. Co-growing Sequence",
    "url": "https://codeforces.com/problemset/problem/1547/D",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547C. Pair Programming",
    "url": "https://codeforces.com/problemset/problem/1547/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547B. Alphabetical Strings",
    "url": "https://codeforces.com/problemset/problem/1547/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1547A. Shortest Path with Obstacle",
    "url": "https://codeforces.com/problemset/problem/1547/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1546B. AquaMoon and Stolen String",
    "url": "https://codeforces.com/problemset/problem/1546/B",
    "difficulty": 1200,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1546A. AquaMoon and Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1546/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545F. AquaMoon and Potatoes",
    "url": "https://codeforces.com/problemset/problem/1545/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545E2. AquaMoon and Time Stop (hard version)",
    "url": "https://codeforces.com/problemset/problem/1545/E2",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545E1. AquaMoon and Time Stop (easy version)",
    "url": "https://codeforces.com/problemset/problem/1545/E1",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545D. AquaMoon and Wrong Coordinate",
    "url": "https://codeforces.com/problemset/problem/1545/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545C. AquaMoon and Permutations",
    "url": "https://codeforces.com/problemset/problem/1545/C",
    "difficulty": 2800,
    "tags": [
      "2-sat",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545B. AquaMoon and Chess",
    "url": "https://codeforces.com/problemset/problem/1545/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1545A. AquaMoon and Strange Sort",
    "url": "https://codeforces.com/problemset/problem/1545/A",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543E. The Final Pursuit",
    "url": "https://codeforces.com/problemset/problem/1543/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543D2. RPD and Rap Sheet (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1543/D2",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543D1. RPD and Rap Sheet (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1543/D1",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543C. Need for Pink Slips",
    "url": "https://codeforces.com/problemset/problem/1543/C",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543B. Customising the Track",
    "url": "https://codeforces.com/problemset/problem/1543/B",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1543A. Exciting Bets",
    "url": "https://codeforces.com/problemset/problem/1543/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542E2. Abnormal Permutation Pairs (hard version)",
    "url": "https://codeforces.com/problemset/problem/1542/E2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542E1. Abnormal Permutation Pairs (easy version)",
    "url": "https://codeforces.com/problemset/problem/1542/E1",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542D. Priority Queue",
    "url": "https://codeforces.com/problemset/problem/1542/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542C. Strange Function",
    "url": "https://codeforces.com/problemset/problem/1542/C",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542B. Plus and Multiply",
    "url": "https://codeforces.com/problemset/problem/1542/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1542A. Odd Set",
    "url": "https://codeforces.com/problemset/problem/1542/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1541B. Pleasant Pairs",
    "url": "https://codeforces.com/problemset/problem/1541/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1541A. Pretty Permutations",
    "url": "https://codeforces.com/problemset/problem/1541/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540E. Tasty Dishes",
    "url": "https://codeforces.com/problemset/problem/1540/E",
    "difficulty": 3500,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540D. Inverse Inversions",
    "url": "https://codeforces.com/problemset/problem/1540/D",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540C2. Converging Array (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1540/C2",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540C1. Converging Array (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1540/C1",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540B. Tree Array",
    "url": "https://codeforces.com/problemset/problem/1540/B",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1540A. Great Graphs",
    "url": "https://codeforces.com/problemset/problem/1540/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539F. Strange Array",
    "url": "https://codeforces.com/problemset/problem/1539/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539E. Game with Cards",
    "url": "https://codeforces.com/problemset/problem/1539/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539D. PriceFixed",
    "url": "https://codeforces.com/problemset/problem/1539/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539C. Stable Groups",
    "url": "https://codeforces.com/problemset/problem/1539/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539B. Love Song",
    "url": "https://codeforces.com/problemset/problem/1539/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1539A. Contest Start",
    "url": "https://codeforces.com/problemset/problem/1539/A",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538G. Gift Set",
    "url": "https://codeforces.com/problemset/problem/1538/G",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538F. Interesting Function",
    "url": "https://codeforces.com/problemset/problem/1538/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538E. Funny Substrings",
    "url": "https://codeforces.com/problemset/problem/1538/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "matrices",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538D. Another Problem About Dividing Numbers",
    "url": "https://codeforces.com/problemset/problem/1538/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538C. Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1538/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538B. Friends and Candies",
    "url": "https://codeforces.com/problemset/problem/1538/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1538A. Stone Game",
    "url": "https://codeforces.com/problemset/problem/1538/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537F. Figure Fixing",
    "url": "https://codeforces.com/problemset/problem/1537/F",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537E2. Erase and Extend (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1537/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537E1. Erase and Extend (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1537/E1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537D. Deleting Divisors",
    "url": "https://codeforces.com/problemset/problem/1537/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537C. Challenging Cliffs",
    "url": "https://codeforces.com/problemset/problem/1537/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537B. Bad Boy",
    "url": "https://codeforces.com/problemset/problem/1537/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1537A. Arithmetic Array",
    "url": "https://codeforces.com/problemset/problem/1537/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536F. Omkar and Akmar",
    "url": "https://codeforces.com/problemset/problem/1536/F",
    "difficulty": 2600,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "games",
      "geometry",
      "math",
      "meet-in-the-middle",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536E. Omkar and Forest",
    "url": "https://codeforces.com/problemset/problem/1536/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536D. Omkar and Medians",
    "url": "https://codeforces.com/problemset/problem/1536/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536C. Diluc and Kaeya",
    "url": "https://codeforces.com/problemset/problem/1536/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536B. Prinzessin der Verurteilung",
    "url": "https://codeforces.com/problemset/problem/1536/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1536A. Omkar and Bad Story",
    "url": "https://codeforces.com/problemset/problem/1536/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535F. String Distance",
    "url": "https://codeforces.com/problemset/problem/1535/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535E. Gold Transfer",
    "url": "https://codeforces.com/problemset/problem/1535/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535D. Playoff Tournament",
    "url": "https://codeforces.com/problemset/problem/1535/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535C. Unstable String",
    "url": "https://codeforces.com/problemset/problem/1535/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535B. Array Reodering",
    "url": "https://codeforces.com/problemset/problem/1535/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1535A. Fair Playoff",
    "url": "https://codeforces.com/problemset/problem/1535/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534H. Lost Nodes",
    "url": "https://codeforces.com/problemset/problem/1534/H",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "interactive",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534G. A New Beginning",
    "url": "https://codeforces.com/problemset/problem/1534/G",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534F2. Falling Sand (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1534/F2",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534F1. Falling Sand (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1534/F1",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534E. Lost Array",
    "url": "https://codeforces.com/problemset/problem/1534/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "greedy",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534D. Lost Tree",
    "url": "https://codeforces.com/problemset/problem/1534/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534C. Little Alawn's Puzzle",
    "url": "https://codeforces.com/problemset/problem/1534/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534B. Histogram Ugliness",
    "url": "https://codeforces.com/problemset/problem/1534/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1534A. Colour the Flag",
    "url": "https://codeforces.com/problemset/problem/1534/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533J. Pawns",
    "url": "https://codeforces.com/problemset/problem/1533/J",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533I. Excursions",
    "url": "https://codeforces.com/problemset/problem/1533/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533H. Submatrices",
    "url": "https://codeforces.com/problemset/problem/1533/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533G. Biome Map",
    "url": "https://codeforces.com/problemset/problem/1533/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533F. Binary String Partition",
    "url": "https://codeforces.com/problemset/problem/1533/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533E. Chess Team Forming",
    "url": "https://codeforces.com/problemset/problem/1533/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533D. String Searching",
    "url": "https://codeforces.com/problemset/problem/1533/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533C. Sweets",
    "url": "https://codeforces.com/problemset/problem/1533/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533B. Nearest Point Function",
    "url": "https://codeforces.com/problemset/problem/1533/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1533A. Travel to Bertown",
    "url": "https://codeforces.com/problemset/problem/1533/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532F. Prefixes and Suffixes",
    "url": "https://codeforces.com/problemset/problem/1532/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532E. Good Array",
    "url": "https://codeforces.com/problemset/problem/1532/E",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532D. Teams Forming",
    "url": "https://codeforces.com/problemset/problem/1532/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532C. Uniform String",
    "url": "https://codeforces.com/problemset/problem/1532/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532B. Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1532/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1532A. A+B (Trial Problem)",
    "url": "https://codeforces.com/problemset/problem/1532/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531E3. Сортировка слиянием",
    "url": "https://codeforces.com/problemset/problem/1531/E3",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531E2. Сортировка слиянием",
    "url": "https://codeforces.com/problemset/problem/1531/E2",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531E1. Сортировка слиянием",
    "url": "https://codeforces.com/problemset/problem/1531/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531D. Редактируем Зингер | color",
    "url": "https://codeforces.com/problemset/problem/1531/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531C. Симметричный амфитеатр",
    "url": "https://codeforces.com/problemset/problem/1531/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531B2. Мониторинг",
    "url": "https://codeforces.com/problemset/problem/1531/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531B1. Мониторинг",
    "url": "https://codeforces.com/problemset/problem/1531/B1",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1531A. Зингер | color",
    "url": "https://codeforces.com/problemset/problem/1531/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530H. Turing's Award",
    "url": "https://codeforces.com/problemset/problem/1530/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530G. What a Reversal",
    "url": "https://codeforces.com/problemset/problem/1530/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530F. Bingo",
    "url": "https://codeforces.com/problemset/problem/1530/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530E. Minimax",
    "url": "https://codeforces.com/problemset/problem/1530/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530D. Secret Santa",
    "url": "https://codeforces.com/problemset/problem/1530/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530C. Pursuit",
    "url": "https://codeforces.com/problemset/problem/1530/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530B. Putting Plates",
    "url": "https://codeforces.com/problemset/problem/1530/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1530A. Binary Decimal",
    "url": "https://codeforces.com/problemset/problem/1530/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1529B. Sifid and Strange Subsequences",
    "url": "https://codeforces.com/problemset/problem/1529/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1529A. Eshag Loves Big Arrays",
    "url": "https://codeforces.com/problemset/problem/1529/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528F. AmShZ Farm",
    "url": "https://codeforces.com/problemset/problem/1528/F",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528E. Mashtali and Hagh Trees",
    "url": "https://codeforces.com/problemset/problem/1528/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528D. It's a bird! No, it's a plane! No, it's AaParsa!",
    "url": "https://codeforces.com/problemset/problem/1528/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528C. Trees of Tranquillity",
    "url": "https://codeforces.com/problemset/problem/1528/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528B. Kavi on Pairing Duty",
    "url": "https://codeforces.com/problemset/problem/1528/B",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1528A. Parsa's Humongous Tree",
    "url": "https://codeforces.com/problemset/problem/1528/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527E. Partition Game",
    "url": "https://codeforces.com/problemset/problem/1527/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527D. MEX Tree",
    "url": "https://codeforces.com/problemset/problem/1527/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527C. Sequence Pair Weight",
    "url": "https://codeforces.com/problemset/problem/1527/C",
    "difficulty": 1600,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527B2. Palindrome Game (hard version)",
    "url": "https://codeforces.com/problemset/problem/1527/B2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527B1. Palindrome Game (easy version)",
    "url": "https://codeforces.com/problemset/problem/1527/B1",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1527A. And Then There Were K",
    "url": "https://codeforces.com/problemset/problem/1527/A",
    "difficulty": 800,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526F. Median Queries",
    "url": "https://codeforces.com/problemset/problem/1526/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526E. Oolimry and Suffix Array",
    "url": "https://codeforces.com/problemset/problem/1526/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526D. Kill Anton",
    "url": "https://codeforces.com/problemset/problem/1526/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526C2. Potions (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1526/C2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526C1. Potions (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1526/C1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526B. I Hate 1111",
    "url": "https://codeforces.com/problemset/problem/1526/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1526A. Mean Inequality",
    "url": "https://codeforces.com/problemset/problem/1526/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525F. Goblins And Gnomes",
    "url": "https://codeforces.com/problemset/problem/1525/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525E. Assimilation IV",
    "url": "https://codeforces.com/problemset/problem/1525/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525D. Armchairs",
    "url": "https://codeforces.com/problemset/problem/1525/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525C. Robot Collisions",
    "url": "https://codeforces.com/problemset/problem/1525/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525B. Permutation Sort",
    "url": "https://codeforces.com/problemset/problem/1525/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1525A. Potion-making",
    "url": "https://codeforces.com/problemset/problem/1525/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523H. Hopping Around the Array ",
    "url": "https://codeforces.com/problemset/problem/1523/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523G. Try Booking",
    "url": "https://codeforces.com/problemset/problem/1523/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523F. Favorite Game",
    "url": "https://codeforces.com/problemset/problem/1523/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523E. Crypto Lights",
    "url": "https://codeforces.com/problemset/problem/1523/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523D. Love-Hate",
    "url": "https://codeforces.com/problemset/problem/1523/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523C. Compression and Expansion",
    "url": "https://codeforces.com/problemset/problem/1523/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523B. Lord of the Values",
    "url": "https://codeforces.com/problemset/problem/1523/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1523A. Game of Life",
    "url": "https://codeforces.com/problemset/problem/1523/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1521E. Nastia and a Beautiful Matrix",
    "url": "https://codeforces.com/problemset/problem/1521/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1521D. Nastia Plays with a Tree",
    "url": "https://codeforces.com/problemset/problem/1521/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1521C. Nastia and a Hidden Permutation",
    "url": "https://codeforces.com/problemset/problem/1521/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1521B. Nastia and a Good Array",
    "url": "https://codeforces.com/problemset/problem/1521/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1521A. Nastia and Nearly Good Numbers",
    "url": "https://codeforces.com/problemset/problem/1521/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520G. To Go Or Not To Go?",
    "url": "https://codeforces.com/problemset/problem/1520/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520F2. Guess the K-th Zero (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1520/F2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520F1. Guess the K-th Zero (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1520/F1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520E. Arranging The Sheep",
    "url": "https://codeforces.com/problemset/problem/1520/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520D. Same Differences",
    "url": "https://codeforces.com/problemset/problem/1520/D",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520C. Not Adjacent Matrix",
    "url": "https://codeforces.com/problemset/problem/1520/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520B. Ordinary Numbers",
    "url": "https://codeforces.com/problemset/problem/1520/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1520A. Do Not Be Distracted!",
    "url": "https://codeforces.com/problemset/problem/1520/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519F. Chests and Keys",
    "url": "https://codeforces.com/problemset/problem/1519/F",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519E. Off by One",
    "url": "https://codeforces.com/problemset/problem/1519/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "geometry",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519D. Maximum Sum of Products",
    "url": "https://codeforces.com/problemset/problem/1519/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519C. Berland Regional",
    "url": "https://codeforces.com/problemset/problem/1519/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519B. The Cake Is a Lie",
    "url": "https://codeforces.com/problemset/problem/1519/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1519A. Red and Blue Beans",
    "url": "https://codeforces.com/problemset/problem/1519/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517H. Fly Around the World",
    "url": "https://codeforces.com/problemset/problem/1517/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517G. Starry Night Camping",
    "url": "https://codeforces.com/problemset/problem/1517/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517F. Reunion",
    "url": "https://codeforces.com/problemset/problem/1517/F",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517E. Group Photo",
    "url": "https://codeforces.com/problemset/problem/1517/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517D. Explorer Space",
    "url": "https://codeforces.com/problemset/problem/1517/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517C. Fillomino 2",
    "url": "https://codeforces.com/problemset/problem/1517/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517B. Morning Jogging",
    "url": "https://codeforces.com/problemset/problem/1517/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1517A. Sum of 2050",
    "url": "https://codeforces.com/problemset/problem/1517/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1516E. Baby Ehab Plays with Permutations",
    "url": "https://codeforces.com/problemset/problem/1516/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1516D. Cut",
    "url": "https://codeforces.com/problemset/problem/1516/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1516C. Baby Ehab Partitions Again",
    "url": "https://codeforces.com/problemset/problem/1516/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1516B. AGAGA XOOORRR",
    "url": "https://codeforces.com/problemset/problem/1516/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1516A. Tit for Tat",
    "url": "https://codeforces.com/problemset/problem/1516/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515I. Phoenix and Diamonds",
    "url": "https://codeforces.com/problemset/problem/1515/I",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515H. Phoenix and Bits",
    "url": "https://codeforces.com/problemset/problem/1515/H",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515G. Phoenix and Odometers",
    "url": "https://codeforces.com/problemset/problem/1515/G",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515F. Phoenix and Earthquake",
    "url": "https://codeforces.com/problemset/problem/1515/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515E. Phoenix and Computers",
    "url": "https://codeforces.com/problemset/problem/1515/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515D. Phoenix and Socks",
    "url": "https://codeforces.com/problemset/problem/1515/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515C. Phoenix and Towers",
    "url": "https://codeforces.com/problemset/problem/1515/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515B. Phoenix and Puzzle",
    "url": "https://codeforces.com/problemset/problem/1515/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1515A. Phoenix and Gold",
    "url": "https://codeforces.com/problemset/problem/1515/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1514E. Baby Ehab's Hyper Apartment",
    "url": "https://codeforces.com/problemset/problem/1514/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "graphs",
      "interactive",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1514D. Cut and Stick",
    "url": "https://codeforces.com/problemset/problem/1514/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1514C. Product 1 Modulo N",
    "url": "https://codeforces.com/problemset/problem/1514/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1514B. AND 0, Sum Big",
    "url": "https://codeforces.com/problemset/problem/1514/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1514A. Perfectly Imperfect Array",
    "url": "https://codeforces.com/problemset/problem/1514/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513F. Swapping Problem",
    "url": "https://codeforces.com/problemset/problem/1513/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513E. Cost Equilibrium",
    "url": "https://codeforces.com/problemset/problem/1513/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513D. GCD and MST",
    "url": "https://codeforces.com/problemset/problem/1513/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513C. Add One",
    "url": "https://codeforces.com/problemset/problem/1513/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513B. AND Sequences",
    "url": "https://codeforces.com/problemset/problem/1513/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1513A. Array and Peaks",
    "url": "https://codeforces.com/problemset/problem/1513/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512G. Short Task",
    "url": "https://codeforces.com/problemset/problem/1512/G",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512F. Education",
    "url": "https://codeforces.com/problemset/problem/1512/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512E. Permutation by Sum",
    "url": "https://codeforces.com/problemset/problem/1512/E",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512D. Corrupted Array",
    "url": "https://codeforces.com/problemset/problem/1512/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512C. A-B Palindrome",
    "url": "https://codeforces.com/problemset/problem/1512/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512B. Almost Rectangle",
    "url": "https://codeforces.com/problemset/problem/1512/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1512A. Spy Detected!",
    "url": "https://codeforces.com/problemset/problem/1512/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511G. Chips on a Board",
    "url": "https://codeforces.com/problemset/problem/1511/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511F. Chainword",
    "url": "https://codeforces.com/problemset/problem/1511/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "matrices",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511E. Colorings and Dominoes",
    "url": "https://codeforces.com/problemset/problem/1511/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511D. Min Cost String",
    "url": "https://codeforces.com/problemset/problem/1511/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511C. Yet Another Card Deck",
    "url": "https://codeforces.com/problemset/problem/1511/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511B. GCD Length",
    "url": "https://codeforces.com/problemset/problem/1511/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1511A. Review Site",
    "url": "https://codeforces.com/problemset/problem/1511/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510K. King's Task",
    "url": "https://codeforces.com/problemset/problem/1510/K",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510J. Japanese Game",
    "url": "https://codeforces.com/problemset/problem/1510/J",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510I. Is It Rated?",
    "url": "https://codeforces.com/problemset/problem/1510/I",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "interactive",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510H. Hard Optimization",
    "url": "https://codeforces.com/problemset/problem/1510/H",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510G. Guide",
    "url": "https://codeforces.com/problemset/problem/1510/G",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1510F. Fiber Shape",
    "url": "https://codeforces.com/problemset/problem/1510/F",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1510E. Equilibrium Point /\\textbackslash/\\textbackslash",
    "url": "https://codeforces.com/problemset/problem/1510/E",
    "difficulty": 2700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1510D. Digits",
    "url": "https://codeforces.com/problemset/problem/1510/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510C. Cactus Not Enough",
    "url": "https://codeforces.com/problemset/problem/1510/C",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510B. Button Lock",
    "url": "https://codeforces.com/problemset/problem/1510/B",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1510A. ASCII Automata Art",
    "url": "https://codeforces.com/problemset/problem/1510/A",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1509C. The Sports Festival",
    "url": "https://codeforces.com/problemset/problem/1509/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1509B. TMT Document",
    "url": "https://codeforces.com/problemset/problem/1509/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1509A. Average Height",
    "url": "https://codeforces.com/problemset/problem/1509/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508F. Optimal Encoding",
    "url": "https://codeforces.com/problemset/problem/1508/F",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508E. Tree Calendar",
    "url": "https://codeforces.com/problemset/problem/1508/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508D. Swap Pass",
    "url": "https://codeforces.com/problemset/problem/1508/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508C. Complete the MST",
    "url": "https://codeforces.com/problemset/problem/1508/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508B. Almost Sorted",
    "url": "https://codeforces.com/problemset/problem/1508/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1508A. Binary Literature",
    "url": "https://codeforces.com/problemset/problem/1508/A",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506G. Maximize the Remaining String",
    "url": "https://codeforces.com/problemset/problem/1506/G",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506F. Triangular Paths",
    "url": "https://codeforces.com/problemset/problem/1506/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506E. Restoring the Permutation",
    "url": "https://codeforces.com/problemset/problem/1506/E",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506D. Epic Transformation",
    "url": "https://codeforces.com/problemset/problem/1506/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506C. Double-ended Strings",
    "url": "https://codeforces.com/problemset/problem/1506/C",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506B. Partial Replacement",
    "url": "https://codeforces.com/problemset/problem/1506/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1506A. Strange Table",
    "url": "https://codeforces.com/problemset/problem/1506/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505I. Mysterious language again, seriously?",
    "url": "https://codeforces.com/problemset/problem/1505/I",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505H. L BREAK into program",
    "url": "https://codeforces.com/problemset/problem/1505/H",
    "difficulty": 2500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505G. Encoded message",
    "url": "https://codeforces.com/problemset/problem/1505/G",
    "difficulty": 2600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505F. Math",
    "url": "https://codeforces.com/problemset/problem/1505/F",
    "difficulty": 2200,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505E. Cakewalk",
    "url": "https://codeforces.com/problemset/problem/1505/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505D. Xenolith? Hippodrome?",
    "url": "https://codeforces.com/problemset/problem/1505/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505C. Fibonacci Words",
    "url": "https://codeforces.com/problemset/problem/1505/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505B. DMCA",
    "url": "https://codeforces.com/problemset/problem/1505/B",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1505A. Is it rated - 2",
    "url": "https://codeforces.com/problemset/problem/1505/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1504B. Flip the Bits",
    "url": "https://codeforces.com/problemset/problem/1504/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1504A.  Déjà Vu",
    "url": "https://codeforces.com/problemset/problem/1504/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503F. Balance the Cards",
    "url": "https://codeforces.com/problemset/problem/1503/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503E. 2-Coloring",
    "url": "https://codeforces.com/problemset/problem/1503/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503D. Flip the Cards",
    "url": "https://codeforces.com/problemset/problem/1503/D",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503C. Travelling Salesman Problem",
    "url": "https://codeforces.com/problemset/problem/1503/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503B. 3-Coloring",
    "url": "https://codeforces.com/problemset/problem/1503/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1503A. Balance the Bits",
    "url": "https://codeforces.com/problemset/problem/1503/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1501B. Napoleon Cake",
    "url": "https://codeforces.com/problemset/problem/1501/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1501A. Alexey and Train",
    "url": "https://codeforces.com/problemset/problem/1501/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500F. Cupboards Jumps",
    "url": "https://codeforces.com/problemset/problem/1500/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500E. Subset Trick",
    "url": "https://codeforces.com/problemset/problem/1500/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500D. Tiles for Bathroom",
    "url": "https://codeforces.com/problemset/problem/1500/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500C. Matrix Sorting",
    "url": "https://codeforces.com/problemset/problem/1500/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500B. Two chandeliers",
    "url": "https://codeforces.com/problemset/problem/1500/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1500A. Going Home",
    "url": "https://codeforces.com/problemset/problem/1500/A",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499G. Graph Coloring",
    "url": "https://codeforces.com/problemset/problem/1499/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499F. Diameter Cuts",
    "url": "https://codeforces.com/problemset/problem/1499/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499E. Chaotic Merge",
    "url": "https://codeforces.com/problemset/problem/1499/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499D. The Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1499/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499C. Minimum Grid Path",
    "url": "https://codeforces.com/problemset/problem/1499/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499B. Binary Removals",
    "url": "https://codeforces.com/problemset/problem/1499/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1499A. Domino on Windowsill",
    "url": "https://codeforces.com/problemset/problem/1499/A",
    "difficulty": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498F. Christmas Game",
    "url": "https://codeforces.com/problemset/problem/1498/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498E. Two Houses",
    "url": "https://codeforces.com/problemset/problem/1498/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498D. Bananas in a Microwave",
    "url": "https://codeforces.com/problemset/problem/1498/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498C. Planar Reflections",
    "url": "https://codeforces.com/problemset/problem/1498/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498B. Box Fitting",
    "url": "https://codeforces.com/problemset/problem/1498/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1498A. GCD Sum",
    "url": "https://codeforces.com/problemset/problem/1498/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497E2. Square-Free Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1497/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497E1. Square-Free Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1497/E1",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497D. Genius",
    "url": "https://codeforces.com/problemset/problem/1497/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497C2. k-LCM (hard version)",
    "url": "https://codeforces.com/problemset/problem/1497/C2",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497C1. k-LCM (easy version)",
    "url": "https://codeforces.com/problemset/problem/1497/C1",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497B. M-arrays",
    "url": "https://codeforces.com/problemset/problem/1497/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1497A. Meximization",
    "url": "https://codeforces.com/problemset/problem/1497/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1496B. Max and Mex",
    "url": "https://codeforces.com/problemset/problem/1496/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1496A. Split it!",
    "url": "https://codeforces.com/problemset/problem/1496/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495F. Squares",
    "url": "https://codeforces.com/problemset/problem/1495/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495E. Qingshan and Daniel",
    "url": "https://codeforces.com/problemset/problem/1495/E",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495D. BFS Trees",
    "url": "https://codeforces.com/problemset/problem/1495/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495C. Garden of the Sun",
    "url": "https://codeforces.com/problemset/problem/1495/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495B. Let's Go Hiking",
    "url": "https://codeforces.com/problemset/problem/1495/B",
    "difficulty": 1900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1495A. Diamond Miner",
    "url": "https://codeforces.com/problemset/problem/1495/A",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494F. Delete The Edges",
    "url": "https://codeforces.com/problemset/problem/1494/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494E. A-Z Graph",
    "url": "https://codeforces.com/problemset/problem/1494/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494D. Dogeforces",
    "url": "https://codeforces.com/problemset/problem/1494/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494C. 1D Sokoban",
    "url": "https://codeforces.com/problemset/problem/1494/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494B. Berland Crossword",
    "url": "https://codeforces.com/problemset/problem/1494/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1494A. ABC String",
    "url": "https://codeforces.com/problemset/problem/1494/A",
    "difficulty": 900,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493F. Enchanted Matrix",
    "url": "https://codeforces.com/problemset/problem/1493/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "interactive",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493E. Enormous XOR",
    "url": "https://codeforces.com/problemset/problem/1493/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493D. GCD of an Array",
    "url": "https://codeforces.com/problemset/problem/1493/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493C. K-beautiful Strings",
    "url": "https://codeforces.com/problemset/problem/1493/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493B. Planet Lapituletti",
    "url": "https://codeforces.com/problemset/problem/1493/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1493A. Anti-knapsack",
    "url": "https://codeforces.com/problemset/problem/1493/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1492E. Almost Fault-Tolerant Database",
    "url": "https://codeforces.com/problemset/problem/1492/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1492D. Genius's Gambit",
    "url": "https://codeforces.com/problemset/problem/1492/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1492C. Maximum width",
    "url": "https://codeforces.com/problemset/problem/1492/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1492B. Card Deck",
    "url": "https://codeforces.com/problemset/problem/1492/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1492A. Three swimmers",
    "url": "https://codeforces.com/problemset/problem/1492/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491I. Ruler Of The Zoo",
    "url": "https://codeforces.com/problemset/problem/1491/I",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491H. Yuezheng Ling and Dynamic Tree",
    "url": "https://codeforces.com/problemset/problem/1491/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491G. Switch and Flip",
    "url": "https://codeforces.com/problemset/problem/1491/G",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491F. Magnets",
    "url": "https://codeforces.com/problemset/problem/1491/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491E. Fib-tree",
    "url": "https://codeforces.com/problemset/problem/1491/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491D. Zookeeper and The Infinite Zoo",
    "url": "https://codeforces.com/problemset/problem/1491/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491C. Pekora and Trampoline",
    "url": "https://codeforces.com/problemset/problem/1491/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491B. Minimal Cost",
    "url": "https://codeforces.com/problemset/problem/1491/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1491A. K-th Largest Value",
    "url": "https://codeforces.com/problemset/problem/1491/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490G. Old Floppy Drive ",
    "url": "https://codeforces.com/problemset/problem/1490/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490F. Equalize the Array",
    "url": "https://codeforces.com/problemset/problem/1490/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490E. Accidental Victory",
    "url": "https://codeforces.com/problemset/problem/1490/E",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490D. Permutation Transformation",
    "url": "https://codeforces.com/problemset/problem/1490/D",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490C. Sum of Cubes",
    "url": "https://codeforces.com/problemset/problem/1490/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490B. Balanced Remainders",
    "url": "https://codeforces.com/problemset/problem/1490/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1490A. Dense Array",
    "url": "https://codeforces.com/problemset/problem/1490/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488J. Flower Shop",
    "url": "https://codeforces.com/problemset/problem/1488/J",
    "difficulty": 3100,
    "tags": [
      "*special",
      "data structures",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488I. Demonic Invasion",
    "url": "https://codeforces.com/problemset/problem/1488/I",
    "difficulty": 3100,
    "tags": [
      "*special",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488H. Build From Suffixes",
    "url": "https://codeforces.com/problemset/problem/1488/H",
    "difficulty": 2800,
    "tags": [
      "*special",
      "combinatorics",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488G. Painting Numbers",
    "url": "https://codeforces.com/problemset/problem/1488/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488F. Dogecoin",
    "url": "https://codeforces.com/problemset/problem/1488/F",
    "difficulty": 2300,
    "tags": [
      "*special",
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488E. Palindromic Doubles",
    "url": "https://codeforces.com/problemset/problem/1488/E",
    "difficulty": 2200,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488D. Problemsolving Marathon",
    "url": "https://codeforces.com/problemset/problem/1488/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488C. Two Policemen",
    "url": "https://codeforces.com/problemset/problem/1488/C",
    "difficulty": 1900,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488B. RBS Deletion",
    "url": "https://codeforces.com/problemset/problem/1488/B",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1488A. From Zero To Y",
    "url": "https://codeforces.com/problemset/problem/1488/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487G. String Counting",
    "url": "https://codeforces.com/problemset/problem/1487/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487F. Ones",
    "url": "https://codeforces.com/problemset/problem/1487/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487E. Cheap Dinner",
    "url": "https://codeforces.com/problemset/problem/1487/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487D. Pythagorean Triples",
    "url": "https://codeforces.com/problemset/problem/1487/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487C. Minimum Ties",
    "url": "https://codeforces.com/problemset/problem/1487/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487B. Cat Cycle",
    "url": "https://codeforces.com/problemset/problem/1487/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1487A. Arena",
    "url": "https://codeforces.com/problemset/problem/1487/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486F. Pairs of Paths",
    "url": "https://codeforces.com/problemset/problem/1486/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486E. Paired Payment",
    "url": "https://codeforces.com/problemset/problem/1486/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486D. Max Median",
    "url": "https://codeforces.com/problemset/problem/1486/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486C2. Guessing the Greatest (hard version)",
    "url": "https://codeforces.com/problemset/problem/1486/C2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486C1. Guessing the Greatest (easy version)",
    "url": "https://codeforces.com/problemset/problem/1486/C1",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486B. Eastern Exhibition",
    "url": "https://codeforces.com/problemset/problem/1486/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "geometry",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1486A. Shifting Stacks",
    "url": "https://codeforces.com/problemset/problem/1486/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485F. Copy or Prefix Sum",
    "url": "https://codeforces.com/problemset/problem/1485/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485E. Move and Swap",
    "url": "https://codeforces.com/problemset/problem/1485/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485D. Multiples and Power Differences",
    "url": "https://codeforces.com/problemset/problem/1485/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485C. Floor and Mod",
    "url": "https://codeforces.com/problemset/problem/1485/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485B. Replace and Keep Sorted",
    "url": "https://codeforces.com/problemset/problem/1485/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1485A. Add and Divide",
    "url": "https://codeforces.com/problemset/problem/1485/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482H. Exam",
    "url": "https://codeforces.com/problemset/problem/1482/H",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482G. Vabank",
    "url": "https://codeforces.com/problemset/problem/1482/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482F. Useful Edges",
    "url": "https://codeforces.com/problemset/problem/1482/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482E. Skyline Photo",
    "url": "https://codeforces.com/problemset/problem/1482/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482D. Playlist",
    "url": "https://codeforces.com/problemset/problem/1482/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482C. Basic Diplomacy",
    "url": "https://codeforces.com/problemset/problem/1482/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482B. Restore Modulo",
    "url": "https://codeforces.com/problemset/problem/1482/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1482A. Prison Break",
    "url": "https://codeforces.com/problemset/problem/1482/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481F. AB Tree",
    "url": "https://codeforces.com/problemset/problem/1481/F",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481E. Sorting Books",
    "url": "https://codeforces.com/problemset/problem/1481/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481D. AB Graph",
    "url": "https://codeforces.com/problemset/problem/1481/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481C. Fence Painting",
    "url": "https://codeforces.com/problemset/problem/1481/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481B. New Colony",
    "url": "https://codeforces.com/problemset/problem/1481/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1481A. Space Navigation ",
    "url": "https://codeforces.com/problemset/problem/1481/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1480B. The Great Hero",
    "url": "https://codeforces.com/problemset/problem/1480/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1480A. Yet Another String Game",
    "url": "https://codeforces.com/problemset/problem/1480/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479E. School Clubs",
    "url": "https://codeforces.com/problemset/problem/1479/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "fft",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479D. Odd Mineral Resource",
    "url": "https://codeforces.com/problemset/problem/1479/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479C. Continuous City",
    "url": "https://codeforces.com/problemset/problem/1479/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479B2. Painting the Array II",
    "url": "https://codeforces.com/problemset/problem/1479/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479B1. Painting the Array I",
    "url": "https://codeforces.com/problemset/problem/1479/B1",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1479A. Searching Local Minimum",
    "url": "https://codeforces.com/problemset/problem/1479/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "interactive",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1478C. Nezzar and Symmetric Array",
    "url": "https://codeforces.com/problemset/problem/1478/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1478B. Nezzar and Lucky Number",
    "url": "https://codeforces.com/problemset/problem/1478/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1478A. Nezzar and Colorful Balls",
    "url": "https://codeforces.com/problemset/problem/1478/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477F. Nezzar and Chocolate Bars",
    "url": "https://codeforces.com/problemset/problem/1477/F",
    "difficulty": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477E. Nezzar and Tournaments",
    "url": "https://codeforces.com/problemset/problem/1477/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477D. Nezzar and Hidden Permutations",
    "url": "https://codeforces.com/problemset/problem/1477/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477C. Nezzar and Nice Beatmap",
    "url": "https://codeforces.com/problemset/problem/1477/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477B. Nezzar and Binary String",
    "url": "https://codeforces.com/problemset/problem/1477/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1477A. Nezzar and Board",
    "url": "https://codeforces.com/problemset/problem/1477/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476G. Minimum Difference",
    "url": "https://codeforces.com/problemset/problem/1476/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476F. Lanterns",
    "url": "https://codeforces.com/problemset/problem/1476/F",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476E. Pattern Matching",
    "url": "https://codeforces.com/problemset/problem/1476/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476D. Journey",
    "url": "https://codeforces.com/problemset/problem/1476/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476C. Longest Simple Cycle",
    "url": "https://codeforces.com/problemset/problem/1476/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476B. Inflation",
    "url": "https://codeforces.com/problemset/problem/1476/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1476A. K-divisible Sum",
    "url": "https://codeforces.com/problemset/problem/1476/A",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475G. Strange Beauty",
    "url": "https://codeforces.com/problemset/problem/1475/G",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475F. Unusual Matrix",
    "url": "https://codeforces.com/problemset/problem/1475/F",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475E. Advertising Agency",
    "url": "https://codeforces.com/problemset/problem/1475/E",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475D. Cleaning the Phone",
    "url": "https://codeforces.com/problemset/problem/1475/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475C. Ball in Berland",
    "url": "https://codeforces.com/problemset/problem/1475/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475B. New Year's Number",
    "url": "https://codeforces.com/problemset/problem/1475/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1475A. Odd Divisor",
    "url": "https://codeforces.com/problemset/problem/1475/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474F. 1 2 3 4 ...",
    "url": "https://codeforces.com/problemset/problem/1474/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474E. What Is It?",
    "url": "https://codeforces.com/problemset/problem/1474/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474D. Cleaning",
    "url": "https://codeforces.com/problemset/problem/1474/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474C. Array Destruction",
    "url": "https://codeforces.com/problemset/problem/1474/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474B. Different Divisors",
    "url": "https://codeforces.com/problemset/problem/1474/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1474A. Puzzle From the Future",
    "url": "https://codeforces.com/problemset/problem/1474/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473G. Tiles",
    "url": "https://codeforces.com/problemset/problem/1473/G",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473F. Strange Set",
    "url": "https://codeforces.com/problemset/problem/1473/F",
    "difficulty": 2700,
    "tags": [
      "flows",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473E. Minimum Path",
    "url": "https://codeforces.com/problemset/problem/1473/E",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473D. Program",
    "url": "https://codeforces.com/problemset/problem/1473/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473C. No More Inversions",
    "url": "https://codeforces.com/problemset/problem/1473/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473B. String LCM",
    "url": "https://codeforces.com/problemset/problem/1473/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1473A. Replacing Elements",
    "url": "https://codeforces.com/problemset/problem/1473/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472G. Moving to the Capital",
    "url": "https://codeforces.com/problemset/problem/1472/G",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472F. New Year's Puzzle",
    "url": "https://codeforces.com/problemset/problem/1472/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472E. Correct Placement",
    "url": "https://codeforces.com/problemset/problem/1472/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472D. Even-Odd Game",
    "url": "https://codeforces.com/problemset/problem/1472/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472C. Long Jumps",
    "url": "https://codeforces.com/problemset/problem/1472/C",
    "difficulty": 1100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472B. Fair Division",
    "url": "https://codeforces.com/problemset/problem/1472/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1472A. Cards for Friends",
    "url": "https://codeforces.com/problemset/problem/1472/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1471B. Strange List",
    "url": "https://codeforces.com/problemset/problem/1471/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1471A. Strange Partition",
    "url": "https://codeforces.com/problemset/problem/1471/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470F. Strange Covering",
    "url": "https://codeforces.com/problemset/problem/1470/F",
    "difficulty": 3500,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470E. Strange Permutation",
    "url": "https://codeforces.com/problemset/problem/1470/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470D. Strange Housing",
    "url": "https://codeforces.com/problemset/problem/1470/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470C. Strange Shuffle",
    "url": "https://codeforces.com/problemset/problem/1470/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470B. Strange Definition",
    "url": "https://codeforces.com/problemset/problem/1470/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1470A. Strange Birthday Party",
    "url": "https://codeforces.com/problemset/problem/1470/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469F. Power Sockets",
    "url": "https://codeforces.com/problemset/problem/1469/F",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469E. A Bit Similar",
    "url": "https://codeforces.com/problemset/problem/1469/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469D. Ceil Divisions",
    "url": "https://codeforces.com/problemset/problem/1469/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469C. Building a Fence",
    "url": "https://codeforces.com/problemset/problem/1469/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469B. Red and Blue",
    "url": "https://codeforces.com/problemset/problem/1469/B",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1469A. Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/1469/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468N. Waste Sorting",
    "url": "https://codeforces.com/problemset/problem/1468/N",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468M. Similar Sets",
    "url": "https://codeforces.com/problemset/problem/1468/M",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468L. Prime Divisors Selection",
    "url": "https://codeforces.com/problemset/problem/1468/L",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468K. The Robot",
    "url": "https://codeforces.com/problemset/problem/1468/K",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468J. Road Reform",
    "url": "https://codeforces.com/problemset/problem/1468/J",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468I. Plane Tiling",
    "url": "https://codeforces.com/problemset/problem/1468/I",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468H. K and Medians",
    "url": "https://codeforces.com/problemset/problem/1468/H",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468G. Hobbits",
    "url": "https://codeforces.com/problemset/problem/1468/G",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468F. Full Turn",
    "url": "https://codeforces.com/problemset/problem/1468/F",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "hashing",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468E. Four Segments",
    "url": "https://codeforces.com/problemset/problem/1468/E",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468D. Firecrackers",
    "url": "https://codeforces.com/problemset/problem/1468/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468C. Berpizza",
    "url": "https://codeforces.com/problemset/problem/1468/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468B. Bakery",
    "url": "https://codeforces.com/problemset/problem/1468/B",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1468A. LaIS",
    "url": "https://codeforces.com/problemset/problem/1468/A",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1467E. Distinctive Roots in a Tree",
    "url": "https://codeforces.com/problemset/problem/1467/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1467D. Sum of Paths",
    "url": "https://codeforces.com/problemset/problem/1467/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1467C. Three Bags",
    "url": "https://codeforces.com/problemset/problem/1467/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1467B. Hills And Valleys",
    "url": "https://codeforces.com/problemset/problem/1467/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1467A. Wizard of Orz",
    "url": "https://codeforces.com/problemset/problem/1467/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466I. The Riddle of the Sphinx",
    "url": "https://codeforces.com/problemset/problem/1466/I",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "data structures",
      "data structures",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466H. Finding satisfactory solutions",
    "url": "https://codeforces.com/problemset/problem/1466/H",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466G. Song of the Sirens",
    "url": "https://codeforces.com/problemset/problem/1466/G",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466F. Euclid's nightmare",
    "url": "https://codeforces.com/problemset/problem/1466/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466E. Apollo versus Pan",
    "url": "https://codeforces.com/problemset/problem/1466/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466D. 13th Labour of Heracles",
    "url": "https://codeforces.com/problemset/problem/1466/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466C. Canine poetry",
    "url": "https://codeforces.com/problemset/problem/1466/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466B. Last minute enhancements",
    "url": "https://codeforces.com/problemset/problem/1466/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1466A. Bovine Dilemma",
    "url": "https://codeforces.com/problemset/problem/1466/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1464F. My Beautiful Madness",
    "url": "https://codeforces.com/problemset/problem/1464/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463F. Max Correct Set",
    "url": "https://codeforces.com/problemset/problem/1463/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463E. Plan of Lectures",
    "url": "https://codeforces.com/problemset/problem/1463/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463D. Pairs",
    "url": "https://codeforces.com/problemset/problem/1463/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463C. Busy Robot",
    "url": "https://codeforces.com/problemset/problem/1463/C",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463B. Find The Array",
    "url": "https://codeforces.com/problemset/problem/1463/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1463A. Dungeon",
    "url": "https://codeforces.com/problemset/problem/1463/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462F. The Treasure of The Segments",
    "url": "https://codeforces.com/problemset/problem/1462/F",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462E2. Close Tuples (hard version)",
    "url": "https://codeforces.com/problemset/problem/1462/E2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462E1. Close Tuples (easy version)",
    "url": "https://codeforces.com/problemset/problem/1462/E1",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462D. Add to Neighbour and Remove",
    "url": "https://codeforces.com/problemset/problem/1462/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462C. Unique Number",
    "url": "https://codeforces.com/problemset/problem/1462/C",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462B. Last Year's Substring",
    "url": "https://codeforces.com/problemset/problem/1462/B",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1462A. Favorite Sequence",
    "url": "https://codeforces.com/problemset/problem/1462/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461F. Mathematical Expression",
    "url": "https://codeforces.com/problemset/problem/1461/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461E. Water Level",
    "url": "https://codeforces.com/problemset/problem/1461/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461D. Divide and Summarize",
    "url": "https://codeforces.com/problemset/problem/1461/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461C. Random Events",
    "url": "https://codeforces.com/problemset/problem/1461/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461B. Find the Spruce",
    "url": "https://codeforces.com/problemset/problem/1461/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1461A. String Generation",
    "url": "https://codeforces.com/problemset/problem/1461/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1459B. Move and Turn",
    "url": "https://codeforces.com/problemset/problem/1459/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1459A. Red-Blue Shuffle",
    "url": "https://codeforces.com/problemset/problem/1459/A",
    "difficulty": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458F. Range Diameter Sum",
    "url": "https://codeforces.com/problemset/problem/1458/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458E. Nim Shortcuts",
    "url": "https://codeforces.com/problemset/problem/1458/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458D. Flip and Reverse",
    "url": "https://codeforces.com/problemset/problem/1458/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458C. Latin Square",
    "url": "https://codeforces.com/problemset/problem/1458/C",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458B. Glass Half Spilled",
    "url": "https://codeforces.com/problemset/problem/1458/B",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1458A. Row GCD",
    "url": "https://codeforces.com/problemset/problem/1458/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1456E. XOR-ranges",
    "url": "https://codeforces.com/problemset/problem/1456/E",
    "difficulty": 3500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455G. Forbidden Value",
    "url": "https://codeforces.com/problemset/problem/1455/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455F. String and Operations",
    "url": "https://codeforces.com/problemset/problem/1455/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455E. Four Points",
    "url": "https://codeforces.com/problemset/problem/1455/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455D. Sequence and Swaps",
    "url": "https://codeforces.com/problemset/problem/1455/D",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455C. Ping-pong",
    "url": "https://codeforces.com/problemset/problem/1455/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455B. Jumps",
    "url": "https://codeforces.com/problemset/problem/1455/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1455A. Strange Functions",
    "url": "https://codeforces.com/problemset/problem/1455/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454F. Array Partition",
    "url": "https://codeforces.com/problemset/problem/1454/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454E. Number of Simple Paths",
    "url": "https://codeforces.com/problemset/problem/1454/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454D. Number into Sequence",
    "url": "https://codeforces.com/problemset/problem/1454/D",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454C. Sequence Transformation",
    "url": "https://codeforces.com/problemset/problem/1454/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454B. Unique Bid Auction",
    "url": "https://codeforces.com/problemset/problem/1454/B",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1454A. Special Permutation",
    "url": "https://codeforces.com/problemset/problem/1454/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453F. Even Harder",
    "url": "https://codeforces.com/problemset/problem/1453/F",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453E. Dog Snacks",
    "url": "https://codeforces.com/problemset/problem/1453/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453D. Checkpoints",
    "url": "https://codeforces.com/problemset/problem/1453/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453C. Triangles",
    "url": "https://codeforces.com/problemset/problem/1453/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453B. Suffix Operations",
    "url": "https://codeforces.com/problemset/problem/1453/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1453A. Cancel the Trains",
    "url": "https://codeforces.com/problemset/problem/1453/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452G. Game On Tree",
    "url": "https://codeforces.com/problemset/problem/1452/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452F. Divide Powers",
    "url": "https://codeforces.com/problemset/problem/1452/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452E. Two Editorials",
    "url": "https://codeforces.com/problemset/problem/1452/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452D. Radio Towers",
    "url": "https://codeforces.com/problemset/problem/1452/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452C. Two Brackets",
    "url": "https://codeforces.com/problemset/problem/1452/C",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452B. Toy Blocks",
    "url": "https://codeforces.com/problemset/problem/1452/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1452A. Robot Program",
    "url": "https://codeforces.com/problemset/problem/1452/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451F. Nullify The Matrix",
    "url": "https://codeforces.com/problemset/problem/1451/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451E2. Bitwise Queries (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1451/E2",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451E1. Bitwise Queries (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1451/E1",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451D. Circle Game",
    "url": "https://codeforces.com/problemset/problem/1451/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451C. String Equality",
    "url": "https://codeforces.com/problemset/problem/1451/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451B. Non-Substring Subsequence",
    "url": "https://codeforces.com/problemset/problem/1451/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1451A. Subtract or Divide",
    "url": "https://codeforces.com/problemset/problem/1451/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450H2. Multithreading (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1450/H2",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450H1. Multithreading (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1450/H1",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450G. Communism",
    "url": "https://codeforces.com/problemset/problem/1450/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450F. The Struggling Contestant",
    "url": "https://codeforces.com/problemset/problem/1450/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450E. Capitalism",
    "url": "https://codeforces.com/problemset/problem/1450/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450D. Rating Compression",
    "url": "https://codeforces.com/problemset/problem/1450/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450C2. Errich-Tac-Toe (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1450/C2",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450C1. Errich-Tac-Toe (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1450/C1",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450B. Balls of Steel",
    "url": "https://codeforces.com/problemset/problem/1450/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1450A. Avoid Trygub",
    "url": "https://codeforces.com/problemset/problem/1450/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1447B. Numbers Box",
    "url": "https://codeforces.com/problemset/problem/1447/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1447A. Add Candies",
    "url": "https://codeforces.com/problemset/problem/1447/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446F. Line Distance",
    "url": "https://codeforces.com/problemset/problem/1446/F",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446E. Long Recovery",
    "url": "https://codeforces.com/problemset/problem/1446/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446D2. Frequency Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1446/D2",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446D1. Frequency Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1446/D1",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446C. Xor Tree",
    "url": "https://codeforces.com/problemset/problem/1446/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446B. Catching Cheaters",
    "url": "https://codeforces.com/problemset/problem/1446/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1446A. Knapsack",
    "url": "https://codeforces.com/problemset/problem/1446/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1445B. Elimination",
    "url": "https://codeforces.com/problemset/problem/1445/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1445A. Array Rearrangment",
    "url": "https://codeforces.com/problemset/problem/1445/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1444E. Finding the Vertex",
    "url": "https://codeforces.com/problemset/problem/1444/E",
    "difficulty": 3500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1444D. Rectangular Polyline",
    "url": "https://codeforces.com/problemset/problem/1444/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1444C. Team-Building",
    "url": "https://codeforces.com/problemset/problem/1444/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1444B. Divide and Sum",
    "url": "https://codeforces.com/problemset/problem/1444/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1444A. Division",
    "url": "https://codeforces.com/problemset/problem/1444/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1443E. Long Permutation",
    "url": "https://codeforces.com/problemset/problem/1443/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1443C. The Delivery Dilemma",
    "url": "https://codeforces.com/problemset/problem/1443/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1443B. Saving the City",
    "url": "https://codeforces.com/problemset/problem/1443/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1443A. Kids Seating",
    "url": "https://codeforces.com/problemset/problem/1443/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442F. Differentiating Games",
    "url": "https://codeforces.com/problemset/problem/1442/F",
    "difficulty": 3400,
    "tags": [
      "games",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442E. Black, White and Grey Tree",
    "url": "https://codeforces.com/problemset/problem/1442/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442D. Sum",
    "url": "https://codeforces.com/problemset/problem/1442/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442C. Graph Transpositions",
    "url": "https://codeforces.com/problemset/problem/1442/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442B. Identify the Operations",
    "url": "https://codeforces.com/problemset/problem/1442/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1442A. Extreme Subtraction",
    "url": "https://codeforces.com/problemset/problem/1442/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1440B. Sum of Medians",
    "url": "https://codeforces.com/problemset/problem/1440/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1440A. Buy the String",
    "url": "https://codeforces.com/problemset/problem/1440/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439E. Cheat and Win",
    "url": "https://codeforces.com/problemset/problem/1439/E",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439D. INOI Final Contests",
    "url": "https://codeforces.com/problemset/problem/1439/D",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439C. Greedy Shopping",
    "url": "https://codeforces.com/problemset/problem/1439/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439B. Graph Subset Problem",
    "url": "https://codeforces.com/problemset/problem/1439/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439A2. Binary Table (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1439/A2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1439A1. Binary Table (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1439/A1",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438F. Olha and Igor",
    "url": "https://codeforces.com/problemset/problem/1438/F",
    "difficulty": 3000,
    "tags": [
      "interactive",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438E. Yurii Can Do Everything",
    "url": "https://codeforces.com/problemset/problem/1438/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438D. Powerful Ksenia",
    "url": "https://codeforces.com/problemset/problem/1438/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438C. Engineer Artem",
    "url": "https://codeforces.com/problemset/problem/1438/C",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "chinese remainder theorem",
      "constructive algorithms",
      "fft",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438B. Valerii Against Everyone",
    "url": "https://codeforces.com/problemset/problem/1438/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1438A. Specific Tastes of Andre ",
    "url": "https://codeforces.com/problemset/problem/1438/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437G. Death DBMS",
    "url": "https://codeforces.com/problemset/problem/1437/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437F. Emotional Fishermen",
    "url": "https://codeforces.com/problemset/problem/1437/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437E. Make It Increasing",
    "url": "https://codeforces.com/problemset/problem/1437/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437D. Minimal Height Tree",
    "url": "https://codeforces.com/problemset/problem/1437/D",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437C. Chef Monocarp",
    "url": "https://codeforces.com/problemset/problem/1437/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437B. Reverse Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1437/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1437A. Marketing Scheme",
    "url": "https://codeforces.com/problemset/problem/1437/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436F. Sum Over Subsets",
    "url": "https://codeforces.com/problemset/problem/1436/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436E. Complicated Computations",
    "url": "https://codeforces.com/problemset/problem/1436/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436D. Bandit in a City",
    "url": "https://codeforces.com/problemset/problem/1436/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436C. Binary Search",
    "url": "https://codeforces.com/problemset/problem/1436/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436B. Prime Square",
    "url": "https://codeforces.com/problemset/problem/1436/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1436A. Reorder",
    "url": "https://codeforces.com/problemset/problem/1436/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1434E. A Convex Game",
    "url": "https://codeforces.com/problemset/problem/1434/E",
    "difficulty": 3500,
    "tags": [
      "dsu",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433G. Reducing Delivery Cost",
    "url": "https://codeforces.com/problemset/problem/1433/G",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433F. Zero Remainder Sum ",
    "url": "https://codeforces.com/problemset/problem/1433/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433E. Two Round Dances",
    "url": "https://codeforces.com/problemset/problem/1433/E",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433D. Districts Connection",
    "url": "https://codeforces.com/problemset/problem/1433/D",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433C. Dominant Piranha",
    "url": "https://codeforces.com/problemset/problem/1433/C",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433B. Yet Another Bookshelf",
    "url": "https://codeforces.com/problemset/problem/1433/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1433A. Boring Apartments",
    "url": "https://codeforces.com/problemset/problem/1433/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431J. Zero-XOR Array",
    "url": "https://codeforces.com/problemset/problem/1431/J",
    "difficulty": 3400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431I. Cyclic Shifts",
    "url": "https://codeforces.com/problemset/problem/1431/I",
    "difficulty": 2900,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431H. Rogue-like Game",
    "url": "https://codeforces.com/problemset/problem/1431/H",
    "difficulty": 2600,
    "tags": [
      "*special",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431G. Number Deletion Game",
    "url": "https://codeforces.com/problemset/problem/1431/G",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431F. Neural Network Problem",
    "url": "https://codeforces.com/problemset/problem/1431/F",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431E. Chess Match",
    "url": "https://codeforces.com/problemset/problem/1431/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431D. Used Markers",
    "url": "https://codeforces.com/problemset/problem/1431/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431C. Black Friday",
    "url": "https://codeforces.com/problemset/problem/1431/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431B. Polycarp and the Language of Gods",
    "url": "https://codeforces.com/problemset/problem/1431/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1431A. Selling Hamburgers",
    "url": "https://codeforces.com/problemset/problem/1431/A",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430G. Yet Another DAG Problem",
    "url": "https://codeforces.com/problemset/problem/1430/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430F. Realistic Gameplay",
    "url": "https://codeforces.com/problemset/problem/1430/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430E. String Reversal",
    "url": "https://codeforces.com/problemset/problem/1430/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430D. String Deletion",
    "url": "https://codeforces.com/problemset/problem/1430/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430C. Numbers on Whiteboard",
    "url": "https://codeforces.com/problemset/problem/1430/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430B. Barrels",
    "url": "https://codeforces.com/problemset/problem/1430/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1430A. Number of Apartments",
    "url": "https://codeforces.com/problemset/problem/1430/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428H. Rotary Laser Lock",
    "url": "https://codeforces.com/problemset/problem/1428/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428G2. Lucky Numbers (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1428/G2",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428G1. Lucky Numbers (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1428/G1",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428F. Fruit Sequences",
    "url": "https://codeforces.com/problemset/problem/1428/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428E. Carrots for Rabbits",
    "url": "https://codeforces.com/problemset/problem/1428/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428D. Bouncing Boomerangs",
    "url": "https://codeforces.com/problemset/problem/1428/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428C. ABBB",
    "url": "https://codeforces.com/problemset/problem/1428/C",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428B. Belted Rooms",
    "url": "https://codeforces.com/problemset/problem/1428/B",
    "difficulty": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1428A. Box is Pull",
    "url": "https://codeforces.com/problemset/problem/1428/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427H. Prison Break",
    "url": "https://codeforces.com/problemset/problem/1427/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "games",
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427G. One Billion Shades of Grey",
    "url": "https://codeforces.com/problemset/problem/1427/G",
    "difficulty": 3300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427F. Boring Card Game",
    "url": "https://codeforces.com/problemset/problem/1427/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427E. Xum",
    "url": "https://codeforces.com/problemset/problem/1427/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427D. Unshuffling a Deck",
    "url": "https://codeforces.com/problemset/problem/1427/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427C. The Hard Work of Paparazzi",
    "url": "https://codeforces.com/problemset/problem/1427/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427B. Chess Cheater",
    "url": "https://codeforces.com/problemset/problem/1427/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1427A. Avoiding Zero",
    "url": "https://codeforces.com/problemset/problem/1427/A",
    "difficulty": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426F. Number of Subsequences",
    "url": "https://codeforces.com/problemset/problem/1426/F",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426E. Rock, Paper, Scissors",
    "url": "https://codeforces.com/problemset/problem/1426/E",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426D. Non-zero Segments",
    "url": "https://codeforces.com/problemset/problem/1426/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426C. Increase and Copy",
    "url": "https://codeforces.com/problemset/problem/1426/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426B. Symmetric Matrix",
    "url": "https://codeforces.com/problemset/problem/1426/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1426A. Floor Number",
    "url": "https://codeforces.com/problemset/problem/1426/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425I. Impressive Harvesting of The Orchard",
    "url": "https://codeforces.com/problemset/problem/1425/I",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425H. Huge Boxes of Animal Toys",
    "url": "https://codeforces.com/problemset/problem/1425/H",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425F. Flamingoes of Mystery",
    "url": "https://codeforces.com/problemset/problem/1425/F",
    "difficulty": 1400,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425E. Excitation of Atoms",
    "url": "https://codeforces.com/problemset/problem/1425/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425D. Danger of Mad Snakes",
    "url": "https://codeforces.com/problemset/problem/1425/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425C. Captain of Knights",
    "url": "https://codeforces.com/problemset/problem/1425/C",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425B. Blue and Red of Our Faculty!",
    "url": "https://codeforces.com/problemset/problem/1425/B",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1425A. Arena of Greed",
    "url": "https://codeforces.com/problemset/problem/1425/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1424M. Ancient Language",
    "url": "https://codeforces.com/problemset/problem/1424/M",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1424G. Years",
    "url": "https://codeforces.com/problemset/problem/1424/G",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423N. BubbleSquare Tokens",
    "url": "https://codeforces.com/problemset/problem/1423/N",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1423M. Milutin's Plums",
    "url": "https://codeforces.com/problemset/problem/1423/M",
    "difficulty": 2800,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423L. Light switches",
    "url": "https://codeforces.com/problemset/problem/1423/L",
    "difficulty": 2600,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423K. Lonely Numbers",
    "url": "https://codeforces.com/problemset/problem/1423/K",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423J. Bubble Cup hypothesis",
    "url": "https://codeforces.com/problemset/problem/1423/J",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423I. Lookup Tables",
    "url": "https://codeforces.com/problemset/problem/1423/I",
    "difficulty": 3000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423H. Virus",
    "url": "https://codeforces.com/problemset/problem/1423/H",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423G. Growing flowers",
    "url": "https://codeforces.com/problemset/problem/1423/G",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423F. Coins",
    "url": "https://codeforces.com/problemset/problem/1423/F",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423E. 5G Antenna Towers",
    "url": "https://codeforces.com/problemset/problem/1423/E",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423D. Does anyone else hate the wind?",
    "url": "https://codeforces.com/problemset/problem/1423/D",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1423C. Dušan's Railway",
    "url": "https://codeforces.com/problemset/problem/1423/C",
    "difficulty": 3500,
    "tags": [
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423B. Valuable Paper",
    "url": "https://codeforces.com/problemset/problem/1423/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1423A. Wakanda Forever",
    "url": "https://codeforces.com/problemset/problem/1423/A",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1422F. Boring Queries",
    "url": "https://codeforces.com/problemset/problem/1422/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1422E. Minlexes",
    "url": "https://codeforces.com/problemset/problem/1422/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1422D. Returning Home",
    "url": "https://codeforces.com/problemset/problem/1422/D",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1422C. Bargain",
    "url": "https://codeforces.com/problemset/problem/1422/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1422B. Nice Matrix",
    "url": "https://codeforces.com/problemset/problem/1422/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1422A. Fence",
    "url": "https://codeforces.com/problemset/problem/1422/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1421E. Swedish Heroes",
    "url": "https://codeforces.com/problemset/problem/1421/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1421D. Hexagons",
    "url": "https://codeforces.com/problemset/problem/1421/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1421C. Palindromifier",
    "url": "https://codeforces.com/problemset/problem/1421/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1421B. Putting Bricks in the Wall",
    "url": "https://codeforces.com/problemset/problem/1421/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1421A. XORwice",
    "url": "https://codeforces.com/problemset/problem/1421/A",
    "difficulty": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420E. Battle Lemmings",
    "url": "https://codeforces.com/problemset/problem/1420/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420D. Rescue Nibel!",
    "url": "https://codeforces.com/problemset/problem/1420/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420C2. Pokémon Army (hard version)",
    "url": "https://codeforces.com/problemset/problem/1420/C2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420C1. Pokémon Army (easy version)",
    "url": "https://codeforces.com/problemset/problem/1420/C1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420B. Rock and Lever",
    "url": "https://codeforces.com/problemset/problem/1420/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1420A. Cubes Sorting",
    "url": "https://codeforces.com/problemset/problem/1420/A",
    "difficulty": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419F. Rain of Fire",
    "url": "https://codeforces.com/problemset/problem/1419/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419E. Decryption",
    "url": "https://codeforces.com/problemset/problem/1419/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419D2. Sage's Birthday (hard version)",
    "url": "https://codeforces.com/problemset/problem/1419/D2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419D1. Sage's Birthday (easy version)",
    "url": "https://codeforces.com/problemset/problem/1419/D1",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419C. Killjoy",
    "url": "https://codeforces.com/problemset/problem/1419/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419B. Stairs",
    "url": "https://codeforces.com/problemset/problem/1419/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1419A. Digit Game",
    "url": "https://codeforces.com/problemset/problem/1419/A",
    "difficulty": 900,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418G. Three Occurrences",
    "url": "https://codeforces.com/problemset/problem/1418/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418F. Equal Product",
    "url": "https://codeforces.com/problemset/problem/1418/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418E. Expected Damage",
    "url": "https://codeforces.com/problemset/problem/1418/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418D. Trash Problem",
    "url": "https://codeforces.com/problemset/problem/1418/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418C. Mortal Kombat Tower",
    "url": "https://codeforces.com/problemset/problem/1418/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418B. Negative Prefixes",
    "url": "https://codeforces.com/problemset/problem/1418/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1418A. Buying Torches",
    "url": "https://codeforces.com/problemset/problem/1418/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1417B. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1417/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1417A. Copy-paste",
    "url": "https://codeforces.com/problemset/problem/1417/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416F. Showing Off",
    "url": "https://codeforces.com/problemset/problem/1416/F",
    "difficulty": 3300,
    "tags": [
      "flows",
      "graph matchings",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416E. Split",
    "url": "https://codeforces.com/problemset/problem/1416/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416D. Graph and Queries",
    "url": "https://codeforces.com/problemset/problem/1416/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416C. XOR Inverse",
    "url": "https://codeforces.com/problemset/problem/1416/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416B. Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1416/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1416A. k-Amazing Numbers",
    "url": "https://codeforces.com/problemset/problem/1416/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415F. Cakes for Clones",
    "url": "https://codeforces.com/problemset/problem/1415/F",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415E. New Game Plus!",
    "url": "https://codeforces.com/problemset/problem/1415/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415D. XOR-gun",
    "url": "https://codeforces.com/problemset/problem/1415/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415C. Bouncing Ball",
    "url": "https://codeforces.com/problemset/problem/1415/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415B. Repainting Street",
    "url": "https://codeforces.com/problemset/problem/1415/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1415A. Prison Break",
    "url": "https://codeforces.com/problemset/problem/1415/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413F. Roads and Ramen",
    "url": "https://codeforces.com/problemset/problem/1413/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413E. Solo mid Oracle",
    "url": "https://codeforces.com/problemset/problem/1413/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413D. Shurikens",
    "url": "https://codeforces.com/problemset/problem/1413/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413C. Perform Easily",
    "url": "https://codeforces.com/problemset/problem/1413/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413B. A New Technique",
    "url": "https://codeforces.com/problemset/problem/1413/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1413A. Finding Sasuke",
    "url": "https://codeforces.com/problemset/problem/1413/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411G. No Game No Life",
    "url": "https://codeforces.com/problemset/problem/1411/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "games",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411F. The Thorny Path",
    "url": "https://codeforces.com/problemset/problem/1411/F",
    "difficulty": 3000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411E. Poman Numbers",
    "url": "https://codeforces.com/problemset/problem/1411/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411D. Grime Zoo",
    "url": "https://codeforces.com/problemset/problem/1411/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411C. Peaceful Rooks",
    "url": "https://codeforces.com/problemset/problem/1411/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411B. Fair Numbers",
    "url": "https://codeforces.com/problemset/problem/1411/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1411A. In-game Chat",
    "url": "https://codeforces.com/problemset/problem/1411/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409F. Subsequences of Length Two",
    "url": "https://codeforces.com/problemset/problem/1409/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409E. Two Platforms",
    "url": "https://codeforces.com/problemset/problem/1409/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409D. Decrease the Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1409/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409C. Yet Another Array Restoration",
    "url": "https://codeforces.com/problemset/problem/1409/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409B. Minimum Product",
    "url": "https://codeforces.com/problemset/problem/1409/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1409A. Yet Another Two Integers Problem",
    "url": "https://codeforces.com/problemset/problem/1409/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408I. Bitwise Magic",
    "url": "https://codeforces.com/problemset/problem/1408/I",
    "difficulty": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408H. Rainbow Triples",
    "url": "https://codeforces.com/problemset/problem/1408/H",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408G. Clusterization Counting",
    "url": "https://codeforces.com/problemset/problem/1408/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408F. Two Different",
    "url": "https://codeforces.com/problemset/problem/1408/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408E. Avoid Rainbow Cycles",
    "url": "https://codeforces.com/problemset/problem/1408/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408D. Searchlights",
    "url": "https://codeforces.com/problemset/problem/1408/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408C. Discrete Acceleration",
    "url": "https://codeforces.com/problemset/problem/1408/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408B. Arrays Sum",
    "url": "https://codeforces.com/problemset/problem/1408/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1408A. Circle Coloring",
    "url": "https://codeforces.com/problemset/problem/1408/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1407E. Egor in the Republic of Dagestan",
    "url": "https://codeforces.com/problemset/problem/1407/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1407D. Discrete Centrifugal Jumps",
    "url": "https://codeforces.com/problemset/problem/1407/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1407C. Chocolate Bunny",
    "url": "https://codeforces.com/problemset/problem/1407/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1407B. Big Vova",
    "url": "https://codeforces.com/problemset/problem/1407/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1407A. Ahahahahahahahaha",
    "url": "https://codeforces.com/problemset/problem/1407/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1406E. Deleting Numbers",
    "url": "https://codeforces.com/problemset/problem/1406/E",
    "difficulty": 2600,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1406D. Three Sequences",
    "url": "https://codeforces.com/problemset/problem/1406/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1406C. Link Cut Centroids",
    "url": "https://codeforces.com/problemset/problem/1406/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1406B. Maximum Product",
    "url": "https://codeforces.com/problemset/problem/1406/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1406A. Subset Mex",
    "url": "https://codeforces.com/problemset/problem/1406/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1405B. Array Cancellation",
    "url": "https://codeforces.com/problemset/problem/1405/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1405A. Permutation Forgery",
    "url": "https://codeforces.com/problemset/problem/1405/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1404E. Bricks",
    "url": "https://codeforces.com/problemset/problem/1404/E",
    "difficulty": 2800,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1404D. Game of Pairs",
    "url": "https://codeforces.com/problemset/problem/1404/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1404C. Fixed Point Removal",
    "url": "https://codeforces.com/problemset/problem/1404/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1404B. Tree Tag",
    "url": "https://codeforces.com/problemset/problem/1404/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1404A. Balanced Bitstring",
    "url": "https://codeforces.com/problemset/problem/1404/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1403C. Chess Rush",
    "url": "https://codeforces.com/problemset/problem/1403/C",
    "difficulty": 3200,
    "tags": [
      "*special",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1403B. Spring cleaning",
    "url": "https://codeforces.com/problemset/problem/1403/B",
    "difficulty": 2300,
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1403A. The Potion of Great Power",
    "url": "https://codeforces.com/problemset/problem/1403/A",
    "difficulty": 2400,
    "tags": [
      "*special",
      "2-sat",
      "binary search",
      "data structures",
      "graphs",
      "interactive",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1402C. Star Trek",
    "url": "https://codeforces.com/problemset/problem/1402/C",
    "difficulty": 2600,
    "tags": [
      "*special",
      "combinatorics",
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "matrices",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1402B. Roads",
    "url": "https://codeforces.com/problemset/problem/1402/B",
    "difficulty": 2900,
    "tags": [
      "*special",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1402A. Fancy Fence",
    "url": "https://codeforces.com/problemset/problem/1402/A",
    "difficulty": 1800,
    "tags": [
      "*special",
      "data structures",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401F. Reverse and Swap",
    "url": "https://codeforces.com/problemset/problem/1401/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401E. Divide Square",
    "url": "https://codeforces.com/problemset/problem/1401/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401D. Maximum Distributed Tree",
    "url": "https://codeforces.com/problemset/problem/1401/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401C. Mere Array",
    "url": "https://codeforces.com/problemset/problem/1401/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401B. Ternary Sequence",
    "url": "https://codeforces.com/problemset/problem/1401/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1401A. Distance and Axis",
    "url": "https://codeforces.com/problemset/problem/1401/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400G. Mercenaries",
    "url": "https://codeforces.com/problemset/problem/1400/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "dsu",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400F. x-prime Substrings",
    "url": "https://codeforces.com/problemset/problem/1400/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400E. Clear the Multiset",
    "url": "https://codeforces.com/problemset/problem/1400/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400D. Zigzags",
    "url": "https://codeforces.com/problemset/problem/1400/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400C. Binary String Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1400/C",
    "difficulty": 1500,
    "tags": [
      "2-sat",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400B. RPG Protagonist",
    "url": "https://codeforces.com/problemset/problem/1400/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1400A. String Similarity",
    "url": "https://codeforces.com/problemset/problem/1400/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399F. Yet Another Segments Subset",
    "url": "https://codeforces.com/problemset/problem/1399/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399E2. Weights Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1399/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399E1. Weights Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1399/E1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399D. Binary String To Subsequences",
    "url": "https://codeforces.com/problemset/problem/1399/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399C. Boats Competition",
    "url": "https://codeforces.com/problemset/problem/1399/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399B. Gifts Fixing",
    "url": "https://codeforces.com/problemset/problem/1399/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1399A. Remove Smallest",
    "url": "https://codeforces.com/problemset/problem/1399/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398G. Running Competition",
    "url": "https://codeforces.com/problemset/problem/1398/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398F. Controversial Rounds",
    "url": "https://codeforces.com/problemset/problem/1398/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398E. Two Types of Spells",
    "url": "https://codeforces.com/problemset/problem/1398/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398D. Colored Rectangles",
    "url": "https://codeforces.com/problemset/problem/1398/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398C. Good Subarrays",
    "url": "https://codeforces.com/problemset/problem/1398/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398B. Substring Removal Game",
    "url": "https://codeforces.com/problemset/problem/1398/B",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1398A. Bad Triangle",
    "url": "https://codeforces.com/problemset/problem/1398/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1397B. Power Sequence",
    "url": "https://codeforces.com/problemset/problem/1397/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1397A. Juggling Letters",
    "url": "https://codeforces.com/problemset/problem/1397/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1396E. Distance Matching",
    "url": "https://codeforces.com/problemset/problem/1396/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1396D. Rainbow Rectangles",
    "url": "https://codeforces.com/problemset/problem/1396/D",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1396C. Monster Invaders",
    "url": "https://codeforces.com/problemset/problem/1396/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1396B. Stoned Game",
    "url": "https://codeforces.com/problemset/problem/1396/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1396A. Multiples of Length",
    "url": "https://codeforces.com/problemset/problem/1396/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1395C. Boboniu and Bit Operations",
    "url": "https://codeforces.com/problemset/problem/1395/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1395B. Boboniu Plays Chess",
    "url": "https://codeforces.com/problemset/problem/1395/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1395A. Boboniu Likes to Color Balls",
    "url": "https://codeforces.com/problemset/problem/1395/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1394E. Boboniu and Banknote Collection",
    "url": "https://codeforces.com/problemset/problem/1394/E",
    "difficulty": 3500,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1394D. Boboniu and Jianghu",
    "url": "https://codeforces.com/problemset/problem/1394/D",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1394C. Boboniu and String",
    "url": "https://codeforces.com/problemset/problem/1394/C",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1394B. Boboniu Walks on Graph",
    "url": "https://codeforces.com/problemset/problem/1394/B",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1394A. Boboniu Chats with Du",
    "url": "https://codeforces.com/problemset/problem/1394/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393E2. Twilight and Ancient Scroll (harder version)",
    "url": "https://codeforces.com/problemset/problem/1393/E2",
    "difficulty": 3200,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393E1. Twilight and Ancient Scroll (easier version)",
    "url": "https://codeforces.com/problemset/problem/1393/E1",
    "difficulty": 2800,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393D. Rarity and New Dress",
    "url": "https://codeforces.com/problemset/problem/1393/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393C. Pinkie Pie Eats Patty-cakes",
    "url": "https://codeforces.com/problemset/problem/1393/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393B. Applejack and Storages",
    "url": "https://codeforces.com/problemset/problem/1393/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1393A. Rainbow Dash, Fluttershy and Chess Coloring",
    "url": "https://codeforces.com/problemset/problem/1393/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392I. Kevin and Grid",
    "url": "https://codeforces.com/problemset/problem/1392/I",
    "difficulty": 3300,
    "tags": [
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392H. ZS Shuffles Cards",
    "url": "https://codeforces.com/problemset/problem/1392/H",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392G. Omkar and Pies",
    "url": "https://codeforces.com/problemset/problem/1392/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392F. Omkar and Landslide",
    "url": "https://codeforces.com/problemset/problem/1392/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392E. Omkar and Duck",
    "url": "https://codeforces.com/problemset/problem/1392/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392D. Omkar and Bed Wars",
    "url": "https://codeforces.com/problemset/problem/1392/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392C. Omkar and Waterslide",
    "url": "https://codeforces.com/problemset/problem/1392/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392B. Omkar and Infinity Clock",
    "url": "https://codeforces.com/problemset/problem/1392/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1392A. Omkar and Password",
    "url": "https://codeforces.com/problemset/problem/1392/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1391E. Pairs of Pairs",
    "url": "https://codeforces.com/problemset/problem/1391/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1391D. 505",
    "url": "https://codeforces.com/problemset/problem/1391/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1391C. Cyclic Permutations ",
    "url": "https://codeforces.com/problemset/problem/1391/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1391B. Fix You",
    "url": "https://codeforces.com/problemset/problem/1391/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1391A. Suborrays",
    "url": "https://codeforces.com/problemset/problem/1391/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389G. Directing Edges",
    "url": "https://codeforces.com/problemset/problem/1389/G",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389F. Bicolored Segments",
    "url": "https://codeforces.com/problemset/problem/1389/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "graph matchings",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389E. Calendar Ambiguity",
    "url": "https://codeforces.com/problemset/problem/1389/E",
    "difficulty": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389D. Segment Intersections",
    "url": "https://codeforces.com/problemset/problem/1389/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389C. Good String",
    "url": "https://codeforces.com/problemset/problem/1389/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389B. Array Walk",
    "url": "https://codeforces.com/problemset/problem/1389/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1389A. LCM Problem",
    "url": "https://codeforces.com/problemset/problem/1389/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1388E. Uncle Bogdan and Projections",
    "url": "https://codeforces.com/problemset/problem/1388/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1388D. Captain Flint and Treasure",
    "url": "https://codeforces.com/problemset/problem/1388/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1388C. Uncle Bogdan and Country Happiness",
    "url": "https://codeforces.com/problemset/problem/1388/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1388B. Captain Flint and a Long Voyage",
    "url": "https://codeforces.com/problemset/problem/1388/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1388A. Captain Flint and Crew Recruitment",
    "url": "https://codeforces.com/problemset/problem/1388/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1387C. Viruses",
    "url": "https://codeforces.com/problemset/problem/1387/C",
    "difficulty": 2900,
    "tags": [
      "*special",
      "dp",
      "shortest paths",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1387B2. Village (Maximum)",
    "url": "https://codeforces.com/problemset/problem/1387/B2",
    "difficulty": 2500,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1387B1. Village (Minimum)",
    "url": "https://codeforces.com/problemset/problem/1387/B1",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1387A. Graph",
    "url": "https://codeforces.com/problemset/problem/1387/A",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "dfs and similar",
      "dp",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1386C. Joker",
    "url": "https://codeforces.com/problemset/problem/1386/C",
    "difficulty": 2800,
    "tags": [
      "*special",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1386B. Mixture",
    "url": "https://codeforces.com/problemset/problem/1386/B",
    "difficulty": 2900,
    "tags": [
      "*special",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1386A. Colors",
    "url": "https://codeforces.com/problemset/problem/1386/A",
    "difficulty": 2700,
    "tags": [
      "*special",
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385G. Columns Swaps",
    "url": "https://codeforces.com/problemset/problem/1385/G",
    "difficulty": 2300,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385F. Removing Leaves",
    "url": "https://codeforces.com/problemset/problem/1385/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385E. Directing Edges",
    "url": "https://codeforces.com/problemset/problem/1385/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385D. a-Good String",
    "url": "https://codeforces.com/problemset/problem/1385/D",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385C. Make It Good",
    "url": "https://codeforces.com/problemset/problem/1385/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385B. Restore the Permutation by Merger",
    "url": "https://codeforces.com/problemset/problem/1385/B",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1385A. Three Pairwise Maximums",
    "url": "https://codeforces.com/problemset/problem/1385/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1384B2. Koa and the Beach (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1384/B2",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1384B1. Koa and the Beach (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1384/B1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1384A. Common Prefixes",
    "url": "https://codeforces.com/problemset/problem/1384/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383F. Special Edges",
    "url": "https://codeforces.com/problemset/problem/1383/F",
    "difficulty": 3200,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383E. Strange Operation",
    "url": "https://codeforces.com/problemset/problem/1383/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383D. Rearrange",
    "url": "https://codeforces.com/problemset/problem/1383/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383C. String Transformation 2",
    "url": "https://codeforces.com/problemset/problem/1383/C",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383B. GameGame",
    "url": "https://codeforces.com/problemset/problem/1383/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1383A. String Transformation 1",
    "url": "https://codeforces.com/problemset/problem/1383/A",
    "difficulty": 1700,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1382B. Sequential Nim",
    "url": "https://codeforces.com/problemset/problem/1382/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1382A. Common Subsequence",
    "url": "https://codeforces.com/problemset/problem/1382/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381E. Origami",
    "url": "https://codeforces.com/problemset/problem/1381/E",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381D. The Majestic Brown Tree Snake",
    "url": "https://codeforces.com/problemset/problem/1381/D",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381C. Mastermind",
    "url": "https://codeforces.com/problemset/problem/1381/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381B. Unmerge",
    "url": "https://codeforces.com/problemset/problem/1381/B",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381A2. Prefix Flip (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1381/A2",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1381A1. Prefix Flip (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1381/A1",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380G. Circular Dungeon",
    "url": "https://codeforces.com/problemset/problem/1380/G",
    "difficulty": 2600,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380F. Strange Addition",
    "url": "https://codeforces.com/problemset/problem/1380/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380E. Merging Towers",
    "url": "https://codeforces.com/problemset/problem/1380/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380D. Berserk And Fireball",
    "url": "https://codeforces.com/problemset/problem/1380/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380C. Create The Teams",
    "url": "https://codeforces.com/problemset/problem/1380/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380B. Universal Solution",
    "url": "https://codeforces.com/problemset/problem/1380/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1380A. Three Indices",
    "url": "https://codeforces.com/problemset/problem/1380/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379F2. Chess Strikes Back (hard version)",
    "url": "https://codeforces.com/problemset/problem/1379/F2",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379F1. Chess Strikes Back (easy version)",
    "url": "https://codeforces.com/problemset/problem/1379/F1",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379E. Inverse Genealogy",
    "url": "https://codeforces.com/problemset/problem/1379/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379D. New Passenger Trams",
    "url": "https://codeforces.com/problemset/problem/1379/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379C. Choosing flowers",
    "url": "https://codeforces.com/problemset/problem/1379/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379B. Dubious Cyrpto",
    "url": "https://codeforces.com/problemset/problem/1379/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1379A. Acacius and String",
    "url": "https://codeforces.com/problemset/problem/1379/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375I. Cubic Lattice",
    "url": "https://codeforces.com/problemset/problem/1375/I",
    "difficulty": 3500,
    "tags": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375H. Set Merging",
    "url": "https://codeforces.com/problemset/problem/1375/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375G. Tree Modification",
    "url": "https://codeforces.com/problemset/problem/1375/G",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375F. Integer Game",
    "url": "https://codeforces.com/problemset/problem/1375/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375E. Inversion SwapSort",
    "url": "https://codeforces.com/problemset/problem/1375/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375D. Replace by MEX",
    "url": "https://codeforces.com/problemset/problem/1375/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375C. Element Extermination",
    "url": "https://codeforces.com/problemset/problem/1375/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375B. Neighbor Grid",
    "url": "https://codeforces.com/problemset/problem/1375/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1375A. Sign Flipping",
    "url": "https://codeforces.com/problemset/problem/1375/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374F. Cyclic Shifts Sorting",
    "url": "https://codeforces.com/problemset/problem/1374/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374E2. Reading Books (hard version)",
    "url": "https://codeforces.com/problemset/problem/1374/E2",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374E1. Reading Books (easy version)",
    "url": "https://codeforces.com/problemset/problem/1374/E1",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374D. Zero Remainder Array",
    "url": "https://codeforces.com/problemset/problem/1374/D",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374C. Move Brackets",
    "url": "https://codeforces.com/problemset/problem/1374/C",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374B. Multiply by 2, divide by 6",
    "url": "https://codeforces.com/problemset/problem/1374/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1374A. Required Remainder",
    "url": "https://codeforces.com/problemset/problem/1374/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373G. Pawns",
    "url": "https://codeforces.com/problemset/problem/1373/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373F. Network Coverage",
    "url": "https://codeforces.com/problemset/problem/1373/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373E. Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1373/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373D. Maximum Sum on Even Positions",
    "url": "https://codeforces.com/problemset/problem/1373/D",
    "difficulty": 1600,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373C. Pluses and Minuses",
    "url": "https://codeforces.com/problemset/problem/1373/C",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373B. 01 Game",
    "url": "https://codeforces.com/problemset/problem/1373/B",
    "difficulty": 900,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1373A. Donut Shops",
    "url": "https://codeforces.com/problemset/problem/1373/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372F. Omkar and Modes",
    "url": "https://codeforces.com/problemset/problem/1372/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372E. Omkar and Last Floor",
    "url": "https://codeforces.com/problemset/problem/1372/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372D. Omkar and Circle",
    "url": "https://codeforces.com/problemset/problem/1372/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372C. Omkar and Baseball",
    "url": "https://codeforces.com/problemset/problem/1372/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372B. Omkar and Last Class of Math",
    "url": "https://codeforces.com/problemset/problem/1372/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1372A. Omkar and Completion",
    "url": "https://codeforces.com/problemset/problem/1372/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371F. Raging Thunder",
    "url": "https://codeforces.com/problemset/problem/1371/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371E2. Asterism (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E2",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371E1. Asterism (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371D. Grid-00100",
    "url": "https://codeforces.com/problemset/problem/1371/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371C. A Cookie for You",
    "url": "https://codeforces.com/problemset/problem/1371/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371B. Magical Calendar",
    "url": "https://codeforces.com/problemset/problem/1371/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1371A. Magical Sticks",
    "url": "https://codeforces.com/problemset/problem/1371/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370F2. The Hidden Pair (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1370/F2",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370F1. The Hidden Pair (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1370/F1",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "interactive",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370E. Binary Subsequence Rotation",
    "url": "https://codeforces.com/problemset/problem/1370/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370D. Odd-Even Subsequence",
    "url": "https://codeforces.com/problemset/problem/1370/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370C. Number Game",
    "url": "https://codeforces.com/problemset/problem/1370/C",
    "difficulty": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370B. GCD Compression",
    "url": "https://codeforces.com/problemset/problem/1370/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1370A. Maximum GCD",
    "url": "https://codeforces.com/problemset/problem/1370/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369F. BareLee",
    "url": "https://codeforces.com/problemset/problem/1369/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369E. DeadLee",
    "url": "https://codeforces.com/problemset/problem/1369/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369D. TediousLee",
    "url": "https://codeforces.com/problemset/problem/1369/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369C. RationalLee",
    "url": "https://codeforces.com/problemset/problem/1369/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369B. AccurateLee",
    "url": "https://codeforces.com/problemset/problem/1369/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1369A. FashionabLee",
    "url": "https://codeforces.com/problemset/problem/1369/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368H2. Breadboard Capacity (hard version)",
    "url": "https://codeforces.com/problemset/problem/1368/H2",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1368H1. Breadboard Capacity (easy version)",
    "url": "https://codeforces.com/problemset/problem/1368/H1",
    "difficulty": 3300,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368G. Shifting Dominoes",
    "url": "https://codeforces.com/problemset/problem/1368/G",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368F. Lamps on a Circle",
    "url": "https://codeforces.com/problemset/problem/1368/F",
    "difficulty": 2600,
    "tags": [
      "games",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368E. Ski Accidents",
    "url": "https://codeforces.com/problemset/problem/1368/E",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368D. AND, OR and square sum",
    "url": "https://codeforces.com/problemset/problem/1368/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368C. Even Picture",
    "url": "https://codeforces.com/problemset/problem/1368/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368B. Codeforces Subsequences",
    "url": "https://codeforces.com/problemset/problem/1368/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1368A. C+=",
    "url": "https://codeforces.com/problemset/problem/1368/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367F2. Flying Sort (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1367/F2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367F1. Flying Sort (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1367/F1",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367E. Necklace Assembly",
    "url": "https://codeforces.com/problemset/problem/1367/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367D. Task On The Board",
    "url": "https://codeforces.com/problemset/problem/1367/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367C. Social Distance",
    "url": "https://codeforces.com/problemset/problem/1367/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367B. Even Array",
    "url": "https://codeforces.com/problemset/problem/1367/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1367A. Short Substrings",
    "url": "https://codeforces.com/problemset/problem/1367/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366G. Construct the String",
    "url": "https://codeforces.com/problemset/problem/1366/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366F. Jog Around The Graph",
    "url": "https://codeforces.com/problemset/problem/1366/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dp",
      "geometry",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366E. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1366/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366D. Two Divisors",
    "url": "https://codeforces.com/problemset/problem/1366/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366C. Palindromic Paths",
    "url": "https://codeforces.com/problemset/problem/1366/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366B. Shuffle",
    "url": "https://codeforces.com/problemset/problem/1366/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1366A. Shovels and Swords",
    "url": "https://codeforces.com/problemset/problem/1366/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365G. Secure Password",
    "url": "https://codeforces.com/problemset/problem/1365/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365F. Swaps Again",
    "url": "https://codeforces.com/problemset/problem/1365/F",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365E. Maximum Subsequence Value",
    "url": "https://codeforces.com/problemset/problem/1365/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365D. Solve The Maze",
    "url": "https://codeforces.com/problemset/problem/1365/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365C. Rotation Matching",
    "url": "https://codeforces.com/problemset/problem/1365/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365B. Trouble Sort",
    "url": "https://codeforces.com/problemset/problem/1365/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1365A. Matrix Game",
    "url": "https://codeforces.com/problemset/problem/1365/A",
    "difficulty": 1100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1364E. X-OR",
    "url": "https://codeforces.com/problemset/problem/1364/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1364D. Ehab's Last Corollary",
    "url": "https://codeforces.com/problemset/problem/1364/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1364C. Ehab and Prefix MEXs",
    "url": "https://codeforces.com/problemset/problem/1364/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1364B. Most socially-distanced subsequence",
    "url": "https://codeforces.com/problemset/problem/1364/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1364A. XXXXX",
    "url": "https://codeforces.com/problemset/problem/1364/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363F. Rotating Substrings",
    "url": "https://codeforces.com/problemset/problem/1363/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363E. Tree Shuffling",
    "url": "https://codeforces.com/problemset/problem/1363/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363D. Guess The Maximums",
    "url": "https://codeforces.com/problemset/problem/1363/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363C. Game On Leaves",
    "url": "https://codeforces.com/problemset/problem/1363/C",
    "difficulty": 1600,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363B. Subsequence Hate",
    "url": "https://codeforces.com/problemset/problem/1363/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1363A. Odd Selection",
    "url": "https://codeforces.com/problemset/problem/1363/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1362C. Johnny and Another Rating Drop",
    "url": "https://codeforces.com/problemset/problem/1362/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1362B. Johnny and His Hobbies",
    "url": "https://codeforces.com/problemset/problem/1362/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1362A. Johnny and Ancient Computer",
    "url": "https://codeforces.com/problemset/problem/1362/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361F. Johnny and New Toy",
    "url": "https://codeforces.com/problemset/problem/1361/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361E. James and the Chase",
    "url": "https://codeforces.com/problemset/problem/1361/E",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361D. Johnny and James",
    "url": "https://codeforces.com/problemset/problem/1361/D",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361C. Johnny and Megan's Necklace",
    "url": "https://codeforces.com/problemset/problem/1361/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361B. Johnny and Grandmaster",
    "url": "https://codeforces.com/problemset/problem/1361/B",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1361A. Johnny and Contribution",
    "url": "https://codeforces.com/problemset/problem/1361/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360H. Binary Median",
    "url": "https://codeforces.com/problemset/problem/1360/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360G. A/B Matrix",
    "url": "https://codeforces.com/problemset/problem/1360/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360F. Spy-string",
    "url": "https://codeforces.com/problemset/problem/1360/F",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360E. Polygon",
    "url": "https://codeforces.com/problemset/problem/1360/E",
    "difficulty": 1300,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360D. Buying Shovels",
    "url": "https://codeforces.com/problemset/problem/1360/D",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360C. Similar Pairs",
    "url": "https://codeforces.com/problemset/problem/1360/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360B. Honest Coach",
    "url": "https://codeforces.com/problemset/problem/1360/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1360A. Minimal Square",
    "url": "https://codeforces.com/problemset/problem/1360/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359F. RC Kaboom Show",
    "url": "https://codeforces.com/problemset/problem/1359/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359E. Modular Stability",
    "url": "https://codeforces.com/problemset/problem/1359/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359D. Yet Another Yet Another Task",
    "url": "https://codeforces.com/problemset/problem/1359/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359C. Mixing Water",
    "url": "https://codeforces.com/problemset/problem/1359/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359B. New Theatre Square",
    "url": "https://codeforces.com/problemset/problem/1359/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1359A. Berland Poker",
    "url": "https://codeforces.com/problemset/problem/1359/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358F. Tasty Cookie",
    "url": "https://codeforces.com/problemset/problem/1358/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358E. Are You Fired?",
    "url": "https://codeforces.com/problemset/problem/1358/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358D. The Best Vacation",
    "url": "https://codeforces.com/problemset/problem/1358/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358C. Celex Update",
    "url": "https://codeforces.com/problemset/problem/1358/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358B. Maria Breaks the Self-isolation",
    "url": "https://codeforces.com/problemset/problem/1358/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1358A. Park Lighting",
    "url": "https://codeforces.com/problemset/problem/1358/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357E2. Root of quantum Fourier transform",
    "url": "https://codeforces.com/problemset/problem/1357/E2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357E1. Power of quantum Fourier transform",
    "url": "https://codeforces.com/problemset/problem/1357/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357D5. Quantum Classification - Dataset 7",
    "url": "https://codeforces.com/problemset/problem/1357/D5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357D4. Quantum Classification - Dataset 6",
    "url": "https://codeforces.com/problemset/problem/1357/D4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357D3. Quantum Classification - Dataset 5",
    "url": "https://codeforces.com/problemset/problem/1357/D3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357D2. Quantum Classification - Dataset 4",
    "url": "https://codeforces.com/problemset/problem/1357/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357D1. Quantum Classification - Dataset 3",
    "url": "https://codeforces.com/problemset/problem/1357/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357C2. Prepare superposition of basis states with the same parity",
    "url": "https://codeforces.com/problemset/problem/1357/C2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357C1. Prepare superposition of basis states with 0s",
    "url": "https://codeforces.com/problemset/problem/1357/C1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357B2. \"Is the number divisible by 3?\" oracle",
    "url": "https://codeforces.com/problemset/problem/1357/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357B1. \"Is the bit string balanced?\" oracle",
    "url": "https://codeforces.com/problemset/problem/1357/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A7. Distinguish Y, XZ, -Y and -XZ",
    "url": "https://codeforces.com/problemset/problem/1357/A7",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A6. Distinguish four Pauli gates",
    "url": "https://codeforces.com/problemset/problem/1357/A6",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A5. Distinguish Rz(θ) from Ry(θ)",
    "url": "https://codeforces.com/problemset/problem/1357/A5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A4. Distinguish Rz from R1",
    "url": "https://codeforces.com/problemset/problem/1357/A4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A3. Distinguish H from X",
    "url": "https://codeforces.com/problemset/problem/1357/A3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A2. Distinguish I, CNOTs and SWAP",
    "url": "https://codeforces.com/problemset/problem/1357/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1357A1. Figure out direction of CNOT",
    "url": "https://codeforces.com/problemset/problem/1357/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356D2. Quantum Classification - 2",
    "url": "https://codeforces.com/problemset/problem/1356/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356D1. Quantum Classification - 1",
    "url": "https://codeforces.com/problemset/problem/1356/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356C. Prepare state |01⟩ + |10⟩ + |11⟩",
    "url": "https://codeforces.com/problemset/problem/1356/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356B2. Decrement",
    "url": "https://codeforces.com/problemset/problem/1356/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356B1. Increment",
    "url": "https://codeforces.com/problemset/problem/1356/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356A5. Distinguish Z from -Z",
    "url": "https://codeforces.com/problemset/problem/1356/A5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356A4. Distinguish I ⊗ X from CNOT",
    "url": "https://codeforces.com/problemset/problem/1356/A4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356A3. Distinguish Z from S",
    "url": "https://codeforces.com/problemset/problem/1356/A3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356A2. Distinguish I from Z",
    "url": "https://codeforces.com/problemset/problem/1356/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1356A1. Distinguish I from X",
    "url": "https://codeforces.com/problemset/problem/1356/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355F. Guess Divisors Count",
    "url": "https://codeforces.com/problemset/problem/1355/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355E. Restorer Distance",
    "url": "https://codeforces.com/problemset/problem/1355/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355D. Game With Array",
    "url": "https://codeforces.com/problemset/problem/1355/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355C. Count Triangles",
    "url": "https://codeforces.com/problemset/problem/1355/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355B. Young Explorers",
    "url": "https://codeforces.com/problemset/problem/1355/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1355A. Sequence with Digits",
    "url": "https://codeforces.com/problemset/problem/1355/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354G. Find a Gift",
    "url": "https://codeforces.com/problemset/problem/1354/G",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354F. Summoning Minions",
    "url": "https://codeforces.com/problemset/problem/1354/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354E. Graph Coloring",
    "url": "https://codeforces.com/problemset/problem/1354/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354D. Multiset",
    "url": "https://codeforces.com/problemset/problem/1354/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354C2. Not So Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354C1. Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354B. Ternary String",
    "url": "https://codeforces.com/problemset/problem/1354/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1354A. Alarm Clock",
    "url": "https://codeforces.com/problemset/problem/1354/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353F. Decreasing Heights",
    "url": "https://codeforces.com/problemset/problem/1353/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353E. K-periodic Garland",
    "url": "https://codeforces.com/problemset/problem/1353/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353D. Constructing the Array",
    "url": "https://codeforces.com/problemset/problem/1353/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353C. Board Moves",
    "url": "https://codeforces.com/problemset/problem/1353/C",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353B. Two Arrays And Swaps",
    "url": "https://codeforces.com/problemset/problem/1353/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1353A. Most Unstable Array",
    "url": "https://codeforces.com/problemset/problem/1353/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352G. Special Permutation",
    "url": "https://codeforces.com/problemset/problem/1352/G",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352F. Binary String Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1352/F",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352E. Special Elements",
    "url": "https://codeforces.com/problemset/problem/1352/E",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352D. Alice, Bob and Candies",
    "url": "https://codeforces.com/problemset/problem/1352/D",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352C. K-th Not Divisible by n",
    "url": "https://codeforces.com/problemset/problem/1352/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352B. Same Parity Summands",
    "url": "https://codeforces.com/problemset/problem/1352/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1352A. Sum of Round Numbers",
    "url": "https://codeforces.com/problemset/problem/1352/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1351C. Skier",
    "url": "https://codeforces.com/problemset/problem/1351/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1351B. Square?",
    "url": "https://codeforces.com/problemset/problem/1351/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1351A. A+B (Trial Problem)",
    "url": "https://codeforces.com/problemset/problem/1351/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1350B. Orac and Models",
    "url": "https://codeforces.com/problemset/problem/1350/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1350A. Orac and Factors",
    "url": "https://codeforces.com/problemset/problem/1350/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349F2. Slime and Sequences (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1349/F2",
    "difficulty": 3500,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349F1. Slime and Sequences (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1349/F1",
    "difficulty": 3100,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349E. Slime and Hats",
    "url": "https://codeforces.com/problemset/problem/1349/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349D. Slime and Biscuits",
    "url": "https://codeforces.com/problemset/problem/1349/D",
    "difficulty": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349C. Orac and Game of Life",
    "url": "https://codeforces.com/problemset/problem/1349/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349B. Orac and Medians",
    "url": "https://codeforces.com/problemset/problem/1349/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1349A. Orac and LCM",
    "url": "https://codeforces.com/problemset/problem/1349/A",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348F. Phoenix and Memory",
    "url": "https://codeforces.com/problemset/problem/1348/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348E. Phoenix and Berries",
    "url": "https://codeforces.com/problemset/problem/1348/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348D. Phoenix and Science",
    "url": "https://codeforces.com/problemset/problem/1348/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348C. Phoenix and Distribution",
    "url": "https://codeforces.com/problemset/problem/1348/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348B. Phoenix and Beauty",
    "url": "https://codeforces.com/problemset/problem/1348/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1348A. Phoenix and Balance",
    "url": "https://codeforces.com/problemset/problem/1348/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346I. Pac-Man 2.0",
    "url": "https://codeforces.com/problemset/problem/1346/I",
    "difficulty": 2900,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346H. Game with Segments",
    "url": "https://codeforces.com/problemset/problem/1346/H",
    "difficulty": 2700,
    "tags": [
      "*special",
      "data structures",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346G. Two IP Cameras",
    "url": "https://codeforces.com/problemset/problem/1346/G",
    "difficulty": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346F. Dune II: Battle For Arrakis",
    "url": "https://codeforces.com/problemset/problem/1346/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346E. Magic Tricks",
    "url": "https://codeforces.com/problemset/problem/1346/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346D. Constructing the Dungeon",
    "url": "https://codeforces.com/problemset/problem/1346/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346C. Spring Cleaning",
    "url": "https://codeforces.com/problemset/problem/1346/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346B. Boot Camp",
    "url": "https://codeforces.com/problemset/problem/1346/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1346A. Color Revolution",
    "url": "https://codeforces.com/problemset/problem/1346/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1345B. Card Constructions",
    "url": "https://codeforces.com/problemset/problem/1345/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1345A. Puzzle Pieces",
    "url": "https://codeforces.com/problemset/problem/1345/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344F. Piet's Palette",
    "url": "https://codeforces.com/problemset/problem/1344/F",
    "difficulty": 3200,
    "tags": [
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344E. Train Tracks",
    "url": "https://codeforces.com/problemset/problem/1344/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344D. Résumé Review",
    "url": "https://codeforces.com/problemset/problem/1344/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344C. Quantifier Question",
    "url": "https://codeforces.com/problemset/problem/1344/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344B. Monopole Magnets",
    "url": "https://codeforces.com/problemset/problem/1344/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1344A. Hilbert's Hotel",
    "url": "https://codeforces.com/problemset/problem/1344/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343F. Restore the Permutation by Sorted Segments",
    "url": "https://codeforces.com/problemset/problem/1343/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343E. Weights Distributing",
    "url": "https://codeforces.com/problemset/problem/1343/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343D. Constant Palindrome Sum",
    "url": "https://codeforces.com/problemset/problem/1343/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343C. Alternating Subsequence",
    "url": "https://codeforces.com/problemset/problem/1343/C",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343B. Balanced Array",
    "url": "https://codeforces.com/problemset/problem/1343/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1343A. Candies",
    "url": "https://codeforces.com/problemset/problem/1343/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342F. Make It Ascending",
    "url": "https://codeforces.com/problemset/problem/1342/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342E. Placing Rooks",
    "url": "https://codeforces.com/problemset/problem/1342/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342D. Multiple Testcases",
    "url": "https://codeforces.com/problemset/problem/1342/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342C. Yet Another Counting Problem",
    "url": "https://codeforces.com/problemset/problem/1342/C",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342B. Binary Period",
    "url": "https://codeforces.com/problemset/problem/1342/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1342A. Road To Zero",
    "url": "https://codeforces.com/problemset/problem/1342/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1341B. Nastya and Door",
    "url": "https://codeforces.com/problemset/problem/1341/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1341A. Nastya and Rice",
    "url": "https://codeforces.com/problemset/problem/1341/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340F. Nastya and CBS",
    "url": "https://codeforces.com/problemset/problem/1340/F",
    "difficulty": 3300,
    "tags": [
      "brute force",
      "data structures",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340E. Nastya and Bees",
    "url": "https://codeforces.com/problemset/problem/1340/E",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340D. Nastya and Time Machine",
    "url": "https://codeforces.com/problemset/problem/1340/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340C. Nastya and Unexpected Guest",
    "url": "https://codeforces.com/problemset/problem/1340/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340B. Nastya and Scoreboard",
    "url": "https://codeforces.com/problemset/problem/1340/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1340A. Nastya and Strange Generator",
    "url": "https://codeforces.com/problemset/problem/1340/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1339B. Sorted Adjacent Differences",
    "url": "https://codeforces.com/problemset/problem/1339/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1339A. Filling Diamonds",
    "url": "https://codeforces.com/problemset/problem/1339/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1338E. JYPnation",
    "url": "https://codeforces.com/problemset/problem/1338/E",
    "difficulty": 3500,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1338D. Nested Rubber Bands",
    "url": "https://codeforces.com/problemset/problem/1338/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1338C. Perfect Triples",
    "url": "https://codeforces.com/problemset/problem/1338/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1338B. Edge Weight Assignment",
    "url": "https://codeforces.com/problemset/problem/1338/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1338A. Powered Addition",
    "url": "https://codeforces.com/problemset/problem/1338/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1337B. Kana and Dragon Quest game",
    "url": "https://codeforces.com/problemset/problem/1337/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1337A. Ichihime and Triangle",
    "url": "https://codeforces.com/problemset/problem/1337/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336F. Journey",
    "url": "https://codeforces.com/problemset/problem/1336/F",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336E2. Chiori and Doll Picking (hard version)",
    "url": "https://codeforces.com/problemset/problem/1336/E2",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336E1. Chiori and Doll Picking (easy version)",
    "url": "https://codeforces.com/problemset/problem/1336/E1",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336D. Yui and Mahjong Set",
    "url": "https://codeforces.com/problemset/problem/1336/D",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336C. Kaavi and Magic Spell",
    "url": "https://codeforces.com/problemset/problem/1336/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336B. Xenia and Colorful Gems",
    "url": "https://codeforces.com/problemset/problem/1336/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1336A. Linova and Kingdom",
    "url": "https://codeforces.com/problemset/problem/1336/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335F. Robots on a Grid",
    "url": "https://codeforces.com/problemset/problem/1335/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335E2. Three Blocks Palindrome (hard version)",
    "url": "https://codeforces.com/problemset/problem/1335/E2",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335E1. Three Blocks Palindrome (easy version)",
    "url": "https://codeforces.com/problemset/problem/1335/E1",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335D. Anti-Sudoku",
    "url": "https://codeforces.com/problemset/problem/1335/D",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335C. Two Teams Composing",
    "url": "https://codeforces.com/problemset/problem/1335/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335B. Construct the String",
    "url": "https://codeforces.com/problemset/problem/1335/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1335A. Candies and Two Sisters",
    "url": "https://codeforces.com/problemset/problem/1335/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334G. Substring Search",
    "url": "https://codeforces.com/problemset/problem/1334/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334F. Strange Function",
    "url": "https://codeforces.com/problemset/problem/1334/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334E. Divisor Paths",
    "url": "https://codeforces.com/problemset/problem/1334/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334D. Minimum Euler Cycle",
    "url": "https://codeforces.com/problemset/problem/1334/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334C. Circle of Monsters",
    "url": "https://codeforces.com/problemset/problem/1334/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334B. Middle Class",
    "url": "https://codeforces.com/problemset/problem/1334/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1334A. Level Statistics",
    "url": "https://codeforces.com/problemset/problem/1334/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333F. Kate and imperfection",
    "url": "https://codeforces.com/problemset/problem/1333/F",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333E. Road to 1600",
    "url": "https://codeforces.com/problemset/problem/1333/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333D. Challenges in school №41",
    "url": "https://codeforces.com/problemset/problem/1333/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "graphs",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333C. Eugene and an array",
    "url": "https://codeforces.com/problemset/problem/1333/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333B. Kind Anton",
    "url": "https://codeforces.com/problemset/problem/1333/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1333A. Little Artem",
    "url": "https://codeforces.com/problemset/problem/1333/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332G. No Monotone Triples",
    "url": "https://codeforces.com/problemset/problem/1332/G",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332F. Independent Set",
    "url": "https://codeforces.com/problemset/problem/1332/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332E. Height All the Same",
    "url": "https://codeforces.com/problemset/problem/1332/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332D. Walk on Matrix",
    "url": "https://codeforces.com/problemset/problem/1332/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332C. K-Complete Word",
    "url": "https://codeforces.com/problemset/problem/1332/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332B. Composite Coloring",
    "url": "https://codeforces.com/problemset/problem/1332/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1332A. Exercising Walk",
    "url": "https://codeforces.com/problemset/problem/1332/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331H. It's showtime",
    "url": "https://codeforces.com/problemset/problem/1331/H",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331G. Lingua Romana",
    "url": "https://codeforces.com/problemset/problem/1331/G",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331F. Elementary!",
    "url": "https://codeforces.com/problemset/problem/1331/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331E. Jordan Smiley",
    "url": "https://codeforces.com/problemset/problem/1331/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331D. Again?",
    "url": "https://codeforces.com/problemset/problem/1331/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331C. ...And after happily lived ever they",
    "url": "https://codeforces.com/problemset/problem/1331/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331B. Limericks",
    "url": "https://codeforces.com/problemset/problem/1331/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1331A. Is it rated?",
    "url": "https://codeforces.com/problemset/problem/1331/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1330B. Dreamoon Likes Permutations",
    "url": "https://codeforces.com/problemset/problem/1330/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1330A. Dreamoon and Ranking Collection",
    "url": "https://codeforces.com/problemset/problem/1330/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1329E. Dreamoon Loves AA",
    "url": "https://codeforces.com/problemset/problem/1329/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1329D. Dreamoon Likes Strings",
    "url": "https://codeforces.com/problemset/problem/1329/D",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1329C. Drazil Likes Heap",
    "url": "https://codeforces.com/problemset/problem/1329/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1329B. Dreamoon Likes Sequences",
    "url": "https://codeforces.com/problemset/problem/1329/B",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1329A. Dreamoon Likes Coloring",
    "url": "https://codeforces.com/problemset/problem/1329/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328F. Make k Equal",
    "url": "https://codeforces.com/problemset/problem/1328/F",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328E. Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1328/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328D. Carousel",
    "url": "https://codeforces.com/problemset/problem/1328/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328C. Ternary XOR",
    "url": "https://codeforces.com/problemset/problem/1328/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328B. K-th Beautiful String",
    "url": "https://codeforces.com/problemset/problem/1328/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1328A. Divisibility Problem",
    "url": "https://codeforces.com/problemset/problem/1328/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327G. Letters and Question Marks",
    "url": "https://codeforces.com/problemset/problem/1327/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327F. AND Segments",
    "url": "https://codeforces.com/problemset/problem/1327/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327E. Count The Blocks",
    "url": "https://codeforces.com/problemset/problem/1327/E",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327D. Infinite Path",
    "url": "https://codeforces.com/problemset/problem/1327/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327C. Game with Chips",
    "url": "https://codeforces.com/problemset/problem/1327/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327B. Princesses and Princes",
    "url": "https://codeforces.com/problemset/problem/1327/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1327A. Sum of Odd Integers",
    "url": "https://codeforces.com/problemset/problem/1327/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326G. Spiderweb Trees",
    "url": "https://codeforces.com/problemset/problem/1326/G",
    "difficulty": 3500,
    "tags": [
      "dp",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326F2. Wise Men (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1326/F2",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326F1. Wise Men (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1326/F1",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326E. Bombs",
    "url": "https://codeforces.com/problemset/problem/1326/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326D2. Prefix-Suffix Palindrome (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1326/D2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326D1. Prefix-Suffix Palindrome (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1326/D1",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326C. Permutation Partitions",
    "url": "https://codeforces.com/problemset/problem/1326/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326B. Maximums",
    "url": "https://codeforces.com/problemset/problem/1326/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1326A. Bad Ugly Numbers",
    "url": "https://codeforces.com/problemset/problem/1326/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325F. Ehab's Last Theorem",
    "url": "https://codeforces.com/problemset/problem/1325/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325E. Ehab's REAL Number Theory Problem",
    "url": "https://codeforces.com/problemset/problem/1325/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325D. Ehab the Xorcist",
    "url": "https://codeforces.com/problemset/problem/1325/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325C. Ehab and Path-etic MEXs",
    "url": "https://codeforces.com/problemset/problem/1325/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325B. CopyCopyCopyCopyCopy",
    "url": "https://codeforces.com/problemset/problem/1325/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1325A. EhAb AnD gCd",
    "url": "https://codeforces.com/problemset/problem/1325/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324F. Maximum White Subtree",
    "url": "https://codeforces.com/problemset/problem/1324/F",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324E. Sleeping Schedule",
    "url": "https://codeforces.com/problemset/problem/1324/E",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324D. Pair of Topics",
    "url": "https://codeforces.com/problemset/problem/1324/D",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324C. Frog Jumps",
    "url": "https://codeforces.com/problemset/problem/1324/C",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324B. Yet Another Palindrome Problem",
    "url": "https://codeforces.com/problemset/problem/1324/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1324A. Yet Another Tetris Problem",
    "url": "https://codeforces.com/problemset/problem/1324/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1323B. Count Subrectangles",
    "url": "https://codeforces.com/problemset/problem/1323/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1323A. Even Subset Sum Problem",
    "url": "https://codeforces.com/problemset/problem/1323/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322F. Assigning Fares",
    "url": "https://codeforces.com/problemset/problem/1322/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322E. Median Mountain Range",
    "url": "https://codeforces.com/problemset/problem/1322/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322D. Reality Show",
    "url": "https://codeforces.com/problemset/problem/1322/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322C. Instant Noodles",
    "url": "https://codeforces.com/problemset/problem/1322/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322B. Present",
    "url": "https://codeforces.com/problemset/problem/1322/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1322A. Unusual Competitions",
    "url": "https://codeforces.com/problemset/problem/1322/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1321C. Remove Adjacent",
    "url": "https://codeforces.com/problemset/problem/1321/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1321A. Contest for Robots",
    "url": "https://codeforces.com/problemset/problem/1321/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320F. Blocks and Sensors",
    "url": "https://codeforces.com/problemset/problem/1320/F",
    "difficulty": 3500,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320E. Treeland and Viruses",
    "url": "https://codeforces.com/problemset/problem/1320/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320D. Reachable Strings",
    "url": "https://codeforces.com/problemset/problem/1320/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320C. World of Darkraft: Battle for Azathoth",
    "url": "https://codeforces.com/problemset/problem/1320/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320B. Navigation System",
    "url": "https://codeforces.com/problemset/problem/1320/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1320A. Journey Planning",
    "url": "https://codeforces.com/problemset/problem/1320/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316F. Battalion Strength",
    "url": "https://codeforces.com/problemset/problem/1316/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316E. Team Building",
    "url": "https://codeforces.com/problemset/problem/1316/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316D. Nash Matrix",
    "url": "https://codeforces.com/problemset/problem/1316/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316C. Primitive Primes",
    "url": "https://codeforces.com/problemset/problem/1316/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316B. String Modification",
    "url": "https://codeforces.com/problemset/problem/1316/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1316A. Grade Allocation",
    "url": "https://codeforces.com/problemset/problem/1316/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1315C. Restoring Permutation",
    "url": "https://codeforces.com/problemset/problem/1315/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1315B. Homecoming",
    "url": "https://codeforces.com/problemset/problem/1315/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1315A. Dead Pixel",
    "url": "https://codeforces.com/problemset/problem/1315/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313E. Concatenation with intersection",
    "url": "https://codeforces.com/problemset/problem/1313/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313D. Happy New Year",
    "url": "https://codeforces.com/problemset/problem/1313/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313C2. Skyscrapers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1313/C2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313C1. Skyscrapers (easy version)",
    "url": "https://codeforces.com/problemset/problem/1313/C1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313B. Different Rules",
    "url": "https://codeforces.com/problemset/problem/1313/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1313A. Fast Food Restaurant",
    "url": "https://codeforces.com/problemset/problem/1313/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312G. Autocompletion",
    "url": "https://codeforces.com/problemset/problem/1312/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312F. Attack on Red Kingdom",
    "url": "https://codeforces.com/problemset/problem/1312/F",
    "difficulty": 2500,
    "tags": [
      "games",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312E. Array Shrinking",
    "url": "https://codeforces.com/problemset/problem/1312/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312D. Count the Arrays",
    "url": "https://codeforces.com/problemset/problem/1312/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312C. Adding Powers",
    "url": "https://codeforces.com/problemset/problem/1312/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312B. Bogosort",
    "url": "https://codeforces.com/problemset/problem/1312/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1312A. Two Regular Polygons",
    "url": "https://codeforces.com/problemset/problem/1312/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311F. Moving Points",
    "url": "https://codeforces.com/problemset/problem/1311/F",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311E. Construct the Binary Tree",
    "url": "https://codeforces.com/problemset/problem/1311/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311D. Three Integers",
    "url": "https://codeforces.com/problemset/problem/1311/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311C. Perform the Combo",
    "url": "https://codeforces.com/problemset/problem/1311/C",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311B. WeirdSort",
    "url": "https://codeforces.com/problemset/problem/1311/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1311A. Add Odd or Subtract Even",
    "url": "https://codeforces.com/problemset/problem/1311/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310F. Bad Cryptography",
    "url": "https://codeforces.com/problemset/problem/1310/F",
    "difficulty": 3400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310E. Strange Function",
    "url": "https://codeforces.com/problemset/problem/1310/E",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310D. Tourism",
    "url": "https://codeforces.com/problemset/problem/1310/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "graphs",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310C. Au Pont Rouge",
    "url": "https://codeforces.com/problemset/problem/1310/C",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310B. Double Elimination",
    "url": "https://codeforces.com/problemset/problem/1310/B",
    "difficulty": 2500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1310A. Recommendations",
    "url": "https://codeforces.com/problemset/problem/1310/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307G. Cow and Exercise",
    "url": "https://codeforces.com/problemset/problem/1307/G",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307F. Cow and Vacation",
    "url": "https://codeforces.com/problemset/problem/1307/F",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307E. Cow and Treats",
    "url": "https://codeforces.com/problemset/problem/1307/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307D. Cow and Fields",
    "url": "https://codeforces.com/problemset/problem/1307/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307C. Cow and Message",
    "url": "https://codeforces.com/problemset/problem/1307/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307B. Cow and Friend",
    "url": "https://codeforces.com/problemset/problem/1307/B",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1307A. Cow and Haybales",
    "url": "https://codeforces.com/problemset/problem/1307/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305H. Kuroni the Private Tutor",
    "url": "https://codeforces.com/problemset/problem/1305/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305G. Kuroni and Antihype",
    "url": "https://codeforces.com/problemset/problem/1305/G",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305F. Kuroni and the Punishment",
    "url": "https://codeforces.com/problemset/problem/1305/F",
    "difficulty": 2500,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305E. Kuroni and the Score Distribution",
    "url": "https://codeforces.com/problemset/problem/1305/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305D. Kuroni and the Celebration",
    "url": "https://codeforces.com/problemset/problem/1305/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305C. Kuroni and Impossible Calculation",
    "url": "https://codeforces.com/problemset/problem/1305/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305B. Kuroni and Simple Strings",
    "url": "https://codeforces.com/problemset/problem/1305/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1305A. Kuroni and the Gifts",
    "url": "https://codeforces.com/problemset/problem/1305/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304F2. Animal Observation (hard version)",
    "url": "https://codeforces.com/problemset/problem/1304/F2",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304F1. Animal Observation (easy version)",
    "url": "https://codeforces.com/problemset/problem/1304/F1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304E. 1-Trees and Queries",
    "url": "https://codeforces.com/problemset/problem/1304/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304D. Shortest and Longest LIS",
    "url": "https://codeforces.com/problemset/problem/1304/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304C. Air Conditioner",
    "url": "https://codeforces.com/problemset/problem/1304/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304B. Longest Palindrome",
    "url": "https://codeforces.com/problemset/problem/1304/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1304A. Two Rabbits",
    "url": "https://codeforces.com/problemset/problem/1304/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303G. Sum of Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/1303/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303F. Number of Components",
    "url": "https://codeforces.com/problemset/problem/1303/F",
    "difficulty": 2800,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303E. Erase Subsequences",
    "url": "https://codeforces.com/problemset/problem/1303/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303D. Fill The Bag",
    "url": "https://codeforces.com/problemset/problem/1303/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303C. Perfect Keyboard",
    "url": "https://codeforces.com/problemset/problem/1303/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303B. National Project",
    "url": "https://codeforces.com/problemset/problem/1303/B",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1303A. Erasing Zeroes",
    "url": "https://codeforces.com/problemset/problem/1303/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1302J. Keep talking and nobody explodes -- hard",
    "url": "https://codeforces.com/problemset/problem/1302/J",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302I. Deja vu",
    "url": "https://codeforces.com/problemset/problem/1302/I",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302H. Who needs suffix structures?",
    "url": "https://codeforces.com/problemset/problem/1302/H",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302G. Keep talking and nobody explodes -- medium",
    "url": "https://codeforces.com/problemset/problem/1302/G",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302F. Keep talking and nobody explodes -- easy",
    "url": "https://codeforces.com/problemset/problem/1302/F",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1302E. Amazing bitset",
    "url": "https://codeforces.com/problemset/problem/1302/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302D. Dijkstra",
    "url": "https://codeforces.com/problemset/problem/1302/D",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1302C. Segment tree or Fenwick?",
    "url": "https://codeforces.com/problemset/problem/1302/C",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1302B. DAG",
    "url": "https://codeforces.com/problemset/problem/1302/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1302A. Nash equilibrium",
    "url": "https://codeforces.com/problemset/problem/1302/A",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1301F. Super Jaber",
    "url": "https://codeforces.com/problemset/problem/1301/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1301E. Nanosoft",
    "url": "https://codeforces.com/problemset/problem/1301/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1301D. Time to Run",
    "url": "https://codeforces.com/problemset/problem/1301/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1301C. Ayoub's function",
    "url": "https://codeforces.com/problemset/problem/1301/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1301B. Motarack's Birthday",
    "url": "https://codeforces.com/problemset/problem/1301/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1301A. Three Strings",
    "url": "https://codeforces.com/problemset/problem/1301/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1300B. Assigning to Classes",
    "url": "https://codeforces.com/problemset/problem/1300/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1300A. Non-zero",
    "url": "https://codeforces.com/problemset/problem/1300/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1299E. So Mean",
    "url": "https://codeforces.com/problemset/problem/1299/E",
    "difficulty": 3400,
    "tags": [
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1299D. Around the World",
    "url": "https://codeforces.com/problemset/problem/1299/D",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1299C. Water Balance",
    "url": "https://codeforces.com/problemset/problem/1299/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1299B. Aerodynamic",
    "url": "https://codeforces.com/problemset/problem/1299/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1299A. Anu Has a Function",
    "url": "https://codeforces.com/problemset/problem/1299/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297I. Falling Blocks",
    "url": "https://codeforces.com/problemset/problem/1297/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297H. Paint the String",
    "url": "https://codeforces.com/problemset/problem/1297/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297G. M-numbers",
    "url": "https://codeforces.com/problemset/problem/1297/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297F. Movie Fan",
    "url": "https://codeforces.com/problemset/problem/1297/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297E. Modernization of Treeland",
    "url": "https://codeforces.com/problemset/problem/1297/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297D. Bonus Distribution ",
    "url": "https://codeforces.com/problemset/problem/1297/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297C. Dream Team",
    "url": "https://codeforces.com/problemset/problem/1297/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297B. Cartoons",
    "url": "https://codeforces.com/problemset/problem/1297/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1297A. Likes Display",
    "url": "https://codeforces.com/problemset/problem/1297/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296F. Berland Beauty",
    "url": "https://codeforces.com/problemset/problem/1296/F",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296E2. String Coloring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1296/E2",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296E1. String Coloring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1296/E1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296D. Fight with Monsters",
    "url": "https://codeforces.com/problemset/problem/1296/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296C. Yet Another Walking Robot",
    "url": "https://codeforces.com/problemset/problem/1296/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296B. Food Buying",
    "url": "https://codeforces.com/problemset/problem/1296/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1296A. Array with Odd Sum",
    "url": "https://codeforces.com/problemset/problem/1296/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295F. Good Contest",
    "url": "https://codeforces.com/problemset/problem/1295/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295E. Permutation Separation",
    "url": "https://codeforces.com/problemset/problem/1295/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295D. Same GCDs",
    "url": "https://codeforces.com/problemset/problem/1295/D",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295C. Obtain The String",
    "url": "https://codeforces.com/problemset/problem/1295/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295B. Infinite Prefixes",
    "url": "https://codeforces.com/problemset/problem/1295/B",
    "difficulty": 1700,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1295A. Display The Number",
    "url": "https://codeforces.com/problemset/problem/1295/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294F. Three Paths on a Tree",
    "url": "https://codeforces.com/problemset/problem/1294/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294E. Obtain a Permutation",
    "url": "https://codeforces.com/problemset/problem/1294/E",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294D. MEX maximizing",
    "url": "https://codeforces.com/problemset/problem/1294/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294C. Product of Three Numbers",
    "url": "https://codeforces.com/problemset/problem/1294/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294B. Collecting Packages",
    "url": "https://codeforces.com/problemset/problem/1294/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1294A. Collecting Coins",
    "url": "https://codeforces.com/problemset/problem/1294/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1293B. JOE is on TV!",
    "url": "https://codeforces.com/problemset/problem/1293/B",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1293A. ConneR and the A.R.C. Markland-N",
    "url": "https://codeforces.com/problemset/problem/1293/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292F. Nora's Toy Boxes",
    "url": "https://codeforces.com/problemset/problem/1292/F",
    "difficulty": 3500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292E. Rin and The Unknown Flower",
    "url": "https://codeforces.com/problemset/problem/1292/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292D. Chaotic V.",
    "url": "https://codeforces.com/problemset/problem/1292/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292C. Xenon's Attack on the Gangs",
    "url": "https://codeforces.com/problemset/problem/1292/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292B. Aroma's Search",
    "url": "https://codeforces.com/problemset/problem/1292/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1292A. NEKO's Maze Game",
    "url": "https://codeforces.com/problemset/problem/1292/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1291F. Coffee Varieties (easy version)",
    "url": "https://codeforces.com/problemset/problem/1291/F",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1291B. Array Sharpening",
    "url": "https://codeforces.com/problemset/problem/1291/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1291A. Even But Not Even",
    "url": "https://codeforces.com/problemset/problem/1291/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290F. Making Shapes",
    "url": "https://codeforces.com/problemset/problem/1290/F",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290E. Cartesian Tree ",
    "url": "https://codeforces.com/problemset/problem/1290/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290D. Coffee Varieties (hard version)",
    "url": "https://codeforces.com/problemset/problem/1290/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290C. Prefix Enlightenment",
    "url": "https://codeforces.com/problemset/problem/1290/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290B. Irreducible Anagrams",
    "url": "https://codeforces.com/problemset/problem/1290/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1290A. Mind Control",
    "url": "https://codeforces.com/problemset/problem/1290/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288F. Red-Blue Graph",
    "url": "https://codeforces.com/problemset/problem/1288/F",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288E. Messenger Simulator",
    "url": "https://codeforces.com/problemset/problem/1288/E",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288D. Minimax Problem",
    "url": "https://codeforces.com/problemset/problem/1288/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288C. Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1288/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288B. Yet Another Meme Problem",
    "url": "https://codeforces.com/problemset/problem/1288/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1288A. Deadline",
    "url": "https://codeforces.com/problemset/problem/1288/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1287B. Hyperset",
    "url": "https://codeforces.com/problemset/problem/1287/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1287A. Angry Students",
    "url": "https://codeforces.com/problemset/problem/1287/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286F. Harry The Potter",
    "url": "https://codeforces.com/problemset/problem/1286/F",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "fft",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286E. Fedya the Potter Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1286/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286D. LCC",
    "url": "https://codeforces.com/problemset/problem/1286/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286C2. Madhouse (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1286/C2",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286C1. Madhouse (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1286/C1",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286B. Numbers on Tree",
    "url": "https://codeforces.com/problemset/problem/1286/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1286A. Garland",
    "url": "https://codeforces.com/problemset/problem/1286/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285F. Classical?",
    "url": "https://codeforces.com/problemset/problem/1285/F",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285E. Delete a Segment",
    "url": "https://codeforces.com/problemset/problem/1285/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285D. Dr. Evil Underscores",
    "url": "https://codeforces.com/problemset/problem/1285/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285C. Fadi and LCM",
    "url": "https://codeforces.com/problemset/problem/1285/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285B. Just Eat It!",
    "url": "https://codeforces.com/problemset/problem/1285/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1285A. Mezo Playing Zoma",
    "url": "https://codeforces.com/problemset/problem/1285/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284G. Seollal",
    "url": "https://codeforces.com/problemset/problem/1284/G",
    "difficulty": 3300,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284F. New Year and Social Network",
    "url": "https://codeforces.com/problemset/problem/1284/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "graph matchings",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284E. New Year and Castle Construction",
    "url": "https://codeforces.com/problemset/problem/1284/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284D. New Year and Conference",
    "url": "https://codeforces.com/problemset/problem/1284/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284C. New Year and Permutation",
    "url": "https://codeforces.com/problemset/problem/1284/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284B. New Year and Ascent Sequence",
    "url": "https://codeforces.com/problemset/problem/1284/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1284A. New Year and Naming",
    "url": "https://codeforces.com/problemset/problem/1284/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283F. DIY Garland",
    "url": "https://codeforces.com/problemset/problem/1283/F",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283E. New Year Parties",
    "url": "https://codeforces.com/problemset/problem/1283/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283D. Christmas Trees",
    "url": "https://codeforces.com/problemset/problem/1283/D",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283C. Friends and Gifts",
    "url": "https://codeforces.com/problemset/problem/1283/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283B. Candies Division",
    "url": "https://codeforces.com/problemset/problem/1283/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1283A. Minutes Before the New Year",
    "url": "https://codeforces.com/problemset/problem/1283/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282E. The Cake Is a Lie",
    "url": "https://codeforces.com/problemset/problem/1282/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282D. Enchanted Artifact",
    "url": "https://codeforces.com/problemset/problem/1282/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "interactive",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282C. Petya and Exam",
    "url": "https://codeforces.com/problemset/problem/1282/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282B2. K for the Price of One (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1282/B2",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282B1. K for the Price of One (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1282/B1",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1282A. Temporarily unavailable",
    "url": "https://codeforces.com/problemset/problem/1282/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1281B. Azamon Web Services",
    "url": "https://codeforces.com/problemset/problem/1281/B",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1281A. Suffix Three",
    "url": "https://codeforces.com/problemset/problem/1281/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280F. Intergalactic Sliding Puzzle",
    "url": "https://codeforces.com/problemset/problem/1280/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280E. Kirchhoff's Current Loss",
    "url": "https://codeforces.com/problemset/problem/1280/E",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280D. Miss Punyverse",
    "url": "https://codeforces.com/problemset/problem/1280/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280C. Jeremy Bearimy",
    "url": "https://codeforces.com/problemset/problem/1280/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280B. Beingawesomeism",
    "url": "https://codeforces.com/problemset/problem/1280/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1280A. Cut and Paste",
    "url": "https://codeforces.com/problemset/problem/1280/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279F. New Year and Handle Change",
    "url": "https://codeforces.com/problemset/problem/1279/F",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279E. New Year Permutations",
    "url": "https://codeforces.com/problemset/problem/1279/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279D. Santa's Bot",
    "url": "https://codeforces.com/problemset/problem/1279/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279C. Stack of Presents",
    "url": "https://codeforces.com/problemset/problem/1279/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279B. Verse For Santa",
    "url": "https://codeforces.com/problemset/problem/1279/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1279A. New Year Garland",
    "url": "https://codeforces.com/problemset/problem/1279/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278F. Cards",
    "url": "https://codeforces.com/problemset/problem/1278/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278E. Tests for problem D",
    "url": "https://codeforces.com/problemset/problem/1278/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278D. Segment Tree",
    "url": "https://codeforces.com/problemset/problem/1278/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278C. Berry Jam",
    "url": "https://codeforces.com/problemset/problem/1278/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278B. A and B",
    "url": "https://codeforces.com/problemset/problem/1278/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1278A. Shuffle Hashing",
    "url": "https://codeforces.com/problemset/problem/1278/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1277D. Let's Play the Words?",
    "url": "https://codeforces.com/problemset/problem/1277/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1277B. Make Them Odd",
    "url": "https://codeforces.com/problemset/problem/1277/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1277A. Happy Birthday, Polycarp!",
    "url": "https://codeforces.com/problemset/problem/1277/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276F. Asterisk Substrings",
    "url": "https://codeforces.com/problemset/problem/1276/F",
    "difficulty": 3400,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276E. Four Stones",
    "url": "https://codeforces.com/problemset/problem/1276/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276D. Tree Elimination",
    "url": "https://codeforces.com/problemset/problem/1276/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276C. Beautiful Rectangle",
    "url": "https://codeforces.com/problemset/problem/1276/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276B. Two Fairs",
    "url": "https://codeforces.com/problemset/problem/1276/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1276A. As Simple as One and Two",
    "url": "https://codeforces.com/problemset/problem/1276/A",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275F. Шардирование постов",
    "url": "https://codeforces.com/problemset/problem/1275/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275E3. Контрольная сумма",
    "url": "https://codeforces.com/problemset/problem/1275/E3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275E2. Контрольная сумма",
    "url": "https://codeforces.com/problemset/problem/1275/E2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275E1. Контрольная сумма",
    "url": "https://codeforces.com/problemset/problem/1275/E1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275D. Storage2",
    "url": "https://codeforces.com/problemset/problem/1275/D",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275C. #define Задача B ...",
    "url": "https://codeforces.com/problemset/problem/1275/C",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275B. Code Review",
    "url": "https://codeforces.com/problemset/problem/1275/B",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1275A. Скрытый друг",
    "url": "https://codeforces.com/problemset/problem/1275/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272F. Two Bracket Sequences",
    "url": "https://codeforces.com/problemset/problem/1272/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272E. Nearest Opposite Parity",
    "url": "https://codeforces.com/problemset/problem/1272/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272D. Remove One Element",
    "url": "https://codeforces.com/problemset/problem/1272/D",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272C. Yet Another Broken Keyboard",
    "url": "https://codeforces.com/problemset/problem/1272/C",
    "difficulty": 1200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272B. Snow Walking Robot",
    "url": "https://codeforces.com/problemset/problem/1272/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1272A. Three Friends",
    "url": "https://codeforces.com/problemset/problem/1272/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271F. Divide The Students",
    "url": "https://codeforces.com/problemset/problem/1271/F",
    "difficulty": 2700,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271E. Common Number",
    "url": "https://codeforces.com/problemset/problem/1271/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271D. Portals",
    "url": "https://codeforces.com/problemset/problem/1271/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271C. Shawarma Tent",
    "url": "https://codeforces.com/problemset/problem/1271/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271B. Blocks",
    "url": "https://codeforces.com/problemset/problem/1271/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1271A. Suits",
    "url": "https://codeforces.com/problemset/problem/1271/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270I. Xor on Figures",
    "url": "https://codeforces.com/problemset/problem/1270/I",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270H. Number of Components",
    "url": "https://codeforces.com/problemset/problem/1270/H",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270G. Subset with Zero Sum",
    "url": "https://codeforces.com/problemset/problem/1270/G",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270F. Awesome Substrings",
    "url": "https://codeforces.com/problemset/problem/1270/F",
    "difficulty": 2600,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270E. Divide Points",
    "url": "https://codeforces.com/problemset/problem/1270/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270D. Strange Device",
    "url": "https://codeforces.com/problemset/problem/1270/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270C. Make Good",
    "url": "https://codeforces.com/problemset/problem/1270/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270B. Interesting Subarray",
    "url": "https://codeforces.com/problemset/problem/1270/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1270A. Card Game",
    "url": "https://codeforces.com/problemset/problem/1270/A",
    "difficulty": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1269B. Modulo Equality",
    "url": "https://codeforces.com/problemset/problem/1269/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1269A. Equation",
    "url": "https://codeforces.com/problemset/problem/1269/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1268E. Happy Cactus",
    "url": "https://codeforces.com/problemset/problem/1268/E",
    "difficulty": 3400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1268D. Invertation in Tournament",
    "url": "https://codeforces.com/problemset/problem/1268/D",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1268C. K Integers",
    "url": "https://codeforces.com/problemset/problem/1268/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1268B. Domino for Young",
    "url": "https://codeforces.com/problemset/problem/1268/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1268A. Long Beautiful Integer",
    "url": "https://codeforces.com/problemset/problem/1268/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267L. Lexicography",
    "url": "https://codeforces.com/problemset/problem/1267/L",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267K. Key Storage",
    "url": "https://codeforces.com/problemset/problem/1267/K",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267J. Just Arrange the Icons",
    "url": "https://codeforces.com/problemset/problem/1267/J",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267I. Intriguing Selection",
    "url": "https://codeforces.com/problemset/problem/1267/I",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267H. Help BerLine",
    "url": "https://codeforces.com/problemset/problem/1267/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267G. Game Relics",
    "url": "https://codeforces.com/problemset/problem/1267/G",
    "difficulty": 3000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267F. Foolprüf Security",
    "url": "https://codeforces.com/problemset/problem/1267/F",
    "difficulty": 2600,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267E. Elections",
    "url": "https://codeforces.com/problemset/problem/1267/E",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267D. DevOps Best Practices",
    "url": "https://codeforces.com/problemset/problem/1267/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267C. Cactus Revenge",
    "url": "https://codeforces.com/problemset/problem/1267/C",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1267B. Balls of Buma",
    "url": "https://codeforces.com/problemset/problem/1267/B",
    "difficulty": 900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1267A. Apprentice Learning Trajectory",
    "url": "https://codeforces.com/problemset/problem/1267/A",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1266H. Red-Blue Graph",
    "url": "https://codeforces.com/problemset/problem/1266/H",
    "difficulty": 3400,
    "tags": [
      "dp",
      "graphs",
      "math",
      "matrices",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266G. Permutation Concatenation",
    "url": "https://codeforces.com/problemset/problem/1266/G",
    "difficulty": 3300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266F. Almost Same Distance",
    "url": "https://codeforces.com/problemset/problem/1266/F",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266E. Spaceship Solitaire",
    "url": "https://codeforces.com/problemset/problem/1266/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266D. Decreasing Debts",
    "url": "https://codeforces.com/problemset/problem/1266/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266C. Diverse Matrix",
    "url": "https://codeforces.com/problemset/problem/1266/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266B. Dice Tower",
    "url": "https://codeforces.com/problemset/problem/1266/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1266A. Competitive Programmer",
    "url": "https://codeforces.com/problemset/problem/1266/A",
    "difficulty": 1000,
    "tags": [
      "chinese remainder theorem",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1265E. Beautiful Mirrors",
    "url": "https://codeforces.com/problemset/problem/1265/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1265B. Beautiful Numbers",
    "url": "https://codeforces.com/problemset/problem/1265/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1265A. Beautiful String",
    "url": "https://codeforces.com/problemset/problem/1265/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264F. Beautiful Fibonacci Problem",
    "url": "https://codeforces.com/problemset/problem/1264/F",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264E. Beautiful League",
    "url": "https://codeforces.com/problemset/problem/1264/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264D2. Beautiful Bracket Sequence (hard version)",
    "url": "https://codeforces.com/problemset/problem/1264/D2",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264D1. Beautiful Bracket Sequence (easy version)",
    "url": "https://codeforces.com/problemset/problem/1264/D1",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264C. Beautiful Mirrors with queries",
    "url": "https://codeforces.com/problemset/problem/1264/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264B. Beautiful Sequence",
    "url": "https://codeforces.com/problemset/problem/1264/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1264A. Beautiful Regional Contest",
    "url": "https://codeforces.com/problemset/problem/1264/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263F. Economic Difficulties",
    "url": "https://codeforces.com/problemset/problem/1263/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263E. Editor",
    "url": "https://codeforces.com/problemset/problem/1263/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263D. Secret Passwords",
    "url": "https://codeforces.com/problemset/problem/1263/D",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263C. Everyone is a Winner!",
    "url": "https://codeforces.com/problemset/problem/1263/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263B. PIN Codes",
    "url": "https://codeforces.com/problemset/problem/1263/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1263A. Sweet Problem",
    "url": "https://codeforces.com/problemset/problem/1263/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1261F. Xor-Set",
    "url": "https://codeforces.com/problemset/problem/1261/F",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260F. Colored Tree",
    "url": "https://codeforces.com/problemset/problem/1260/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260E. Tournament",
    "url": "https://codeforces.com/problemset/problem/1260/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260D. A Game with Traps",
    "url": "https://codeforces.com/problemset/problem/1260/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260C. Infinite Fence",
    "url": "https://codeforces.com/problemset/problem/1260/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260B. Obtain Two Zeroes",
    "url": "https://codeforces.com/problemset/problem/1260/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1260A. Heating",
    "url": "https://codeforces.com/problemset/problem/1260/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257G. Divisor Set",
    "url": "https://codeforces.com/problemset/problem/1257/G",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "fft",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257F. Make Them Similar",
    "url": "https://codeforces.com/problemset/problem/1257/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257E. The Contest",
    "url": "https://codeforces.com/problemset/problem/1257/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257D. Yet Another Monster Killing Problem",
    "url": "https://codeforces.com/problemset/problem/1257/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257C. Dominated Subarray",
    "url": "https://codeforces.com/problemset/problem/1257/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257B. Magic Stick",
    "url": "https://codeforces.com/problemset/problem/1257/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1257A. Two Rival Students",
    "url": "https://codeforces.com/problemset/problem/1257/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256F. Equalizing Two Strings",
    "url": "https://codeforces.com/problemset/problem/1256/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256E. Yet Another Division Into Teams",
    "url": "https://codeforces.com/problemset/problem/1256/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256D. Binary String Minimizing",
    "url": "https://codeforces.com/problemset/problem/1256/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256C. Platforms Jumping",
    "url": "https://codeforces.com/problemset/problem/1256/C",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256B. Minimize the Permutation",
    "url": "https://codeforces.com/problemset/problem/1256/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1256A. Payment Without Change",
    "url": "https://codeforces.com/problemset/problem/1256/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1255C. League of Leesins",
    "url": "https://codeforces.com/problemset/problem/1255/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1255B. Fridge Lockers",
    "url": "https://codeforces.com/problemset/problem/1255/B",
    "difficulty": 1100,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1255A. Changing Volume",
    "url": "https://codeforces.com/problemset/problem/1255/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254E. Send Tree to Charlie",
    "url": "https://codeforces.com/problemset/problem/1254/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254D. Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1254/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254C. Point Ordering",
    "url": "https://codeforces.com/problemset/problem/1254/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254B2. Send Boxes to Alice (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B2",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254B1. Send Boxes to Alice (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B1",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1254A. Feeding Chicken",
    "url": "https://codeforces.com/problemset/problem/1254/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253F. Cheap Robot",
    "url": "https://codeforces.com/problemset/problem/1253/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253E. Antenna Coverage",
    "url": "https://codeforces.com/problemset/problem/1253/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253D. Harmonious Graph",
    "url": "https://codeforces.com/problemset/problem/1253/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253C. Sweets Eating",
    "url": "https://codeforces.com/problemset/problem/1253/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253B. Silly Mistake",
    "url": "https://codeforces.com/problemset/problem/1253/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1253A. Single Push",
    "url": "https://codeforces.com/problemset/problem/1253/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252L. Road Construction",
    "url": "https://codeforces.com/problemset/problem/1252/L",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252K. Addition Robot",
    "url": "https://codeforces.com/problemset/problem/1252/K",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252J. Tiling Terrace",
    "url": "https://codeforces.com/problemset/problem/1252/J",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252I. Mission Possible",
    "url": "https://codeforces.com/problemset/problem/1252/I",
    "difficulty": 3000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1252H. Twin Buildings",
    "url": "https://codeforces.com/problemset/problem/1252/H",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252G. Performance Review",
    "url": "https://codeforces.com/problemset/problem/1252/G",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252F. Regular Forestation",
    "url": "https://codeforces.com/problemset/problem/1252/F",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252E. Songwriter",
    "url": "https://codeforces.com/problemset/problem/1252/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252D. Find String in a Grid",
    "url": "https://codeforces.com/problemset/problem/1252/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252C. Even Path",
    "url": "https://codeforces.com/problemset/problem/1252/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252B. Cleaning Robots",
    "url": "https://codeforces.com/problemset/problem/1252/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1252A. Copying Homework",
    "url": "https://codeforces.com/problemset/problem/1252/A",
    "difficulty": 1000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1251F. Red-White Fence",
    "url": "https://codeforces.com/problemset/problem/1251/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251E2. Voting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1251/E2",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251E1. Voting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1251/E1",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251D. Salary Changing",
    "url": "https://codeforces.com/problemset/problem/1251/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251C. Minimize The Integer",
    "url": "https://codeforces.com/problemset/problem/1251/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251B. Binary Palindromes",
    "url": "https://codeforces.com/problemset/problem/1251/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1251A. Broken Keyboard",
    "url": "https://codeforces.com/problemset/problem/1251/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250N. Wires",
    "url": "https://codeforces.com/problemset/problem/1250/N",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250M. SmartGarden",
    "url": "https://codeforces.com/problemset/problem/1250/M",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250L. Divide The Students",
    "url": "https://codeforces.com/problemset/problem/1250/L",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250K. Projectors",
    "url": "https://codeforces.com/problemset/problem/1250/K",
    "difficulty": 3100,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250J. The Parade",
    "url": "https://codeforces.com/problemset/problem/1250/J",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250I. Show Must Go On",
    "url": "https://codeforces.com/problemset/problem/1250/I",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250H. Happy Birthday",
    "url": "https://codeforces.com/problemset/problem/1250/H",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250G. Discarding Game",
    "url": "https://codeforces.com/problemset/problem/1250/G",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250F. Data Center",
    "url": "https://codeforces.com/problemset/problem/1250/F",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250E. The Coronation",
    "url": "https://codeforces.com/problemset/problem/1250/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250D. Conference Problem",
    "url": "https://codeforces.com/problemset/problem/1250/D",
    "difficulty": 3000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250C. Trip to Saint Petersburg",
    "url": "https://codeforces.com/problemset/problem/1250/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250B. The Feast and the Bus",
    "url": "https://codeforces.com/problemset/problem/1250/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1250A. Berstagram",
    "url": "https://codeforces.com/problemset/problem/1250/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249F. Maximum Weight Subset",
    "url": "https://codeforces.com/problemset/problem/1249/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249E. By Elevator or Stairs?",
    "url": "https://codeforces.com/problemset/problem/1249/E",
    "difficulty": 1700,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249D2. Too Many Segments (hard version)",
    "url": "https://codeforces.com/problemset/problem/1249/D2",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249D1. Too Many Segments (easy version)",
    "url": "https://codeforces.com/problemset/problem/1249/D1",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249C2. Good Numbers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1249/C2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249C1. Good Numbers (easy version)",
    "url": "https://codeforces.com/problemset/problem/1249/C1",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249B2. Books Exchange (hard version)",
    "url": "https://codeforces.com/problemset/problem/1249/B2",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249B1. Books Exchange (easy version)",
    "url": "https://codeforces.com/problemset/problem/1249/B1",
    "difficulty": 1000,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1249A. Yet Another Dividing into Teams",
    "url": "https://codeforces.com/problemset/problem/1249/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1248D1. The World Is Just a Programming Task (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1248/D1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1248B. Grow The Tree",
    "url": "https://codeforces.com/problemset/problem/1248/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1248A. Integer Points",
    "url": "https://codeforces.com/problemset/problem/1248/A",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1246F. Cursor Distance",
    "url": "https://codeforces.com/problemset/problem/1246/F",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1245F. Daniel and Spring Cleaning",
    "url": "https://codeforces.com/problemset/problem/1245/F",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1245E. Hyakugoku and Ladders",
    "url": "https://codeforces.com/problemset/problem/1245/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1245D. Shichikuji and Power Grid",
    "url": "https://codeforces.com/problemset/problem/1245/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1245C. Constanze's Machine",
    "url": "https://codeforces.com/problemset/problem/1245/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1245B. Restricted RPS",
    "url": "https://codeforces.com/problemset/problem/1245/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1245A. Good ol' Numbers Coloring",
    "url": "https://codeforces.com/problemset/problem/1245/A",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244G. Running in Pairs",
    "url": "https://codeforces.com/problemset/problem/1244/G",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244F. Chips",
    "url": "https://codeforces.com/problemset/problem/1244/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244E. Minimizing Difference",
    "url": "https://codeforces.com/problemset/problem/1244/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244D. Paint the Tree",
    "url": "https://codeforces.com/problemset/problem/1244/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244C. The Football Season",
    "url": "https://codeforces.com/problemset/problem/1244/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244B. Rooms and Staircases",
    "url": "https://codeforces.com/problemset/problem/1244/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1244A. Pens and Pencils",
    "url": "https://codeforces.com/problemset/problem/1244/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1243B2. Character Swap (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1243/B2",
    "difficulty": 1600,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1243B1. Character Swap (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1243/B1",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1243A. Maximum Square",
    "url": "https://codeforces.com/problemset/problem/1243/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1242E. Planar Perimeter",
    "url": "https://codeforces.com/problemset/problem/1242/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1242D. Number Discovery",
    "url": "https://codeforces.com/problemset/problem/1242/D",
    "difficulty": 3400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1242C. Sum Balance",
    "url": "https://codeforces.com/problemset/problem/1242/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1242B. 0-1 MST",
    "url": "https://codeforces.com/problemset/problem/1242/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1242A. Tile Painting",
    "url": "https://codeforces.com/problemset/problem/1242/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1240F. Football",
    "url": "https://codeforces.com/problemset/problem/1240/F",
    "difficulty": 3100,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239F. Swiper, no swiping!",
    "url": "https://codeforces.com/problemset/problem/1239/F",
    "difficulty": 3400,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239E. Turtle",
    "url": "https://codeforces.com/problemset/problem/1239/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239D. Catowice City",
    "url": "https://codeforces.com/problemset/problem/1239/D",
    "difficulty": 2400,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239C. Queue in the Train",
    "url": "https://codeforces.com/problemset/problem/1239/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239B. The World Is Just a Programming Task (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1239/B",
    "difficulty": 2500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1239A. Ivan the Fool and the Probability Theory",
    "url": "https://codeforces.com/problemset/problem/1239/A",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238G. Adilbek and the Watering System",
    "url": "https://codeforces.com/problemset/problem/1238/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238F. The Maximum Subtree",
    "url": "https://codeforces.com/problemset/problem/1238/F",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238E. Keyboard Purchase",
    "url": "https://codeforces.com/problemset/problem/1238/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238D. AB-string",
    "url": "https://codeforces.com/problemset/problem/1238/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238C. Standard Free2play",
    "url": "https://codeforces.com/problemset/problem/1238/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238B. Kill `Em All",
    "url": "https://codeforces.com/problemset/problem/1238/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1238A. Prime Subtraction",
    "url": "https://codeforces.com/problemset/problem/1238/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237H. Balanced Reversals",
    "url": "https://codeforces.com/problemset/problem/1237/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237G. Balanced Distribution",
    "url": "https://codeforces.com/problemset/problem/1237/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237F. Balanced Domino Placements",
    "url": "https://codeforces.com/problemset/problem/1237/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237E. Balanced Binary Search Trees",
    "url": "https://codeforces.com/problemset/problem/1237/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237D. Balanced Playlist",
    "url": "https://codeforces.com/problemset/problem/1237/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237C2. Balanced Removals (Harder)",
    "url": "https://codeforces.com/problemset/problem/1237/C2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237C1. Balanced Removals (Easier)",
    "url": "https://codeforces.com/problemset/problem/1237/C1",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237B. Balanced Tunnel",
    "url": "https://codeforces.com/problemset/problem/1237/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1237A. Balanced Rating Changes",
    "url": "https://codeforces.com/problemset/problem/1237/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236F. Alice and the Cactus",
    "url": "https://codeforces.com/problemset/problem/1236/F",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236E. Alice and the Unfair Game",
    "url": "https://codeforces.com/problemset/problem/1236/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236D. Alice and the Doll",
    "url": "https://codeforces.com/problemset/problem/1236/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236C. Labs",
    "url": "https://codeforces.com/problemset/problem/1236/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236B. Alice and the List of Presents",
    "url": "https://codeforces.com/problemset/problem/1236/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1236A. Stones",
    "url": "https://codeforces.com/problemset/problem/1236/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234F. Yet Another Substring Reverse",
    "url": "https://codeforces.com/problemset/problem/1234/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234E. Special Permutations",
    "url": "https://codeforces.com/problemset/problem/1234/E",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234D. Distinct Characters Queries",
    "url": "https://codeforces.com/problemset/problem/1234/D",
    "difficulty": 1600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234C. Pipes",
    "url": "https://codeforces.com/problemset/problem/1234/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234B2. Social Network (hard version)",
    "url": "https://codeforces.com/problemset/problem/1234/B2",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234B1. Social Network (easy version)",
    "url": "https://codeforces.com/problemset/problem/1234/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1234A. Equalize Prices Again",
    "url": "https://codeforces.com/problemset/problem/1234/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1231E. Middle-Out",
    "url": "https://codeforces.com/problemset/problem/1231/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1231C. Increasing Matrix",
    "url": "https://codeforces.com/problemset/problem/1231/C",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1230B. Ania and Minimizing",
    "url": "https://codeforces.com/problemset/problem/1230/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1230A. Dawid and Bags of Candies",
    "url": "https://codeforces.com/problemset/problem/1230/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228F. One Node is Gone",
    "url": "https://codeforces.com/problemset/problem/1228/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228E. Another Filling the Grid",
    "url": "https://codeforces.com/problemset/problem/1228/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228D. Complete Tripartite",
    "url": "https://codeforces.com/problemset/problem/1228/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228C. Primes and Multiplication",
    "url": "https://codeforces.com/problemset/problem/1228/C",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228B. Filling the Grid",
    "url": "https://codeforces.com/problemset/problem/1228/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1228A. Distinct Digits",
    "url": "https://codeforces.com/problemset/problem/1228/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227G. Not Same",
    "url": "https://codeforces.com/problemset/problem/1227/G",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227F2. Wrong Answer on test 233 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1227/F2",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227F1. Wrong Answer on test 233 (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1227/F1",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227E. Arson In Berland Forest",
    "url": "https://codeforces.com/problemset/problem/1227/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "graphs",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227D2. Optimal Subsequences (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1227/D2",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227D1. Optimal Subsequences (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1227/D1",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227C. Messy",
    "url": "https://codeforces.com/problemset/problem/1227/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227B. Box",
    "url": "https://codeforces.com/problemset/problem/1227/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1227A. Math Problem",
    "url": "https://codeforces.com/problemset/problem/1227/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225G. To Make 1",
    "url": "https://codeforces.com/problemset/problem/1225/G",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225F. Tree Factory",
    "url": "https://codeforces.com/problemset/problem/1225/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225E. Rock Is Push",
    "url": "https://codeforces.com/problemset/problem/1225/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225D. Power Products",
    "url": "https://codeforces.com/problemset/problem/1225/D",
    "difficulty": 1800,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225C. p-binary",
    "url": "https://codeforces.com/problemset/problem/1225/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225B2. TV Subscriptions (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1225/B2",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225B1. TV Subscriptions (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1225/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1225A. Forgetting Things",
    "url": "https://codeforces.com/problemset/problem/1225/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223G. Wooden Raft",
    "url": "https://codeforces.com/problemset/problem/1223/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223F. Stack Exterminable Arrays",
    "url": "https://codeforces.com/problemset/problem/1223/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223E. Paint the Tree",
    "url": "https://codeforces.com/problemset/problem/1223/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223D. Sequence Sorting",
    "url": "https://codeforces.com/problemset/problem/1223/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223C. Save the Nature",
    "url": "https://codeforces.com/problemset/problem/1223/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223B. Strings Equalization",
    "url": "https://codeforces.com/problemset/problem/1223/B",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1223A. CME",
    "url": "https://codeforces.com/problemset/problem/1223/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221G. Graph And Numbers",
    "url": "https://codeforces.com/problemset/problem/1221/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221F. Choose a Square",
    "url": "https://codeforces.com/problemset/problem/1221/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221E. Game With String",
    "url": "https://codeforces.com/problemset/problem/1221/E",
    "difficulty": 2500,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221D. Make The Fence Great Again",
    "url": "https://codeforces.com/problemset/problem/1221/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221C. Perfect Team",
    "url": "https://codeforces.com/problemset/problem/1221/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221B. Knights",
    "url": "https://codeforces.com/problemset/problem/1221/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1221A. 2048 Game",
    "url": "https://codeforces.com/problemset/problem/1221/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220G. Geolocation",
    "url": "https://codeforces.com/problemset/problem/1220/G",
    "difficulty": 3400,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220F. Gardener Alex",
    "url": "https://codeforces.com/problemset/problem/1220/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220E. Tourism",
    "url": "https://codeforces.com/problemset/problem/1220/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220D. Alex and Julian",
    "url": "https://codeforces.com/problemset/problem/1220/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220C. Substring Game in the Lesson",
    "url": "https://codeforces.com/problemset/problem/1220/C",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220B. Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/1220/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1220A. Cards",
    "url": "https://codeforces.com/problemset/problem/1220/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1219G. Harvester",
    "url": "https://codeforces.com/problemset/problem/1219/G",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1219C. Periodic integer number",
    "url": "https://codeforces.com/problemset/problem/1219/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218I. The Light Square",
    "url": "https://codeforces.com/problemset/problem/1218/I",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218H. Function Composition",
    "url": "https://codeforces.com/problemset/problem/1218/H",
    "difficulty": 2900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218G. Alpha planetary system",
    "url": "https://codeforces.com/problemset/problem/1218/G",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218F. Workout plan",
    "url": "https://codeforces.com/problemset/problem/1218/F",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218E. Product Tuples",
    "url": "https://codeforces.com/problemset/problem/1218/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218D. Xor Spanning Tree",
    "url": "https://codeforces.com/problemset/problem/1218/D",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "fft",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218C. Jumping Transformers",
    "url": "https://codeforces.com/problemset/problem/1218/C",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218B. Guarding warehouses",
    "url": "https://codeforces.com/problemset/problem/1218/B",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1218A. BubbleReactor",
    "url": "https://codeforces.com/problemset/problem/1218/A",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217F. Forced Online Queries Problem",
    "url": "https://codeforces.com/problemset/problem/1217/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217E. Sum Queries?",
    "url": "https://codeforces.com/problemset/problem/1217/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217D. Coloring Edges",
    "url": "https://codeforces.com/problemset/problem/1217/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217C. The Number Of Good Substrings",
    "url": "https://codeforces.com/problemset/problem/1217/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217B. Zmei Gorynich",
    "url": "https://codeforces.com/problemset/problem/1217/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1217A. Creating a Character",
    "url": "https://codeforces.com/problemset/problem/1217/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216F. Wi-Fi",
    "url": "https://codeforces.com/problemset/problem/1216/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216E2. Numerical Sequence (hard version)",
    "url": "https://codeforces.com/problemset/problem/1216/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216E1. Numerical Sequence (easy version)",
    "url": "https://codeforces.com/problemset/problem/1216/E1",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216D. Swords",
    "url": "https://codeforces.com/problemset/problem/1216/D",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216C. White Sheet",
    "url": "https://codeforces.com/problemset/problem/1216/C",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216B. Shooting",
    "url": "https://codeforces.com/problemset/problem/1216/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1216A. Prefixes",
    "url": "https://codeforces.com/problemset/problem/1216/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215F. Radio Stations",
    "url": "https://codeforces.com/problemset/problem/1215/F",
    "difficulty": 2700,
    "tags": [
      "2-sat"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215E. Marbles",
    "url": "https://codeforces.com/problemset/problem/1215/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215D. Ticket Game",
    "url": "https://codeforces.com/problemset/problem/1215/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215C. Swap Letters",
    "url": "https://codeforces.com/problemset/problem/1215/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215B. The Number of Products",
    "url": "https://codeforces.com/problemset/problem/1215/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1215A. Yellow Cards",
    "url": "https://codeforces.com/problemset/problem/1215/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214H. Tiles Placement",
    "url": "https://codeforces.com/problemset/problem/1214/H",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214G. Feeling Good",
    "url": "https://codeforces.com/problemset/problem/1214/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214F. Employment",
    "url": "https://codeforces.com/problemset/problem/1214/F",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214E. Petya and Construction Set",
    "url": "https://codeforces.com/problemset/problem/1214/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214D. Treasure Island",
    "url": "https://codeforces.com/problemset/problem/1214/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214C. Bad Sequence",
    "url": "https://codeforces.com/problemset/problem/1214/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214B. Badges",
    "url": "https://codeforces.com/problemset/problem/1214/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1214A. Optimal Currency Exchange",
    "url": "https://codeforces.com/problemset/problem/1214/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213G. Path Queries",
    "url": "https://codeforces.com/problemset/problem/1213/G",
    "difficulty": 1800,
    "tags": [
      "divide and conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213F. Unstable String Sort",
    "url": "https://codeforces.com/problemset/problem/1213/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213E. Two Small Strings",
    "url": "https://codeforces.com/problemset/problem/1213/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213D2. Equalizing by Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1213/D2",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213D1. Equalizing by Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1213/D1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213C. Book Reading",
    "url": "https://codeforces.com/problemset/problem/1213/C",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213B. Bad Prices",
    "url": "https://codeforces.com/problemset/problem/1213/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1213A. Chips Moving",
    "url": "https://codeforces.com/problemset/problem/1213/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211I. Unusual Graph",
    "url": "https://codeforces.com/problemset/problem/1211/I",
    "difficulty": 3000,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211H. Road Repair in Treeland",
    "url": "https://codeforces.com/problemset/problem/1211/H",
    "difficulty": 3100,
    "tags": [
      "*special",
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211G. King's Path",
    "url": "https://codeforces.com/problemset/problem/1211/G",
    "difficulty": 2500,
    "tags": [
      "*special",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211F. kotlinkotlinkotlinkotlin...",
    "url": "https://codeforces.com/problemset/problem/1211/F",
    "difficulty": 2300,
    "tags": [
      "*special",
      "graphs",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211E. Double Permutation Inc.",
    "url": "https://codeforces.com/problemset/problem/1211/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211D. Teams",
    "url": "https://codeforces.com/problemset/problem/1211/D",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211C. Ice Cream",
    "url": "https://codeforces.com/problemset/problem/1211/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211B. Traveling Around the Golden Ring of Berland",
    "url": "https://codeforces.com/problemset/problem/1211/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1211A. Three Problems",
    "url": "https://codeforces.com/problemset/problem/1211/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210G. Mateusz and Escape Room",
    "url": "https://codeforces.com/problemset/problem/1210/G",
    "difficulty": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210F2. Marek and Matching (hard version)",
    "url": "https://codeforces.com/problemset/problem/1210/F2",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210F1. Marek and Matching (easy version)",
    "url": "https://codeforces.com/problemset/problem/1210/F1",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210E. Wojtek and Card Tricks",
    "url": "https://codeforces.com/problemset/problem/1210/E",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210D. Konrad and Company Evaluation",
    "url": "https://codeforces.com/problemset/problem/1210/D",
    "difficulty": 2400,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210C. Kamil and Making a Stream",
    "url": "https://codeforces.com/problemset/problem/1210/C",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210B. Marcin and Training Camp",
    "url": "https://codeforces.com/problemset/problem/1210/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1210A. Anadi and Domino",
    "url": "https://codeforces.com/problemset/problem/1210/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209H. Moving Walkways",
    "url": "https://codeforces.com/problemset/problem/1209/H",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209G2. Into Blocks (hard version)",
    "url": "https://codeforces.com/problemset/problem/1209/G2",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209G1. Into Blocks (easy version)",
    "url": "https://codeforces.com/problemset/problem/1209/G1",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209F. Koala and Notebook",
    "url": "https://codeforces.com/problemset/problem/1209/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209E2. Rotate Columns (hard version)",
    "url": "https://codeforces.com/problemset/problem/1209/E2",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209E1. Rotate Columns (easy version)",
    "url": "https://codeforces.com/problemset/problem/1209/E1",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209D. Cow and Snacks",
    "url": "https://codeforces.com/problemset/problem/1209/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209C. Paint the Digits",
    "url": "https://codeforces.com/problemset/problem/1209/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209B. Koala and Lights",
    "url": "https://codeforces.com/problemset/problem/1209/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1209A. Paint the Numbers",
    "url": "https://codeforces.com/problemset/problem/1209/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208H. Red Blue Tree",
    "url": "https://codeforces.com/problemset/problem/1208/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208G. Polygons",
    "url": "https://codeforces.com/problemset/problem/1208/G",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208F. Bits And Pieces",
    "url": "https://codeforces.com/problemset/problem/1208/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208E. Let Them Slide",
    "url": "https://codeforces.com/problemset/problem/1208/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208D. Restore Permutation",
    "url": "https://codeforces.com/problemset/problem/1208/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208C. Magic Grid",
    "url": "https://codeforces.com/problemset/problem/1208/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208B. Uniqueness",
    "url": "https://codeforces.com/problemset/problem/1208/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1208A. XORinacci",
    "url": "https://codeforces.com/problemset/problem/1208/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207G. Indie Album",
    "url": "https://codeforces.com/problemset/problem/1207/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207F. Remainder Problem",
    "url": "https://codeforces.com/problemset/problem/1207/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207E. XOR Guessing",
    "url": "https://codeforces.com/problemset/problem/1207/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207D. Number Of Permutations",
    "url": "https://codeforces.com/problemset/problem/1207/D",
    "difficulty": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207C. Gas Pipeline",
    "url": "https://codeforces.com/problemset/problem/1207/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207B. Square Filling",
    "url": "https://codeforces.com/problemset/problem/1207/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1207A. There Are Two Types Of Burgers",
    "url": "https://codeforces.com/problemset/problem/1207/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1206B. Make Product Equal One",
    "url": "https://codeforces.com/problemset/problem/1206/B",
    "difficulty": 900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1206A. Choose Two Numbers",
    "url": "https://codeforces.com/problemset/problem/1206/A",
    "difficulty": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205F. Beauty of a Permutation",
    "url": "https://codeforces.com/problemset/problem/1205/F",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205E. Expected Value Again",
    "url": "https://codeforces.com/problemset/problem/1205/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205D. Almost All",
    "url": "https://codeforces.com/problemset/problem/1205/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205C. Palindromic Paths",
    "url": "https://codeforces.com/problemset/problem/1205/C",
    "difficulty": 2400,
    "tags": [
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205B. Shortest Cycle",
    "url": "https://codeforces.com/problemset/problem/1205/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1205A. Almost Equal",
    "url": "https://codeforces.com/problemset/problem/1205/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204E. Natasha, Sasha and the Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/1204/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204D2. Kirk and a Binary String (hard version)",
    "url": "https://codeforces.com/problemset/problem/1204/D2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204D1. Kirk and a Binary String (easy version)",
    "url": "https://codeforces.com/problemset/problem/1204/D1",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204C. Anna, Svyatoslav and Maps",
    "url": "https://codeforces.com/problemset/problem/1204/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204B. Mislove Has Lost an Array",
    "url": "https://codeforces.com/problemset/problem/1204/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1204A. BowWow and the Timetable",
    "url": "https://codeforces.com/problemset/problem/1204/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203F2. Complete the Projects (hard version)",
    "url": "https://codeforces.com/problemset/problem/1203/F2",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203F1. Complete the Projects (easy version)",
    "url": "https://codeforces.com/problemset/problem/1203/F1",
    "difficulty": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203E. Boxers",
    "url": "https://codeforces.com/problemset/problem/1203/E",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203D2. Remove the Substring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1203/D2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203D1. Remove the Substring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1203/D1",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203C. Common Divisors",
    "url": "https://codeforces.com/problemset/problem/1203/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203B. Equal Rectangles",
    "url": "https://codeforces.com/problemset/problem/1203/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1203A. Circle of Students",
    "url": "https://codeforces.com/problemset/problem/1203/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202F. You Are Given Some Letters...",
    "url": "https://codeforces.com/problemset/problem/1202/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202E. You Are Given Some Strings...",
    "url": "https://codeforces.com/problemset/problem/1202/E",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202D. Print a 1337-string...",
    "url": "https://codeforces.com/problemset/problem/1202/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202C. You Are Given a WASD-string...",
    "url": "https://codeforces.com/problemset/problem/1202/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202B. You Are Given a Decimal String...",
    "url": "https://codeforces.com/problemset/problem/1202/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1202A. You Are Given Two Binary Strings...",
    "url": "https://codeforces.com/problemset/problem/1202/A",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201E2. Knightmare (hard)",
    "url": "https://codeforces.com/problemset/problem/1201/E2",
    "difficulty": 3000,
    "tags": [
      "graphs",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201E1. Knightmare (easy)",
    "url": "https://codeforces.com/problemset/problem/1201/E1",
    "difficulty": 2900,
    "tags": [
      "graphs",
      "interactive",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201D. Treasure Hunting",
    "url": "https://codeforces.com/problemset/problem/1201/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201C. Maximum Median",
    "url": "https://codeforces.com/problemset/problem/1201/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201B. Zero Array",
    "url": "https://codeforces.com/problemset/problem/1201/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1201A. Important Exam",
    "url": "https://codeforces.com/problemset/problem/1201/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200F. Graph Traveler",
    "url": "https://codeforces.com/problemset/problem/1200/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200E. Compress Words",
    "url": "https://codeforces.com/problemset/problem/1200/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200D. White Lines",
    "url": "https://codeforces.com/problemset/problem/1200/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200C. Round Corridor",
    "url": "https://codeforces.com/problemset/problem/1200/C",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200B. Block Adventure",
    "url": "https://codeforces.com/problemset/problem/1200/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1200A. Hotelier",
    "url": "https://codeforces.com/problemset/problem/1200/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1199B. Water Lily",
    "url": "https://codeforces.com/problemset/problem/1199/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1199A. City Day",
    "url": "https://codeforces.com/problemset/problem/1199/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198F. GCD Groups 2",
    "url": "https://codeforces.com/problemset/problem/1198/F",
    "difficulty": 2900,
    "tags": [
      "greedy",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198E. Rectangle Painting 2",
    "url": "https://codeforces.com/problemset/problem/1198/E",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198D. Rectangle Painting 1",
    "url": "https://codeforces.com/problemset/problem/1198/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198C. Matching vs  Independent Set",
    "url": "https://codeforces.com/problemset/problem/1198/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198B. Welfare State",
    "url": "https://codeforces.com/problemset/problem/1198/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1198A. MP3",
    "url": "https://codeforces.com/problemset/problem/1198/A",
    "difficulty": 1600,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197F. Coloring Game",
    "url": "https://codeforces.com/problemset/problem/1197/F",
    "difficulty": 2700,
    "tags": [
      "dp",
      "games",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197E. Culture Code",
    "url": "https://codeforces.com/problemset/problem/1197/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197D. Yet Another Subarray Problem",
    "url": "https://codeforces.com/problemset/problem/1197/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197C. Array Splitting",
    "url": "https://codeforces.com/problemset/problem/1197/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197B. Pillars",
    "url": "https://codeforces.com/problemset/problem/1197/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1197A. DIY Wooden Ladder",
    "url": "https://codeforces.com/problemset/problem/1197/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196F. K-th Path",
    "url": "https://codeforces.com/problemset/problem/1196/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196E. Connected Component on a Chessboard",
    "url": "https://codeforces.com/problemset/problem/1196/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196D2. RGB Substring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1196/D2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196D1. RGB Substring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1196/D1",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196C. Robot Breakout",
    "url": "https://codeforces.com/problemset/problem/1196/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196B. Odd Sum Segments",
    "url": "https://codeforces.com/problemset/problem/1196/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1196A. Three Piles of Candies",
    "url": "https://codeforces.com/problemset/problem/1196/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195F. Geometers Anonymous Club",
    "url": "https://codeforces.com/problemset/problem/1195/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195E. OpenStreetMap",
    "url": "https://codeforces.com/problemset/problem/1195/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195D2. Submarine in the Rybinsk Sea (hard edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D2",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195D1. Submarine in the Rybinsk Sea (easy edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D1",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195C. Basketball Exercise",
    "url": "https://codeforces.com/problemset/problem/1195/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195B. Sport Mafia",
    "url": "https://codeforces.com/problemset/problem/1195/B",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1195A. Drinks Choosing",
    "url": "https://codeforces.com/problemset/problem/1195/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194G. Another Meme Problem",
    "url": "https://codeforces.com/problemset/problem/1194/G",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194F. Crossword Expert",
    "url": "https://codeforces.com/problemset/problem/1194/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194E. Count The Rectangles",
    "url": "https://codeforces.com/problemset/problem/1194/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194D. 1-2-K Game",
    "url": "https://codeforces.com/problemset/problem/1194/D",
    "difficulty": 1700,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194C. From S To T",
    "url": "https://codeforces.com/problemset/problem/1194/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194B. Yet Another Crosses Problem",
    "url": "https://codeforces.com/problemset/problem/1194/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1194A. Remove a Progression",
    "url": "https://codeforces.com/problemset/problem/1194/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1193C. Scissors and Tape",
    "url": "https://codeforces.com/problemset/problem/1193/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1193B. Magic Tree",
    "url": "https://codeforces.com/problemset/problem/1193/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1193A. Amusement Park",
    "url": "https://codeforces.com/problemset/problem/1193/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1192C. Cubeword",
    "url": "https://codeforces.com/problemset/problem/1192/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1192B. Dynamic Diameter",
    "url": "https://codeforces.com/problemset/problem/1192/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1192A. Building Skyscrapers",
    "url": "https://codeforces.com/problemset/problem/1192/A",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1191B. Tokitsukaze and Mahjong",
    "url": "https://codeforces.com/problemset/problem/1191/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1191A. Tokitsukaze and Enhancement",
    "url": "https://codeforces.com/problemset/problem/1191/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190F. Tokitsukaze and Powers",
    "url": "https://codeforces.com/problemset/problem/1190/F",
    "difficulty": 3400,
    "tags": [
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190E. Tokitsukaze and Explosion",
    "url": "https://codeforces.com/problemset/problem/1190/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190D. Tokitsukaze and Strange Rectangle",
    "url": "https://codeforces.com/problemset/problem/1190/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190C. Tokitsukaze and Duel",
    "url": "https://codeforces.com/problemset/problem/1190/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190B. Tokitsukaze, CSL and Stone Game",
    "url": "https://codeforces.com/problemset/problem/1190/B",
    "difficulty": 1800,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1190A. Tokitsukaze and Discard Items",
    "url": "https://codeforces.com/problemset/problem/1190/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1189C. Candies!",
    "url": "https://codeforces.com/problemset/problem/1189/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1189B. Number Circle",
    "url": "https://codeforces.com/problemset/problem/1189/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1189A. Keanu Reeves",
    "url": "https://codeforces.com/problemset/problem/1189/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188E. Problem from Red Panda",
    "url": "https://codeforces.com/problemset/problem/1188/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188D. Make Equal",
    "url": "https://codeforces.com/problemset/problem/1188/D",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188C. Array Beauty",
    "url": "https://codeforces.com/problemset/problem/1188/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188B. Count Pairs",
    "url": "https://codeforces.com/problemset/problem/1188/B",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188A2. Add on a Tree: Revolution",
    "url": "https://codeforces.com/problemset/problem/1188/A2",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1188A1. Add on a Tree",
    "url": "https://codeforces.com/problemset/problem/1188/A1",
    "difficulty": 1600,
    "tags": [
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187G. Gang Up",
    "url": "https://codeforces.com/problemset/problem/1187/G",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187F. Expected Square Beauty",
    "url": "https://codeforces.com/problemset/problem/1187/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187E. Tree Painting",
    "url": "https://codeforces.com/problemset/problem/1187/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187D. Subarray Sorting",
    "url": "https://codeforces.com/problemset/problem/1187/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187C. Vasya And Array",
    "url": "https://codeforces.com/problemset/problem/1187/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187B. Letters Shop",
    "url": "https://codeforces.com/problemset/problem/1187/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1187A. Stickers and Toys",
    "url": "https://codeforces.com/problemset/problem/1187/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1186F. Vus the Cossack and a Graph",
    "url": "https://codeforces.com/problemset/problem/1186/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1186E. Vus the Cossack and a Field",
    "url": "https://codeforces.com/problemset/problem/1186/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1186D. Vus the Cossack and Numbers",
    "url": "https://codeforces.com/problemset/problem/1186/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1186C. Vus the Cossack and Strings",
    "url": "https://codeforces.com/problemset/problem/1186/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1186A. Vus the Cossack and a Contest",
    "url": "https://codeforces.com/problemset/problem/1186/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185G2. Playlist for Polycarp (hard version)",
    "url": "https://codeforces.com/problemset/problem/1185/G2",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185G1. Playlist for Polycarp (easy version)",
    "url": "https://codeforces.com/problemset/problem/1185/G1",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185F. Two Pizzas",
    "url": "https://codeforces.com/problemset/problem/1185/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185E. Polycarp and Snakes",
    "url": "https://codeforces.com/problemset/problem/1185/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185D. Extra Element",
    "url": "https://codeforces.com/problemset/problem/1185/D",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185C2. Exam in BerSU (hard version)",
    "url": "https://codeforces.com/problemset/problem/1185/C2",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185C1. Exam in BerSU (easy version)",
    "url": "https://codeforces.com/problemset/problem/1185/C1",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185B. Email from Polycarp",
    "url": "https://codeforces.com/problemset/problem/1185/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1185A. Ropewalkers",
    "url": "https://codeforces.com/problemset/problem/1185/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184E3. Daleks' Invasion (hard)",
    "url": "https://codeforces.com/problemset/problem/1184/E3",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184E2. Daleks' Invasion (medium)",
    "url": "https://codeforces.com/problemset/problem/1184/E2",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184E1. Daleks' Invasion (easy)",
    "url": "https://codeforces.com/problemset/problem/1184/E1",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184D2. Parallel Universes (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/D2",
    "difficulty": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184D1. Parallel Universes (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/D1",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184C3. Heidi and the Turing Test (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/C3",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1184C2. Heidi and the Turing Test (Medium)",
    "url": "https://codeforces.com/problemset/problem/1184/C2",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184C1. Heidi and the Turing Test (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/C1",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184B3. The Doctor Meets Vader (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/B3",
    "difficulty": 2700,
    "tags": [
      "flows",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184B2. The Doctor Meets Vader (Medium)",
    "url": "https://codeforces.com/problemset/problem/1184/B2",
    "difficulty": 2200,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184B1. The Doctor Meets Vader (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/B1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184A3. Heidi Learns Hashing (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/A3",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184A2. Heidi Learns Hashing (Medium)",
    "url": "https://codeforces.com/problemset/problem/1184/A2",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1184A1. Heidi Learns Hashing (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/A1",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183H. Subsequences (hard version)",
    "url": "https://codeforces.com/problemset/problem/1183/H",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183G. Candy Box (hard version)",
    "url": "https://codeforces.com/problemset/problem/1183/G",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183F. Topforces Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1183/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183E. Subsequences (easy version)",
    "url": "https://codeforces.com/problemset/problem/1183/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183D. Candy Box (easy version)",
    "url": "https://codeforces.com/problemset/problem/1183/D",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183C. Computer Game",
    "url": "https://codeforces.com/problemset/problem/1183/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183B. Equalize Prices",
    "url": "https://codeforces.com/problemset/problem/1183/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1183A. Nearest Interesting Number",
    "url": "https://codeforces.com/problemset/problem/1183/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182F. Maximum Sine",
    "url": "https://codeforces.com/problemset/problem/1182/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182E. Product Oriented Recurrence",
    "url": "https://codeforces.com/problemset/problem/1182/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182D. Complete Mirror",
    "url": "https://codeforces.com/problemset/problem/1182/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182C. Beautiful Lyrics",
    "url": "https://codeforces.com/problemset/problem/1182/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182B. Plus from Picture",
    "url": "https://codeforces.com/problemset/problem/1182/B",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1182A. Filling Shapes",
    "url": "https://codeforces.com/problemset/problem/1182/A",
    "difficulty": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181E2. A Story of One Country (Hard)",
    "url": "https://codeforces.com/problemset/problem/1181/E2",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181E1. A Story of One Country (Easy)",
    "url": "https://codeforces.com/problemset/problem/1181/E1",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181D. Irrigation",
    "url": "https://codeforces.com/problemset/problem/1181/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181C. Flag",
    "url": "https://codeforces.com/problemset/problem/1181/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181B. Split a Number",
    "url": "https://codeforces.com/problemset/problem/1181/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1181A. Chunga-Changa",
    "url": "https://codeforces.com/problemset/problem/1181/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1180B. Nick and Array",
    "url": "https://codeforces.com/problemset/problem/1180/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1180A. Alex and a Rhombus",
    "url": "https://codeforces.com/problemset/problem/1180/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1179E. Alesya and Discrete Math",
    "url": "https://codeforces.com/problemset/problem/1179/E",
    "difficulty": 3200,
    "tags": [
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1179D. Fedor Runs for President",
    "url": "https://codeforces.com/problemset/problem/1179/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1179C. Serge and Dining Room",
    "url": "https://codeforces.com/problemset/problem/1179/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "graph matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1179B. Tolik and His Uncle",
    "url": "https://codeforces.com/problemset/problem/1179/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1179A. Valeriy and Deque",
    "url": "https://codeforces.com/problemset/problem/1179/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178H. Stock Exchange",
    "url": "https://codeforces.com/problemset/problem/1178/H",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178G. The Awesomest Vertex",
    "url": "https://codeforces.com/problemset/problem/1178/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178F2. Long Colorful Strip",
    "url": "https://codeforces.com/problemset/problem/1178/F2",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178F1. Short Colorful Strip",
    "url": "https://codeforces.com/problemset/problem/1178/F1",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178E. Archaeology",
    "url": "https://codeforces.com/problemset/problem/1178/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178D. Prime Graph",
    "url": "https://codeforces.com/problemset/problem/1178/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178C. Tiles",
    "url": "https://codeforces.com/problemset/problem/1178/C",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178B. WOW Factor",
    "url": "https://codeforces.com/problemset/problem/1178/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1178A. Prime Minister",
    "url": "https://codeforces.com/problemset/problem/1178/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1177B. Digits Sequence (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1177/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1177A. Digits Sequence (Easy Edition)",
    "url": "https://codeforces.com/problemset/problem/1177/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176F. Destroy it!",
    "url": "https://codeforces.com/problemset/problem/1176/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176E. Cover it!",
    "url": "https://codeforces.com/problemset/problem/1176/E",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176D. Recover it!",
    "url": "https://codeforces.com/problemset/problem/1176/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176C. Lose it!",
    "url": "https://codeforces.com/problemset/problem/1176/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176B. Merge it!",
    "url": "https://codeforces.com/problemset/problem/1176/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1176A. Divide it!",
    "url": "https://codeforces.com/problemset/problem/1176/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175G. Yet Another Partiton Problem",
    "url": "https://codeforces.com/problemset/problem/1175/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175F. The Number of Subpermutations",
    "url": "https://codeforces.com/problemset/problem/1175/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175E. Minimal Segment Cover",
    "url": "https://codeforces.com/problemset/problem/1175/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175D. Array Splitting",
    "url": "https://codeforces.com/problemset/problem/1175/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175C. Electrification",
    "url": "https://codeforces.com/problemset/problem/1175/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175B. Catch Overflow!",
    "url": "https://codeforces.com/problemset/problem/1175/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1175A. From Hero to Zero",
    "url": "https://codeforces.com/problemset/problem/1175/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174F. Ehab and the Big Finale",
    "url": "https://codeforces.com/problemset/problem/1174/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174E. Ehab and the Expected GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1174/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174D. Ehab and the Expected XOR Problem",
    "url": "https://codeforces.com/problemset/problem/1174/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174C. Ehab and a Special Coloring Problem",
    "url": "https://codeforces.com/problemset/problem/1174/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174B. Ehab Is an Odd Person",
    "url": "https://codeforces.com/problemset/problem/1174/B",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1174A. Ehab Fails to Be Thanos",
    "url": "https://codeforces.com/problemset/problem/1174/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1173B. Nauuo and Chess",
    "url": "https://codeforces.com/problemset/problem/1173/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1173A. Nauuo and Votes",
    "url": "https://codeforces.com/problemset/problem/1173/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172F. Nauuo and Bug",
    "url": "https://codeforces.com/problemset/problem/1172/F",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172E. Nauuo and ODT",
    "url": "https://codeforces.com/problemset/problem/1172/E",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172D. Nauuo and Portals",
    "url": "https://codeforces.com/problemset/problem/1172/D",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172C2. Nauuo and Pictures (hard version)",
    "url": "https://codeforces.com/problemset/problem/1172/C2",
    "difficulty": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172C1. Nauuo and Pictures (easy version)",
    "url": "https://codeforces.com/problemset/problem/1172/C1",
    "difficulty": 2300,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172B. Nauuo and Circle",
    "url": "https://codeforces.com/problemset/problem/1172/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1172A. Nauuo and Cards",
    "url": "https://codeforces.com/problemset/problem/1172/A",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170I. Good Subsets",
    "url": "https://codeforces.com/problemset/problem/1170/I",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170H. Longest Saw",
    "url": "https://codeforces.com/problemset/problem/1170/H",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170G. Graph Decomposition",
    "url": "https://codeforces.com/problemset/problem/1170/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170F. Wheels",
    "url": "https://codeforces.com/problemset/problem/1170/F",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170E. Sliding Doors",
    "url": "https://codeforces.com/problemset/problem/1170/E",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170D. Decoding of Integer Sequences",
    "url": "https://codeforces.com/problemset/problem/1170/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170C. Minus and Minus Give Plus",
    "url": "https://codeforces.com/problemset/problem/1170/C",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170B. Bad Days",
    "url": "https://codeforces.com/problemset/problem/1170/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1170A. Three Integers Again",
    "url": "https://codeforces.com/problemset/problem/1170/A",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1169B. Pairs",
    "url": "https://codeforces.com/problemset/problem/1169/B",
    "difficulty": 1500,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1169A. Circle Metro",
    "url": "https://codeforces.com/problemset/problem/1169/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1168E. Xor Permutations",
    "url": "https://codeforces.com/problemset/problem/1168/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1168D. Anagram Paths",
    "url": "https://codeforces.com/problemset/problem/1168/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1168C. And Reachability",
    "url": "https://codeforces.com/problemset/problem/1168/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1168B. Good Triple",
    "url": "https://codeforces.com/problemset/problem/1168/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1168A. Increasing by Modulo",
    "url": "https://codeforces.com/problemset/problem/1168/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167G. Low Budget Inception",
    "url": "https://codeforces.com/problemset/problem/1167/G",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167F. Scalar Queries",
    "url": "https://codeforces.com/problemset/problem/1167/F",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167E. Range Deleting",
    "url": "https://codeforces.com/problemset/problem/1167/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167D. Bicolored RBS",
    "url": "https://codeforces.com/problemset/problem/1167/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167C. News Distribution",
    "url": "https://codeforces.com/problemset/problem/1167/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167B. Lost Numbers",
    "url": "https://codeforces.com/problemset/problem/1167/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "divide and conquer",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1167A. Telephone Number",
    "url": "https://codeforces.com/problemset/problem/1167/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166F. Vicky's Delivery Service",
    "url": "https://codeforces.com/problemset/problem/1166/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166E. The LCMs Must be Large",
    "url": "https://codeforces.com/problemset/problem/1166/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166D. Cute Sequences",
    "url": "https://codeforces.com/problemset/problem/1166/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166C. A Tale of Two Lands",
    "url": "https://codeforces.com/problemset/problem/1166/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166B. All the Vowels Please",
    "url": "https://codeforces.com/problemset/problem/1166/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1166A. Silent Classroom",
    "url": "https://codeforces.com/problemset/problem/1166/A",
    "difficulty": 900,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165F2. Microtransactions (hard version)",
    "url": "https://codeforces.com/problemset/problem/1165/F2",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165F1. Microtransactions (easy version)",
    "url": "https://codeforces.com/problemset/problem/1165/F1",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165E. Two Arrays and Sum of Functions",
    "url": "https://codeforces.com/problemset/problem/1165/E",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165D. Almost All Divisors",
    "url": "https://codeforces.com/problemset/problem/1165/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165C. Good String",
    "url": "https://codeforces.com/problemset/problem/1165/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165B. Polycarp Training",
    "url": "https://codeforces.com/problemset/problem/1165/B",
    "difficulty": 1000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1165A. Remainder",
    "url": "https://codeforces.com/problemset/problem/1165/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163F. Indecisive Taxi Fee",
    "url": "https://codeforces.com/problemset/problem/1163/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163E. Magical Permutation",
    "url": "https://codeforces.com/problemset/problem/1163/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163D. Mysterious Code",
    "url": "https://codeforces.com/problemset/problem/1163/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163C2. Power Transmission (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/C2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163C1. Power Transmission (Easy Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/C1",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163B2. Cat Party (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/B2",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163B1. Cat Party (Easy Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/B1",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1163A. Eating Soup",
    "url": "https://codeforces.com/problemset/problem/1163/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1162B. Double Matrix",
    "url": "https://codeforces.com/problemset/problem/1162/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1162A. Zoning Restrictions Again",
    "url": "https://codeforces.com/problemset/problem/1162/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1160A2. Collaboration",
    "url": "https://codeforces.com/problemset/problem/1160/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1159B. Expansion coefficient of the array",
    "url": "https://codeforces.com/problemset/problem/1159/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1159A. A pile of stones",
    "url": "https://codeforces.com/problemset/problem/1159/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158F. Density of subarrays",
    "url": "https://codeforces.com/problemset/problem/1158/F",
    "difficulty": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158E. Strange device",
    "url": "https://codeforces.com/problemset/problem/1158/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "interactive",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158D. Winding polygonal line",
    "url": "https://codeforces.com/problemset/problem/1158/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158C. Permutation recovery",
    "url": "https://codeforces.com/problemset/problem/1158/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158B. The minimal unique substring",
    "url": "https://codeforces.com/problemset/problem/1158/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1158A. The Party and Sweets",
    "url": "https://codeforces.com/problemset/problem/1158/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157G. Inverse of Rows and Columns",
    "url": "https://codeforces.com/problemset/problem/1157/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157F. Maximum Balanced Circle",
    "url": "https://codeforces.com/problemset/problem/1157/F",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157E. Minimum Array",
    "url": "https://codeforces.com/problemset/problem/1157/E",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157D. N Problems During K Days",
    "url": "https://codeforces.com/problemset/problem/1157/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157C2. Increasing Subsequence (hard version)",
    "url": "https://codeforces.com/problemset/problem/1157/C2",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157C1. Increasing Subsequence (easy version)",
    "url": "https://codeforces.com/problemset/problem/1157/C1",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157B. Long Number",
    "url": "https://codeforces.com/problemset/problem/1157/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1157A. Reachable Numbers",
    "url": "https://codeforces.com/problemset/problem/1157/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156G. Optimizer",
    "url": "https://codeforces.com/problemset/problem/1156/G",
    "difficulty": 2700,
    "tags": [
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156F. Card Bag",
    "url": "https://codeforces.com/problemset/problem/1156/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156E. Special Segments of Permutation",
    "url": "https://codeforces.com/problemset/problem/1156/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156D. 0-1-Tree",
    "url": "https://codeforces.com/problemset/problem/1156/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156C. Match Points",
    "url": "https://codeforces.com/problemset/problem/1156/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156B. Ugly Pairs",
    "url": "https://codeforces.com/problemset/problem/1156/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1156A. Inscribed Figures",
    "url": "https://codeforces.com/problemset/problem/1156/A",
    "difficulty": 1400,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155F. Delivery Oligopoly",
    "url": "https://codeforces.com/problemset/problem/1155/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155E. Guess the Root",
    "url": "https://codeforces.com/problemset/problem/1155/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155D. Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1155/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155C. Alarm Clocks Everywhere",
    "url": "https://codeforces.com/problemset/problem/1155/C",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155B. Game with Telephone Numbers",
    "url": "https://codeforces.com/problemset/problem/1155/B",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1155A. Reverse a Substring",
    "url": "https://codeforces.com/problemset/problem/1155/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154G. Minimum Possible LCM",
    "url": "https://codeforces.com/problemset/problem/1154/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154F. Shovels Shop",
    "url": "https://codeforces.com/problemset/problem/1154/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154E. Two Teams",
    "url": "https://codeforces.com/problemset/problem/1154/E",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154D. Walking Robot",
    "url": "https://codeforces.com/problemset/problem/1154/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154C. Gourmet Cat",
    "url": "https://codeforces.com/problemset/problem/1154/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154B. Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1154/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1154A. Restoring Three Numbers",
    "url": "https://codeforces.com/problemset/problem/1154/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153F. Serval and Bonus Problem",
    "url": "https://codeforces.com/problemset/problem/1153/F",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153E. Serval and Snake",
    "url": "https://codeforces.com/problemset/problem/1153/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "brute force",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153D. Serval and Rooted Tree",
    "url": "https://codeforces.com/problemset/problem/1153/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153C. Serval and Parenthesis Sequence",
    "url": "https://codeforces.com/problemset/problem/1153/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153B. Serval and Toy Bricks",
    "url": "https://codeforces.com/problemset/problem/1153/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1153A. Serval and Bus",
    "url": "https://codeforces.com/problemset/problem/1153/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152F2. Neko Rules the Catniverse (Large Version)",
    "url": "https://codeforces.com/problemset/problem/1152/F2",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152F1. Neko Rules the Catniverse (Small Version)",
    "url": "https://codeforces.com/problemset/problem/1152/F1",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152E. Neko and Flashback",
    "url": "https://codeforces.com/problemset/problem/1152/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152D. Neko and Aki's Prank",
    "url": "https://codeforces.com/problemset/problem/1152/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152C. Neko does Maths",
    "url": "https://codeforces.com/problemset/problem/1152/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152B. Neko Performs Cat Furrier Transform",
    "url": "https://codeforces.com/problemset/problem/1152/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1152A. Neko Finds Grapes",
    "url": "https://codeforces.com/problemset/problem/1152/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151F. Sonya and Informatics",
    "url": "https://codeforces.com/problemset/problem/1151/F",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151E. Number of Components",
    "url": "https://codeforces.com/problemset/problem/1151/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151D. Stas and the Queue at the Buffet",
    "url": "https://codeforces.com/problemset/problem/1151/D",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151C. Problem for Nazar",
    "url": "https://codeforces.com/problemset/problem/1151/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151B. Dima and a Bad XOR",
    "url": "https://codeforces.com/problemset/problem/1151/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1151A. Maxim and Biology",
    "url": "https://codeforces.com/problemset/problem/1151/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1150B. Tiling Challenge",
    "url": "https://codeforces.com/problemset/problem/1150/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1150A. Stock Arbitraging",
    "url": "https://codeforces.com/problemset/problem/1150/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1149E. Election Promises",
    "url": "https://codeforces.com/problemset/problem/1149/E",
    "difficulty": 3200,
    "tags": [
      "games",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1149D. Abandoning Roads",
    "url": "https://codeforces.com/problemset/problem/1149/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1149C. Tree Generator™",
    "url": "https://codeforces.com/problemset/problem/1149/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1149B. Three Religions",
    "url": "https://codeforces.com/problemset/problem/1149/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1149A. Prefix Sum Primes",
    "url": "https://codeforces.com/problemset/problem/1149/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148H. Holy Diver ",
    "url": "https://codeforces.com/problemset/problem/1148/H",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148G. Gold Experience",
    "url": "https://codeforces.com/problemset/problem/1148/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148F. Foo Fighters",
    "url": "https://codeforces.com/problemset/problem/1148/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148E. Earth Wind and Fire",
    "url": "https://codeforces.com/problemset/problem/1148/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148D. Dirty Deeds Done Dirt Cheap",
    "url": "https://codeforces.com/problemset/problem/1148/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148C. Crazy Diamond",
    "url": "https://codeforces.com/problemset/problem/1148/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148B. Born This Way",
    "url": "https://codeforces.com/problemset/problem/1148/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1148A. Another One Bites The Dust",
    "url": "https://codeforces.com/problemset/problem/1148/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147F. Zigzag Game",
    "url": "https://codeforces.com/problemset/problem/1147/F",
    "difficulty": 3500,
    "tags": [
      "games",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147E. Rainbow Coins",
    "url": "https://codeforces.com/problemset/problem/1147/E",
    "difficulty": 3000,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147D. Palindrome XOR",
    "url": "https://codeforces.com/problemset/problem/1147/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147C. Thanos Nim",
    "url": "https://codeforces.com/problemset/problem/1147/C",
    "difficulty": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147B. Chladni Figure",
    "url": "https://codeforces.com/problemset/problem/1147/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1147A. Hide and Seek",
    "url": "https://codeforces.com/problemset/problem/1147/A",
    "difficulty": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146H. Satanic Panic",
    "url": "https://codeforces.com/problemset/problem/1146/H",
    "difficulty": 2900,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146G. Zoning Restrictions",
    "url": "https://codeforces.com/problemset/problem/1146/G",
    "difficulty": 2700,
    "tags": [
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146F. Leaf Partition",
    "url": "https://codeforces.com/problemset/problem/1146/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146E. Hot is Cold",
    "url": "https://codeforces.com/problemset/problem/1146/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146D. Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1146/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146C. Tree Diameter",
    "url": "https://codeforces.com/problemset/problem/1146/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146B. Hate \"A\"",
    "url": "https://codeforces.com/problemset/problem/1146/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1146A. Love \"A\"",
    "url": "https://codeforces.com/problemset/problem/1146/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145G. AI Takeover",
    "url": "https://codeforces.com/problemset/problem/1145/G",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145F. Neat Words",
    "url": "https://codeforces.com/problemset/problem/1145/F",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145E. Fourier Doodles",
    "url": "https://codeforces.com/problemset/problem/1145/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1145D. Pigeon d'Or",
    "url": "https://codeforces.com/problemset/problem/1145/D",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145C. Mystery Circuit",
    "url": "https://codeforces.com/problemset/problem/1145/C",
    "difficulty": "N/A",
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145B. Kanban Numbers",
    "url": "https://codeforces.com/problemset/problem/1145/B",
    "difficulty": "N/A",
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1145A. Thanos Sort",
    "url": "https://codeforces.com/problemset/problem/1145/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144G. Two Merged Sequences",
    "url": "https://codeforces.com/problemset/problem/1144/G",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144F. Graph Without Long Directed Paths",
    "url": "https://codeforces.com/problemset/problem/1144/F",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144E. Median String",
    "url": "https://codeforces.com/problemset/problem/1144/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144D. Equalize Them All",
    "url": "https://codeforces.com/problemset/problem/1144/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144C. Two Shuffled Sequences",
    "url": "https://codeforces.com/problemset/problem/1144/C",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144B. Parity Alternated Deletions",
    "url": "https://codeforces.com/problemset/problem/1144/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1144A. Diverse Strings",
    "url": "https://codeforces.com/problemset/problem/1144/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1143C. Queen",
    "url": "https://codeforces.com/problemset/problem/1143/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1143B. Nirvana",
    "url": "https://codeforces.com/problemset/problem/1143/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1143A. The Doors",
    "url": "https://codeforces.com/problemset/problem/1143/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1142E. Pink Floyd",
    "url": "https://codeforces.com/problemset/problem/1142/E",
    "difficulty": 3200,
    "tags": [
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1142D. Foreigner",
    "url": "https://codeforces.com/problemset/problem/1142/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1142C. U2",
    "url": "https://codeforces.com/problemset/problem/1142/C",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1142B. Lynyrd Skynyrd",
    "url": "https://codeforces.com/problemset/problem/1142/B",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1142A. The Beatles",
    "url": "https://codeforces.com/problemset/problem/1142/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141G. Privatization of Roads in Treeland",
    "url": "https://codeforces.com/problemset/problem/1141/G",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141F2. Same Sum Blocks (Hard)",
    "url": "https://codeforces.com/problemset/problem/1141/F2",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141F1. Same Sum Blocks (Easy)",
    "url": "https://codeforces.com/problemset/problem/1141/F1",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141E. Superhero Battle",
    "url": "https://codeforces.com/problemset/problem/1141/E",
    "difficulty": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141D. Colored Boots",
    "url": "https://codeforces.com/problemset/problem/1141/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141C. Polycarp Restores Permutation",
    "url": "https://codeforces.com/problemset/problem/1141/C",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141B. Maximal Continuous Rest",
    "url": "https://codeforces.com/problemset/problem/1141/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1141A. Game 23",
    "url": "https://codeforces.com/problemset/problem/1141/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140G. Double Tree",
    "url": "https://codeforces.com/problemset/problem/1140/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140F. Extending Set of Points",
    "url": "https://codeforces.com/problemset/problem/1140/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140E. Palindrome-less Arrays",
    "url": "https://codeforces.com/problemset/problem/1140/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140D. Minimum Triangulation",
    "url": "https://codeforces.com/problemset/problem/1140/D",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140C. Playlist",
    "url": "https://codeforces.com/problemset/problem/1140/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140B. Good String",
    "url": "https://codeforces.com/problemset/problem/1140/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1140A. Detective Book",
    "url": "https://codeforces.com/problemset/problem/1140/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139F. Dish Shopping",
    "url": "https://codeforces.com/problemset/problem/1139/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139E. Maximize Mex",
    "url": "https://codeforces.com/problemset/problem/1139/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139D. Steps to One",
    "url": "https://codeforces.com/problemset/problem/1139/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139C. Edgy Trees",
    "url": "https://codeforces.com/problemset/problem/1139/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139B. Chocolates",
    "url": "https://codeforces.com/problemset/problem/1139/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1139A. Even Substrings",
    "url": "https://codeforces.com/problemset/problem/1139/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1138B. Circus",
    "url": "https://codeforces.com/problemset/problem/1138/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1138A. Sushi for Two",
    "url": "https://codeforces.com/problemset/problem/1138/A",
    "difficulty": 900,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137F. Matches Are Not a Child's Play ",
    "url": "https://codeforces.com/problemset/problem/1137/F",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137E. Train Car Selection",
    "url": "https://codeforces.com/problemset/problem/1137/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137D. Cooperative Game",
    "url": "https://codeforces.com/problemset/problem/1137/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137C. Museums Tour",
    "url": "https://codeforces.com/problemset/problem/1137/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137B. Camp Schedule",
    "url": "https://codeforces.com/problemset/problem/1137/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1137A. Skyscrapers",
    "url": "https://codeforces.com/problemset/problem/1137/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1136E. Nastya Hasn't Written a Legend",
    "url": "https://codeforces.com/problemset/problem/1136/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1136D. Nastya Is Buying Lunch",
    "url": "https://codeforces.com/problemset/problem/1136/D",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1136C. Nastya Is Transposing Matrices",
    "url": "https://codeforces.com/problemset/problem/1136/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1136B. Nastya Is Playing Computer Games",
    "url": "https://codeforces.com/problemset/problem/1136/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1136A. Nastya Is Reading a Book",
    "url": "https://codeforces.com/problemset/problem/1136/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133F2. Spanning Tree with One Fixed Degree",
    "url": "https://codeforces.com/problemset/problem/1133/F2",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133F1. Spanning Tree with Maximum Degree",
    "url": "https://codeforces.com/problemset/problem/1133/F1",
    "difficulty": 1600,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133E. K Balanced Teams",
    "url": "https://codeforces.com/problemset/problem/1133/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133D. Zero Quantity Maximization",
    "url": "https://codeforces.com/problemset/problem/1133/D",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133C. Balanced Team",
    "url": "https://codeforces.com/problemset/problem/1133/C",
    "difficulty": 1200,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133B. Preparation for International Women's Day",
    "url": "https://codeforces.com/problemset/problem/1133/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1133A. Middle of the Contest",
    "url": "https://codeforces.com/problemset/problem/1133/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132G. Greedy Subsequences",
    "url": "https://codeforces.com/problemset/problem/1132/G",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132F. Clear the String",
    "url": "https://codeforces.com/problemset/problem/1132/F",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132E. Knapsack",
    "url": "https://codeforces.com/problemset/problem/1132/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132D. Stressful Training",
    "url": "https://codeforces.com/problemset/problem/1132/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132C. Painting the Fence",
    "url": "https://codeforces.com/problemset/problem/1132/C",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132B. Discounts",
    "url": "https://codeforces.com/problemset/problem/1132/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1132A. Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/1132/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131G. Most Dangerous Shark",
    "url": "https://codeforces.com/problemset/problem/1131/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131F. Asya And Kittens",
    "url": "https://codeforces.com/problemset/problem/1131/F",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131E. String Multiplication",
    "url": "https://codeforces.com/problemset/problem/1131/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131D. Gourmet choice",
    "url": "https://codeforces.com/problemset/problem/1131/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131C. Birthday",
    "url": "https://codeforces.com/problemset/problem/1131/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131B. Draw!",
    "url": "https://codeforces.com/problemset/problem/1131/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1131A. Sea Battle",
    "url": "https://codeforces.com/problemset/problem/1131/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1130C. Connect",
    "url": "https://codeforces.com/problemset/problem/1130/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1130B. Two Cakes",
    "url": "https://codeforces.com/problemset/problem/1130/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1130A. Be Positive",
    "url": "https://codeforces.com/problemset/problem/1130/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129E. Legendary Tree",
    "url": "https://codeforces.com/problemset/problem/1129/E",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129D. Isolation",
    "url": "https://codeforces.com/problemset/problem/1129/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129C. Morse Code",
    "url": "https://codeforces.com/problemset/problem/1129/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129B. Wrong Answer",
    "url": "https://codeforces.com/problemset/problem/1129/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129A2. Toy Train",
    "url": "https://codeforces.com/problemset/problem/1129/A2",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1129A1. Toy Train (Simplified)",
    "url": "https://codeforces.com/problemset/problem/1129/A1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1121C. System Testing",
    "url": "https://codeforces.com/problemset/problem/1121/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1121B. Mike and Children",
    "url": "https://codeforces.com/problemset/problem/1121/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1121A. Technogoblet of Fire",
    "url": "https://codeforces.com/problemset/problem/1121/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120F. Secret Letters",
    "url": "https://codeforces.com/problemset/problem/1120/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120E. The very same Munchhausen",
    "url": "https://codeforces.com/problemset/problem/1120/E",
    "difficulty": 2600,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120D. Power Tree",
    "url": "https://codeforces.com/problemset/problem/1120/D",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120C. Compress String",
    "url": "https://codeforces.com/problemset/problem/1120/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120B. Once in a casino",
    "url": "https://codeforces.com/problemset/problem/1120/B",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1120A. Diana and Liana",
    "url": "https://codeforces.com/problemset/problem/1120/A",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119H. Triple",
    "url": "https://codeforces.com/problemset/problem/1119/H",
    "difficulty": 3200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119G. Get Ready for the Battle",
    "url": "https://codeforces.com/problemset/problem/1119/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119F. Niyaz and Small Degrees",
    "url": "https://codeforces.com/problemset/problem/1119/F",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119E. Pavel and Triangles",
    "url": "https://codeforces.com/problemset/problem/1119/E",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "greedy",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119D. Frets On Fire",
    "url": "https://codeforces.com/problemset/problem/1119/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119C. Ramesses and Corner Inversion",
    "url": "https://codeforces.com/problemset/problem/1119/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119B. Alyona and a Narrow Fridge",
    "url": "https://codeforces.com/problemset/problem/1119/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1119A. Ilya and a Colorful Walk",
    "url": "https://codeforces.com/problemset/problem/1119/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118F2. Tree Cutting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1118/F2",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118F1. Tree Cutting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1118/F1",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118E. Yet Another Ball Problem",
    "url": "https://codeforces.com/problemset/problem/1118/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118D2. Coffee and Coursework (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1118/D2",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118D1. Coffee and Coursework (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1118/D1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118C. Palindromic Matrix",
    "url": "https://codeforces.com/problemset/problem/1118/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118B. Tanya and Candies",
    "url": "https://codeforces.com/problemset/problem/1118/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1118A. Water Buying",
    "url": "https://codeforces.com/problemset/problem/1118/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117G. Recursive Queries",
    "url": "https://codeforces.com/problemset/problem/1117/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117F. Crisp String",
    "url": "https://codeforces.com/problemset/problem/1117/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117E. Decypher the String",
    "url": "https://codeforces.com/problemset/problem/1117/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117D. Magic Gems",
    "url": "https://codeforces.com/problemset/problem/1117/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117C. Magic Ship",
    "url": "https://codeforces.com/problemset/problem/1117/C",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117B. Emotes",
    "url": "https://codeforces.com/problemset/problem/1117/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1117A. Best Subsegment",
    "url": "https://codeforces.com/problemset/problem/1117/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D6. Hessenberg matrix",
    "url": "https://codeforces.com/problemset/problem/1116/D6",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D5. Creeper",
    "url": "https://codeforces.com/problemset/problem/1116/D5",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D4. TIE fighter",
    "url": "https://codeforces.com/problemset/problem/1116/D4",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D3. X-wing fighter",
    "url": "https://codeforces.com/problemset/problem/1116/D3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D2. Pattern of increasing blocks",
    "url": "https://codeforces.com/problemset/problem/1116/D2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116D1. Block diagonal matrix",
    "url": "https://codeforces.com/problemset/problem/1116/D1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116C3. ``Is the number of ones divisible by 3?'' oracle",
    "url": "https://codeforces.com/problemset/problem/1116/C3",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116C2. ``Is the bit string periodic?'' oracle",
    "url": "https://codeforces.com/problemset/problem/1116/C2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116C1. Alternating bits oracle",
    "url": "https://codeforces.com/problemset/problem/1116/C1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116B2. Not A, not B or not C?",
    "url": "https://codeforces.com/problemset/problem/1116/B2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116B1. Distinguish three-qubit states",
    "url": "https://codeforces.com/problemset/problem/1116/B1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116A2. Generate equal superposition of four basis states",
    "url": "https://codeforces.com/problemset/problem/1116/A2",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1116A1. Generate state |00⟩ + |01⟩ + |10⟩",
    "url": "https://codeforces.com/problemset/problem/1116/A1",
    "difficulty": "N/A",
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115U3. Block unitary",
    "url": "https://codeforces.com/problemset/problem/1115/U3",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115U2. Chessboard unitary",
    "url": "https://codeforces.com/problemset/problem/1115/U2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115U1. Anti-diagonal unitary",
    "url": "https://codeforces.com/problemset/problem/1115/U1",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115G3. Palindrome checker oracle",
    "url": "https://codeforces.com/problemset/problem/1115/G3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115G2. OR oracle",
    "url": "https://codeforces.com/problemset/problem/1115/G2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1115G1. AND oracle",
    "url": "https://codeforces.com/problemset/problem/1115/G1",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114F. Please, another Queries on Array?",
    "url": "https://codeforces.com/problemset/problem/1114/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114E. Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/1114/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "interactive",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114D. Flood Fill",
    "url": "https://codeforces.com/problemset/problem/1114/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114C. Trailing Loves (or L'oeufs?)",
    "url": "https://codeforces.com/problemset/problem/1114/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114B. Yet Another Array Partitioning Task",
    "url": "https://codeforces.com/problemset/problem/1114/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1114A. Got Any Grapes?",
    "url": "https://codeforces.com/problemset/problem/1114/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1113B. Sasha and Magnetic Machines",
    "url": "https://codeforces.com/problemset/problem/1113/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1113A. Sasha and His Trip",
    "url": "https://codeforces.com/problemset/problem/1113/A",
    "difficulty": 900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1111E. Tree",
    "url": "https://codeforces.com/problemset/problem/1111/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1111D. Destroy the Colony",
    "url": "https://codeforces.com/problemset/problem/1111/D",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1111C. Creative Snap",
    "url": "https://codeforces.com/problemset/problem/1111/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1111B. Average Superhero Gang Power ",
    "url": "https://codeforces.com/problemset/problem/1111/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1111A. Superhero Transformation",
    "url": "https://codeforces.com/problemset/problem/1111/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110H. Modest Substrings",
    "url": "https://codeforces.com/problemset/problem/1110/H",
    "difficulty": 3500,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110G. Tree-Tac-Toe ",
    "url": "https://codeforces.com/problemset/problem/1110/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110F. Nearest Leaf",
    "url": "https://codeforces.com/problemset/problem/1110/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110E. Magic Stones",
    "url": "https://codeforces.com/problemset/problem/1110/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110D. Jongmah",
    "url": "https://codeforces.com/problemset/problem/1110/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110C. Meaningless Operations",
    "url": "https://codeforces.com/problemset/problem/1110/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110B. Tape",
    "url": "https://codeforces.com/problemset/problem/1110/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1110A. Parity",
    "url": "https://codeforces.com/problemset/problem/1110/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109F. Sasha and Algorithm of Silence's Sounds",
    "url": "https://codeforces.com/problemset/problem/1109/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109E. Sasha and a Very Easy Test",
    "url": "https://codeforces.com/problemset/problem/1109/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109D. Sasha and Interesting Fact from Graph Theory",
    "url": "https://codeforces.com/problemset/problem/1109/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109C. Sasha and a Patient Friend",
    "url": "https://codeforces.com/problemset/problem/1109/C",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109B. Sasha and One More Name",
    "url": "https://codeforces.com/problemset/problem/1109/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1109A. Sasha and a Bit of Relax",
    "url": "https://codeforces.com/problemset/problem/1109/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108F. MST Unification",
    "url": "https://codeforces.com/problemset/problem/1108/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108E2. Array and Segments (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1108/E2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108E1. Array and Segments (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1108/E1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108D. Diverse Garland",
    "url": "https://codeforces.com/problemset/problem/1108/D",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108C. Nice Garland",
    "url": "https://codeforces.com/problemset/problem/1108/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108B. Divisors of Two Integers",
    "url": "https://codeforces.com/problemset/problem/1108/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1108A. Two distinct points",
    "url": "https://codeforces.com/problemset/problem/1108/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107G. Vasya and Maximum Profit",
    "url": "https://codeforces.com/problemset/problem/1107/G",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107F. Vasya and Endless Credits",
    "url": "https://codeforces.com/problemset/problem/1107/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107E. Vasya and Binary String",
    "url": "https://codeforces.com/problemset/problem/1107/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107D. Compression",
    "url": "https://codeforces.com/problemset/problem/1107/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107C. Brutality",
    "url": "https://codeforces.com/problemset/problem/1107/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107B. Digital root",
    "url": "https://codeforces.com/problemset/problem/1107/B",
    "difficulty": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1107A. Digits Sequence Dividing",
    "url": "https://codeforces.com/problemset/problem/1107/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106F. Lunar New Year and a Recursive Sequence",
    "url": "https://codeforces.com/problemset/problem/1106/F",
    "difficulty": 2400,
    "tags": [
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106E. Lunar New Year and Red Envelopes",
    "url": "https://codeforces.com/problemset/problem/1106/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106D. Lunar New Year and a Wander",
    "url": "https://codeforces.com/problemset/problem/1106/D",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106C. Lunar New Year and Number Division",
    "url": "https://codeforces.com/problemset/problem/1106/C",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106B. Lunar New Year and Food Ordering",
    "url": "https://codeforces.com/problemset/problem/1106/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1106A. Lunar New Year and Cross Counting",
    "url": "https://codeforces.com/problemset/problem/1106/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1105E. Helping Hiasat ",
    "url": "https://codeforces.com/problemset/problem/1105/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1105D. Kilani and the Game",
    "url": "https://codeforces.com/problemset/problem/1105/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1105C. Ayoub and Lost Array",
    "url": "https://codeforces.com/problemset/problem/1105/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1105B. Zuhair and Strings",
    "url": "https://codeforces.com/problemset/problem/1105/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1105A. Salem and Sticks ",
    "url": "https://codeforces.com/problemset/problem/1105/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1104B. Game with string",
    "url": "https://codeforces.com/problemset/problem/1104/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1104A. Splitting into digits",
    "url": "https://codeforces.com/problemset/problem/1104/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1103E. Radix sum",
    "url": "https://codeforces.com/problemset/problem/1103/E",
    "difficulty": 3400,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1103D. Professional layer",
    "url": "https://codeforces.com/problemset/problem/1103/D",
    "difficulty": 3100,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1103C. Johnny Solving",
    "url": "https://codeforces.com/problemset/problem/1103/C",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1103B. Game with modulo",
    "url": "https://codeforces.com/problemset/problem/1103/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1103A. Grid game",
    "url": "https://codeforces.com/problemset/problem/1103/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102F. Elongated Matrix",
    "url": "https://codeforces.com/problemset/problem/1102/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102E. Monotonic Renumeration",
    "url": "https://codeforces.com/problemset/problem/1102/E",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102D. Balanced Ternary String",
    "url": "https://codeforces.com/problemset/problem/1102/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102C. Doors Breaking and Repairing",
    "url": "https://codeforces.com/problemset/problem/1102/C",
    "difficulty": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102B. Array K-Coloring",
    "url": "https://codeforces.com/problemset/problem/1102/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1102A. Integer Sequence Dividing",
    "url": "https://codeforces.com/problemset/problem/1102/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101G. (Zero XOR Subset)-less",
    "url": "https://codeforces.com/problemset/problem/1101/G",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101F. Trucks and Cities",
    "url": "https://codeforces.com/problemset/problem/1101/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101E. Polycarp's New Job",
    "url": "https://codeforces.com/problemset/problem/1101/E",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101D. GCD Counting",
    "url": "https://codeforces.com/problemset/problem/1101/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101C. Division and Union",
    "url": "https://codeforces.com/problemset/problem/1101/C",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101B. Accordion",
    "url": "https://codeforces.com/problemset/problem/1101/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1101A. Minimum Integer",
    "url": "https://codeforces.com/problemset/problem/1101/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100F. Ivan and Burgers",
    "url": "https://codeforces.com/problemset/problem/1100/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100E. Andrew and Taxi",
    "url": "https://codeforces.com/problemset/problem/1100/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100D. Dasha and Chess",
    "url": "https://codeforces.com/problemset/problem/1100/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "games",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100C. NN and the Optical Illusion",
    "url": "https://codeforces.com/problemset/problem/1100/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100B. Build a Contest",
    "url": "https://codeforces.com/problemset/problem/1100/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1100A. Roman and Browser",
    "url": "https://codeforces.com/problemset/problem/1100/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1099F. Cookies",
    "url": "https://codeforces.com/problemset/problem/1099/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1099C. Postcard",
    "url": "https://codeforces.com/problemset/problem/1099/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1099B. Squares and Segments",
    "url": "https://codeforces.com/problemset/problem/1099/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1099A. Snowball",
    "url": "https://codeforces.com/problemset/problem/1099/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098F. Ж-function",
    "url": "https://codeforces.com/problemset/problem/1098/F",
    "difficulty": 3500,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098E. Fedya the Potter",
    "url": "https://codeforces.com/problemset/problem/1098/E",
    "difficulty": 3400,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098D. Eels",
    "url": "https://codeforces.com/problemset/problem/1098/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098C. Construct a tree",
    "url": "https://codeforces.com/problemset/problem/1098/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098B. Nice table",
    "url": "https://codeforces.com/problemset/problem/1098/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1098A. Sum in the tree",
    "url": "https://codeforces.com/problemset/problem/1098/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097H. Mateusz and an Infinite Sequence",
    "url": "https://codeforces.com/problemset/problem/1097/H",
    "difficulty": 3400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097G. Vladislav and a Great Legend",
    "url": "https://codeforces.com/problemset/problem/1097/G",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097F. Alex and a TV Show",
    "url": "https://codeforces.com/problemset/problem/1097/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097E. Egor and an RPG game",
    "url": "https://codeforces.com/problemset/problem/1097/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097D. Makoto and a Blackboard",
    "url": "https://codeforces.com/problemset/problem/1097/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097C. Yuhao and a Parenthesis",
    "url": "https://codeforces.com/problemset/problem/1097/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097B. Petr and a Combination Lock",
    "url": "https://codeforces.com/problemset/problem/1097/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1097A. Gennady and a Card Game",
    "url": "https://codeforces.com/problemset/problem/1097/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096G. Lucky Tickets",
    "url": "https://codeforces.com/problemset/problem/1096/G",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096F. Inversion Expectation",
    "url": "https://codeforces.com/problemset/problem/1096/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096E. The Top Scorer",
    "url": "https://codeforces.com/problemset/problem/1096/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096D. Easy Problem",
    "url": "https://codeforces.com/problemset/problem/1096/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096C. Polygon for the Angle",
    "url": "https://codeforces.com/problemset/problem/1096/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096B. Substring Removal",
    "url": "https://codeforces.com/problemset/problem/1096/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1096A. Find Divisible",
    "url": "https://codeforces.com/problemset/problem/1096/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095F. Make It Connected",
    "url": "https://codeforces.com/problemset/problem/1095/F",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095E. Almost Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/1095/E",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095D. Circular Dance",
    "url": "https://codeforces.com/problemset/problem/1095/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095C. Powers Of Two",
    "url": "https://codeforces.com/problemset/problem/1095/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095B. Array Stabilization",
    "url": "https://codeforces.com/problemset/problem/1095/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1095A. Repeating Cipher",
    "url": "https://codeforces.com/problemset/problem/1095/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093G. Multidimensional Queries",
    "url": "https://codeforces.com/problemset/problem/1093/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093F. Vasya and Array",
    "url": "https://codeforces.com/problemset/problem/1093/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093E. Intersection of Permutations",
    "url": "https://codeforces.com/problemset/problem/1093/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093D. Beautiful Graph",
    "url": "https://codeforces.com/problemset/problem/1093/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093C. Mishka and the Last Exam",
    "url": "https://codeforces.com/problemset/problem/1093/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093B. Letters Rearranging",
    "url": "https://codeforces.com/problemset/problem/1093/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1093A. Dice Rolling",
    "url": "https://codeforces.com/problemset/problem/1093/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092F. Tree with Maximum Cost",
    "url": "https://codeforces.com/problemset/problem/1092/F",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092E. Minimal Diameter Forest",
    "url": "https://codeforces.com/problemset/problem/1092/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092D2. Great Vova Wall (Version 2)",
    "url": "https://codeforces.com/problemset/problem/1092/D2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092D1. Great Vova Wall (Version 1)",
    "url": "https://codeforces.com/problemset/problem/1092/D1",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092C. Prefixes and Suffixes",
    "url": "https://codeforces.com/problemset/problem/1092/C",
    "difficulty": 1700,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092B. Teams Forming",
    "url": "https://codeforces.com/problemset/problem/1092/B",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1092A. Uniform String",
    "url": "https://codeforces.com/problemset/problem/1092/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091H. New Year and the Tricolore Recreation",
    "url": "https://codeforces.com/problemset/problem/1091/H",
    "difficulty": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091G. New Year and the Factorisation Collaboration",
    "url": "https://codeforces.com/problemset/problem/1091/G",
    "difficulty": 3200,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091F. New Year and the Mallard Expedition",
    "url": "https://codeforces.com/problemset/problem/1091/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091E. New Year and the Acquaintance Estimation",
    "url": "https://codeforces.com/problemset/problem/1091/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091D. New Year and the Permutation Concatenation",
    "url": "https://codeforces.com/problemset/problem/1091/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091C. New Year and the Sphere Transmission",
    "url": "https://codeforces.com/problemset/problem/1091/C",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091B. New Year and the Treasure Geolocation",
    "url": "https://codeforces.com/problemset/problem/1091/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1091A. New Year and the Christmas Ornament",
    "url": "https://codeforces.com/problemset/problem/1091/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090M. The Pleasant Walk",
    "url": "https://codeforces.com/problemset/problem/1090/M",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090L. Berland University",
    "url": "https://codeforces.com/problemset/problem/1090/L",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090K. Right Expansion Of The Mind",
    "url": "https://codeforces.com/problemset/problem/1090/K",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090J. Two Prefixes",
    "url": "https://codeforces.com/problemset/problem/1090/J",
    "difficulty": 2600,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090I. Minimal Product",
    "url": "https://codeforces.com/problemset/problem/1090/I",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1090H. Linearization",
    "url": "https://codeforces.com/problemset/problem/1090/H",
    "difficulty": 2900,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090G. Combostone",
    "url": "https://codeforces.com/problemset/problem/1090/G",
    "difficulty": 2500,
    "tags": [
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090F. How to Learn You Score",
    "url": "https://codeforces.com/problemset/problem/1090/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090E. Horseback Riding",
    "url": "https://codeforces.com/problemset/problem/1090/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090D. Similar Arrays",
    "url": "https://codeforces.com/problemset/problem/1090/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090C. New Year Presents",
    "url": "https://codeforces.com/problemset/problem/1090/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1090B. LaTeX Expert",
    "url": "https://codeforces.com/problemset/problem/1090/B",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1090A. Company Merging",
    "url": "https://codeforces.com/problemset/problem/1090/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089M. Minegraphed",
    "url": "https://codeforces.com/problemset/problem/1089/M",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089L. Lazyland",
    "url": "https://codeforces.com/problemset/problem/1089/L",
    "difficulty": 900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1089K. King Kog's Reception",
    "url": "https://codeforces.com/problemset/problem/1089/K",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089J. JS Minification",
    "url": "https://codeforces.com/problemset/problem/1089/J",
    "difficulty": 3200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089I. Interval-Free Permutations",
    "url": "https://codeforces.com/problemset/problem/1089/I",
    "difficulty": 2600,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089H. Harder Satisfiability",
    "url": "https://codeforces.com/problemset/problem/1089/H",
    "difficulty": 3400,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089G. Guest Student",
    "url": "https://codeforces.com/problemset/problem/1089/G",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089F. Fractions",
    "url": "https://codeforces.com/problemset/problem/1089/F",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089E. Easy Chess",
    "url": "https://codeforces.com/problemset/problem/1089/E",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089D. Distance Sum",
    "url": "https://codeforces.com/problemset/problem/1089/D",
    "difficulty": 3100,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089C. Cactus Search",
    "url": "https://codeforces.com/problemset/problem/1089/C",
    "difficulty": 2500,
    "tags": [
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089B. Bimatching",
    "url": "https://codeforces.com/problemset/problem/1089/B",
    "difficulty": 3200,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1089A. Alice the Fan",
    "url": "https://codeforces.com/problemset/problem/1089/A",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088F. Ehab and a weird weight formula",
    "url": "https://codeforces.com/problemset/problem/1088/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088E. Ehab and a component choosing problem",
    "url": "https://codeforces.com/problemset/problem/1088/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088D. Ehab and another another xor problem",
    "url": "https://codeforces.com/problemset/problem/1088/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088C. Ehab and a 2-operation task",
    "url": "https://codeforces.com/problemset/problem/1088/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088B. Ehab and subtraction",
    "url": "https://codeforces.com/problemset/problem/1088/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1088A. Ehab and another construction problem",
    "url": "https://codeforces.com/problemset/problem/1088/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1086F. Forest Fires",
    "url": "https://codeforces.com/problemset/problem/1086/F",
    "difficulty": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085G. Beautiful Matrix",
    "url": "https://codeforces.com/problemset/problem/1085/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085F. Rock-Paper-Scissors Champion",
    "url": "https://codeforces.com/problemset/problem/1085/F",
    "difficulty": 2500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1085E. Vasya and Templates",
    "url": "https://codeforces.com/problemset/problem/1085/E",
    "difficulty": 2300,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085D. Minimum Diameter Tree",
    "url": "https://codeforces.com/problemset/problem/1085/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085C. Connect Three",
    "url": "https://codeforces.com/problemset/problem/1085/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085B. Div Times Mod",
    "url": "https://codeforces.com/problemset/problem/1085/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1085A. Right-Left Cipher",
    "url": "https://codeforces.com/problemset/problem/1085/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1084C. The Fair Nut and String",
    "url": "https://codeforces.com/problemset/problem/1084/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1084B. Kvass and the Fair Nut",
    "url": "https://codeforces.com/problemset/problem/1084/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1084A. The Fair Nut and Elevator",
    "url": "https://codeforces.com/problemset/problem/1084/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083F. The Fair Nut and Amusing Xor",
    "url": "https://codeforces.com/problemset/problem/1083/F",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083E. The Fair Nut and Rectangles",
    "url": "https://codeforces.com/problemset/problem/1083/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083D. The Fair Nut's getting crazy",
    "url": "https://codeforces.com/problemset/problem/1083/D",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083C. Max Mex",
    "url": "https://codeforces.com/problemset/problem/1083/C",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083B. The Fair Nut and Strings",
    "url": "https://codeforces.com/problemset/problem/1083/B",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1083A. The Fair Nut and the Best Path",
    "url": "https://codeforces.com/problemset/problem/1083/A",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082G. Petya and Graph",
    "url": "https://codeforces.com/problemset/problem/1082/G",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082F. Speed Dial",
    "url": "https://codeforces.com/problemset/problem/1082/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082E. Increasing Frequency",
    "url": "https://codeforces.com/problemset/problem/1082/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082D. Maximum Diameter Graph",
    "url": "https://codeforces.com/problemset/problem/1082/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082C. Multi-Subject Competition",
    "url": "https://codeforces.com/problemset/problem/1082/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082B. Vova and Trophies",
    "url": "https://codeforces.com/problemset/problem/1082/B",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1082A. Vasya and Book",
    "url": "https://codeforces.com/problemset/problem/1082/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081H. Palindromic Magic",
    "url": "https://codeforces.com/problemset/problem/1081/H",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081G. Mergesort Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1081/G",
    "difficulty": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081F. Tricky Interactor",
    "url": "https://codeforces.com/problemset/problem/1081/F",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081E. Missing Numbers",
    "url": "https://codeforces.com/problemset/problem/1081/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081D. Maximum Distance",
    "url": "https://codeforces.com/problemset/problem/1081/D",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081C. Colorful Bricks",
    "url": "https://codeforces.com/problemset/problem/1081/C",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081B. Farewell Party",
    "url": "https://codeforces.com/problemset/problem/1081/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1081A. Definite Game",
    "url": "https://codeforces.com/problemset/problem/1081/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080F. Katya and Segments Sets",
    "url": "https://codeforces.com/problemset/problem/1080/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080E. Sonya and Matrix Beauty",
    "url": "https://codeforces.com/problemset/problem/1080/E",
    "difficulty": 2400,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080D. Olya and magical square",
    "url": "https://codeforces.com/problemset/problem/1080/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080C. Masha and two friends",
    "url": "https://codeforces.com/problemset/problem/1080/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080B. Margarite and the best present",
    "url": "https://codeforces.com/problemset/problem/1080/B",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1080A. Petya and Origami",
    "url": "https://codeforces.com/problemset/problem/1080/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1078E. Negative Time Summation",
    "url": "https://codeforces.com/problemset/problem/1078/E",
    "difficulty": 3400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077F2. Pictures with Kittens (hard version)",
    "url": "https://codeforces.com/problemset/problem/1077/F2",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077F1. Pictures with Kittens (easy version)",
    "url": "https://codeforces.com/problemset/problem/1077/F1",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077E. Thematic Contests",
    "url": "https://codeforces.com/problemset/problem/1077/E",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077D. Cutting Out",
    "url": "https://codeforces.com/problemset/problem/1077/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077C. Good Array",
    "url": "https://codeforces.com/problemset/problem/1077/C",
    "difficulty": 1300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1077B. Disturbed People",
    "url": "https://codeforces.com/problemset/problem/1077/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1077A. Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1077/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076G. Array Game",
    "url": "https://codeforces.com/problemset/problem/1076/G",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076F. Summer Practice Report",
    "url": "https://codeforces.com/problemset/problem/1076/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076E. Vasya and a Tree",
    "url": "https://codeforces.com/problemset/problem/1076/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076D. Edge Deletion",
    "url": "https://codeforces.com/problemset/problem/1076/D",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076C. Meme Problem",
    "url": "https://codeforces.com/problemset/problem/1076/C",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076B. Divisor Subtraction",
    "url": "https://codeforces.com/problemset/problem/1076/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1076A. Minimizing the String",
    "url": "https://codeforces.com/problemset/problem/1076/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1075B. Taxi drivers and Lyft",
    "url": "https://codeforces.com/problemset/problem/1075/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1075A. The King's Race",
    "url": "https://codeforces.com/problemset/problem/1075/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073G. Yet Another LCP Problem",
    "url": "https://codeforces.com/problemset/problem/1073/G",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073F. Choosing Two Paths",
    "url": "https://codeforces.com/problemset/problem/1073/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073E. Segment Sum",
    "url": "https://codeforces.com/problemset/problem/1073/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073D. Berland Fair",
    "url": "https://codeforces.com/problemset/problem/1073/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073C. Vasya and Robot",
    "url": "https://codeforces.com/problemset/problem/1073/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073B. Vasya and Books",
    "url": "https://codeforces.com/problemset/problem/1073/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1073A. Diverse Substring",
    "url": "https://codeforces.com/problemset/problem/1073/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1071E. Rain Protection",
    "url": "https://codeforces.com/problemset/problem/1071/E",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070M. Algoland and Berland",
    "url": "https://codeforces.com/problemset/problem/1070/M",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070L. Odd Federalization",
    "url": "https://codeforces.com/problemset/problem/1070/L",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070K. Video Posts",
    "url": "https://codeforces.com/problemset/problem/1070/K",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070J. Streets and Avenues in Berhattan",
    "url": "https://codeforces.com/problemset/problem/1070/J",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070I. Privatization of Roads in Berland",
    "url": "https://codeforces.com/problemset/problem/1070/I",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070H. BerOS File Suggestion",
    "url": "https://codeforces.com/problemset/problem/1070/H",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070G. Monsters and Potions",
    "url": "https://codeforces.com/problemset/problem/1070/G",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070F. Debate",
    "url": "https://codeforces.com/problemset/problem/1070/F",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070E. Getting Deals Done",
    "url": "https://codeforces.com/problemset/problem/1070/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070D. Garbage Disposal",
    "url": "https://codeforces.com/problemset/problem/1070/D",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070C. Cloud Computing",
    "url": "https://codeforces.com/problemset/problem/1070/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070B. Berkomnadzor",
    "url": "https://codeforces.com/problemset/problem/1070/B",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1070A. Find a Number",
    "url": "https://codeforces.com/problemset/problem/1070/A",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graphs",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1068C. Colored Rooks",
    "url": "https://codeforces.com/problemset/problem/1068/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1068B. LCM",
    "url": "https://codeforces.com/problemset/problem/1068/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1068A. Birthday",
    "url": "https://codeforces.com/problemset/problem/1068/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1067E. Random Forest Rank",
    "url": "https://codeforces.com/problemset/problem/1067/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1067D. Computer Game",
    "url": "https://codeforces.com/problemset/problem/1067/D",
    "difficulty": 3100,
    "tags": [
      "dp",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1067C. Knights",
    "url": "https://codeforces.com/problemset/problem/1067/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1067B. Multihedgehog",
    "url": "https://codeforces.com/problemset/problem/1067/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1067A. Array Without Local Maximums ",
    "url": "https://codeforces.com/problemset/problem/1067/A",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066F. Yet another 2D Walking",
    "url": "https://codeforces.com/problemset/problem/1066/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066E. Binary Numbers AND Sum",
    "url": "https://codeforces.com/problemset/problem/1066/E",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066D. Boxes Packing",
    "url": "https://codeforces.com/problemset/problem/1066/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066C. Books Queries",
    "url": "https://codeforces.com/problemset/problem/1066/C",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066B. Heaters",
    "url": "https://codeforces.com/problemset/problem/1066/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1066A. Vova and Train",
    "url": "https://codeforces.com/problemset/problem/1066/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065G. Fibonacci Suffix",
    "url": "https://codeforces.com/problemset/problem/1065/G",
    "difficulty": 2700,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065F. Up and Down the Tree",
    "url": "https://codeforces.com/problemset/problem/1065/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065E. Side Transmutations",
    "url": "https://codeforces.com/problemset/problem/1065/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065D. Three Pieces",
    "url": "https://codeforces.com/problemset/problem/1065/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065C. Make It Equal",
    "url": "https://codeforces.com/problemset/problem/1065/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065B. Vasya and Isolated Vertices",
    "url": "https://codeforces.com/problemset/problem/1065/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1065A. Vasya and Chocolate",
    "url": "https://codeforces.com/problemset/problem/1065/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1064B. Equations of Mathematical Magic",
    "url": "https://codeforces.com/problemset/problem/1064/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1064A. Make a triangle!",
    "url": "https://codeforces.com/problemset/problem/1064/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063F. String Journey",
    "url": "https://codeforces.com/problemset/problem/1063/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063E. Lasers and Mirrors",
    "url": "https://codeforces.com/problemset/problem/1063/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063D. Candies for Children",
    "url": "https://codeforces.com/problemset/problem/1063/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063C. Dwarves, Hats and Extrasensory Abilities",
    "url": "https://codeforces.com/problemset/problem/1063/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "geometry",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063B. Labyrinth",
    "url": "https://codeforces.com/problemset/problem/1063/B",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1063A. Oh Those Palindromes",
    "url": "https://codeforces.com/problemset/problem/1063/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062F. Upgrading Cities",
    "url": "https://codeforces.com/problemset/problem/1062/F",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062E. Company",
    "url": "https://codeforces.com/problemset/problem/1062/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062D. Fun with Integers",
    "url": "https://codeforces.com/problemset/problem/1062/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062C. Banh-mi",
    "url": "https://codeforces.com/problemset/problem/1062/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062B. Math",
    "url": "https://codeforces.com/problemset/problem/1062/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1062A. A Prank",
    "url": "https://codeforces.com/problemset/problem/1062/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061F. Lost Root",
    "url": "https://codeforces.com/problemset/problem/1061/F",
    "difficulty": 2400,
    "tags": [
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061E. Politics",
    "url": "https://codeforces.com/problemset/problem/1061/E",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061D. TV Shows",
    "url": "https://codeforces.com/problemset/problem/1061/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061C. Multiplicity",
    "url": "https://codeforces.com/problemset/problem/1061/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061B. Views Matter",
    "url": "https://codeforces.com/problemset/problem/1061/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1061A. Coins",
    "url": "https://codeforces.com/problemset/problem/1061/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060H. Sophisticated Device",
    "url": "https://codeforces.com/problemset/problem/1060/H",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060G. Balls and Pockets",
    "url": "https://codeforces.com/problemset/problem/1060/G",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060F. Shrinking Tree",
    "url": "https://codeforces.com/problemset/problem/1060/F",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060E. Sergey and Subway",
    "url": "https://codeforces.com/problemset/problem/1060/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060D. Social Circles",
    "url": "https://codeforces.com/problemset/problem/1060/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060C. Maximum Subrectangle",
    "url": "https://codeforces.com/problemset/problem/1060/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060B. Maximum Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1060/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1060A. Phone Numbers",
    "url": "https://codeforces.com/problemset/problem/1060/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1059E. Split the Tree",
    "url": "https://codeforces.com/problemset/problem/1059/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1059D. Nature Reserve",
    "url": "https://codeforces.com/problemset/problem/1059/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1059C. Sequence Transformation",
    "url": "https://codeforces.com/problemset/problem/1059/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1059B. Forgery",
    "url": "https://codeforces.com/problemset/problem/1059/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1059A. Cashier",
    "url": "https://codeforces.com/problemset/problem/1059/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1057C. Tanya and Colored Candies",
    "url": "https://codeforces.com/problemset/problem/1057/C",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1057B. DDoS",
    "url": "https://codeforces.com/problemset/problem/1057/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1057A. Bmail Computer Network",
    "url": "https://codeforces.com/problemset/problem/1057/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056H. Detect Robots",
    "url": "https://codeforces.com/problemset/problem/1056/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056G. Take Metro",
    "url": "https://codeforces.com/problemset/problem/1056/G",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056F. Write The Contest",
    "url": "https://codeforces.com/problemset/problem/1056/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056E. Check Transcription",
    "url": "https://codeforces.com/problemset/problem/1056/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056D. Decorate Apple Tree",
    "url": "https://codeforces.com/problemset/problem/1056/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056C. Pick Heroes",
    "url": "https://codeforces.com/problemset/problem/1056/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "interactive",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056B. Divide Candies",
    "url": "https://codeforces.com/problemset/problem/1056/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1056A. Determine Line",
    "url": "https://codeforces.com/problemset/problem/1056/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055G. Jellyfish Nightmare",
    "url": "https://codeforces.com/problemset/problem/1055/G",
    "difficulty": 3500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1055F. Tree and XOR",
    "url": "https://codeforces.com/problemset/problem/1055/F",
    "difficulty": 2900,
    "tags": [
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055E. Segments on the Line",
    "url": "https://codeforces.com/problemset/problem/1055/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055D. Refactoring",
    "url": "https://codeforces.com/problemset/problem/1055/D",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055C. Lucky Days",
    "url": "https://codeforces.com/problemset/problem/1055/C",
    "difficulty": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055B. Alice and Hairdresser",
    "url": "https://codeforces.com/problemset/problem/1055/B",
    "difficulty": 1300,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1055A. Metro",
    "url": "https://codeforces.com/problemset/problem/1055/A",
    "difficulty": 900,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054H. Epic Convolution",
    "url": "https://codeforces.com/problemset/problem/1054/H",
    "difficulty": 3500,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054G. New Road Network",
    "url": "https://codeforces.com/problemset/problem/1054/G",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054F. Electric Scheme",
    "url": "https://codeforces.com/problemset/problem/1054/F",
    "difficulty": 2700,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054E. Chips Puzzle",
    "url": "https://codeforces.com/problemset/problem/1054/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054D. Changing Array",
    "url": "https://codeforces.com/problemset/problem/1054/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054C. Candies Distribution",
    "url": "https://codeforces.com/problemset/problem/1054/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054B. Appending Mex",
    "url": "https://codeforces.com/problemset/problem/1054/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1054A. Elevator or Stairs?",
    "url": "https://codeforces.com/problemset/problem/1054/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1053E. Euler tour",
    "url": "https://codeforces.com/problemset/problem/1053/E",
    "difficulty": 3500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051G. Distinctification",
    "url": "https://codeforces.com/problemset/problem/1051/G",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051F. The Shortest Statement",
    "url": "https://codeforces.com/problemset/problem/1051/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051E. Vasya and Big Integers",
    "url": "https://codeforces.com/problemset/problem/1051/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051D. Bicolorings",
    "url": "https://codeforces.com/problemset/problem/1051/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051C. Vasya and Multisets",
    "url": "https://codeforces.com/problemset/problem/1051/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051B. Relatively Prime Pairs",
    "url": "https://codeforces.com/problemset/problem/1051/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1051A. Vasya And Password",
    "url": "https://codeforces.com/problemset/problem/1051/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1047B. Cover Points",
    "url": "https://codeforces.com/problemset/problem/1047/B",
    "difficulty": 900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1047A. Little C Loves 3 I",
    "url": "https://codeforces.com/problemset/problem/1047/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1046I. Say Hello",
    "url": "https://codeforces.com/problemset/problem/1046/I",
    "difficulty": 2300,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1046F. Splitting money",
    "url": "https://codeforces.com/problemset/problem/1046/F",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1046C. Space Formula",
    "url": "https://codeforces.com/problemset/problem/1046/C",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045J. Moonwalk challenge",
    "url": "https://codeforces.com/problemset/problem/1045/J",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045I. Palindrome Pairs",
    "url": "https://codeforces.com/problemset/problem/1045/I",
    "difficulty": 1600,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045H. Self-exploration",
    "url": "https://codeforces.com/problemset/problem/1045/H",
    "difficulty": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045G. AI robots",
    "url": "https://codeforces.com/problemset/problem/1045/G",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045F. Shady Lady",
    "url": "https://codeforces.com/problemset/problem/1045/F",
    "difficulty": 3400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045E. Ancient civilizations",
    "url": "https://codeforces.com/problemset/problem/1045/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045D. Interstellar battle",
    "url": "https://codeforces.com/problemset/problem/1045/D",
    "difficulty": 2200,
    "tags": [
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045C. Hyperspace Highways",
    "url": "https://codeforces.com/problemset/problem/1045/C",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045B. Space Isaac",
    "url": "https://codeforces.com/problemset/problem/1045/B",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1045A. Last chance",
    "url": "https://codeforces.com/problemset/problem/1045/A",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "flows",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044F. DFS",
    "url": "https://codeforces.com/problemset/problem/1044/F",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044E. Grid Sort",
    "url": "https://codeforces.com/problemset/problem/1044/E",
    "difficulty": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044D. Deduction Queries",
    "url": "https://codeforces.com/problemset/problem/1044/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044C. Optimal Polygon Perimeter",
    "url": "https://codeforces.com/problemset/problem/1044/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044B. Intersecting Subtrees",
    "url": "https://codeforces.com/problemset/problem/1044/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1044A. The Tower is Going Home",
    "url": "https://codeforces.com/problemset/problem/1044/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043G. Speckled Band",
    "url": "https://codeforces.com/problemset/problem/1043/G",
    "difficulty": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043F. Make It One",
    "url": "https://codeforces.com/problemset/problem/1043/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043E. Train Hard, Win Easy",
    "url": "https://codeforces.com/problemset/problem/1043/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043D. Mysterious Crime",
    "url": "https://codeforces.com/problemset/problem/1043/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043C. Smallest Word",
    "url": "https://codeforces.com/problemset/problem/1043/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043B. Lost Array",
    "url": "https://codeforces.com/problemset/problem/1043/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1043A. Elections",
    "url": "https://codeforces.com/problemset/problem/1043/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042F. Leaf Sets",
    "url": "https://codeforces.com/problemset/problem/1042/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042E. Vasya and Magic Matrix",
    "url": "https://codeforces.com/problemset/problem/1042/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042D. Petya and Array",
    "url": "https://codeforces.com/problemset/problem/1042/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042C. Array Product",
    "url": "https://codeforces.com/problemset/problem/1042/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042B. Vitamins",
    "url": "https://codeforces.com/problemset/problem/1042/B",
    "difficulty": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1042A. Benches",
    "url": "https://codeforces.com/problemset/problem/1042/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041F. Ray in the tube",
    "url": "https://codeforces.com/problemset/problem/1041/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041E. Tree Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1041/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041D. Glider",
    "url": "https://codeforces.com/problemset/problem/1041/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041C. Coffee Break",
    "url": "https://codeforces.com/problemset/problem/1041/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041B. Buying a TV Set",
    "url": "https://codeforces.com/problemset/problem/1041/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1041A. Heist",
    "url": "https://codeforces.com/problemset/problem/1041/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1040B. Shashlik Cooking",
    "url": "https://codeforces.com/problemset/problem/1040/B",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1040A. Palindrome Dance",
    "url": "https://codeforces.com/problemset/problem/1040/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1039E. Summer Oenothera Exhibition",
    "url": "https://codeforces.com/problemset/problem/1039/E",
    "difficulty": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1039D. You Are Given a Tree",
    "url": "https://codeforces.com/problemset/problem/1039/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1039C. Network Safety",
    "url": "https://codeforces.com/problemset/problem/1039/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1039B. Subway Pursuit",
    "url": "https://codeforces.com/problemset/problem/1039/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1039A. Timetable",
    "url": "https://codeforces.com/problemset/problem/1039/A",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038F. Wrap Around",
    "url": "https://codeforces.com/problemset/problem/1038/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038E. Maximum Matching",
    "url": "https://codeforces.com/problemset/problem/1038/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038D. Slime",
    "url": "https://codeforces.com/problemset/problem/1038/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038C. Gambling",
    "url": "https://codeforces.com/problemset/problem/1038/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038B. Non-Coprime Partition",
    "url": "https://codeforces.com/problemset/problem/1038/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1038A. Equality",
    "url": "https://codeforces.com/problemset/problem/1038/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037H. Security",
    "url": "https://codeforces.com/problemset/problem/1037/H",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037G. A Game on Strings",
    "url": "https://codeforces.com/problemset/problem/1037/G",
    "difficulty": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037F. Maximum Reduction",
    "url": "https://codeforces.com/problemset/problem/1037/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037E. Trips",
    "url": "https://codeforces.com/problemset/problem/1037/E",
    "difficulty": 2200,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037D. Valid BFS?",
    "url": "https://codeforces.com/problemset/problem/1037/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037C. Equalize",
    "url": "https://codeforces.com/problemset/problem/1037/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037B. Reach Median",
    "url": "https://codeforces.com/problemset/problem/1037/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1037A. Packets",
    "url": "https://codeforces.com/problemset/problem/1037/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036G. Sources and Sinks",
    "url": "https://codeforces.com/problemset/problem/1036/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036F. Relatively Prime Powers",
    "url": "https://codeforces.com/problemset/problem/1036/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036E. Covered Points",
    "url": "https://codeforces.com/problemset/problem/1036/E",
    "difficulty": 2400,
    "tags": [
      "fft",
      "geometry",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036D. Vasya and Arrays",
    "url": "https://codeforces.com/problemset/problem/1036/D",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036C. Classy Numbers",
    "url": "https://codeforces.com/problemset/problem/1036/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036B. Diagonal Walking v.2",
    "url": "https://codeforces.com/problemset/problem/1036/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1036A. Function Height",
    "url": "https://codeforces.com/problemset/problem/1036/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1034E. Little C Loves 3 III",
    "url": "https://codeforces.com/problemset/problem/1034/E",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1034D. Intervals of Intervals",
    "url": "https://codeforces.com/problemset/problem/1034/D",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1034C. Region Separation",
    "url": "https://codeforces.com/problemset/problem/1034/C",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1034B. Little C Loves 3 II",
    "url": "https://codeforces.com/problemset/problem/1034/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1034A. Enlarge GCD",
    "url": "https://codeforces.com/problemset/problem/1034/A",
    "difficulty": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033G. Chip Game",
    "url": "https://codeforces.com/problemset/problem/1033/G",
    "difficulty": 3500,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033F. Boolean Computer",
    "url": "https://codeforces.com/problemset/problem/1033/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033E. Hidden Bipartite Graph",
    "url": "https://codeforces.com/problemset/problem/1033/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033D. Divisors",
    "url": "https://codeforces.com/problemset/problem/1033/D",
    "difficulty": 2000,
    "tags": [
      "interactive",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033C. Permutation Game",
    "url": "https://codeforces.com/problemset/problem/1033/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033B. Square Difference",
    "url": "https://codeforces.com/problemset/problem/1033/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1033A. King Escape",
    "url": "https://codeforces.com/problemset/problem/1033/A",
    "difficulty": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1032G. Chattering",
    "url": "https://codeforces.com/problemset/problem/1032/G",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1032F. Vasya and Maximum Matching",
    "url": "https://codeforces.com/problemset/problem/1032/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1032E. The Unbearable Lightness of Weights",
    "url": "https://codeforces.com/problemset/problem/1032/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1032D. Barcelonian Distance",
    "url": "https://codeforces.com/problemset/problem/1032/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1032C. Playing Piano",
    "url": "https://codeforces.com/problemset/problem/1032/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1032B. Personalized Cup",
    "url": "https://codeforces.com/problemset/problem/1032/B",
    "difficulty": 1200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1032A. Kitchen Utensils",
    "url": "https://codeforces.com/problemset/problem/1032/A",
    "difficulty": 900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1031F. Familiar Operations",
    "url": "https://codeforces.com/problemset/problem/1031/F",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1031E. Triple Flips",
    "url": "https://codeforces.com/problemset/problem/1031/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1031D. Minimum path",
    "url": "https://codeforces.com/problemset/problem/1031/D",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1031C. Cram Time",
    "url": "https://codeforces.com/problemset/problem/1031/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1031B. Curiosity Has No Limits",
    "url": "https://codeforces.com/problemset/problem/1031/B",
    "difficulty": 1500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "1031A. Golden Plate",
    "url": "https://codeforces.com/problemset/problem/1031/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030G. Linear Congruential Generator",
    "url": "https://codeforces.com/problemset/problem/1030/G",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030F. Putting Boxes Together",
    "url": "https://codeforces.com/problemset/problem/1030/F",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030E. Vasya and Good Sequences",
    "url": "https://codeforces.com/problemset/problem/1030/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030D. Vasya and Triangle",
    "url": "https://codeforces.com/problemset/problem/1030/D",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030C. Vasya and Golden Ticket",
    "url": "https://codeforces.com/problemset/problem/1030/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030B. Vasya and Cornfield",
    "url": "https://codeforces.com/problemset/problem/1030/B",
    "difficulty": 1100,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1030A. In Search of an Easy Problem",
    "url": "https://codeforces.com/problemset/problem/1030/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029F. Multicolored Markers",
    "url": "https://codeforces.com/problemset/problem/1029/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029E. Tree with Small Distances",
    "url": "https://codeforces.com/problemset/problem/1029/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029D. Concatenated Multiples",
    "url": "https://codeforces.com/problemset/problem/1029/D",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029C. Maximal Intersection",
    "url": "https://codeforces.com/problemset/problem/1029/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029B. Creating the Contest",
    "url": "https://codeforces.com/problemset/problem/1029/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1029A. Many Equal Substrings",
    "url": "https://codeforces.com/problemset/problem/1029/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028H. Make Square",
    "url": "https://codeforces.com/problemset/problem/1028/H",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028G. Guess the number",
    "url": "https://codeforces.com/problemset/problem/1028/G",
    "difficulty": 3000,
    "tags": [
      "dp",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028F. Make Symmetrical",
    "url": "https://codeforces.com/problemset/problem/1028/F",
    "difficulty": 2900,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028E. Restore Array",
    "url": "https://codeforces.com/problemset/problem/1028/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028D. Order book",
    "url": "https://codeforces.com/problemset/problem/1028/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028C. Rectangles",
    "url": "https://codeforces.com/problemset/problem/1028/C",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028B. Unnatural Conditions",
    "url": "https://codeforces.com/problemset/problem/1028/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1028A. Find Square",
    "url": "https://codeforces.com/problemset/problem/1028/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027G. X-mouse in the Campus",
    "url": "https://codeforces.com/problemset/problem/1027/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027F. Session in BSU",
    "url": "https://codeforces.com/problemset/problem/1027/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027E. Inverse Coloring",
    "url": "https://codeforces.com/problemset/problem/1027/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027D. Mouse Hunt",
    "url": "https://codeforces.com/problemset/problem/1027/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027C. Minimum Value Rectangle",
    "url": "https://codeforces.com/problemset/problem/1027/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027B. Numbers on the Chessboard",
    "url": "https://codeforces.com/problemset/problem/1027/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1027A. Palindromic Twist",
    "url": "https://codeforces.com/problemset/problem/1027/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025G. Company Acquisitions",
    "url": "https://codeforces.com/problemset/problem/1025/G",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025F. Disjoint Triangles",
    "url": "https://codeforces.com/problemset/problem/1025/F",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025E. Colored Cubes",
    "url": "https://codeforces.com/problemset/problem/1025/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025D. Recovering BST",
    "url": "https://codeforces.com/problemset/problem/1025/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025C. Plasticine zebra",
    "url": "https://codeforces.com/problemset/problem/1025/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025B. Weakened Common Divisor",
    "url": "https://codeforces.com/problemset/problem/1025/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1025A. Doggo Recoloring",
    "url": "https://codeforces.com/problemset/problem/1025/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023G. Pisces",
    "url": "https://codeforces.com/problemset/problem/1023/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "flows",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023F. Mobile Phone Network",
    "url": "https://codeforces.com/problemset/problem/1023/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023E. Down or Right",
    "url": "https://codeforces.com/problemset/problem/1023/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "interactive",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023D. Array Restoration",
    "url": "https://codeforces.com/problemset/problem/1023/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023C. Bracket Subsequence",
    "url": "https://codeforces.com/problemset/problem/1023/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023B. Pair of Toys",
    "url": "https://codeforces.com/problemset/problem/1023/B",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1023A. Single Wildcard Pattern Matching",
    "url": "https://codeforces.com/problemset/problem/1023/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1020B. Badge",
    "url": "https://codeforces.com/problemset/problem/1020/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1020A. New Building for SIS",
    "url": "https://codeforces.com/problemset/problem/1020/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1019E. Raining season",
    "url": "https://codeforces.com/problemset/problem/1019/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1019D. Large Triangle",
    "url": "https://codeforces.com/problemset/problem/1019/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1019C. Sergey's problem",
    "url": "https://codeforces.com/problemset/problem/1019/C",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1019B. The hat",
    "url": "https://codeforces.com/problemset/problem/1019/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1019A. Elections",
    "url": "https://codeforces.com/problemset/problem/1019/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017H. The Films",
    "url": "https://codeforces.com/problemset/problem/1017/H",
    "difficulty": 3300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017G. The Tree",
    "url": "https://codeforces.com/problemset/problem/1017/G",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017F. The Neutral Zone",
    "url": "https://codeforces.com/problemset/problem/1017/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017E. The Supersonic Rocket",
    "url": "https://codeforces.com/problemset/problem/1017/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017D. The Wu",
    "url": "https://codeforces.com/problemset/problem/1017/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017C. The Phone Number",
    "url": "https://codeforces.com/problemset/problem/1017/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017B. The Bits",
    "url": "https://codeforces.com/problemset/problem/1017/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1017A. The Rank",
    "url": "https://codeforces.com/problemset/problem/1017/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016G. Appropriate Team",
    "url": "https://codeforces.com/problemset/problem/1016/G",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016F. Road Projects",
    "url": "https://codeforces.com/problemset/problem/1016/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016E. Rest In The Shades",
    "url": "https://codeforces.com/problemset/problem/1016/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016D. Vasya And The Matrix",
    "url": "https://codeforces.com/problemset/problem/1016/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016C. Vasya And The Mushrooms",
    "url": "https://codeforces.com/problemset/problem/1016/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016B. Segment Occurrences",
    "url": "https://codeforces.com/problemset/problem/1016/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1016A. Death Note",
    "url": "https://codeforces.com/problemset/problem/1016/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015F. Bracket Substring",
    "url": "https://codeforces.com/problemset/problem/1015/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015E2. Stars Drawing (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1015/E2",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015E1. Stars Drawing (Easy Edition)",
    "url": "https://codeforces.com/problemset/problem/1015/E1",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015D. Walking Between Houses",
    "url": "https://codeforces.com/problemset/problem/1015/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015C. Songs Compression",
    "url": "https://codeforces.com/problemset/problem/1015/C",
    "difficulty": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015B. Obtaining the String",
    "url": "https://codeforces.com/problemset/problem/1015/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1015A. Points in Segments",
    "url": "https://codeforces.com/problemset/problem/1015/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1013B. And",
    "url": "https://codeforces.com/problemset/problem/1013/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1013A. Piles With Stones",
    "url": "https://codeforces.com/problemset/problem/1013/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012F. Passports",
    "url": "https://codeforces.com/problemset/problem/1012/F",
    "difficulty": 3400,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012E. Cycle sort",
    "url": "https://codeforces.com/problemset/problem/1012/E",
    "difficulty": 3100,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012D. AB-Strings",
    "url": "https://codeforces.com/problemset/problem/1012/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012C. Hills",
    "url": "https://codeforces.com/problemset/problem/1012/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012B. Chemical table",
    "url": "https://codeforces.com/problemset/problem/1012/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1012A. Photo of The Sky",
    "url": "https://codeforces.com/problemset/problem/1012/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1011B. Planning The Expedition",
    "url": "https://codeforces.com/problemset/problem/1011/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1011A. Stages",
    "url": "https://codeforces.com/problemset/problem/1011/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010F. Tree",
    "url": "https://codeforces.com/problemset/problem/1010/F",
    "difficulty": 3400,
    "tags": [
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010E. Store",
    "url": "https://codeforces.com/problemset/problem/1010/E",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010D. Mars rover",
    "url": "https://codeforces.com/problemset/problem/1010/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010C. Border",
    "url": "https://codeforces.com/problemset/problem/1010/C",
    "difficulty": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010B. Rocket",
    "url": "https://codeforces.com/problemset/problem/1010/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1010A. Fly",
    "url": "https://codeforces.com/problemset/problem/1010/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009G. Allowed Letters",
    "url": "https://codeforces.com/problemset/problem/1009/G",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "flows",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009F. Dominant Indices",
    "url": "https://codeforces.com/problemset/problem/1009/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009E. Intercity Travelling",
    "url": "https://codeforces.com/problemset/problem/1009/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009D. Relatively Prime Graph",
    "url": "https://codeforces.com/problemset/problem/1009/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009C. Annoying Present",
    "url": "https://codeforces.com/problemset/problem/1009/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009B. Minimum Ternary String",
    "url": "https://codeforces.com/problemset/problem/1009/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1009A. Game Shopping",
    "url": "https://codeforces.com/problemset/problem/1009/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1008B. Turn the Rectangles",
    "url": "https://codeforces.com/problemset/problem/1008/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1008A. Romaji",
    "url": "https://codeforces.com/problemset/problem/1008/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1007E. Mini Metro",
    "url": "https://codeforces.com/problemset/problem/1007/E",
    "difficulty": 3400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1007D. Ants",
    "url": "https://codeforces.com/problemset/problem/1007/D",
    "difficulty": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1007C. Guess two numbers",
    "url": "https://codeforces.com/problemset/problem/1007/C",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1007B. Pave the Parallelepiped",
    "url": "https://codeforces.com/problemset/problem/1007/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1007A. Reorder the Array",
    "url": "https://codeforces.com/problemset/problem/1007/A",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006F. Xor-Paths",
    "url": "https://codeforces.com/problemset/problem/1006/F",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006E. Military Problem",
    "url": "https://codeforces.com/problemset/problem/1006/E",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006D. Two Strings Swaps",
    "url": "https://codeforces.com/problemset/problem/1006/D",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006C. Three Parts of the Array",
    "url": "https://codeforces.com/problemset/problem/1006/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006B. Polycarp's Practice",
    "url": "https://codeforces.com/problemset/problem/1006/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1006A. Adjacent Replacements",
    "url": "https://codeforces.com/problemset/problem/1006/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005F. Berland and the Shortest Paths",
    "url": "https://codeforces.com/problemset/problem/1005/F",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005E2. Median on Segments (General Case Edition)",
    "url": "https://codeforces.com/problemset/problem/1005/E2",
    "difficulty": 2400,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005E1. Median on Segments (Permutations Edition)",
    "url": "https://codeforces.com/problemset/problem/1005/E1",
    "difficulty": 1800,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005D. Polycarp and Div 3",
    "url": "https://codeforces.com/problemset/problem/1005/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005C. Summarize to the Power of Two",
    "url": "https://codeforces.com/problemset/problem/1005/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005B. Delete from the Left",
    "url": "https://codeforces.com/problemset/problem/1005/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1005A. Tanya and Stairways",
    "url": "https://codeforces.com/problemset/problem/1005/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004F. Sonya and Bitwise OR",
    "url": "https://codeforces.com/problemset/problem/1004/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004E. Sonya and Ice Cream",
    "url": "https://codeforces.com/problemset/problem/1004/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004D. Sonya and Matrix",
    "url": "https://codeforces.com/problemset/problem/1004/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004C. Sonya and Robots",
    "url": "https://codeforces.com/problemset/problem/1004/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004B. Sonya and Exhibition",
    "url": "https://codeforces.com/problemset/problem/1004/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1004A. Sonya and Hotels",
    "url": "https://codeforces.com/problemset/problem/1004/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003F. Abbreviation",
    "url": "https://codeforces.com/problemset/problem/1003/F",
    "difficulty": 2200,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003E. Tree Constructing",
    "url": "https://codeforces.com/problemset/problem/1003/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003D. Coins and Queries",
    "url": "https://codeforces.com/problemset/problem/1003/D",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003C. Intense Heat",
    "url": "https://codeforces.com/problemset/problem/1003/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003B. Binary String Constructing",
    "url": "https://codeforces.com/problemset/problem/1003/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1003A. Polycarp's Pockets",
    "url": "https://codeforces.com/problemset/problem/1003/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002E2. Another array reconstruction algorithm",
    "url": "https://codeforces.com/problemset/problem/1002/E2",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002E1. Bernstein-Vazirani algorithm",
    "url": "https://codeforces.com/problemset/problem/1002/E1",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002D3. Oracle for majority function",
    "url": "https://codeforces.com/problemset/problem/1002/D3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002D2. Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2",
    "url": "https://codeforces.com/problemset/problem/1002/D2",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002D1. Oracle for f(x) = b * x mod 2",
    "url": "https://codeforces.com/problemset/problem/1002/D1",
    "difficulty": 1200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002C2. Distinguish zero state and plus state without errors",
    "url": "https://codeforces.com/problemset/problem/1002/C2",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002C1. Distinguish zero state and plus state with minimum error",
    "url": "https://codeforces.com/problemset/problem/1002/C1",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002B4. Distinguish four 2-qubit states - 2",
    "url": "https://codeforces.com/problemset/problem/1002/B4",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002B3. Distinguish four 2-qubit states",
    "url": "https://codeforces.com/problemset/problem/1002/B3",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002B2. Distinguish GHZ state and W state",
    "url": "https://codeforces.com/problemset/problem/1002/B2",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002B1. Distinguish zero state and W state",
    "url": "https://codeforces.com/problemset/problem/1002/B1",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002A4. Generate W state",
    "url": "https://codeforces.com/problemset/problem/1002/A4",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002A3. Generate superposition of two basis states",
    "url": "https://codeforces.com/problemset/problem/1002/A3",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002A2. Generate superposition of zero state and a basis state",
    "url": "https://codeforces.com/problemset/problem/1002/A2",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1002A1. Generate superposition of all basis states",
    "url": "https://codeforces.com/problemset/problem/1002/A1",
    "difficulty": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001I. Deutsch-Jozsa algorithm",
    "url": "https://codeforces.com/problemset/problem/1001/I",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001H. Oracle for f(x) = parity of the number of 1s in x",
    "url": "https://codeforces.com/problemset/problem/1001/H",
    "difficulty": 1200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001G. Oracle for f(x) = k-th element of x",
    "url": "https://codeforces.com/problemset/problem/1001/G",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001F. Distinguish multi-qubit basis states",
    "url": "https://codeforces.com/problemset/problem/1001/F",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001E. Distinguish Bell states",
    "url": "https://codeforces.com/problemset/problem/1001/E",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001D. Distinguish plus state and minus state",
    "url": "https://codeforces.com/problemset/problem/1001/D",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001C. Generate GHZ state",
    "url": "https://codeforces.com/problemset/problem/1001/C",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001B. Generate Bell state",
    "url": "https://codeforces.com/problemset/problem/1001/B",
    "difficulty": 1400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1001A. Generate plus state or minus state",
    "url": "https://codeforces.com/problemset/problem/1001/A",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000G. Two-Paths",
    "url": "https://codeforces.com/problemset/problem/1000/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000F. One Occurrence",
    "url": "https://codeforces.com/problemset/problem/1000/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000E. We Need More Bosses",
    "url": "https://codeforces.com/problemset/problem/1000/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000D. Yet Another Problem On a Subsequence",
    "url": "https://codeforces.com/problemset/problem/1000/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000C. Covered Points Count",
    "url": "https://codeforces.com/problemset/problem/1000/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000B. Light It Up",
    "url": "https://codeforces.com/problemset/problem/1000/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1000A. Codehorses T-shirts",
    "url": "https://codeforces.com/problemset/problem/1000/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999F. Cards and Joy",
    "url": "https://codeforces.com/problemset/problem/999/F",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999E. Reachability from the Capital",
    "url": "https://codeforces.com/problemset/problem/999/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999D. Equalize the Remainders",
    "url": "https://codeforces.com/problemset/problem/999/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999C. Alphabetic Removals",
    "url": "https://codeforces.com/problemset/problem/999/C",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999B. Reversing Encryption",
    "url": "https://codeforces.com/problemset/problem/999/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "999A. Mishka and Contest",
    "url": "https://codeforces.com/problemset/problem/999/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "998B. Cutting",
    "url": "https://codeforces.com/problemset/problem/998/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "998A. Balloons",
    "url": "https://codeforces.com/problemset/problem/998/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "997E. Good Subsegments",
    "url": "https://codeforces.com/problemset/problem/997/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "997D. Cycles in product",
    "url": "https://codeforces.com/problemset/problem/997/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "997C. Sky Full of Stars",
    "url": "https://codeforces.com/problemset/problem/997/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "997B. Roman Digits",
    "url": "https://codeforces.com/problemset/problem/997/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "997A. Convert to Ones",
    "url": "https://codeforces.com/problemset/problem/997/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "996B. World Cup",
    "url": "https://codeforces.com/problemset/problem/996/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "996A. Hit the Lottery",
    "url": "https://codeforces.com/problemset/problem/996/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995F. Cowmpany Cowmpensation",
    "url": "https://codeforces.com/problemset/problem/995/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995E. Number Clicker",
    "url": "https://codeforces.com/problemset/problem/995/E",
    "difficulty": 2700,
    "tags": [
      "divide and conquer",
      "graphs",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995D. Game",
    "url": "https://codeforces.com/problemset/problem/995/D",
    "difficulty": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995C. Leaving the Bar",
    "url": "https://codeforces.com/problemset/problem/995/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995B. Suit and Tie",
    "url": "https://codeforces.com/problemset/problem/995/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "995A. Tesla",
    "url": "https://codeforces.com/problemset/problem/995/A",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "994B. Knights of a Polygonal Table",
    "url": "https://codeforces.com/problemset/problem/994/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "994A. Fingerprints",
    "url": "https://codeforces.com/problemset/problem/994/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "993F. The Moral Dilemma",
    "url": "https://codeforces.com/problemset/problem/993/F",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "993E. Nikita and Order Statistics",
    "url": "https://codeforces.com/problemset/problem/993/E",
    "difficulty": 2300,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "993D. Compute Power",
    "url": "https://codeforces.com/problemset/problem/993/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "993C. Careful Maneuvering",
    "url": "https://codeforces.com/problemset/problem/993/C",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "993B. Open Communication",
    "url": "https://codeforces.com/problemset/problem/993/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "993A. Two Squares",
    "url": "https://codeforces.com/problemset/problem/993/A",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "992E. Nastya and King-Shamans",
    "url": "https://codeforces.com/problemset/problem/992/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "992D. Nastya and a Game",
    "url": "https://codeforces.com/problemset/problem/992/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "992C. Nastya and a Wardrobe",
    "url": "https://codeforces.com/problemset/problem/992/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "992B. Nastya Studies Informatics",
    "url": "https://codeforces.com/problemset/problem/992/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "992A. Nastya and an Array",
    "url": "https://codeforces.com/problemset/problem/992/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991F. Concise and clear",
    "url": "https://codeforces.com/problemset/problem/991/F",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991E. Bus Number",
    "url": "https://codeforces.com/problemset/problem/991/E",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991D. Bishwock",
    "url": "https://codeforces.com/problemset/problem/991/D",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991C. Candies",
    "url": "https://codeforces.com/problemset/problem/991/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991B. Getting an A",
    "url": "https://codeforces.com/problemset/problem/991/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "991A. If at first you don't succeed...",
    "url": "https://codeforces.com/problemset/problem/991/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990G. GCD Counting",
    "url": "https://codeforces.com/problemset/problem/990/G",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "dsu",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990F. Flow Control",
    "url": "https://codeforces.com/problemset/problem/990/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990E. Post Lamps",
    "url": "https://codeforces.com/problemset/problem/990/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990D. Graph And Its Complement",
    "url": "https://codeforces.com/problemset/problem/990/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990C. Bracket Sequences Concatenation Problem",
    "url": "https://codeforces.com/problemset/problem/990/C",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990B. Micro-World",
    "url": "https://codeforces.com/problemset/problem/990/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "990A. Commentary Boxes",
    "url": "https://codeforces.com/problemset/problem/990/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "989E. A Trance of Nightfall",
    "url": "https://codeforces.com/problemset/problem/989/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "geometry",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "989D. A Shade of Moonlight",
    "url": "https://codeforces.com/problemset/problem/989/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "989C. A Mist of Florescence",
    "url": "https://codeforces.com/problemset/problem/989/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "989B. A Tide of Riverscape",
    "url": "https://codeforces.com/problemset/problem/989/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "989A. A Blend of Springtime",
    "url": "https://codeforces.com/problemset/problem/989/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988F. Rain and Umbrellas",
    "url": "https://codeforces.com/problemset/problem/988/F",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988E. Divisibility by 25",
    "url": "https://codeforces.com/problemset/problem/988/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988D. Points and Powers of Two",
    "url": "https://codeforces.com/problemset/problem/988/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988C. Equal Sums",
    "url": "https://codeforces.com/problemset/problem/988/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988B. Substrings Sort",
    "url": "https://codeforces.com/problemset/problem/988/B",
    "difficulty": 1100,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "988A. Diverse Team",
    "url": "https://codeforces.com/problemset/problem/988/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "987C. Three displays",
    "url": "https://codeforces.com/problemset/problem/987/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "987B. High School: Become Human",
    "url": "https://codeforces.com/problemset/problem/987/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "987A. Infinity Gauntlet",
    "url": "https://codeforces.com/problemset/problem/987/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986F. Oppa Funcan Style Remastered",
    "url": "https://codeforces.com/problemset/problem/986/F",
    "difficulty": 3300,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986E. Prince's Problem",
    "url": "https://codeforces.com/problemset/problem/986/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986D. Perfect Encoding",
    "url": "https://codeforces.com/problemset/problem/986/D",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986C. AND Graph",
    "url": "https://codeforces.com/problemset/problem/986/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986B. Petr and Permutations",
    "url": "https://codeforces.com/problemset/problem/986/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "986A. Fair",
    "url": "https://codeforces.com/problemset/problem/986/A",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "greedy",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985G. Team Players",
    "url": "https://codeforces.com/problemset/problem/985/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985F. Isomorphic Strings",
    "url": "https://codeforces.com/problemset/problem/985/F",
    "difficulty": 2300,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985E. Pencils and Boxes",
    "url": "https://codeforces.com/problemset/problem/985/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985D. Sand Fortress",
    "url": "https://codeforces.com/problemset/problem/985/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985C. Liebig's Barrels",
    "url": "https://codeforces.com/problemset/problem/985/C",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985B. Switches and Lamps",
    "url": "https://codeforces.com/problemset/problem/985/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "985A. Chess Placing",
    "url": "https://codeforces.com/problemset/problem/985/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "984B. Minesweeper",
    "url": "https://codeforces.com/problemset/problem/984/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "984A. Game",
    "url": "https://codeforces.com/problemset/problem/984/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "983E. NN country",
    "url": "https://codeforces.com/problemset/problem/983/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "983D. Arkady and Rectangles",
    "url": "https://codeforces.com/problemset/problem/983/D",
    "difficulty": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "983C. Elevator",
    "url": "https://codeforces.com/problemset/problem/983/C",
    "difficulty": 2400,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "983B. XOR-pyramid",
    "url": "https://codeforces.com/problemset/problem/983/B",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "983A. Finite or not?",
    "url": "https://codeforces.com/problemset/problem/983/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982F. The Meeting Place Cannot Be Changed",
    "url": "https://codeforces.com/problemset/problem/982/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982E. Billiard",
    "url": "https://codeforces.com/problemset/problem/982/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982D. Shark",
    "url": "https://codeforces.com/problemset/problem/982/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982C. Cut 'em all!",
    "url": "https://codeforces.com/problemset/problem/982/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982B. Bus of Characters",
    "url": "https://codeforces.com/problemset/problem/982/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "982A. Row",
    "url": "https://codeforces.com/problemset/problem/982/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981H. K Paths",
    "url": "https://codeforces.com/problemset/problem/981/H",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981G. Magic multisets",
    "url": "https://codeforces.com/problemset/problem/981/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981F. Round Marriage",
    "url": "https://codeforces.com/problemset/problem/981/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981E. Addition on Segments",
    "url": "https://codeforces.com/problemset/problem/981/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981D. Bookshelves",
    "url": "https://codeforces.com/problemset/problem/981/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981C. Useful Decomposition",
    "url": "https://codeforces.com/problemset/problem/981/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981B. Businessmen Problems",
    "url": "https://codeforces.com/problemset/problem/981/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "981A. Antipalindrome",
    "url": "https://codeforces.com/problemset/problem/981/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980F. Cactus to Tree",
    "url": "https://codeforces.com/problemset/problem/980/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980E. The Number Games",
    "url": "https://codeforces.com/problemset/problem/980/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980D. Perfect Groups",
    "url": "https://codeforces.com/problemset/problem/980/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980C. Posterized",
    "url": "https://codeforces.com/problemset/problem/980/C",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980B. Marlin",
    "url": "https://codeforces.com/problemset/problem/980/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "980A. Links and Pearls",
    "url": "https://codeforces.com/problemset/problem/980/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "979E. Kuro and Topological Parity",
    "url": "https://codeforces.com/problemset/problem/979/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "979D. Kuro and GCD and XOR and SUM",
    "url": "https://codeforces.com/problemset/problem/979/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number theory",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "979C. Kuro and Walking Route",
    "url": "https://codeforces.com/problemset/problem/979/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "979B. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/979/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "979A. Pizza, Pizza, Pizza!!!",
    "url": "https://codeforces.com/problemset/problem/979/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978G. Petya's Exams",
    "url": "https://codeforces.com/problemset/problem/978/G",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978F. Mentors",
    "url": "https://codeforces.com/problemset/problem/978/F",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978E. Bus Video System",
    "url": "https://codeforces.com/problemset/problem/978/E",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978D. Almost Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/978/D",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978C. Letters",
    "url": "https://codeforces.com/problemset/problem/978/C",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978B. File Name",
    "url": "https://codeforces.com/problemset/problem/978/B",
    "difficulty": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "978A. Remove Duplicates",
    "url": "https://codeforces.com/problemset/problem/978/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977F. Consecutive Subsequence",
    "url": "https://codeforces.com/problemset/problem/977/F",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977E. Cyclic Components",
    "url": "https://codeforces.com/problemset/problem/977/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977D. Divide by three, multiply by two",
    "url": "https://codeforces.com/problemset/problem/977/D",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977C. Less or Equal",
    "url": "https://codeforces.com/problemset/problem/977/C",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977B. Two-gram",
    "url": "https://codeforces.com/problemset/problem/977/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "977A. Wrong Subtraction",
    "url": "https://codeforces.com/problemset/problem/977/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976F. Minimal k-covering",
    "url": "https://codeforces.com/problemset/problem/976/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976E. Well played!",
    "url": "https://codeforces.com/problemset/problem/976/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976D. Degree Set",
    "url": "https://codeforces.com/problemset/problem/976/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976C. Nested Segments",
    "url": "https://codeforces.com/problemset/problem/976/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976B. Lara Croft and the New Game",
    "url": "https://codeforces.com/problemset/problem/976/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "976A. Minimum Binary Number",
    "url": "https://codeforces.com/problemset/problem/976/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "975E. Hag's Khashba",
    "url": "https://codeforces.com/problemset/problem/975/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "975D. Ghosts",
    "url": "https://codeforces.com/problemset/problem/975/D",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "975C. Valhalla Siege",
    "url": "https://codeforces.com/problemset/problem/975/C",
    "difficulty": 1400,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "975B. Mancala",
    "url": "https://codeforces.com/problemset/problem/975/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "975A. Aramic script",
    "url": "https://codeforces.com/problemset/problem/975/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "967B. Watering System",
    "url": "https://codeforces.com/problemset/problem/967/B",
    "difficulty": 1000,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "967A. Mind the Gap",
    "url": "https://codeforces.com/problemset/problem/967/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "965E. Short Code",
    "url": "https://codeforces.com/problemset/problem/965/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "965D. Single-use Stones",
    "url": "https://codeforces.com/problemset/problem/965/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "965C. Greedy Arkady",
    "url": "https://codeforces.com/problemset/problem/965/C",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "965B. Battleship",
    "url": "https://codeforces.com/problemset/problem/965/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "965A. Paper Airplanes",
    "url": "https://codeforces.com/problemset/problem/965/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "964B. Messages",
    "url": "https://codeforces.com/problemset/problem/964/B",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "964A. Splits",
    "url": "https://codeforces.com/problemset/problem/964/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "963E. Circles of Waiting",
    "url": "https://codeforces.com/problemset/problem/963/E",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "963D. Frequency of String",
    "url": "https://codeforces.com/problemset/problem/963/D",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "963C. Cutting Rectangle",
    "url": "https://codeforces.com/problemset/problem/963/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "963B. Destruction of a Tree",
    "url": "https://codeforces.com/problemset/problem/963/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "963A. Alternating Sum",
    "url": "https://codeforces.com/problemset/problem/963/A",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962G. Visible Black Areas",
    "url": "https://codeforces.com/problemset/problem/962/G",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962F. Simple Cycles Edges",
    "url": "https://codeforces.com/problemset/problem/962/F",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962E. Byteland, Berland and Disputed Cities",
    "url": "https://codeforces.com/problemset/problem/962/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962D. Merge Equals",
    "url": "https://codeforces.com/problemset/problem/962/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962C. Make a Square",
    "url": "https://codeforces.com/problemset/problem/962/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962B. Students in Railway Carriage",
    "url": "https://codeforces.com/problemset/problem/962/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "962A. Equator",
    "url": "https://codeforces.com/problemset/problem/962/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961G. Partitions",
    "url": "https://codeforces.com/problemset/problem/961/G",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961F. k-substrings",
    "url": "https://codeforces.com/problemset/problem/961/F",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961E. Tufurama",
    "url": "https://codeforces.com/problemset/problem/961/E",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961D. Pair Of Lines",
    "url": "https://codeforces.com/problemset/problem/961/D",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961C. Chessboard",
    "url": "https://codeforces.com/problemset/problem/961/C",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961B. Lecture Sleep",
    "url": "https://codeforces.com/problemset/problem/961/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "961A. Tetris",
    "url": "https://codeforces.com/problemset/problem/961/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960H. Santa's Gift",
    "url": "https://codeforces.com/problemset/problem/960/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960G. Bandit Blues",
    "url": "https://codeforces.com/problemset/problem/960/G",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960F. Pathwalks",
    "url": "https://codeforces.com/problemset/problem/960/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960E. Alternating Tree",
    "url": "https://codeforces.com/problemset/problem/960/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960D. Full Binary Tree Queries",
    "url": "https://codeforces.com/problemset/problem/960/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960C. Subsequence Counting",
    "url": "https://codeforces.com/problemset/problem/960/C",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960B. Minimize the error",
    "url": "https://codeforces.com/problemset/problem/960/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "960A. Check the string",
    "url": "https://codeforces.com/problemset/problem/960/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959F. Mahmoud and Ehab and yet another xor task",
    "url": "https://codeforces.com/problemset/problem/959/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959E. Mahmoud and Ehab and the xor-MST",
    "url": "https://codeforces.com/problemset/problem/959/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959D. Mahmoud and Ehab and another array construction task",
    "url": "https://codeforces.com/problemset/problem/959/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959C. Mahmoud and Ehab and the wrong algorithm",
    "url": "https://codeforces.com/problemset/problem/959/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959B. Mahmoud and Ehab and the message",
    "url": "https://codeforces.com/problemset/problem/959/B",
    "difficulty": 1200,
    "tags": [
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "959A. Mahmoud and Ehab and the even-odd game",
    "url": "https://codeforces.com/problemset/problem/959/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958F3. Lightsabers (hard)",
    "url": "https://codeforces.com/problemset/problem/958/F3",
    "difficulty": 2600,
    "tags": [
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958F2. Lightsabers (medium)",
    "url": "https://codeforces.com/problemset/problem/958/F2",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958F1. Lightsabers (easy)",
    "url": "https://codeforces.com/problemset/problem/958/F1",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958E3. Guard Duty (hard)",
    "url": "https://codeforces.com/problemset/problem/958/E3",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958E2. Guard Duty (medium)",
    "url": "https://codeforces.com/problemset/problem/958/E2",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958E1. Guard Duty (easy)",
    "url": "https://codeforces.com/problemset/problem/958/E1",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958D2. Hyperspace Jump (hard)",
    "url": "https://codeforces.com/problemset/problem/958/D2",
    "difficulty": 2700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "958D1. Hyperspace Jump (easy)",
    "url": "https://codeforces.com/problemset/problem/958/D1",
    "difficulty": 1400,
    "tags": [
      "expression parsing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958C3. Encryption (hard)",
    "url": "https://codeforces.com/problemset/problem/958/C3",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958C2. Encryption (medium)",
    "url": "https://codeforces.com/problemset/problem/958/C2",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958C1. Encryption (easy)",
    "url": "https://codeforces.com/problemset/problem/958/C1",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958B2. Maximum Control (medium)",
    "url": "https://codeforces.com/problemset/problem/958/B2",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958B1. Maximum Control (easy)",
    "url": "https://codeforces.com/problemset/problem/958/B1",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958A3. Death Stars (hard)",
    "url": "https://codeforces.com/problemset/problem/958/A3",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "958A2. Death Stars (medium)",
    "url": "https://codeforces.com/problemset/problem/958/A2",
    "difficulty": 2000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "958A1. Death Stars (easy)",
    "url": "https://codeforces.com/problemset/problem/958/A1",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "957A. Tritonic Iridescence",
    "url": "https://codeforces.com/problemset/problem/957/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "955F. Heaps",
    "url": "https://codeforces.com/problemset/problem/955/F",
    "difficulty": 2600,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "955E. Icicles",
    "url": "https://codeforces.com/problemset/problem/955/E",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "955D. Scissors",
    "url": "https://codeforces.com/problemset/problem/955/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "955C. Sad powers",
    "url": "https://codeforces.com/problemset/problem/955/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "955B. Not simply beatiful strings",
    "url": "https://codeforces.com/problemset/problem/955/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "955A. Feed the cat",
    "url": "https://codeforces.com/problemset/problem/955/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954I. Yet Another String Matching Problem",
    "url": "https://codeforces.com/problemset/problem/954/I",
    "difficulty": 2200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954H. Path Counting",
    "url": "https://codeforces.com/problemset/problem/954/H",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954G. Castle Defense",
    "url": "https://codeforces.com/problemset/problem/954/G",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954F. Runner's Problem",
    "url": "https://codeforces.com/problemset/problem/954/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "matrices",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954E. Water Taps",
    "url": "https://codeforces.com/problemset/problem/954/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954D. Fight Against Traffic",
    "url": "https://codeforces.com/problemset/problem/954/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954C. Matrix Walk",
    "url": "https://codeforces.com/problemset/problem/954/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954B. String Typing",
    "url": "https://codeforces.com/problemset/problem/954/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "954A. Diagonal Walking",
    "url": "https://codeforces.com/problemset/problem/954/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952G. Puzzling Language",
    "url": "https://codeforces.com/problemset/problem/952/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "*special",
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952F. 2 + 2 != 4",
    "url": "https://codeforces.com/problemset/problem/952/F",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952E. Cheese Board",
    "url": "https://codeforces.com/problemset/problem/952/E",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "952D. I'm Feeling Lucky!",
    "url": "https://codeforces.com/problemset/problem/952/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952C. Ravioli Sort",
    "url": "https://codeforces.com/problemset/problem/952/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952B. A Map of the Cat",
    "url": "https://codeforces.com/problemset/problem/952/B",
    "difficulty": 1900,
    "tags": [
      "*special",
      "brute force",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "952A. Quirky Quantifiers",
    "url": "https://codeforces.com/problemset/problem/952/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "950B. Intercepted Message",
    "url": "https://codeforces.com/problemset/problem/950/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "950A. Left-handers, Right-handers and Ambidexters",
    "url": "https://codeforces.com/problemset/problem/950/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949F. Astronomy",
    "url": "https://codeforces.com/problemset/problem/949/F",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949E. Binary Cards",
    "url": "https://codeforces.com/problemset/problem/949/E",
    "difficulty": 2700,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949D. Curfew",
    "url": "https://codeforces.com/problemset/problem/949/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949C. Data Center Maintenance",
    "url": "https://codeforces.com/problemset/problem/949/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949B. A Leapfrog in the Array",
    "url": "https://codeforces.com/problemset/problem/949/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "949A. Zebras",
    "url": "https://codeforces.com/problemset/problem/949/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "948A. Protect Sheep",
    "url": "https://codeforces.com/problemset/problem/948/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946G. Almost Increasing Array",
    "url": "https://codeforces.com/problemset/problem/946/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946F. Fibonacci String Subsequences",
    "url": "https://codeforces.com/problemset/problem/946/F",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946E. Largest Beautiful Number",
    "url": "https://codeforces.com/problemset/problem/946/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946D. Timetable",
    "url": "https://codeforces.com/problemset/problem/946/D",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946C. String Transformation",
    "url": "https://codeforces.com/problemset/problem/946/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946B. Weird Subtraction Process",
    "url": "https://codeforces.com/problemset/problem/946/B",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "946A. Partition",
    "url": "https://codeforces.com/problemset/problem/946/A",
    "difficulty": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940F. Machine Learning",
    "url": "https://codeforces.com/problemset/problem/940/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940E. Cashback",
    "url": "https://codeforces.com/problemset/problem/940/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940D. Alena And The Heater",
    "url": "https://codeforces.com/problemset/problem/940/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940C. Phone Numbers",
    "url": "https://codeforces.com/problemset/problem/940/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940B. Our Tanya is Crying Out Loud",
    "url": "https://codeforces.com/problemset/problem/940/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "940A. Points on the line",
    "url": "https://codeforces.com/problemset/problem/940/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939F. Cutlet",
    "url": "https://codeforces.com/problemset/problem/939/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939E. Maximize!",
    "url": "https://codeforces.com/problemset/problem/939/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939D. Love Rescue",
    "url": "https://codeforces.com/problemset/problem/939/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939C. Convenient For Everybody",
    "url": "https://codeforces.com/problemset/problem/939/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939B. Hamster Farm",
    "url": "https://codeforces.com/problemset/problem/939/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "939A. Love Triangle",
    "url": "https://codeforces.com/problemset/problem/939/A",
    "difficulty": 800,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938G. Shortest Path Queries",
    "url": "https://codeforces.com/problemset/problem/938/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938F. Erasing Substrings",
    "url": "https://codeforces.com/problemset/problem/938/F",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938E. Max History",
    "url": "https://codeforces.com/problemset/problem/938/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938D. Buy a Ticket",
    "url": "https://codeforces.com/problemset/problem/938/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938C. Constructing Tests",
    "url": "https://codeforces.com/problemset/problem/938/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938B. Run For Your Prize",
    "url": "https://codeforces.com/problemset/problem/938/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "938A. Word Correction",
    "url": "https://codeforces.com/problemset/problem/938/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "937B. Vile Grasshoppers",
    "url": "https://codeforces.com/problemset/problem/937/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "937A. Olympiad",
    "url": "https://codeforces.com/problemset/problem/937/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "936E. Iqea",
    "url": "https://codeforces.com/problemset/problem/936/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "936D. World of Tank",
    "url": "https://codeforces.com/problemset/problem/936/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "936C. Lock Puzzle",
    "url": "https://codeforces.com/problemset/problem/936/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "936B. Sleepy Game",
    "url": "https://codeforces.com/problemset/problem/936/B",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "936A. Save Energy!",
    "url": "https://codeforces.com/problemset/problem/936/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935F. Fafa and Array",
    "url": "https://codeforces.com/problemset/problem/935/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935E. Fafa and Ancient Mathematics",
    "url": "https://codeforces.com/problemset/problem/935/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935D. Fafa and Ancient Alphabet",
    "url": "https://codeforces.com/problemset/problem/935/D",
    "difficulty": 1900,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935C. Fifa and Fafa",
    "url": "https://codeforces.com/problemset/problem/935/C",
    "difficulty": 1600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935B. Fafa and the Gates",
    "url": "https://codeforces.com/problemset/problem/935/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "935A. Fafa and his Company",
    "url": "https://codeforces.com/problemset/problem/935/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "934B. A Prosperous Lot",
    "url": "https://codeforces.com/problemset/problem/934/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "934A. A Compatible Pair",
    "url": "https://codeforces.com/problemset/problem/934/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "933E. A Preponderant Reunion",
    "url": "https://codeforces.com/problemset/problem/933/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "933D. A Creative Cutout",
    "url": "https://codeforces.com/problemset/problem/933/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "933C. A Colourful Prospect",
    "url": "https://codeforces.com/problemset/problem/933/C",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "933B. A Determined Cleanup",
    "url": "https://codeforces.com/problemset/problem/933/B",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "933A. A Twisty Movement",
    "url": "https://codeforces.com/problemset/problem/933/A",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932G. Palindrome Partition",
    "url": "https://codeforces.com/problemset/problem/932/G",
    "difficulty": 2900,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932F. Escape Through Leaf",
    "url": "https://codeforces.com/problemset/problem/932/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932E. Team Work",
    "url": "https://codeforces.com/problemset/problem/932/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932D. Tree",
    "url": "https://codeforces.com/problemset/problem/932/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932C. Permutation Cycle",
    "url": "https://codeforces.com/problemset/problem/932/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932B. Recursive Queries",
    "url": "https://codeforces.com/problemset/problem/932/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "932A. Palindromic Supersequence",
    "url": "https://codeforces.com/problemset/problem/932/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "931C. Laboratory Work",
    "url": "https://codeforces.com/problemset/problem/931/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "931B. World Cup",
    "url": "https://codeforces.com/problemset/problem/931/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "931A. Friends Meeting",
    "url": "https://codeforces.com/problemset/problem/931/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "930E. Coins Exhibition",
    "url": "https://codeforces.com/problemset/problem/930/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "930D. Game with Tokens",
    "url": "https://codeforces.com/problemset/problem/930/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "930C. Teodor is not a liar!",
    "url": "https://codeforces.com/problemset/problem/930/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "930B. Game with String",
    "url": "https://codeforces.com/problemset/problem/930/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "probabilities",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "930A. Peculiar apple-tree",
    "url": "https://codeforces.com/problemset/problem/930/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "929D. Пограничные врата",
    "url": "https://codeforces.com/problemset/problem/929/D",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "929C. Красивая команда",
    "url": "https://codeforces.com/problemset/problem/929/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "929B. Места в самолёте",
    "url": "https://codeforces.com/problemset/problem/929/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "929A. Прокат велосипедов",
    "url": "https://codeforces.com/problemset/problem/929/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "928D. Autocompletion",
    "url": "https://codeforces.com/problemset/problem/928/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "928C. Dependency management",
    "url": "https://codeforces.com/problemset/problem/928/C",
    "difficulty": 1900,
    "tags": [
      "*special",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "928B. Chat",
    "url": "https://codeforces.com/problemset/problem/928/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "928A. Login Verification",
    "url": "https://codeforces.com/problemset/problem/928/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "927A. BuberPool Taxi Optimization",
    "url": "https://codeforces.com/problemset/problem/927/A",
    "difficulty": 2900,
    "tags": [
      "*special",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "926J. Segments",
    "url": "https://codeforces.com/problemset/problem/926/J",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "926I. A Vital Problem",
    "url": "https://codeforces.com/problemset/problem/926/I",
    "difficulty": 1700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "926H. Endless Roses Most Beautiful",
    "url": "https://codeforces.com/problemset/problem/926/H",
    "difficulty": 2200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "926G. Large Bouquets",
    "url": "https://codeforces.com/problemset/problem/926/G",
    "difficulty": 1500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "926F. Mobile Communications",
    "url": "https://codeforces.com/problemset/problem/926/F",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "926E. Merge Equal Elements",
    "url": "https://codeforces.com/problemset/problem/926/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "926D. Choose Place",
    "url": "https://codeforces.com/problemset/problem/926/D",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "926C. Is This a Zebra?",
    "url": "https://codeforces.com/problemset/problem/926/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "926B. Add Points",
    "url": "https://codeforces.com/problemset/problem/926/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "926A. 2-3-numbers",
    "url": "https://codeforces.com/problemset/problem/926/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925F. Parametric Circulation",
    "url": "https://codeforces.com/problemset/problem/925/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925E. May Holidays",
    "url": "https://codeforces.com/problemset/problem/925/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925D. Aztec Catacombs",
    "url": "https://codeforces.com/problemset/problem/925/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925C. Big Secret",
    "url": "https://codeforces.com/problemset/problem/925/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925B. Resource Distribution",
    "url": "https://codeforces.com/problemset/problem/925/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "925A. Stairs and Elevators",
    "url": "https://codeforces.com/problemset/problem/925/A",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "924F. Minimal Subset Difference",
    "url": "https://codeforces.com/problemset/problem/924/F",
    "difficulty": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "924E. Wardrobe",
    "url": "https://codeforces.com/problemset/problem/924/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "924D. Contact ATC",
    "url": "https://codeforces.com/problemset/problem/924/D",
    "difficulty": 2500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "924C. Riverside Curio",
    "url": "https://codeforces.com/problemset/problem/924/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "924B. Three-level Laser",
    "url": "https://codeforces.com/problemset/problem/924/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "924A. Mystical Mosaic",
    "url": "https://codeforces.com/problemset/problem/924/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923F. Public Service",
    "url": "https://codeforces.com/problemset/problem/923/F",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923E. Perpetual Subtraction",
    "url": "https://codeforces.com/problemset/problem/923/E",
    "difficulty": 3100,
    "tags": [
      "fft",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923D. Picking Strings",
    "url": "https://codeforces.com/problemset/problem/923/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923C. Perfect Security",
    "url": "https://codeforces.com/problemset/problem/923/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923B. Producing Snow",
    "url": "https://codeforces.com/problemset/problem/923/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "923A. Primal Sport",
    "url": "https://codeforces.com/problemset/problem/923/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922F. Divisibility",
    "url": "https://codeforces.com/problemset/problem/922/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922E. Birds",
    "url": "https://codeforces.com/problemset/problem/922/E",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922D. Robot Vacuum Cleaner",
    "url": "https://codeforces.com/problemset/problem/922/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922C. Cave Painting",
    "url": "https://codeforces.com/problemset/problem/922/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922B. Magic Forest",
    "url": "https://codeforces.com/problemset/problem/922/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "922A. Cloning Toys",
    "url": "https://codeforces.com/problemset/problem/922/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "92114. Labyrinth-14",
    "url": "https://codeforces.com/problemset/problem/921/14",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92113. Labyrinth-13",
    "url": "https://codeforces.com/problemset/problem/921/13",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92112. Labyrinth-12",
    "url": "https://codeforces.com/problemset/problem/921/12",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92111. Labyrinth-11",
    "url": "https://codeforces.com/problemset/problem/921/11",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92110. Labyrinth-10",
    "url": "https://codeforces.com/problemset/problem/921/10",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92109. Labyrinth-9",
    "url": "https://codeforces.com/problemset/problem/921/09",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92108. Labyrinth-8",
    "url": "https://codeforces.com/problemset/problem/921/08",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92107. Labyrinth-7",
    "url": "https://codeforces.com/problemset/problem/921/07",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92106. Labyrinth-6",
    "url": "https://codeforces.com/problemset/problem/921/06",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92105. Labyrinth-5",
    "url": "https://codeforces.com/problemset/problem/921/05",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92104. Labyrinth-4",
    "url": "https://codeforces.com/problemset/problem/921/04",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92103. Labyrinth-3",
    "url": "https://codeforces.com/problemset/problem/921/03",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92102. Labyrinth-2",
    "url": "https://codeforces.com/problemset/problem/921/02",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "92101. Labyrinth-1",
    "url": "https://codeforces.com/problemset/problem/921/01",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "920G. List Of Integers",
    "url": "https://codeforces.com/problemset/problem/920/G",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920F. SUM and REPLACE",
    "url": "https://codeforces.com/problemset/problem/920/F",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920E. Connected Components?",
    "url": "https://codeforces.com/problemset/problem/920/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920D. Tanks",
    "url": "https://codeforces.com/problemset/problem/920/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920C. Swap Adjacent Elements",
    "url": "https://codeforces.com/problemset/problem/920/C",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920B. Tea Queue",
    "url": "https://codeforces.com/problemset/problem/920/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "920A. Water The Garden",
    "url": "https://codeforces.com/problemset/problem/920/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919F. A Game With Numbers",
    "url": "https://codeforces.com/problemset/problem/919/F",
    "difficulty": 2600,
    "tags": [
      "games",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919E. Congruence Equation",
    "url": "https://codeforces.com/problemset/problem/919/E",
    "difficulty": 2100,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919D. Substring",
    "url": "https://codeforces.com/problemset/problem/919/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919C. Seat Arrangements",
    "url": "https://codeforces.com/problemset/problem/919/C",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919B. Perfect Number",
    "url": "https://codeforces.com/problemset/problem/919/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "919A. Supermarket",
    "url": "https://codeforces.com/problemset/problem/919/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "918B. Radio Station",
    "url": "https://codeforces.com/problemset/problem/918/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "918A. Eleven",
    "url": "https://codeforces.com/problemset/problem/918/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "917E. Upside Down",
    "url": "https://codeforces.com/problemset/problem/917/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "917D. Stranger Trees",
    "url": "https://codeforces.com/problemset/problem/917/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "matrices",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "917C. Pollywog",
    "url": "https://codeforces.com/problemset/problem/917/C",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "917B. MADMAX",
    "url": "https://codeforces.com/problemset/problem/917/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "917A. The Monster",
    "url": "https://codeforces.com/problemset/problem/917/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "916E. Jamie and Tree",
    "url": "https://codeforces.com/problemset/problem/916/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "916D. Jamie and To-do List",
    "url": "https://codeforces.com/problemset/problem/916/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "916C. Jamie and Interesting Graph",
    "url": "https://codeforces.com/problemset/problem/916/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "916B. Jamie and Binary Sequence (changed after round)",
    "url": "https://codeforces.com/problemset/problem/916/B",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "916A. Jamie and Alarm Snooze",
    "url": "https://codeforces.com/problemset/problem/916/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915G. Coprime Arrays",
    "url": "https://codeforces.com/problemset/problem/915/G",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915F. Imbalance Value of a Tree",
    "url": "https://codeforces.com/problemset/problem/915/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915E. Physical Education Lessons",
    "url": "https://codeforces.com/problemset/problem/915/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915D. Almost Acyclic Graph",
    "url": "https://codeforces.com/problemset/problem/915/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915C. Permute Digits",
    "url": "https://codeforces.com/problemset/problem/915/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915B. Browser",
    "url": "https://codeforces.com/problemset/problem/915/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "915A. Garden",
    "url": "https://codeforces.com/problemset/problem/915/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914H. Ember and Storm's Tree Game",
    "url": "https://codeforces.com/problemset/problem/914/H",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914G. Sum the Fibonacci",
    "url": "https://codeforces.com/problemset/problem/914/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914F. Substrings in a String",
    "url": "https://codeforces.com/problemset/problem/914/F",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914E. Palindromes in a Tree",
    "url": "https://codeforces.com/problemset/problem/914/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914D. Bash and a Tough Math Puzzle",
    "url": "https://codeforces.com/problemset/problem/914/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914C. Travelling Salesman and Special Numbers",
    "url": "https://codeforces.com/problemset/problem/914/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914B. Conan and Agasa play a Card Game",
    "url": "https://codeforces.com/problemset/problem/914/B",
    "difficulty": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "914A. Perfect Squares",
    "url": "https://codeforces.com/problemset/problem/914/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913H. Don't Exceed",
    "url": "https://codeforces.com/problemset/problem/913/H",
    "difficulty": 3400,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913G. Power Substring",
    "url": "https://codeforces.com/problemset/problem/913/G",
    "difficulty": 3200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913F. Strongly Connected Tournament",
    "url": "https://codeforces.com/problemset/problem/913/F",
    "difficulty": 2800,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913E. Logical Expression",
    "url": "https://codeforces.com/problemset/problem/913/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913D. Too Easy Problems",
    "url": "https://codeforces.com/problemset/problem/913/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913C. Party Lemonade",
    "url": "https://codeforces.com/problemset/problem/913/C",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913B. Christmas Spruce",
    "url": "https://codeforces.com/problemset/problem/913/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "913A. Modular Exponentiation",
    "url": "https://codeforces.com/problemset/problem/913/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "912E. Prime Gift",
    "url": "https://codeforces.com/problemset/problem/912/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "912D. Fishes",
    "url": "https://codeforces.com/problemset/problem/912/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "912C. Perun, Ult!",
    "url": "https://codeforces.com/problemset/problem/912/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "912B. New Year's Eve",
    "url": "https://codeforces.com/problemset/problem/912/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "912A. Tricky Alchemy",
    "url": "https://codeforces.com/problemset/problem/912/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911G. Mass Change Queries",
    "url": "https://codeforces.com/problemset/problem/911/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911F. Tree Destruction",
    "url": "https://codeforces.com/problemset/problem/911/F",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911E. Stack Sorting",
    "url": "https://codeforces.com/problemset/problem/911/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911D. Inversion Counting",
    "url": "https://codeforces.com/problemset/problem/911/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911C. Three Garlands",
    "url": "https://codeforces.com/problemset/problem/911/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911B. Two Cakes",
    "url": "https://codeforces.com/problemset/problem/911/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "911A. Nearest Minimums",
    "url": "https://codeforces.com/problemset/problem/911/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "910C. Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/910/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "910B. Door Frames",
    "url": "https://codeforces.com/problemset/problem/910/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "910A. The Way to Home",
    "url": "https://codeforces.com/problemset/problem/910/A",
    "difficulty": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909F. AND-permutations",
    "url": "https://codeforces.com/problemset/problem/909/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909E. Coprocessor",
    "url": "https://codeforces.com/problemset/problem/909/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909D. Colorful Points",
    "url": "https://codeforces.com/problemset/problem/909/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909C. Python Indentation",
    "url": "https://codeforces.com/problemset/problem/909/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909B. Segments",
    "url": "https://codeforces.com/problemset/problem/909/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "909A. Generate Login",
    "url": "https://codeforces.com/problemset/problem/909/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908H. New Year and Boolean Bridges",
    "url": "https://codeforces.com/problemset/problem/908/H",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "908G. New Year and Original Order",
    "url": "https://codeforces.com/problemset/problem/908/G",
    "difficulty": 2800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908F. New Year and Rainbow Roads",
    "url": "https://codeforces.com/problemset/problem/908/F",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908E. New Year and Entity Enumeration",
    "url": "https://codeforces.com/problemset/problem/908/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908D. New Year and Arbitrary Arrangement",
    "url": "https://codeforces.com/problemset/problem/908/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908C. New Year and Curling",
    "url": "https://codeforces.com/problemset/problem/908/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908B. New Year and Buggy Bot",
    "url": "https://codeforces.com/problemset/problem/908/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "908A. New Year and Counting Cards",
    "url": "https://codeforces.com/problemset/problem/908/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "907B. Tic-Tac-Toe",
    "url": "https://codeforces.com/problemset/problem/907/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "907A. Masha and Bears",
    "url": "https://codeforces.com/problemset/problem/907/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "906E. Reverses",
    "url": "https://codeforces.com/problemset/problem/906/E",
    "difficulty": 3300,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "906D. Power Tower",
    "url": "https://codeforces.com/problemset/problem/906/D",
    "difficulty": 2700,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "906C. Party",
    "url": "https://codeforces.com/problemset/problem/906/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "906B. Seating of Students",
    "url": "https://codeforces.com/problemset/problem/906/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "906A. Shockers",
    "url": "https://codeforces.com/problemset/problem/906/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903G. Yet Another Maxflow Problem",
    "url": "https://codeforces.com/problemset/problem/903/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903F. Clear The Matrix",
    "url": "https://codeforces.com/problemset/problem/903/F",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903E. Swapping Characters",
    "url": "https://codeforces.com/problemset/problem/903/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903D. Almost Difference",
    "url": "https://codeforces.com/problemset/problem/903/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903C. Boxes Packing",
    "url": "https://codeforces.com/problemset/problem/903/C",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903B. The Modcrab",
    "url": "https://codeforces.com/problemset/problem/903/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "903A. Hungry Student Problem",
    "url": "https://codeforces.com/problemset/problem/903/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "902B. Coloring a Tree",
    "url": "https://codeforces.com/problemset/problem/902/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "902A. Visiting a Friend",
    "url": "https://codeforces.com/problemset/problem/902/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "901E. Cyclic Cipher",
    "url": "https://codeforces.com/problemset/problem/901/E",
    "difficulty": 3300,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "901D. Weighting a Tree",
    "url": "https://codeforces.com/problemset/problem/901/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "901C. Bipartite Segments",
    "url": "https://codeforces.com/problemset/problem/901/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "901B. GCD of Polynomials",
    "url": "https://codeforces.com/problemset/problem/901/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "901A. Hashing Trees",
    "url": "https://codeforces.com/problemset/problem/901/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "900E. Maximum Questions",
    "url": "https://codeforces.com/problemset/problem/900/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "900D. Unusual Sequences",
    "url": "https://codeforces.com/problemset/problem/900/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "900C. Remove Extra One",
    "url": "https://codeforces.com/problemset/problem/900/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "900B. Position in Fraction",
    "url": "https://codeforces.com/problemset/problem/900/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "900A. Find Extra One",
    "url": "https://codeforces.com/problemset/problem/900/A",
    "difficulty": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899F. Letters Removing",
    "url": "https://codeforces.com/problemset/problem/899/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899E. Segments Removal",
    "url": "https://codeforces.com/problemset/problem/899/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "flows",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899D. Shovel Sale",
    "url": "https://codeforces.com/problemset/problem/899/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899C. Dividing the numbers",
    "url": "https://codeforces.com/problemset/problem/899/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899B. Months and Years",
    "url": "https://codeforces.com/problemset/problem/899/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "899A. Splitting in Teams",
    "url": "https://codeforces.com/problemset/problem/899/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898F. Restoring the Expression",
    "url": "https://codeforces.com/problemset/problem/898/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898E. Squares and not squares",
    "url": "https://codeforces.com/problemset/problem/898/E",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898D. Alarm Clock",
    "url": "https://codeforces.com/problemset/problem/898/D",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898C. Phone Numbers",
    "url": "https://codeforces.com/problemset/problem/898/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898B. Proper Nutrition",
    "url": "https://codeforces.com/problemset/problem/898/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "898A. Rounding",
    "url": "https://codeforces.com/problemset/problem/898/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "897B. Chtholly's request",
    "url": "https://codeforces.com/problemset/problem/897/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "897A. Scarborough Fair",
    "url": "https://codeforces.com/problemset/problem/897/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "896E. Welcome home, Chtholly",
    "url": "https://codeforces.com/problemset/problem/896/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "896D. Nephren Runs a Cinema",
    "url": "https://codeforces.com/problemset/problem/896/D",
    "difficulty": 2900,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "896C. Willem, Chtholly and Seniorious",
    "url": "https://codeforces.com/problemset/problem/896/C",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "896B. Ithea Plays With Chtholly",
    "url": "https://codeforces.com/problemset/problem/896/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "games",
      "greedy",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "896A. Nephren gives a riddle",
    "url": "https://codeforces.com/problemset/problem/896/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "895E. Eyes Closed",
    "url": "https://codeforces.com/problemset/problem/895/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "895D. String Mark",
    "url": "https://codeforces.com/problemset/problem/895/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "895C. Square Subsets",
    "url": "https://codeforces.com/problemset/problem/895/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "895B. XK Segments",
    "url": "https://codeforces.com/problemset/problem/895/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "895A. Pizza Separation",
    "url": "https://codeforces.com/problemset/problem/895/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "894E. Ralph and Mushrooms",
    "url": "https://codeforces.com/problemset/problem/894/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "894D. Ralph And His Tour in Binary Country",
    "url": "https://codeforces.com/problemset/problem/894/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "894C. Marco and GCD Sequence",
    "url": "https://codeforces.com/problemset/problem/894/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "894B. Ralph And His Magic Field",
    "url": "https://codeforces.com/problemset/problem/894/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "894A. QAQ",
    "url": "https://codeforces.com/problemset/problem/894/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893F. Subtree Minimum Query",
    "url": "https://codeforces.com/problemset/problem/893/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893E. Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/893/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893D. Credit Card",
    "url": "https://codeforces.com/problemset/problem/893/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893C. Rumor",
    "url": "https://codeforces.com/problemset/problem/893/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893B. Beautiful Divisors",
    "url": "https://codeforces.com/problemset/problem/893/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "893A. Chess For Three",
    "url": "https://codeforces.com/problemset/problem/893/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "892B. Wrath",
    "url": "https://codeforces.com/problemset/problem/892/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "892A. Greed",
    "url": "https://codeforces.com/problemset/problem/892/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "891E. Lust",
    "url": "https://codeforces.com/problemset/problem/891/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "891D. Sloth",
    "url": "https://codeforces.com/problemset/problem/891/D",
    "difficulty": 3100,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "891C. Envy",
    "url": "https://codeforces.com/problemset/problem/891/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "891B. Gluttony",
    "url": "https://codeforces.com/problemset/problem/891/B",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "891A. Pride",
    "url": "https://codeforces.com/problemset/problem/891/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "889E. Mod Mod Mod",
    "url": "https://codeforces.com/problemset/problem/889/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888G. Xor-MST",
    "url": "https://codeforces.com/problemset/problem/888/G",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888F. Connecting Vertices",
    "url": "https://codeforces.com/problemset/problem/888/F",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888E. Maximum Subsequence",
    "url": "https://codeforces.com/problemset/problem/888/E",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888D. Almost Identity Permutations",
    "url": "https://codeforces.com/problemset/problem/888/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888C. K-Dominant Character",
    "url": "https://codeforces.com/problemset/problem/888/C",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888B. Buggy Robot",
    "url": "https://codeforces.com/problemset/problem/888/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "888A. Local Extrema",
    "url": "https://codeforces.com/problemset/problem/888/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887F. Row of Models",
    "url": "https://codeforces.com/problemset/problem/887/F",
    "difficulty": 2500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887E. Little Brother",
    "url": "https://codeforces.com/problemset/problem/887/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887D. Ratings and Reality Shows",
    "url": "https://codeforces.com/problemset/problem/887/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887C. Solution for Cube",
    "url": "https://codeforces.com/problemset/problem/887/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887B. Cubes for Masha",
    "url": "https://codeforces.com/problemset/problem/887/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "887A. Div. 64",
    "url": "https://codeforces.com/problemset/problem/887/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "886F. Symmetric Projections",
    "url": "https://codeforces.com/problemset/problem/886/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "886E. Maximum Element",
    "url": "https://codeforces.com/problemset/problem/886/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "886D. Restoration of string",
    "url": "https://codeforces.com/problemset/problem/886/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "886C. Petya and Catacombs",
    "url": "https://codeforces.com/problemset/problem/886/C",
    "difficulty": 1300,
    "tags": [
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "886B. Vlad and Cafes",
    "url": "https://codeforces.com/problemset/problem/886/B",
    "difficulty": 1000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "886A. ACM ICPC",
    "url": "https://codeforces.com/problemset/problem/886/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884F. Anti-Palindromize",
    "url": "https://codeforces.com/problemset/problem/884/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884E. Binary Matrix",
    "url": "https://codeforces.com/problemset/problem/884/E",
    "difficulty": 2500,
    "tags": [
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884D. Boxes And Balls",
    "url": "https://codeforces.com/problemset/problem/884/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884C. Bertown Subway",
    "url": "https://codeforces.com/problemset/problem/884/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884B. Japanese Crosswords Strike Back",
    "url": "https://codeforces.com/problemset/problem/884/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "884A. Book Reading",
    "url": "https://codeforces.com/problemset/problem/884/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883M. Quadcopter Competition",
    "url": "https://codeforces.com/problemset/problem/883/M",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883L. Berland.Taxi",
    "url": "https://codeforces.com/problemset/problem/883/L",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883K. Road Widening",
    "url": "https://codeforces.com/problemset/problem/883/K",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883J. Renovation",
    "url": "https://codeforces.com/problemset/problem/883/J",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883I. Photo Processing",
    "url": "https://codeforces.com/problemset/problem/883/I",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883H. Palindromic Cut",
    "url": "https://codeforces.com/problemset/problem/883/H",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883G. Orientation of Edges",
    "url": "https://codeforces.com/problemset/problem/883/G",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883F. Lost in Transliteration",
    "url": "https://codeforces.com/problemset/problem/883/F",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883E. Field of Wonders",
    "url": "https://codeforces.com/problemset/problem/883/E",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883D. Packmen Strike Back",
    "url": "https://codeforces.com/problemset/problem/883/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883C. Downloading B++",
    "url": "https://codeforces.com/problemset/problem/883/C",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883B. Berland Army",
    "url": "https://codeforces.com/problemset/problem/883/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "883A. Automatic Door",
    "url": "https://codeforces.com/problemset/problem/883/A",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "879B. Table Tennis",
    "url": "https://codeforces.com/problemset/problem/879/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "879A. Borya's Diagnosis",
    "url": "https://codeforces.com/problemset/problem/879/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "878E. Numbers on the blackboard",
    "url": "https://codeforces.com/problemset/problem/878/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "878D. Magic Breeding",
    "url": "https://codeforces.com/problemset/problem/878/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "878C. Tournament",
    "url": "https://codeforces.com/problemset/problem/878/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "878B. Teams Formation",
    "url": "https://codeforces.com/problemset/problem/878/B",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "878A. Short Program",
    "url": "https://codeforces.com/problemset/problem/878/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877F. Ann and Books",
    "url": "https://codeforces.com/problemset/problem/877/F",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "flows",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877E. Danil and a Part-time Job",
    "url": "https://codeforces.com/problemset/problem/877/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877D. Olya and Energy Drinks",
    "url": "https://codeforces.com/problemset/problem/877/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877C. Slava and tanks",
    "url": "https://codeforces.com/problemset/problem/877/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877B. Nikita and string",
    "url": "https://codeforces.com/problemset/problem/877/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "877A. Alex and broken contest",
    "url": "https://codeforces.com/problemset/problem/877/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "876B. Divisiblity of Differences",
    "url": "https://codeforces.com/problemset/problem/876/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "876A. Trip For Meal",
    "url": "https://codeforces.com/problemset/problem/876/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875F. Royal Questions",
    "url": "https://codeforces.com/problemset/problem/875/F",
    "difficulty": 2500,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875E. Delivery Club",
    "url": "https://codeforces.com/problemset/problem/875/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875D. High Cry",
    "url": "https://codeforces.com/problemset/problem/875/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875C. National Property",
    "url": "https://codeforces.com/problemset/problem/875/C",
    "difficulty": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875B. Sorting the Coins",
    "url": "https://codeforces.com/problemset/problem/875/B",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "875A. Classroom Watch",
    "url": "https://codeforces.com/problemset/problem/875/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873F. Forbidden Indices",
    "url": "https://codeforces.com/problemset/problem/873/F",
    "difficulty": 2400,
    "tags": [
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873E. Awards For Contestants",
    "url": "https://codeforces.com/problemset/problem/873/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873D. Merge Sort",
    "url": "https://codeforces.com/problemset/problem/873/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873C. Strange Game On Matrix",
    "url": "https://codeforces.com/problemset/problem/873/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873B. Balanced Substring",
    "url": "https://codeforces.com/problemset/problem/873/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "873A. Chores",
    "url": "https://codeforces.com/problemset/problem/873/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "871E. Restore the Tree",
    "url": "https://codeforces.com/problemset/problem/871/E",
    "difficulty": 2900,
    "tags": [
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870F. Paths",
    "url": "https://codeforces.com/problemset/problem/870/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870E. Points, Lines and Ready-made Titles",
    "url": "https://codeforces.com/problemset/problem/870/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870D. Something with XOR Queries",
    "url": "https://codeforces.com/problemset/problem/870/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870C. Maximum splitting",
    "url": "https://codeforces.com/problemset/problem/870/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870B. Maximum of Maximums of Minimums",
    "url": "https://codeforces.com/problemset/problem/870/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "870A. Search for Pretty Integers",
    "url": "https://codeforces.com/problemset/problem/870/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "869E. The Untended Antiquity",
    "url": "https://codeforces.com/problemset/problem/869/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "869D. The Overdosing Ubiquity",
    "url": "https://codeforces.com/problemset/problem/869/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "869C. The Intriguing Obsession",
    "url": "https://codeforces.com/problemset/problem/869/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "869B. The Eternal Immortality",
    "url": "https://codeforces.com/problemset/problem/869/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "869A. The Artful Expedient",
    "url": "https://codeforces.com/problemset/problem/869/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868G. El Toll Caves",
    "url": "https://codeforces.com/problemset/problem/868/G",
    "difficulty": 3300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868F. Yet Another Minimization Problem",
    "url": "https://codeforces.com/problemset/problem/868/F",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868E. Policeman and a Tree",
    "url": "https://codeforces.com/problemset/problem/868/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868D. Huge Strings",
    "url": "https://codeforces.com/problemset/problem/868/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868C. Qualification Rounds",
    "url": "https://codeforces.com/problemset/problem/868/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868B. Race Against Time",
    "url": "https://codeforces.com/problemset/problem/868/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "868A. Bark to Unlock",
    "url": "https://codeforces.com/problemset/problem/868/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "867A. Between the Offices",
    "url": "https://codeforces.com/problemset/problem/867/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865G. Flowers and Chocolate",
    "url": "https://codeforces.com/problemset/problem/865/G",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865F. Egg Roulette",
    "url": "https://codeforces.com/problemset/problem/865/F",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865E. Hex Dyslexia",
    "url": "https://codeforces.com/problemset/problem/865/E",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865D. Buy Low Sell High",
    "url": "https://codeforces.com/problemset/problem/865/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865C. Gotta Go Fast",
    "url": "https://codeforces.com/problemset/problem/865/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865B. Ordering Pizza",
    "url": "https://codeforces.com/problemset/problem/865/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "sortings",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "865A. Save the problem!",
    "url": "https://codeforces.com/problemset/problem/865/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864F. Cities Excursions",
    "url": "https://codeforces.com/problemset/problem/864/F",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864E. Fire",
    "url": "https://codeforces.com/problemset/problem/864/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864D. Make a Permutation!",
    "url": "https://codeforces.com/problemset/problem/864/D",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864C. Bus",
    "url": "https://codeforces.com/problemset/problem/864/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864B. Polycarp and Letters",
    "url": "https://codeforces.com/problemset/problem/864/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "864A. Fair Game",
    "url": "https://codeforces.com/problemset/problem/864/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863G. Graphic Settings",
    "url": "https://codeforces.com/problemset/problem/863/G",
    "difficulty": 3200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "863F. Almost Permutation",
    "url": "https://codeforces.com/problemset/problem/863/F",
    "difficulty": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863E. Turn Off The TV",
    "url": "https://codeforces.com/problemset/problem/863/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863D. Yet Another Array Queries Problem",
    "url": "https://codeforces.com/problemset/problem/863/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863C. 1-2-3",
    "url": "https://codeforces.com/problemset/problem/863/C",
    "difficulty": 1800,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863B. Kayaking",
    "url": "https://codeforces.com/problemset/problem/863/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "863A. Quasi-palindrome",
    "url": "https://codeforces.com/problemset/problem/863/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862F. Mahmoud and Ehab and the final stage",
    "url": "https://codeforces.com/problemset/problem/862/F",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862E. Mahmoud and Ehab and the function",
    "url": "https://codeforces.com/problemset/problem/862/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862D. Mahmoud and Ehab and the binary string",
    "url": "https://codeforces.com/problemset/problem/862/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862C. Mahmoud and Ehab and the xor",
    "url": "https://codeforces.com/problemset/problem/862/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862B. Mahmoud and Ehab and the bipartiteness",
    "url": "https://codeforces.com/problemset/problem/862/B",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "862A. Mahmoud and Ehab and the MEX",
    "url": "https://codeforces.com/problemset/problem/862/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "860E. Arkady and a Nobody-men",
    "url": "https://codeforces.com/problemset/problem/860/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859G. Circle of Numbers",
    "url": "https://codeforces.com/problemset/problem/859/G",
    "difficulty": 3000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859F. Ordering T-Shirts",
    "url": "https://codeforces.com/problemset/problem/859/F",
    "difficulty": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859E. Desk Disorder",
    "url": "https://codeforces.com/problemset/problem/859/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859D. Third Month Insanity",
    "url": "https://codeforces.com/problemset/problem/859/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859C. Pie Rules",
    "url": "https://codeforces.com/problemset/problem/859/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859B. Lazy Security Guard",
    "url": "https://codeforces.com/problemset/problem/859/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "859A. Declined Finalists",
    "url": "https://codeforces.com/problemset/problem/859/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858F. Wizard's Tour",
    "url": "https://codeforces.com/problemset/problem/858/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858E. Tests Renumeration",
    "url": "https://codeforces.com/problemset/problem/858/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858D. Polycarp's phone book",
    "url": "https://codeforces.com/problemset/problem/858/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858C. Did you mean...",
    "url": "https://codeforces.com/problemset/problem/858/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858B. Which floor?",
    "url": "https://codeforces.com/problemset/problem/858/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "858A. k-rounding",
    "url": "https://codeforces.com/problemset/problem/858/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "856F. To Play or not to Play",
    "url": "https://codeforces.com/problemset/problem/856/F",
    "difficulty": 3000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "856E. Satellites",
    "url": "https://codeforces.com/problemset/problem/856/E",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "856D. Masha and Cactus",
    "url": "https://codeforces.com/problemset/problem/856/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "856C. Eleventh Birthday",
    "url": "https://codeforces.com/problemset/problem/856/C",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "856B. Similar Words",
    "url": "https://codeforces.com/problemset/problem/856/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "856A. Set Theory",
    "url": "https://codeforces.com/problemset/problem/856/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855G. Harry Vs Voldemort",
    "url": "https://codeforces.com/problemset/problem/855/G",
    "difficulty": 3300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855F. Nagini",
    "url": "https://codeforces.com/problemset/problem/855/F",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855E. Salazar Slytherin's Locket",
    "url": "https://codeforces.com/problemset/problem/855/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855D. Rowena Ravenclaw's Diadem",
    "url": "https://codeforces.com/problemset/problem/855/D",
    "difficulty": 2500,
    "tags": [
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855C. Helga Hufflepuff's Cup",
    "url": "https://codeforces.com/problemset/problem/855/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855B. Marvolo Gaunt's Ring",
    "url": "https://codeforces.com/problemset/problem/855/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "855A. Tom Riddle's Diary",
    "url": "https://codeforces.com/problemset/problem/855/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "854B. Maxim Buys an Apartment",
    "url": "https://codeforces.com/problemset/problem/854/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "854A. Fraction",
    "url": "https://codeforces.com/problemset/problem/854/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "853E. Lada Malina",
    "url": "https://codeforces.com/problemset/problem/853/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "853D. Michael and Charging Stations",
    "url": "https://codeforces.com/problemset/problem/853/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "853C. Boredom",
    "url": "https://codeforces.com/problemset/problem/853/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "853B. Jury Meeting",
    "url": "https://codeforces.com/problemset/problem/853/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "853A. Planning",
    "url": "https://codeforces.com/problemset/problem/853/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852I. Dating",
    "url": "https://codeforces.com/problemset/problem/852/I",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852H. Bob and stages",
    "url": "https://codeforces.com/problemset/problem/852/H",
    "difficulty": 3000,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852G. Bathroom terminal",
    "url": "https://codeforces.com/problemset/problem/852/G",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852F. Product transformation",
    "url": "https://codeforces.com/problemset/problem/852/F",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852E. Casinos and travel",
    "url": "https://codeforces.com/problemset/problem/852/E",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852D. Exploration plan",
    "url": "https://codeforces.com/problemset/problem/852/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "flows",
      "graph matchings",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852C. Property",
    "url": "https://codeforces.com/problemset/problem/852/C",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852B. Neural Network country",
    "url": "https://codeforces.com/problemset/problem/852/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "852A. Digits",
    "url": "https://codeforces.com/problemset/problem/852/A",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "851B. Arpa and an exam about geometry",
    "url": "https://codeforces.com/problemset/problem/851/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "851A. Arpa and a research in Mexican wave",
    "url": "https://codeforces.com/problemset/problem/851/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850F. Rainbow Balls",
    "url": "https://codeforces.com/problemset/problem/850/F",
    "difficulty": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850E. Random Elections",
    "url": "https://codeforces.com/problemset/problem/850/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850D. Tournament Construction",
    "url": "https://codeforces.com/problemset/problem/850/D",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850C. Arpa and a game with Mojtaba",
    "url": "https://codeforces.com/problemset/problem/850/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850B. Arpa and a list of numbers",
    "url": "https://codeforces.com/problemset/problem/850/B",
    "difficulty": 2100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "850A. Five Dimensional Points",
    "url": "https://codeforces.com/problemset/problem/850/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "849B. Tell Your World",
    "url": "https://codeforces.com/problemset/problem/849/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "849A. Odds and Ends",
    "url": "https://codeforces.com/problemset/problem/849/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "848E. Days of Floral Colours",
    "url": "https://codeforces.com/problemset/problem/848/E",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "848D. Shake It!",
    "url": "https://codeforces.com/problemset/problem/848/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "848C. Goodbye Souvenir",
    "url": "https://codeforces.com/problemset/problem/848/C",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "848B. Rooter's Song",
    "url": "https://codeforces.com/problemset/problem/848/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "848A. From Y to Y",
    "url": "https://codeforces.com/problemset/problem/848/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847M. Weather Tomorrow",
    "url": "https://codeforces.com/problemset/problem/847/M",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847L. Berland SU Computer Network",
    "url": "https://codeforces.com/problemset/problem/847/L",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847K. Travel Cards",
    "url": "https://codeforces.com/problemset/problem/847/K",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847J. Students Initiation",
    "url": "https://codeforces.com/problemset/problem/847/J",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847I. Noise Level",
    "url": "https://codeforces.com/problemset/problem/847/I",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847H. Load Testing",
    "url": "https://codeforces.com/problemset/problem/847/H",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847G. University Classes",
    "url": "https://codeforces.com/problemset/problem/847/G",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847F. Berland Elections",
    "url": "https://codeforces.com/problemset/problem/847/F",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847E. Packmen",
    "url": "https://codeforces.com/problemset/problem/847/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847D. Dog Show",
    "url": "https://codeforces.com/problemset/problem/847/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847C. Sum of Nestings",
    "url": "https://codeforces.com/problemset/problem/847/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847B. Preparing for Merge Sort",
    "url": "https://codeforces.com/problemset/problem/847/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "847A. Union of Doubly Linked Lists",
    "url": "https://codeforces.com/problemset/problem/847/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846F. Random Query",
    "url": "https://codeforces.com/problemset/problem/846/F",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846E. Chemistry in Berland",
    "url": "https://codeforces.com/problemset/problem/846/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846D. Monitor",
    "url": "https://codeforces.com/problemset/problem/846/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846C. Four Segments",
    "url": "https://codeforces.com/problemset/problem/846/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846B. Math Show",
    "url": "https://codeforces.com/problemset/problem/846/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "846A. Curriculum Vitae",
    "url": "https://codeforces.com/problemset/problem/846/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845G. Shortest Path Problem?",
    "url": "https://codeforces.com/problemset/problem/845/G",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845F. Guards In The Storehouse",
    "url": "https://codeforces.com/problemset/problem/845/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845E. Fire in the City",
    "url": "https://codeforces.com/problemset/problem/845/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845D. Driving Test",
    "url": "https://codeforces.com/problemset/problem/845/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845C. Two TVs",
    "url": "https://codeforces.com/problemset/problem/845/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845B. Luba And The Ticket",
    "url": "https://codeforces.com/problemset/problem/845/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "845A. Chess Tourney",
    "url": "https://codeforces.com/problemset/problem/845/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "844B. Rectangles",
    "url": "https://codeforces.com/problemset/problem/844/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "844A. Diversity",
    "url": "https://codeforces.com/problemset/problem/844/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "843E. Maximum Flow",
    "url": "https://codeforces.com/problemset/problem/843/E",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "843D. Dynamic Shortest Path",
    "url": "https://codeforces.com/problemset/problem/843/D",
    "difficulty": 3400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "843C. Upgrading Tree",
    "url": "https://codeforces.com/problemset/problem/843/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "843B. Interactive LowerBound",
    "url": "https://codeforces.com/problemset/problem/843/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "interactive",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "843A. Sorting by Subsequences",
    "url": "https://codeforces.com/problemset/problem/843/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "842E. Nikita and game",
    "url": "https://codeforces.com/problemset/problem/842/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "842D. Vitya and Strange Lesson",
    "url": "https://codeforces.com/problemset/problem/842/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "842C. Ilya And The Tree",
    "url": "https://codeforces.com/problemset/problem/842/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "842B. Gleb And Pizza",
    "url": "https://codeforces.com/problemset/problem/842/B",
    "difficulty": 1100,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "842A. Kirill And The Game",
    "url": "https://codeforces.com/problemset/problem/842/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "841B. Godsend",
    "url": "https://codeforces.com/problemset/problem/841/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "841A. Generous Kefa",
    "url": "https://codeforces.com/problemset/problem/841/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "840E. In a Trap",
    "url": "https://codeforces.com/problemset/problem/840/E",
    "difficulty": 3200,
    "tags": [
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "840D. Destiny",
    "url": "https://codeforces.com/problemset/problem/840/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "840C. On the Bench",
    "url": "https://codeforces.com/problemset/problem/840/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "840B. Leha and another game about graph",
    "url": "https://codeforces.com/problemset/problem/840/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "840A. Leha and Function",
    "url": "https://codeforces.com/problemset/problem/840/A",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "839E. Mother of Dragons",
    "url": "https://codeforces.com/problemset/problem/839/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "839D. Winter is here",
    "url": "https://codeforces.com/problemset/problem/839/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "839C. Journey",
    "url": "https://codeforces.com/problemset/problem/839/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "839B. Game of the Rows",
    "url": "https://codeforces.com/problemset/problem/839/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "839A. Arya and Bran",
    "url": "https://codeforces.com/problemset/problem/839/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "838F. Expected Earnings",
    "url": "https://codeforces.com/problemset/problem/838/F",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "838E. Convex Countour",
    "url": "https://codeforces.com/problemset/problem/838/E",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "838D. Airplane Arrangements",
    "url": "https://codeforces.com/problemset/problem/838/D",
    "difficulty": 2700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "838C. Future Failure",
    "url": "https://codeforces.com/problemset/problem/838/C",
    "difficulty": 2800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "838B. Diverging Directions",
    "url": "https://codeforces.com/problemset/problem/838/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "838A. Binary Blocks",
    "url": "https://codeforces.com/problemset/problem/838/A",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837G. Functions On The Segments",
    "url": "https://codeforces.com/problemset/problem/837/G",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837F. Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/837/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837E. Vasya's Function",
    "url": "https://codeforces.com/problemset/problem/837/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837D. Round Subset",
    "url": "https://codeforces.com/problemset/problem/837/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837C. Two Seals",
    "url": "https://codeforces.com/problemset/problem/837/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837B. Flag of Berland",
    "url": "https://codeforces.com/problemset/problem/837/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "837A. Text Volume",
    "url": "https://codeforces.com/problemset/problem/837/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835F. Roads in the Kingdom",
    "url": "https://codeforces.com/problemset/problem/835/F",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835E. The penguin's game",
    "url": "https://codeforces.com/problemset/problem/835/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835D. Palindromic characteristics",
    "url": "https://codeforces.com/problemset/problem/835/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835C. Star sky",
    "url": "https://codeforces.com/problemset/problem/835/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835B. The number on the board",
    "url": "https://codeforces.com/problemset/problem/835/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "835A. Key races",
    "url": "https://codeforces.com/problemset/problem/835/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "834B. The Festive Evening",
    "url": "https://codeforces.com/problemset/problem/834/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "834A. The Useless Toy",
    "url": "https://codeforces.com/problemset/problem/834/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "833E. Caramel Clouds",
    "url": "https://codeforces.com/problemset/problem/833/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "833D. Red-Black Cobweb",
    "url": "https://codeforces.com/problemset/problem/833/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "833C. Ever-Hungry Krakozyabra",
    "url": "https://codeforces.com/problemset/problem/833/C",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "833B. The Bakery",
    "url": "https://codeforces.com/problemset/problem/833/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "833A. The Meaningless Game",
    "url": "https://codeforces.com/problemset/problem/833/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "832E. Vasya and Shifts",
    "url": "https://codeforces.com/problemset/problem/832/E",
    "difficulty": 2600,
    "tags": [
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "832D. Misha, Grisha and Underground",
    "url": "https://codeforces.com/problemset/problem/832/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "832C. Strange Radiation",
    "url": "https://codeforces.com/problemset/problem/832/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "832B. Petya and Exam",
    "url": "https://codeforces.com/problemset/problem/832/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "832A. Sasha and Sticks",
    "url": "https://codeforces.com/problemset/problem/832/A",
    "difficulty": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "831C. Jury Marks",
    "url": "https://codeforces.com/problemset/problem/831/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "831B. Keyboard Layouts",
    "url": "https://codeforces.com/problemset/problem/831/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "831A. Unimodal Array",
    "url": "https://codeforces.com/problemset/problem/831/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "830E. Perpetual Motion Machine",
    "url": "https://codeforces.com/problemset/problem/830/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "830D. Singer House",
    "url": "https://codeforces.com/problemset/problem/830/D",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "830C. Bamboo Partition",
    "url": "https://codeforces.com/problemset/problem/830/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "830B. Cards Sorting",
    "url": "https://codeforces.com/problemset/problem/830/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "830A. Office Keys",
    "url": "https://codeforces.com/problemset/problem/830/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "828B. Black Square",
    "url": "https://codeforces.com/problemset/problem/828/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "828A. Restaurant Tables",
    "url": "https://codeforces.com/problemset/problem/828/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827F. Dirty Arkady's Kitchen",
    "url": "https://codeforces.com/problemset/problem/827/F",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827E. Rusty String",
    "url": "https://codeforces.com/problemset/problem/827/E",
    "difficulty": 2700,
    "tags": [
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827D. Best Edge Weight",
    "url": "https://codeforces.com/problemset/problem/827/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827C. DNA Evolution",
    "url": "https://codeforces.com/problemset/problem/827/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827B. High Load",
    "url": "https://codeforces.com/problemset/problem/827/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "827A. String Reconstruction",
    "url": "https://codeforces.com/problemset/problem/827/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825G. Tree Queries",
    "url": "https://codeforces.com/problemset/problem/825/G",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825F. String Compression",
    "url": "https://codeforces.com/problemset/problem/825/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825E. Minimal Labels",
    "url": "https://codeforces.com/problemset/problem/825/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825D. Suitable Replacement",
    "url": "https://codeforces.com/problemset/problem/825/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825C. Multi-judge Solving",
    "url": "https://codeforces.com/problemset/problem/825/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825B. Five-In-a-Row",
    "url": "https://codeforces.com/problemset/problem/825/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "825A. Binary Protocol",
    "url": "https://codeforces.com/problemset/problem/825/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822F. Madness",
    "url": "https://codeforces.com/problemset/problem/822/F",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822E. Liar",
    "url": "https://codeforces.com/problemset/problem/822/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822D. My pretty girl Noora",
    "url": "https://codeforces.com/problemset/problem/822/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822C. Hacker, pack your bags!",
    "url": "https://codeforces.com/problemset/problem/822/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822B. Crossword solving",
    "url": "https://codeforces.com/problemset/problem/822/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "822A. I'm bored with life",
    "url": "https://codeforces.com/problemset/problem/822/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "821E. Okabe and El Psy Kongroo",
    "url": "https://codeforces.com/problemset/problem/821/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "821D. Okabe and City",
    "url": "https://codeforces.com/problemset/problem/821/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "821C. Okabe and Boxes",
    "url": "https://codeforces.com/problemset/problem/821/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "821B. Okabe and Banana Trees",
    "url": "https://codeforces.com/problemset/problem/821/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "821A. Okabe and Future Gadget Laboratory",
    "url": "https://codeforces.com/problemset/problem/821/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "820B. Mister B and Angle in Polygon",
    "url": "https://codeforces.com/problemset/problem/820/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "820A. Mister B and Book Reading",
    "url": "https://codeforces.com/problemset/problem/820/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "819E. Mister B and Flight to the Moon",
    "url": "https://codeforces.com/problemset/problem/819/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "819D. Mister B and Astronomers",
    "url": "https://codeforces.com/problemset/problem/819/D",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "819C. Mister B and Beacons on Field",
    "url": "https://codeforces.com/problemset/problem/819/C",
    "difficulty": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "819B. Mister B and PR Shifts",
    "url": "https://codeforces.com/problemset/problem/819/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "819A. Mister B and Boring Game",
    "url": "https://codeforces.com/problemset/problem/819/A",
    "difficulty": 2200,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818G. Four Melodies",
    "url": "https://codeforces.com/problemset/problem/818/G",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818F. Level Generation",
    "url": "https://codeforces.com/problemset/problem/818/F",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818E. Card Game Again",
    "url": "https://codeforces.com/problemset/problem/818/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818D. Multicolored Cars",
    "url": "https://codeforces.com/problemset/problem/818/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818C. Sofa Thief",
    "url": "https://codeforces.com/problemset/problem/818/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818B. Permutation Game",
    "url": "https://codeforces.com/problemset/problem/818/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "818A. Diplomas and Certificates",
    "url": "https://codeforces.com/problemset/problem/818/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817F. MEX Queries",
    "url": "https://codeforces.com/problemset/problem/817/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817E. Choosing The Commander",
    "url": "https://codeforces.com/problemset/problem/817/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817D. Imbalanced Array",
    "url": "https://codeforces.com/problemset/problem/817/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817C. Really Big Numbers",
    "url": "https://codeforces.com/problemset/problem/817/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817B. Makes And The Product",
    "url": "https://codeforces.com/problemset/problem/817/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "817A. Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/817/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "816B. Karen and Coffee",
    "url": "https://codeforces.com/problemset/problem/816/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "816A. Karen and Morning",
    "url": "https://codeforces.com/problemset/problem/816/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "815E. Karen and Neighborhood",
    "url": "https://codeforces.com/problemset/problem/815/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "815D. Karen and Cards",
    "url": "https://codeforces.com/problemset/problem/815/D",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "815C. Karen and Supermarket",
    "url": "https://codeforces.com/problemset/problem/815/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "815B. Karen and Test",
    "url": "https://codeforces.com/problemset/problem/815/B",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "815A. Karen and Game",
    "url": "https://codeforces.com/problemset/problem/815/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "814E. An unavoidable detour for home",
    "url": "https://codeforces.com/problemset/problem/814/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "814D. An overnight dance in discotheque",
    "url": "https://codeforces.com/problemset/problem/814/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "814C. An impassioned circulation of affection",
    "url": "https://codeforces.com/problemset/problem/814/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "814B. An express train to reveries",
    "url": "https://codeforces.com/problemset/problem/814/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "814A. An abandoned sentiment from past",
    "url": "https://codeforces.com/problemset/problem/814/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813F. Bipartite Checking",
    "url": "https://codeforces.com/problemset/problem/813/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813E. Army Creation",
    "url": "https://codeforces.com/problemset/problem/813/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813D. Two Melodies",
    "url": "https://codeforces.com/problemset/problem/813/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813C. The Tag Game",
    "url": "https://codeforces.com/problemset/problem/813/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813B. The Golden Age",
    "url": "https://codeforces.com/problemset/problem/813/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "813A. The Contest",
    "url": "https://codeforces.com/problemset/problem/813/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "812E. Sagheer and Apple Tree",
    "url": "https://codeforces.com/problemset/problem/812/E",
    "difficulty": 2300,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "812D. Sagheer and Kindergarten",
    "url": "https://codeforces.com/problemset/problem/812/D",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "812C. Sagheer and Nubian Market",
    "url": "https://codeforces.com/problemset/problem/812/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "812B. Sagheer, the Hausmeister",
    "url": "https://codeforces.com/problemset/problem/812/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "812A. Sagheer and Crossroads",
    "url": "https://codeforces.com/problemset/problem/812/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "811E. Vladik and Entertaining Flags",
    "url": "https://codeforces.com/problemset/problem/811/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "811D. Vladik and Favorite Game",
    "url": "https://codeforces.com/problemset/problem/811/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "811C. Vladik and Memorable Trip",
    "url": "https://codeforces.com/problemset/problem/811/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "811B. Vladik and Complicated Book",
    "url": "https://codeforces.com/problemset/problem/811/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "811A. Vladik and Courtesy",
    "url": "https://codeforces.com/problemset/problem/811/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "810B. Summer sell-off",
    "url": "https://codeforces.com/problemset/problem/810/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "810A. Straight <<A>>",
    "url": "https://codeforces.com/problemset/problem/810/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "809E. Surprise me!",
    "url": "https://codeforces.com/problemset/problem/809/E",
    "difficulty": 3100,
    "tags": [
      "divide and conquer",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "809D. Hitchhiking in the Baltic States",
    "url": "https://codeforces.com/problemset/problem/809/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "809C. Find a car",
    "url": "https://codeforces.com/problemset/problem/809/C",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "809B. Glad to see you!",
    "url": "https://codeforces.com/problemset/problem/809/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "809A. Do you want a date?",
    "url": "https://codeforces.com/problemset/problem/809/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808G. Anthem of Berland",
    "url": "https://codeforces.com/problemset/problem/808/G",
    "difficulty": 2300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808F. Card Game",
    "url": "https://codeforces.com/problemset/problem/808/F",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808E. Selling Souvenirs",
    "url": "https://codeforces.com/problemset/problem/808/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808D. Array Division",
    "url": "https://codeforces.com/problemset/problem/808/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808C. Tea Party",
    "url": "https://codeforces.com/problemset/problem/808/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808B. Average Sleep Time",
    "url": "https://codeforces.com/problemset/problem/808/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "808A. Lucky Year",
    "url": "https://codeforces.com/problemset/problem/808/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "807B. T-Shirt Hunt",
    "url": "https://codeforces.com/problemset/problem/807/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "807A. Is it rated?",
    "url": "https://codeforces.com/problemset/problem/807/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "805B. 3-palindrome",
    "url": "https://codeforces.com/problemset/problem/805/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "805A. Fake NP",
    "url": "https://codeforces.com/problemset/problem/805/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804F. Fake bullions",
    "url": "https://codeforces.com/problemset/problem/804/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804E. The same permutation ",
    "url": "https://codeforces.com/problemset/problem/804/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804D. Expected diameter of a tree",
    "url": "https://codeforces.com/problemset/problem/804/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804C. Ice cream coloring",
    "url": "https://codeforces.com/problemset/problem/804/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804B. Minimum number of steps",
    "url": "https://codeforces.com/problemset/problem/804/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "804A. Find Amir",
    "url": "https://codeforces.com/problemset/problem/804/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803G. Periodic RMQ Problem",
    "url": "https://codeforces.com/problemset/problem/803/G",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803F. Coprime Subsequences",
    "url": "https://codeforces.com/problemset/problem/803/F",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803E. Roma and Poker",
    "url": "https://codeforces.com/problemset/problem/803/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803D. Magazine Ad",
    "url": "https://codeforces.com/problemset/problem/803/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803C. Maximal GCD",
    "url": "https://codeforces.com/problemset/problem/803/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803B. Distances to Zero",
    "url": "https://codeforces.com/problemset/problem/803/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "803A. Maximal Binary Matrix",
    "url": "https://codeforces.com/problemset/problem/803/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802O. April Fools' Problem (hard)",
    "url": "https://codeforces.com/problemset/problem/802/O",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "data structures",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802N. April Fools' Problem (medium)",
    "url": "https://codeforces.com/problemset/problem/802/N",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802M. April Fools' Problem (easy)",
    "url": "https://codeforces.com/problemset/problem/802/M",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802L. Send the Fool Further! (hard)",
    "url": "https://codeforces.com/problemset/problem/802/L",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802K. Send the Fool Further! (medium)",
    "url": "https://codeforces.com/problemset/problem/802/K",
    "difficulty": 2100,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802J. Send the Fool Further! (easy)",
    "url": "https://codeforces.com/problemset/problem/802/J",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802I. Fake News (hard)",
    "url": "https://codeforces.com/problemset/problem/802/I",
    "difficulty": 2300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802H. Fake News (medium)",
    "url": "https://codeforces.com/problemset/problem/802/H",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802G. Fake News (easy)",
    "url": "https://codeforces.com/problemset/problem/802/G",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802F. Marmots (hard)",
    "url": "https://codeforces.com/problemset/problem/802/F",
    "difficulty": 2800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802E. Marmots (medium)",
    "url": "https://codeforces.com/problemset/problem/802/E",
    "difficulty": 2200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802D. Marmots (easy)",
    "url": "https://codeforces.com/problemset/problem/802/D",
    "difficulty": 2100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802C. Heidi and Library (hard)",
    "url": "https://codeforces.com/problemset/problem/802/C",
    "difficulty": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802B. Heidi and Library (medium)",
    "url": "https://codeforces.com/problemset/problem/802/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "802A. Heidi and Library (easy)",
    "url": "https://codeforces.com/problemset/problem/802/A",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "801B. Valued Keys",
    "url": "https://codeforces.com/problemset/problem/801/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "801A. Vicious Keyboard",
    "url": "https://codeforces.com/problemset/problem/801/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799G. Cut the pie",
    "url": "https://codeforces.com/problemset/problem/799/G",
    "difficulty": 3500,
    "tags": [
      "binary search",
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799F. Beautiful fountains rows",
    "url": "https://codeforces.com/problemset/problem/799/F",
    "difficulty": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799E. Aquarium decoration",
    "url": "https://codeforces.com/problemset/problem/799/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799D. Field expansion",
    "url": "https://codeforces.com/problemset/problem/799/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799C. Fountains",
    "url": "https://codeforces.com/problemset/problem/799/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799B. T-shirt buying",
    "url": "https://codeforces.com/problemset/problem/799/B",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "799A. Carrot Cakes",
    "url": "https://codeforces.com/problemset/problem/799/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "798E. Mike and code of a permutation",
    "url": "https://codeforces.com/problemset/problem/798/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "798D. Mike and distribution",
    "url": "https://codeforces.com/problemset/problem/798/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "798C. Mike and gcd problem",
    "url": "https://codeforces.com/problemset/problem/798/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "798B. Mike and strings",
    "url": "https://codeforces.com/problemset/problem/798/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "798A. Mike and palindrome",
    "url": "https://codeforces.com/problemset/problem/798/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797F. Mice and Holes",
    "url": "https://codeforces.com/problemset/problem/797/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797E. Array Queries",
    "url": "https://codeforces.com/problemset/problem/797/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797D. Broken BST",
    "url": "https://codeforces.com/problemset/problem/797/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797C. Minimal string",
    "url": "https://codeforces.com/problemset/problem/797/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797B. Odd sum",
    "url": "https://codeforces.com/problemset/problem/797/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "797A. k-Factorization",
    "url": "https://codeforces.com/problemset/problem/797/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796F. Sequence Recovery",
    "url": "https://codeforces.com/problemset/problem/796/F",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796E. Exam Cheating",
    "url": "https://codeforces.com/problemset/problem/796/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796D. Police Stations",
    "url": "https://codeforces.com/problemset/problem/796/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796C. Bank Hacking",
    "url": "https://codeforces.com/problemset/problem/796/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796B. Find The Bone",
    "url": "https://codeforces.com/problemset/problem/796/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "796A. Buying A House",
    "url": "https://codeforces.com/problemset/problem/796/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794G. Replace All",
    "url": "https://codeforces.com/problemset/problem/794/G",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794F. Leha and security system",
    "url": "https://codeforces.com/problemset/problem/794/F",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794E. Choosing Carrot",
    "url": "https://codeforces.com/problemset/problem/794/E",
    "difficulty": 2800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794D. Labelling Cities",
    "url": "https://codeforces.com/problemset/problem/794/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794C. Naming Company",
    "url": "https://codeforces.com/problemset/problem/794/C",
    "difficulty": 1800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794B. Cutting Carrot",
    "url": "https://codeforces.com/problemset/problem/794/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "794A. Bank Robbery",
    "url": "https://codeforces.com/problemset/problem/794/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793G. Oleg and chess",
    "url": "https://codeforces.com/problemset/problem/793/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793F. Julia the snail",
    "url": "https://codeforces.com/problemset/problem/793/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793E. Problem of offices",
    "url": "https://codeforces.com/problemset/problem/793/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793D. Presents in Bankopolis",
    "url": "https://codeforces.com/problemset/problem/793/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793C. Mice problem",
    "url": "https://codeforces.com/problemset/problem/793/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793B. Igor and his way to work",
    "url": "https://codeforces.com/problemset/problem/793/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "793A. Oleg and shares",
    "url": "https://codeforces.com/problemset/problem/793/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792F. Mages and Monsters",
    "url": "https://codeforces.com/problemset/problem/792/F",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792E. Colored Balls",
    "url": "https://codeforces.com/problemset/problem/792/E",
    "difficulty": 2500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792D. Paths in a Complete Binary Tree",
    "url": "https://codeforces.com/problemset/problem/792/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792C. Divide by Three",
    "url": "https://codeforces.com/problemset/problem/792/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792B. Counting-out Rhyme",
    "url": "https://codeforces.com/problemset/problem/792/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "792A. New Bus Route",
    "url": "https://codeforces.com/problemset/problem/792/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "791A. Bear and Big Brother",
    "url": "https://codeforces.com/problemset/problem/791/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "789B. Masha and geometric depression",
    "url": "https://codeforces.com/problemset/problem/789/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "789A. Anastasia and pebbles",
    "url": "https://codeforces.com/problemset/problem/789/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "788E. New task",
    "url": "https://codeforces.com/problemset/problem/788/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "788D. Finding lines",
    "url": "https://codeforces.com/problemset/problem/788/D",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "788C. The Great Mixing",
    "url": "https://codeforces.com/problemset/problem/788/C",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "788B. Weird journey",
    "url": "https://codeforces.com/problemset/problem/788/B",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "788A. Functions again",
    "url": "https://codeforces.com/problemset/problem/788/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "787B. Not Afraid",
    "url": "https://codeforces.com/problemset/problem/787/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "787A. The Monster",
    "url": "https://codeforces.com/problemset/problem/787/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "786E. ALT",
    "url": "https://codeforces.com/problemset/problem/786/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "786D. Rap God",
    "url": "https://codeforces.com/problemset/problem/786/D",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "dfs and similar",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "786C. Till I Collapse",
    "url": "https://codeforces.com/problemset/problem/786/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "786B. Legacy",
    "url": "https://codeforces.com/problemset/problem/786/B",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "786A. Berzerk",
    "url": "https://codeforces.com/problemset/problem/786/A",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "785E. Anton and Permutation",
    "url": "https://codeforces.com/problemset/problem/785/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "785D. Anton and School - 2",
    "url": "https://codeforces.com/problemset/problem/785/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "785C. Anton and Fairy Tale",
    "url": "https://codeforces.com/problemset/problem/785/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "785B. Anton and Classes",
    "url": "https://codeforces.com/problemset/problem/785/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "785A. Anton and Polyhedrons",
    "url": "https://codeforces.com/problemset/problem/785/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784G. BF Calculator",
    "url": "https://codeforces.com/problemset/problem/784/G",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784F. Crunching Numbers Just for You",
    "url": "https://codeforces.com/problemset/problem/784/F",
    "difficulty": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784E. Twisted Circuit",
    "url": "https://codeforces.com/problemset/problem/784/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784D. Touchy-Feely Palindromes",
    "url": "https://codeforces.com/problemset/problem/784/D",
    "difficulty": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784C. INTERCALC",
    "url": "https://codeforces.com/problemset/problem/784/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784B. Kids' Riddle",
    "url": "https://codeforces.com/problemset/problem/784/B",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "784A. Numbers Joke",
    "url": "https://codeforces.com/problemset/problem/784/A",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780H. Intranet of Buses",
    "url": "https://codeforces.com/problemset/problem/780/H",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780G. Andryusha and Nervous Barriers",
    "url": "https://codeforces.com/problemset/problem/780/G",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780F. Axel and Marston in Bitland",
    "url": "https://codeforces.com/problemset/problem/780/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780E. Underground Lab",
    "url": "https://codeforces.com/problemset/problem/780/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780D. Innokenty and a Football League",
    "url": "https://codeforces.com/problemset/problem/780/D",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780C. Andryusha and Colored Balloons",
    "url": "https://codeforces.com/problemset/problem/780/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780B. The Meeting Place Cannot Be Changed",
    "url": "https://codeforces.com/problemset/problem/780/B",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "780A. Andryusha and Socks",
    "url": "https://codeforces.com/problemset/problem/780/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "779C. Dishonest Sellers",
    "url": "https://codeforces.com/problemset/problem/779/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "779B. Weird Rounding",
    "url": "https://codeforces.com/problemset/problem/779/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "779A. Pupils Redistribution",
    "url": "https://codeforces.com/problemset/problem/779/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "778E. Selling Numbers",
    "url": "https://codeforces.com/problemset/problem/778/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "778D. Parquet Re-laying",
    "url": "https://codeforces.com/problemset/problem/778/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "778C. Peterson Polyglot",
    "url": "https://codeforces.com/problemset/problem/778/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "778B. Bitwise Formula",
    "url": "https://codeforces.com/problemset/problem/778/B",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "778A. String Game",
    "url": "https://codeforces.com/problemset/problem/778/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "777E. Hanoi Factory",
    "url": "https://codeforces.com/problemset/problem/777/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "777D. Cloud of Hashtags",
    "url": "https://codeforces.com/problemset/problem/777/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "777C. Alyona and Spreadsheet",
    "url": "https://codeforces.com/problemset/problem/777/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "777B. Game of Credit Cards",
    "url": "https://codeforces.com/problemset/problem/777/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "777A. Shell Game",
    "url": "https://codeforces.com/problemset/problem/777/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776G. Sherlock and the Encrypted Data",
    "url": "https://codeforces.com/problemset/problem/776/G",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776F. Sherlock's bet to Moriarty",
    "url": "https://codeforces.com/problemset/problem/776/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776E. The Holmes Children",
    "url": "https://codeforces.com/problemset/problem/776/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776D. The Door Problem",
    "url": "https://codeforces.com/problemset/problem/776/D",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776C. Molly's Chemicals",
    "url": "https://codeforces.com/problemset/problem/776/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776B. Sherlock and his girlfriend",
    "url": "https://codeforces.com/problemset/problem/776/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "776A. A Serial Killer",
    "url": "https://codeforces.com/problemset/problem/776/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "775A. University Schedule",
    "url": "https://codeforces.com/problemset/problem/775/A",
    "difficulty": 2900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774L. Bars",
    "url": "https://codeforces.com/problemset/problem/774/L",
    "difficulty": 2000,
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774K. Stepan and Vowels",
    "url": "https://codeforces.com/problemset/problem/774/K",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774J. Stepan's Series",
    "url": "https://codeforces.com/problemset/problem/774/J",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774I. Composing Of String",
    "url": "https://codeforces.com/problemset/problem/774/I",
    "difficulty": 2300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774H. Repairing Of String",
    "url": "https://codeforces.com/problemset/problem/774/H",
    "difficulty": 2200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774G. Perfectionist Arkadiy",
    "url": "https://codeforces.com/problemset/problem/774/G",
    "difficulty": 2700,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774F. Pens And Days Of Week",
    "url": "https://codeforces.com/problemset/problem/774/F",
    "difficulty": 2700,
    "tags": [
      "*special",
      "binary search",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774E. Big Number and Remainder",
    "url": "https://codeforces.com/problemset/problem/774/E",
    "difficulty": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774D. Lie or Truth",
    "url": "https://codeforces.com/problemset/problem/774/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774C. Maximum Number",
    "url": "https://codeforces.com/problemset/problem/774/C",
    "difficulty": 1200,
    "tags": [
      "*special",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774B. Significant Cups",
    "url": "https://codeforces.com/problemset/problem/774/B",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "774A. Amusement Park",
    "url": "https://codeforces.com/problemset/problem/774/A",
    "difficulty": 2100,
    "tags": [
      "*special",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773F. Test Data Generation",
    "url": "https://codeforces.com/problemset/problem/773/F",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773E. Blog Post Rating",
    "url": "https://codeforces.com/problemset/problem/773/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773D. Perishable Roads",
    "url": "https://codeforces.com/problemset/problem/773/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773C. Prairie Partition",
    "url": "https://codeforces.com/problemset/problem/773/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773B. Dynamic Problem Scoring",
    "url": "https://codeforces.com/problemset/problem/773/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "773A. Success Rate",
    "url": "https://codeforces.com/problemset/problem/773/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "772E. Verifying Kingdom",
    "url": "https://codeforces.com/problemset/problem/772/E",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "divide and conquer",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "772D. Varying Kibibits",
    "url": "https://codeforces.com/problemset/problem/772/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "772C. Vulnerable Kerbals",
    "url": "https://codeforces.com/problemset/problem/772/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "772B. Volatile Kite",
    "url": "https://codeforces.com/problemset/problem/772/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "772A. Voltage Keepsake",
    "url": "https://codeforces.com/problemset/problem/772/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771F. Bear and Isomorphic Points",
    "url": "https://codeforces.com/problemset/problem/771/F",
    "difficulty": 3300,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771E. Bear and Rectangle Strips",
    "url": "https://codeforces.com/problemset/problem/771/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771D. Bear and Company",
    "url": "https://codeforces.com/problemset/problem/771/D",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771C. Bear and Tree Jumps",
    "url": "https://codeforces.com/problemset/problem/771/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771B. Bear and Different Names",
    "url": "https://codeforces.com/problemset/problem/771/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "771A. Bear and Friendship Condition",
    "url": "https://codeforces.com/problemset/problem/771/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "770D. Draw Brackets!",
    "url": "https://codeforces.com/problemset/problem/770/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "770C. Online Courses In BSU",
    "url": "https://codeforces.com/problemset/problem/770/C",
    "difficulty": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "770B. Maximize Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/770/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "770A. New Password",
    "url": "https://codeforces.com/problemset/problem/770/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "769D. k-Interesting Pairs Of Integers",
    "url": "https://codeforces.com/problemset/problem/769/D",
    "difficulty": 1700,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "769C. Cycle In Maze",
    "url": "https://codeforces.com/problemset/problem/769/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "769B. News About Credit",
    "url": "https://codeforces.com/problemset/problem/769/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "769A. Year of University Entrance",
    "url": "https://codeforces.com/problemset/problem/769/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768G. The Winds of Winter",
    "url": "https://codeforces.com/problemset/problem/768/G",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768F. Barrels and boxes",
    "url": "https://codeforces.com/problemset/problem/768/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768E. Game of Stones",
    "url": "https://codeforces.com/problemset/problem/768/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768D. Jon and Orbs",
    "url": "https://codeforces.com/problemset/problem/768/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768C. Jon Snow and his Favourite Number",
    "url": "https://codeforces.com/problemset/problem/768/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768B. Code For 1",
    "url": "https://codeforces.com/problemset/problem/768/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "768A. Oath of the Night's Watch",
    "url": "https://codeforces.com/problemset/problem/768/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "767E. Change-free",
    "url": "https://codeforces.com/problemset/problem/767/E",
    "difficulty": 2400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "767D. Cartons of milk",
    "url": "https://codeforces.com/problemset/problem/767/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "767C. Garland",
    "url": "https://codeforces.com/problemset/problem/767/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "767B. The Queue",
    "url": "https://codeforces.com/problemset/problem/767/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "767A. Snacktower",
    "url": "https://codeforces.com/problemset/problem/767/A",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "766E. Mahmoud and a xor trip",
    "url": "https://codeforces.com/problemset/problem/766/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "766D. Mahmoud and a Dictionary",
    "url": "https://codeforces.com/problemset/problem/766/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "766C. Mahmoud and a Message",
    "url": "https://codeforces.com/problemset/problem/766/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "766B. Mahmoud and a Triangle",
    "url": "https://codeforces.com/problemset/problem/766/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "766A. Mahmoud and Longest Uncommon Subsequence",
    "url": "https://codeforces.com/problemset/problem/766/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765G. Math, math everywhere",
    "url": "https://codeforces.com/problemset/problem/765/G",
    "difficulty": 3200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765F. Souvenirs",
    "url": "https://codeforces.com/problemset/problem/765/F",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765E. Tree Folding",
    "url": "https://codeforces.com/problemset/problem/765/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765D. Artsem and Saunders",
    "url": "https://codeforces.com/problemset/problem/765/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765C. Table Tennis Game 2",
    "url": "https://codeforces.com/problemset/problem/765/C",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765B. Code obfuscation",
    "url": "https://codeforces.com/problemset/problem/765/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "765A. Neverending competitions",
    "url": "https://codeforces.com/problemset/problem/765/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "764B. Timofey and cubes",
    "url": "https://codeforces.com/problemset/problem/764/B",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "764A. Taymyr is calling you",
    "url": "https://codeforces.com/problemset/problem/764/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "763E. Timofey and our friends animals",
    "url": "https://codeforces.com/problemset/problem/763/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "763D. Timofey and a flat tree",
    "url": "https://codeforces.com/problemset/problem/763/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "graphs",
      "hashing",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "763C. Timofey and remoduling",
    "url": "https://codeforces.com/problemset/problem/763/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "763B. Timofey and rectangles",
    "url": "https://codeforces.com/problemset/problem/763/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "763A. Timofey and a tree",
    "url": "https://codeforces.com/problemset/problem/763/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762F. Tree nesting",
    "url": "https://codeforces.com/problemset/problem/762/F",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762E. Radio stations",
    "url": "https://codeforces.com/problemset/problem/762/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762D. Maximum path",
    "url": "https://codeforces.com/problemset/problem/762/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762C. Two strings",
    "url": "https://codeforces.com/problemset/problem/762/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762B. USB vs. PS/2",
    "url": "https://codeforces.com/problemset/problem/762/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "762A. k-th divisor",
    "url": "https://codeforces.com/problemset/problem/762/A",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761F. Dasha and Photos",
    "url": "https://codeforces.com/problemset/problem/761/F",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761E. Dasha and Puzzle",
    "url": "https://codeforces.com/problemset/problem/761/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761D. Dasha and Very Difficult Problem",
    "url": "https://codeforces.com/problemset/problem/761/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761C. Dasha and Password",
    "url": "https://codeforces.com/problemset/problem/761/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761B. Dasha and friends",
    "url": "https://codeforces.com/problemset/problem/761/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "761A. Dasha and Stairs",
    "url": "https://codeforces.com/problemset/problem/761/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "760B. Frodo and pillows",
    "url": "https://codeforces.com/problemset/problem/760/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "760A. Petr and a calendar",
    "url": "https://codeforces.com/problemset/problem/760/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758F. Geometrical Progression",
    "url": "https://codeforces.com/problemset/problem/758/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758E. Broken Tree",
    "url": "https://codeforces.com/problemset/problem/758/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758D. Ability To Convert",
    "url": "https://codeforces.com/problemset/problem/758/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758C. Unfair Poll",
    "url": "https://codeforces.com/problemset/problem/758/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758B. Blown Garland",
    "url": "https://codeforces.com/problemset/problem/758/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "758A. Holiday Of Equality",
    "url": "https://codeforces.com/problemset/problem/758/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757G. Can Bash Save the Day?",
    "url": "https://codeforces.com/problemset/problem/757/G",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757F. Team Rocket Rises Again",
    "url": "https://codeforces.com/problemset/problem/757/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757E. Bash Plays with Functions",
    "url": "https://codeforces.com/problemset/problem/757/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757D. Felicity's Big Secret Revealed",
    "url": "https://codeforces.com/problemset/problem/757/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757C. Felicity is Coming!",
    "url": "https://codeforces.com/problemset/problem/757/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757B. Bash's Big Day",
    "url": "https://codeforces.com/problemset/problem/757/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "757A. Gotta Catch Em' All!",
    "url": "https://codeforces.com/problemset/problem/757/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756F. Long number",
    "url": "https://codeforces.com/problemset/problem/756/F",
    "difficulty": 3400,
    "tags": [
      "expression parsing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756E. Byteland coins",
    "url": "https://codeforces.com/problemset/problem/756/E",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756D. Bacterial Melee",
    "url": "https://codeforces.com/problemset/problem/756/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756C. Nikita and stack",
    "url": "https://codeforces.com/problemset/problem/756/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756B. Travel Card",
    "url": "https://codeforces.com/problemset/problem/756/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "756A. Pavel and barbecue",
    "url": "https://codeforces.com/problemset/problem/756/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755G. PolandBall and Many Other Balls",
    "url": "https://codeforces.com/problemset/problem/755/G",
    "difficulty": 3200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755F. PolandBall and Gifts",
    "url": "https://codeforces.com/problemset/problem/755/F",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755E. PolandBall and White-Red graph",
    "url": "https://codeforces.com/problemset/problem/755/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755D. PolandBall and Polygon",
    "url": "https://codeforces.com/problemset/problem/755/D",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755C. PolandBall and Forest",
    "url": "https://codeforces.com/problemset/problem/755/C",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755B. PolandBall and Game",
    "url": "https://codeforces.com/problemset/problem/755/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "755A. PolandBall and Hypothesis",
    "url": "https://codeforces.com/problemset/problem/755/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "754E. Dasha and cyclic table",
    "url": "https://codeforces.com/problemset/problem/754/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "fft",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "754D. Fedor and coupons",
    "url": "https://codeforces.com/problemset/problem/754/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "754C. Vladik and chat",
    "url": "https://codeforces.com/problemset/problem/754/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "754B. Ilya and tic-tac-toe game",
    "url": "https://codeforces.com/problemset/problem/754/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "754A. Lesha and array splitting",
    "url": "https://codeforces.com/problemset/problem/754/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "753C. Interactive Bulls and Cows (Hard)",
    "url": "https://codeforces.com/problemset/problem/753/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "753B. Interactive Bulls and Cows (Easy)",
    "url": "https://codeforces.com/problemset/problem/753/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "753A. Santa Claus and Candies",
    "url": "https://codeforces.com/problemset/problem/753/A",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750H. New Year and Snowy Grid",
    "url": "https://codeforces.com/problemset/problem/750/H",
    "difficulty": 3500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750G. New Year and Binary Tree Paths",
    "url": "https://codeforces.com/problemset/problem/750/G",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750F. New Year and Finding Roots",
    "url": "https://codeforces.com/problemset/problem/750/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750E. New Year and Old Subsequence",
    "url": "https://codeforces.com/problemset/problem/750/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750D. New Year and Fireworks",
    "url": "https://codeforces.com/problemset/problem/750/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750C. New Year and Rating",
    "url": "https://codeforces.com/problemset/problem/750/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750B. New Year and North Pole",
    "url": "https://codeforces.com/problemset/problem/750/B",
    "difficulty": 1300,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "750A. New Year and Hurry",
    "url": "https://codeforces.com/problemset/problem/750/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "749E. Inversions After Shuffle",
    "url": "https://codeforces.com/problemset/problem/749/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "749D. Leaving Auction",
    "url": "https://codeforces.com/problemset/problem/749/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "749C. Voting",
    "url": "https://codeforces.com/problemset/problem/749/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "749B. Parallelogram is Back",
    "url": "https://codeforces.com/problemset/problem/749/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "749A. Bachgold Problem",
    "url": "https://codeforces.com/problemset/problem/749/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748F. Santa Clauses and a Soccer Championship",
    "url": "https://codeforces.com/problemset/problem/748/F",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748E. Santa Claus and Tangerines",
    "url": "https://codeforces.com/problemset/problem/748/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748D. Santa Claus and a Palindrome",
    "url": "https://codeforces.com/problemset/problem/748/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748C. Santa Claus and Robot",
    "url": "https://codeforces.com/problemset/problem/748/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748B. Santa Claus and Keyboard Check",
    "url": "https://codeforces.com/problemset/problem/748/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "748A. Santa Claus and a Place in a Class",
    "url": "https://codeforces.com/problemset/problem/748/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747F. Igor and Interesting Numbers",
    "url": "https://codeforces.com/problemset/problem/747/F",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747E. Comments",
    "url": "https://codeforces.com/problemset/problem/747/E",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747D. Winter Is Coming",
    "url": "https://codeforces.com/problemset/problem/747/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747C. Servers",
    "url": "https://codeforces.com/problemset/problem/747/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747B. Mammoth's Genome Decoding",
    "url": "https://codeforces.com/problemset/problem/747/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "747A. Display Size",
    "url": "https://codeforces.com/problemset/problem/747/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746G. New Roads",
    "url": "https://codeforces.com/problemset/problem/746/G",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746F. Music in Car",
    "url": "https://codeforces.com/problemset/problem/746/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746E. Numbers Exchange",
    "url": "https://codeforces.com/problemset/problem/746/E",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746D. Green and Black Tea",
    "url": "https://codeforces.com/problemset/problem/746/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746C. Tram",
    "url": "https://codeforces.com/problemset/problem/746/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746B. Decoding",
    "url": "https://codeforces.com/problemset/problem/746/B",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "746A. Compote",
    "url": "https://codeforces.com/problemset/problem/746/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "745B. Hongcow Solves A Puzzle",
    "url": "https://codeforces.com/problemset/problem/745/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "745A. Hongcow Learns the Cyclic Shift",
    "url": "https://codeforces.com/problemset/problem/745/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "744E. Hongcow Masters the Cyclic Shift",
    "url": "https://codeforces.com/problemset/problem/744/E",
    "difficulty": 3200,
    "tags": [
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "744D. Hongcow Draws a Circle",
    "url": "https://codeforces.com/problemset/problem/744/D",
    "difficulty": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "744C. Hongcow Buys a Deck of Cards",
    "url": "https://codeforces.com/problemset/problem/744/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "744B. Hongcow's Game",
    "url": "https://codeforces.com/problemset/problem/744/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "744A. Hongcow Builds A Nation",
    "url": "https://codeforces.com/problemset/problem/744/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "743E. Vladik and cards",
    "url": "https://codeforces.com/problemset/problem/743/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "743D. Chloe and pleasant prizes",
    "url": "https://codeforces.com/problemset/problem/743/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "743C. Vladik and fractions",
    "url": "https://codeforces.com/problemset/problem/743/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "743B. Chloe and the sequence ",
    "url": "https://codeforces.com/problemset/problem/743/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "743A. Vladik and flights",
    "url": "https://codeforces.com/problemset/problem/743/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "742B. Arpa’s obvious problem and Mehrdad’s terrible solution",
    "url": "https://codeforces.com/problemset/problem/742/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "742A. Arpa’s hard exam and Mehrdad’s naive cheat",
    "url": "https://codeforces.com/problemset/problem/742/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "741E. Arpa’s abnormal DNA and Mehrdad’s deep interest",
    "url": "https://codeforces.com/problemset/problem/741/E",
    "difficulty": 3400,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "741D. Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths",
    "url": "https://codeforces.com/problemset/problem/741/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "741C. Arpa’s overnight party and Mehrdad’s silent entering",
    "url": "https://codeforces.com/problemset/problem/741/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "741B. Arpa's weak amphitheater and Mehrdad's valuable Hoses",
    "url": "https://codeforces.com/problemset/problem/741/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "741A. Arpa's loud Owf and Mehrdad's evil plan",
    "url": "https://codeforces.com/problemset/problem/741/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "740B. Alyona and flowers",
    "url": "https://codeforces.com/problemset/problem/740/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "740A. Alyona and copybooks",
    "url": "https://codeforces.com/problemset/problem/740/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "739E. Gosha is hunting",
    "url": "https://codeforces.com/problemset/problem/739/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "flows",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "739D. Recover a functional graph",
    "url": "https://codeforces.com/problemset/problem/739/D",
    "difficulty": 3400,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "739C. Alyona and towers",
    "url": "https://codeforces.com/problemset/problem/739/C",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "739B. Alyona and a tree",
    "url": "https://codeforces.com/problemset/problem/739/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "739A. Alyona and mex",
    "url": "https://codeforces.com/problemset/problem/739/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "737F. Dirty plates",
    "url": "https://codeforces.com/problemset/problem/737/F",
    "difficulty": 3300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "737E. Tanya is 5!",
    "url": "https://codeforces.com/problemset/problem/737/E",
    "difficulty": 3300,
    "tags": [
      "graph matchings",
      "graphs",
      "greedy",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "736E. Chess Championship",
    "url": "https://codeforces.com/problemset/problem/736/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "736D. Permutations",
    "url": "https://codeforces.com/problemset/problem/736/D",
    "difficulty": 2800,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "735E. Ostap and Tree",
    "url": "https://codeforces.com/problemset/problem/735/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "735D. Taxes",
    "url": "https://codeforces.com/problemset/problem/735/D",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "735C. Tennis Championship",
    "url": "https://codeforces.com/problemset/problem/735/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "735B. Urbanization",
    "url": "https://codeforces.com/problemset/problem/735/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "735A. Ostap and Grasshopper",
    "url": "https://codeforces.com/problemset/problem/735/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734F. Anton and School",
    "url": "https://codeforces.com/problemset/problem/734/F",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734E. Anton and Tree",
    "url": "https://codeforces.com/problemset/problem/734/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734D. Anton and Chess",
    "url": "https://codeforces.com/problemset/problem/734/D",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734C. Anton and Making Potions",
    "url": "https://codeforces.com/problemset/problem/734/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734B. Anton and Digits",
    "url": "https://codeforces.com/problemset/problem/734/B",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "734A. Anton and Danik",
    "url": "https://codeforces.com/problemset/problem/734/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733F. Drivers Dissatisfaction",
    "url": "https://codeforces.com/problemset/problem/733/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733E. Sleep in Class",
    "url": "https://codeforces.com/problemset/problem/733/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733D. Kostya the Sculptor",
    "url": "https://codeforces.com/problemset/problem/733/D",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733C. Epidemic in Monstropolis",
    "url": "https://codeforces.com/problemset/problem/733/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733B. Parade",
    "url": "https://codeforces.com/problemset/problem/733/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "733A. Grasshopper And the String",
    "url": "https://codeforces.com/problemset/problem/733/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732F. Tourist Reform",
    "url": "https://codeforces.com/problemset/problem/732/F",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732E. Sockets",
    "url": "https://codeforces.com/problemset/problem/732/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732D. Exams",
    "url": "https://codeforces.com/problemset/problem/732/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732C. Sanatorium",
    "url": "https://codeforces.com/problemset/problem/732/C",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732B. Cormen --- The Best Friend Of a Man",
    "url": "https://codeforces.com/problemset/problem/732/B",
    "difficulty": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "732A. Buy a Shovel",
    "url": "https://codeforces.com/problemset/problem/732/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731F. Video Cards",
    "url": "https://codeforces.com/problemset/problem/731/F",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731E. Funny Game",
    "url": "https://codeforces.com/problemset/problem/731/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731D. 80-th Level Archeology",
    "url": "https://codeforces.com/problemset/problem/731/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731C. Socks",
    "url": "https://codeforces.com/problemset/problem/731/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731B. Coupons and Discounts",
    "url": "https://codeforces.com/problemset/problem/731/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "731A. Night at the Museum",
    "url": "https://codeforces.com/problemset/problem/731/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730L. Expression Queries",
    "url": "https://codeforces.com/problemset/problem/730/L",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730K. Roads Orientation Problem",
    "url": "https://codeforces.com/problemset/problem/730/K",
    "difficulty": 3200,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730J. Bottles",
    "url": "https://codeforces.com/problemset/problem/730/J",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730I. Olympiad in Programming and Sports",
    "url": "https://codeforces.com/problemset/problem/730/I",
    "difficulty": 2000,
    "tags": [
      "dp",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730H. Delete Them",
    "url": "https://codeforces.com/problemset/problem/730/H",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730G. Car Repair Shop",
    "url": "https://codeforces.com/problemset/problem/730/G",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730F. Ber Patio",
    "url": "https://codeforces.com/problemset/problem/730/F",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "730E. Award Ceremony",
    "url": "https://codeforces.com/problemset/problem/730/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730D. Running Over The Bridges",
    "url": "https://codeforces.com/problemset/problem/730/D",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730C. Bulmart",
    "url": "https://codeforces.com/problemset/problem/730/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730B. Minimum and Maximum",
    "url": "https://codeforces.com/problemset/problem/730/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "730A. Toda 2",
    "url": "https://codeforces.com/problemset/problem/730/A",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729F. Financiers Game",
    "url": "https://codeforces.com/problemset/problem/729/F",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729E. Subordinates",
    "url": "https://codeforces.com/problemset/problem/729/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729D. Sea Battle",
    "url": "https://codeforces.com/problemset/problem/729/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729C. Road to Cinema",
    "url": "https://codeforces.com/problemset/problem/729/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729B. Spotlights",
    "url": "https://codeforces.com/problemset/problem/729/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "729A. Interview with Oleg",
    "url": "https://codeforces.com/problemset/problem/729/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727F. Polycarp's problems",
    "url": "https://codeforces.com/problemset/problem/727/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727E. Games on a CD",
    "url": "https://codeforces.com/problemset/problem/727/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727D. T-shirts Distribution",
    "url": "https://codeforces.com/problemset/problem/727/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727C. Guess the Array",
    "url": "https://codeforces.com/problemset/problem/727/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727B. Bill Total Value",
    "url": "https://codeforces.com/problemset/problem/727/B",
    "difficulty": 1600,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "727A. Transformation: from A to B",
    "url": "https://codeforces.com/problemset/problem/727/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725G. Messages on a Tree",
    "url": "https://codeforces.com/problemset/problem/725/G",
    "difficulty": 3300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "725F. Family Photos",
    "url": "https://codeforces.com/problemset/problem/725/F",
    "difficulty": 2900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725E. Too Much Money",
    "url": "https://codeforces.com/problemset/problem/725/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725D. Contest Balloons",
    "url": "https://codeforces.com/problemset/problem/725/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725C. Hidden Word",
    "url": "https://codeforces.com/problemset/problem/725/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725B. Food on the Plane",
    "url": "https://codeforces.com/problemset/problem/725/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "725A. Jumping Ball",
    "url": "https://codeforces.com/problemset/problem/725/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724G. Xor-matic Number of the Graph",
    "url": "https://codeforces.com/problemset/problem/724/G",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724F. Uniformly Branched Trees",
    "url": "https://codeforces.com/problemset/problem/724/F",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724E. Goods transportation",
    "url": "https://codeforces.com/problemset/problem/724/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724D. Dense Subsequence",
    "url": "https://codeforces.com/problemset/problem/724/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724C. Ray Tracing",
    "url": "https://codeforces.com/problemset/problem/724/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724B. Batch Sort",
    "url": "https://codeforces.com/problemset/problem/724/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "724A. Checking the Calendar",
    "url": "https://codeforces.com/problemset/problem/724/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723F. st-Spanning Tree",
    "url": "https://codeforces.com/problemset/problem/723/F",
    "difficulty": 2300,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723E. One-Way Reform",
    "url": "https://codeforces.com/problemset/problem/723/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723D. Lakes in Berland",
    "url": "https://codeforces.com/problemset/problem/723/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723C. Polycarp at the Radio",
    "url": "https://codeforces.com/problemset/problem/723/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723B. Text Document Analysis",
    "url": "https://codeforces.com/problemset/problem/723/B",
    "difficulty": 1100,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "723A. The New Year: Meeting Friends",
    "url": "https://codeforces.com/problemset/problem/723/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722F. Cyclic Cipher",
    "url": "https://codeforces.com/problemset/problem/722/F",
    "difficulty": 2800,
    "tags": [
      "chinese remainder theorem",
      "data structures",
      "implementation",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722E. Research Rover",
    "url": "https://codeforces.com/problemset/problem/722/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722D. Generating Sets",
    "url": "https://codeforces.com/problemset/problem/722/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722C. Destroying Array",
    "url": "https://codeforces.com/problemset/problem/722/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722B. Verse Pattern",
    "url": "https://codeforces.com/problemset/problem/722/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "722A. Broken Clock",
    "url": "https://codeforces.com/problemset/problem/722/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "721E. Road to Home",
    "url": "https://codeforces.com/problemset/problem/721/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "721D. Maxim and Array",
    "url": "https://codeforces.com/problemset/problem/721/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "721C. Journey",
    "url": "https://codeforces.com/problemset/problem/721/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "721B. Passwords",
    "url": "https://codeforces.com/problemset/problem/721/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "721A. One-dimensional Japanese Crossword",
    "url": "https://codeforces.com/problemset/problem/721/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720F. Array Covering",
    "url": "https://codeforces.com/problemset/problem/720/F",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720E. Cipher",
    "url": "https://codeforces.com/problemset/problem/720/E",
    "difficulty": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720D. Slalom",
    "url": "https://codeforces.com/problemset/problem/720/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720C. Homework",
    "url": "https://codeforces.com/problemset/problem/720/C",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720B. Cactusophobia",
    "url": "https://codeforces.com/problemset/problem/720/B",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "720A. Closing ceremony",
    "url": "https://codeforces.com/problemset/problem/720/A",
    "difficulty": 2000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "719B. Anatoly and Cockroaches",
    "url": "https://codeforces.com/problemset/problem/719/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "719A. Vitya in the Countryside",
    "url": "https://codeforces.com/problemset/problem/719/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "718E. Matvey's Birthday",
    "url": "https://codeforces.com/problemset/problem/718/E",
    "difficulty": 3300,
    "tags": [
      "bitmasks",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "718D. Andrew and Chemistry",
    "url": "https://codeforces.com/problemset/problem/718/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "718C. Sasha and Array",
    "url": "https://codeforces.com/problemset/problem/718/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "718A. Efim and Strange Grade",
    "url": "https://codeforces.com/problemset/problem/718/A",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717I. Cowboy Beblop at his computer",
    "url": "https://codeforces.com/problemset/problem/717/I",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717H. Pokermon League challenge",
    "url": "https://codeforces.com/problemset/problem/717/H",
    "difficulty": 2400,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717G. Underfail",
    "url": "https://codeforces.com/problemset/problem/717/G",
    "difficulty": 2400,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717F. Heroes of Making Magic III",
    "url": "https://codeforces.com/problemset/problem/717/F",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717E. Paint it really, really dark gray",
    "url": "https://codeforces.com/problemset/problem/717/E",
    "difficulty": 1900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717D. Dexterina’s Lab",
    "url": "https://codeforces.com/problemset/problem/717/D",
    "difficulty": 1900,
    "tags": [
      "games",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717C. Potions Homework",
    "url": "https://codeforces.com/problemset/problem/717/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717B. R3D3’s Summer Adventure",
    "url": "https://codeforces.com/problemset/problem/717/B",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "717A. Festival Organization",
    "url": "https://codeforces.com/problemset/problem/717/A",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "716B. Complete the Word",
    "url": "https://codeforces.com/problemset/problem/716/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "716A. Crazy Computer",
    "url": "https://codeforces.com/problemset/problem/716/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "715E. Complete the Permutations",
    "url": "https://codeforces.com/problemset/problem/715/E",
    "difficulty": 3400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "715D. Create a Maze",
    "url": "https://codeforces.com/problemset/problem/715/D",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "715C. Digit Tree",
    "url": "https://codeforces.com/problemset/problem/715/C",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "715B. Complete The Graph",
    "url": "https://codeforces.com/problemset/problem/715/B",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "715A. Plus and Square Root",
    "url": "https://codeforces.com/problemset/problem/715/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "714B. Filya and Homework",
    "url": "https://codeforces.com/problemset/problem/714/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "714A. Meeting of Old Friends",
    "url": "https://codeforces.com/problemset/problem/714/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "713E. Sonya Partymaker",
    "url": "https://codeforces.com/problemset/problem/713/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "713D. Animals and Puzzle",
    "url": "https://codeforces.com/problemset/problem/713/D",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "713C. Sonya and Problem Wihtout a Legend",
    "url": "https://codeforces.com/problemset/problem/713/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "713B. Searching Rectangles",
    "url": "https://codeforces.com/problemset/problem/713/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "interactive"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "713A. Sonya and Queries",
    "url": "https://codeforces.com/problemset/problem/713/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "712E. Memory and Casinos",
    "url": "https://codeforces.com/problemset/problem/712/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "712D. Memory and Scores",
    "url": "https://codeforces.com/problemset/problem/712/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "712C. Memory and De-Evolution",
    "url": "https://codeforces.com/problemset/problem/712/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "712B. Memory and Trident",
    "url": "https://codeforces.com/problemset/problem/712/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "712A. Memory and Crow",
    "url": "https://codeforces.com/problemset/problem/712/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "711E. ZS and The Birthday Paradox",
    "url": "https://codeforces.com/problemset/problem/711/E",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "711D. Directed Roads",
    "url": "https://codeforces.com/problemset/problem/711/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "711C. Coloring Trees",
    "url": "https://codeforces.com/problemset/problem/711/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "711B. Chris and Magic Square",
    "url": "https://codeforces.com/problemset/problem/711/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "711A. Bus to Udayland",
    "url": "https://codeforces.com/problemset/problem/711/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710F. String Set Queries",
    "url": "https://codeforces.com/problemset/problem/710/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "interactive",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710E. Generate a String",
    "url": "https://codeforces.com/problemset/problem/710/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710D. Two Arithmetic Progressions",
    "url": "https://codeforces.com/problemset/problem/710/D",
    "difficulty": 2500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710C. Magic Odd Square",
    "url": "https://codeforces.com/problemset/problem/710/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710B. Optimal Point on a Line",
    "url": "https://codeforces.com/problemset/problem/710/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "710A. King Moves",
    "url": "https://codeforces.com/problemset/problem/710/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "709B. Checkpoints",
    "url": "https://codeforces.com/problemset/problem/709/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "709A. Juicer",
    "url": "https://codeforces.com/problemset/problem/709/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "708E. Student's Camp",
    "url": "https://codeforces.com/problemset/problem/708/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "708D. Incorrect Flow",
    "url": "https://codeforces.com/problemset/problem/708/D",
    "difficulty": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "708C. Centroids",
    "url": "https://codeforces.com/problemset/problem/708/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "708B. Recover the String",
    "url": "https://codeforces.com/problemset/problem/708/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "708A. Letters Cyclic Shift",
    "url": "https://codeforces.com/problemset/problem/708/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "707E. Garlands",
    "url": "https://codeforces.com/problemset/problem/707/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "707D. Persistent Bookcase ",
    "url": "https://codeforces.com/problemset/problem/707/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "707C. Pythagorean Triples",
    "url": "https://codeforces.com/problemset/problem/707/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "707B. Bakery",
    "url": "https://codeforces.com/problemset/problem/707/B",
    "difficulty": 1300,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "707A. Brain's Photos",
    "url": "https://codeforces.com/problemset/problem/707/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "706E. Working routine",
    "url": "https://codeforces.com/problemset/problem/706/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "706D. Vasiliy's Multiset",
    "url": "https://codeforces.com/problemset/problem/706/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "706C. Hard problem",
    "url": "https://codeforces.com/problemset/problem/706/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "706B. Interesting drink",
    "url": "https://codeforces.com/problemset/problem/706/B",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "706A. Beru-taxi",
    "url": "https://codeforces.com/problemset/problem/706/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "705B. Spider Man",
    "url": "https://codeforces.com/problemset/problem/705/B",
    "difficulty": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "705A. Hulk",
    "url": "https://codeforces.com/problemset/problem/705/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "704E. Iron Man",
    "url": "https://codeforces.com/problemset/problem/704/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "704D. Captain America",
    "url": "https://codeforces.com/problemset/problem/704/D",
    "difficulty": 3100,
    "tags": [
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "704C. Black Widow",
    "url": "https://codeforces.com/problemset/problem/704/C",
    "difficulty": 2900,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "704B. Ant Man",
    "url": "https://codeforces.com/problemset/problem/704/B",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "704A. Thor",
    "url": "https://codeforces.com/problemset/problem/704/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "703E. Mishka and Divisors",
    "url": "https://codeforces.com/problemset/problem/703/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "703D. Mishka and Interesting sum",
    "url": "https://codeforces.com/problemset/problem/703/D",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "703C. Chris and Road",
    "url": "https://codeforces.com/problemset/problem/703/C",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "703B. Mishka and trip",
    "url": "https://codeforces.com/problemset/problem/703/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "703A. Mishka and Game",
    "url": "https://codeforces.com/problemset/problem/703/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702F. T-Shirts",
    "url": "https://codeforces.com/problemset/problem/702/F",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702E. Analysis of Pathes in Functional Graph",
    "url": "https://codeforces.com/problemset/problem/702/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702D. Road to Post Office",
    "url": "https://codeforces.com/problemset/problem/702/D",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702C. Cellular Network",
    "url": "https://codeforces.com/problemset/problem/702/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702B. Powers of Two",
    "url": "https://codeforces.com/problemset/problem/702/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "702A. Maximum Increase",
    "url": "https://codeforces.com/problemset/problem/702/A",
    "difficulty": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "701C. They Are Everywhere",
    "url": "https://codeforces.com/problemset/problem/701/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "701B. Cells Not Under Attack",
    "url": "https://codeforces.com/problemset/problem/701/B",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "701A. Cards",
    "url": "https://codeforces.com/problemset/problem/701/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "700E. Cool Slogans",
    "url": "https://codeforces.com/problemset/problem/700/E",
    "difficulty": 3300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "700D. Huffman Coding on Segment",
    "url": "https://codeforces.com/problemset/problem/700/D",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "700C. Break Up",
    "url": "https://codeforces.com/problemset/problem/700/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "700B. Connecting Universities",
    "url": "https://codeforces.com/problemset/problem/700/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "700A. As Fast As Possible",
    "url": "https://codeforces.com/problemset/problem/700/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "699B. One Bomb",
    "url": "https://codeforces.com/problemset/problem/699/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "699A. Launch of Collider",
    "url": "https://codeforces.com/problemset/problem/699/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "698F. Coprime Permutation",
    "url": "https://codeforces.com/problemset/problem/698/F",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "698E. Cron",
    "url": "https://codeforces.com/problemset/problem/698/E",
    "difficulty": 2800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "698D. Limak and Shooting Points",
    "url": "https://codeforces.com/problemset/problem/698/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "698C. LRU",
    "url": "https://codeforces.com/problemset/problem/698/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "698B. Fix a Tree",
    "url": "https://codeforces.com/problemset/problem/698/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "698A. Vacations",
    "url": "https://codeforces.com/problemset/problem/698/A",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "697B. Barnicle",
    "url": "https://codeforces.com/problemset/problem/697/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "697A. Pineapple Incident",
    "url": "https://codeforces.com/problemset/problem/697/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696F. ...Dary!",
    "url": "https://codeforces.com/problemset/problem/696/F",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696E. ...Wait for it...",
    "url": "https://codeforces.com/problemset/problem/696/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696D. Legen...",
    "url": "https://codeforces.com/problemset/problem/696/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696C. PLEASE",
    "url": "https://codeforces.com/problemset/problem/696/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696B. Puzzles",
    "url": "https://codeforces.com/problemset/problem/696/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "696A. Lorenzo Von Matterhorn",
    "url": "https://codeforces.com/problemset/problem/696/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691F. Couple Cover",
    "url": "https://codeforces.com/problemset/problem/691/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691E. Xor-sequences",
    "url": "https://codeforces.com/problemset/problem/691/E",
    "difficulty": 1900,
    "tags": [
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691D. Swaps in Permutation",
    "url": "https://codeforces.com/problemset/problem/691/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691C. Exponential notation",
    "url": "https://codeforces.com/problemset/problem/691/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691B. s-palindrome",
    "url": "https://codeforces.com/problemset/problem/691/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "691A. Fashion in Berland",
    "url": "https://codeforces.com/problemset/problem/691/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690F3. Tree of Life (hard)",
    "url": "https://codeforces.com/problemset/problem/690/F3",
    "difficulty": 3200,
    "tags": [
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690F2. Tree of Life (medium)",
    "url": "https://codeforces.com/problemset/problem/690/F2",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "hashing",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690F1. Tree of Life (easy)",
    "url": "https://codeforces.com/problemset/problem/690/F1",
    "difficulty": 1300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690E2. Photographs (II)",
    "url": "https://codeforces.com/problemset/problem/690/E2",
    "difficulty": 2600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690E1. Photographs (I)",
    "url": "https://codeforces.com/problemset/problem/690/E1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690D3. The Wall (hard)",
    "url": "https://codeforces.com/problemset/problem/690/D3",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690D2. The Wall (medium)",
    "url": "https://codeforces.com/problemset/problem/690/D2",
    "difficulty": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690D1. The Wall (easy)",
    "url": "https://codeforces.com/problemset/problem/690/D1",
    "difficulty": 1200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690C3. Brain Network (hard)",
    "url": "https://codeforces.com/problemset/problem/690/C3",
    "difficulty": 2200,
    "tags": [
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690C2. Brain Network (medium)",
    "url": "https://codeforces.com/problemset/problem/690/C2",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690C1. Brain Network (easy)",
    "url": "https://codeforces.com/problemset/problem/690/C1",
    "difficulty": 1300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690B3. Recover Polygon (hard)",
    "url": "https://codeforces.com/problemset/problem/690/B3",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690B2. Recover Polygon (medium)",
    "url": "https://codeforces.com/problemset/problem/690/B2",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "690B1. Recover Polygon (easy)",
    "url": "https://codeforces.com/problemset/problem/690/B1",
    "difficulty": 1700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690A3. Collective Mindsets (hard)",
    "url": "https://codeforces.com/problemset/problem/690/A3",
    "difficulty": 2400,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690A2. Collective Mindsets (medium)",
    "url": "https://codeforces.com/problemset/problem/690/A2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "690A1. Collective Mindsets (easy)",
    "url": "https://codeforces.com/problemset/problem/690/A1",
    "difficulty": 1100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "689E. Mike and Geometry Problem",
    "url": "https://codeforces.com/problemset/problem/689/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "689D. Friends and Subsequences",
    "url": "https://codeforces.com/problemset/problem/689/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "689C. Mike and Chocolate Thieves",
    "url": "https://codeforces.com/problemset/problem/689/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "689B. Mike and Shortcuts",
    "url": "https://codeforces.com/problemset/problem/689/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "689A. Mike and Cellphone",
    "url": "https://codeforces.com/problemset/problem/689/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "688B. Lovely Palindromes",
    "url": "https://codeforces.com/problemset/problem/688/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "688A. Opponents",
    "url": "https://codeforces.com/problemset/problem/688/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "687E. TOF",
    "url": "https://codeforces.com/problemset/problem/687/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "687D. Dividing Kingdom II",
    "url": "https://codeforces.com/problemset/problem/687/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "687C. The Values You Can Make",
    "url": "https://codeforces.com/problemset/problem/687/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "687B. Remainders Game",
    "url": "https://codeforces.com/problemset/problem/687/B",
    "difficulty": 1800,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "687A. NP-Hard Problem",
    "url": "https://codeforces.com/problemset/problem/687/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "686B. Little Robber Girl's Zoo",
    "url": "https://codeforces.com/problemset/problem/686/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "686A. Free Ice Cream",
    "url": "https://codeforces.com/problemset/problem/686/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "685E. Travelling Through the Snow Queen's Kingdom",
    "url": "https://codeforces.com/problemset/problem/685/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "685D. Kay and Eternity",
    "url": "https://codeforces.com/problemset/problem/685/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "685C. Optimal Point",
    "url": "https://codeforces.com/problemset/problem/685/C",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "685B. Kay and Snowflake",
    "url": "https://codeforces.com/problemset/problem/685/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "685A. Robbers' watch",
    "url": "https://codeforces.com/problemset/problem/685/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683J. The Hero with Bombs",
    "url": "https://codeforces.com/problemset/problem/683/J",
    "difficulty": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683I. Loader",
    "url": "https://codeforces.com/problemset/problem/683/I",
    "difficulty": 2500,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683H. Exchange of Books",
    "url": "https://codeforces.com/problemset/problem/683/H",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683G. The Fraction",
    "url": "https://codeforces.com/problemset/problem/683/G",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683F. Reformat the String",
    "url": "https://codeforces.com/problemset/problem/683/F",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683E. Hammer throwing",
    "url": "https://codeforces.com/problemset/problem/683/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683D. Chocolate Bar",
    "url": "https://codeforces.com/problemset/problem/683/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683C. Symmetric Difference",
    "url": "https://codeforces.com/problemset/problem/683/C",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683B. The Teacher of Physical Education",
    "url": "https://codeforces.com/problemset/problem/683/B",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "683A. The Check of the Point",
    "url": "https://codeforces.com/problemset/problem/683/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "682E. Alyona and Triangles",
    "url": "https://codeforces.com/problemset/problem/682/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "682D. Alyona and Strings",
    "url": "https://codeforces.com/problemset/problem/682/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "682C. Alyona and the Tree",
    "url": "https://codeforces.com/problemset/problem/682/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "682B. Alyona and Mex",
    "url": "https://codeforces.com/problemset/problem/682/B",
    "difficulty": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "682A. Alyona and Numbers",
    "url": "https://codeforces.com/problemset/problem/682/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "681E. Runaway to a Shadow",
    "url": "https://codeforces.com/problemset/problem/681/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "681D. Gifts by the List",
    "url": "https://codeforces.com/problemset/problem/681/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "681C. Heap Operations",
    "url": "https://codeforces.com/problemset/problem/681/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "681B. Economy Game",
    "url": "https://codeforces.com/problemset/problem/681/B",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "681A. A Good Contest",
    "url": "https://codeforces.com/problemset/problem/681/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "680B. Bear and Finding Criminals",
    "url": "https://codeforces.com/problemset/problem/680/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "680A. Bear and Five Cards",
    "url": "https://codeforces.com/problemset/problem/680/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "679E. Bear and Bad Powers of 42",
    "url": "https://codeforces.com/problemset/problem/679/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "679D. Bear and Chase",
    "url": "https://codeforces.com/problemset/problem/679/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "679C. Bear and Square Grid",
    "url": "https://codeforces.com/problemset/problem/679/C",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "679B. Bear and Tower of Cubes",
    "url": "https://codeforces.com/problemset/problem/679/B",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "679A. Bear and Prime 100",
    "url": "https://codeforces.com/problemset/problem/679/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "interactive",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678F. Lena and Queries",
    "url": "https://codeforces.com/problemset/problem/678/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678E. Another Sith Tournament",
    "url": "https://codeforces.com/problemset/problem/678/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678D. Iterated Linear Function",
    "url": "https://codeforces.com/problemset/problem/678/D",
    "difficulty": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678C. Joty and Chocolate",
    "url": "https://codeforces.com/problemset/problem/678/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678B. The Same Calendar",
    "url": "https://codeforces.com/problemset/problem/678/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "678A. Johny Likes Numbers",
    "url": "https://codeforces.com/problemset/problem/678/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "677E. Vanya and Balloons",
    "url": "https://codeforces.com/problemset/problem/677/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "677D. Vanya and Treasure",
    "url": "https://codeforces.com/problemset/problem/677/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "677C. Vanya and Label",
    "url": "https://codeforces.com/problemset/problem/677/C",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "677B. Vanya and Food Processor",
    "url": "https://codeforces.com/problemset/problem/677/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "677A. Vanya and Fence",
    "url": "https://codeforces.com/problemset/problem/677/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "676E. The Last Fight Between Human and AI",
    "url": "https://codeforces.com/problemset/problem/676/E",
    "difficulty": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "676D. Theseus and labyrinth",
    "url": "https://codeforces.com/problemset/problem/676/D",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "676C. Vasya and String",
    "url": "https://codeforces.com/problemset/problem/676/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "676B. Pyramid of Glasses",
    "url": "https://codeforces.com/problemset/problem/676/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "676A. Nicholas and Permutation",
    "url": "https://codeforces.com/problemset/problem/676/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "675E. Trains and Statistic",
    "url": "https://codeforces.com/problemset/problem/675/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "675D. Tree Construction",
    "url": "https://codeforces.com/problemset/problem/675/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "675C. Money Transfers",
    "url": "https://codeforces.com/problemset/problem/675/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "675B. Restoring Painting",
    "url": "https://codeforces.com/problemset/problem/675/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "675A. Infinite Sequence",
    "url": "https://codeforces.com/problemset/problem/675/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "673B. Problems for Round",
    "url": "https://codeforces.com/problemset/problem/673/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "673A. Bear and Game",
    "url": "https://codeforces.com/problemset/problem/673/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "672B. Different is Good",
    "url": "https://codeforces.com/problemset/problem/672/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "672A. Summer Camp",
    "url": "https://codeforces.com/problemset/problem/672/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "671E. Organizing a Race",
    "url": "https://codeforces.com/problemset/problem/671/E",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "671D. Roads in Yusland",
    "url": "https://codeforces.com/problemset/problem/671/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "671C. Ultimate Weirdness of an Array",
    "url": "https://codeforces.com/problemset/problem/671/C",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "671B. Robin Hood",
    "url": "https://codeforces.com/problemset/problem/671/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "671A. Recycling Bottles",
    "url": "https://codeforces.com/problemset/problem/671/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670F. Restore a Number",
    "url": "https://codeforces.com/problemset/problem/670/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670E. Correct Bracket Sequence Editor",
    "url": "https://codeforces.com/problemset/problem/670/E",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dsu",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670D2. Magic Powder - 2",
    "url": "https://codeforces.com/problemset/problem/670/D2",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670D1. Magic Powder - 1",
    "url": "https://codeforces.com/problemset/problem/670/D1",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670C. Cinema",
    "url": "https://codeforces.com/problemset/problem/670/C",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670B. Game of Robots",
    "url": "https://codeforces.com/problemset/problem/670/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "670A. Holidays",
    "url": "https://codeforces.com/problemset/problem/670/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "669A. Little Artem and Presents",
    "url": "https://codeforces.com/problemset/problem/669/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "667B. Coat of Anticubism",
    "url": "https://codeforces.com/problemset/problem/667/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "667A. Pouring Rain",
    "url": "https://codeforces.com/problemset/problem/667/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "666E. Forensic Examination",
    "url": "https://codeforces.com/problemset/problem/666/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "666D. Chain Reaction",
    "url": "https://codeforces.com/problemset/problem/666/D",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "666C. Codeword",
    "url": "https://codeforces.com/problemset/problem/666/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "666B. World Tour",
    "url": "https://codeforces.com/problemset/problem/666/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "666A. Reberland Linguistics",
    "url": "https://codeforces.com/problemset/problem/666/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665F. Four Divisors",
    "url": "https://codeforces.com/problemset/problem/665/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665E. Beautiful Subarrays",
    "url": "https://codeforces.com/problemset/problem/665/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665D. Simple Subset",
    "url": "https://codeforces.com/problemset/problem/665/D",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665C. Simple Strings",
    "url": "https://codeforces.com/problemset/problem/665/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665B. Shopping",
    "url": "https://codeforces.com/problemset/problem/665/B",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "665A. Buses Between Cities",
    "url": "https://codeforces.com/problemset/problem/665/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "664A. Complicated GCD",
    "url": "https://codeforces.com/problemset/problem/664/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "663A. Rebus",
    "url": "https://codeforces.com/problemset/problem/663/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "expression parsing",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "662E. To Hack or not to Hack",
    "url": "https://codeforces.com/problemset/problem/662/E",
    "difficulty": 3100,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "662D. International Olympiad",
    "url": "https://codeforces.com/problemset/problem/662/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "662C. Binary Table",
    "url": "https://codeforces.com/problemset/problem/662/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "662B. Graph Coloring",
    "url": "https://codeforces.com/problemset/problem/662/B",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "662A. Gambling Nim",
    "url": "https://codeforces.com/problemset/problem/662/A",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661H. Rotate Matrix",
    "url": "https://codeforces.com/problemset/problem/661/H",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661G. Hungarian Notation",
    "url": "https://codeforces.com/problemset/problem/661/G",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661F. Primes in Interval",
    "url": "https://codeforces.com/problemset/problem/661/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661E. Divisibility Check",
    "url": "https://codeforces.com/problemset/problem/661/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661D. Maximal Difference",
    "url": "https://codeforces.com/problemset/problem/661/D",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661C. Array Sum",
    "url": "https://codeforces.com/problemset/problem/661/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661B. Seasons",
    "url": "https://codeforces.com/problemset/problem/661/B",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "661A. Lazy Caterer Sequence",
    "url": "https://codeforces.com/problemset/problem/661/A",
    "difficulty": 1300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660F. Bear and Bowling 4",
    "url": "https://codeforces.com/problemset/problem/660/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660E. Different Subsets For All Tuples",
    "url": "https://codeforces.com/problemset/problem/660/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660D. Number of Parallelograms",
    "url": "https://codeforces.com/problemset/problem/660/D",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660C. Hard Process",
    "url": "https://codeforces.com/problemset/problem/660/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660B. Seating On Bus",
    "url": "https://codeforces.com/problemset/problem/660/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "660A. Co-prime Array",
    "url": "https://codeforces.com/problemset/problem/660/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659G. Fence Divercity",
    "url": "https://codeforces.com/problemset/problem/659/G",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659F. Polycarp and Hay",
    "url": "https://codeforces.com/problemset/problem/659/F",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659E. New Reform",
    "url": "https://codeforces.com/problemset/problem/659/E",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659D. Bicycle Race",
    "url": "https://codeforces.com/problemset/problem/659/D",
    "difficulty": 1500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659C. Tanya and Toys",
    "url": "https://codeforces.com/problemset/problem/659/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659B. Qualifying Contest",
    "url": "https://codeforces.com/problemset/problem/659/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "659A. Round House",
    "url": "https://codeforces.com/problemset/problem/659/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "658A. Bear and Reverse Radewoosh",
    "url": "https://codeforces.com/problemset/problem/658/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656G. You're a Professional",
    "url": "https://codeforces.com/problemset/problem/656/G",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656F. Ace It!",
    "url": "https://codeforces.com/problemset/problem/656/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656E. Out of Controls",
    "url": "https://codeforces.com/problemset/problem/656/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656D. Rosetta Problem",
    "url": "https://codeforces.com/problemset/problem/656/D",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656C. Without Text",
    "url": "https://codeforces.com/problemset/problem/656/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656B. Scrambled",
    "url": "https://codeforces.com/problemset/problem/656/B",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "656A. Da Vinci Powers",
    "url": "https://codeforces.com/problemset/problem/656/A",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653G. Move by Prime",
    "url": "https://codeforces.com/problemset/problem/653/G",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653F. Paper task",
    "url": "https://codeforces.com/problemset/problem/653/F",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653E. Bear and Forgotten Tree 2",
    "url": "https://codeforces.com/problemset/problem/653/E",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653D. Delivery Bears",
    "url": "https://codeforces.com/problemset/problem/653/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653C. Bear and Up-Down",
    "url": "https://codeforces.com/problemset/problem/653/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653B. Bear and Compressing",
    "url": "https://codeforces.com/problemset/problem/653/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "653A. Bear and Three Balls",
    "url": "https://codeforces.com/problemset/problem/653/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652F. Ants on a Circle",
    "url": "https://codeforces.com/problemset/problem/652/F",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652E. Pursuit For Artifacts",
    "url": "https://codeforces.com/problemset/problem/652/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652D. Nested Segments",
    "url": "https://codeforces.com/problemset/problem/652/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652C. Foe Pairs",
    "url": "https://codeforces.com/problemset/problem/652/C",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652B. z-sort",
    "url": "https://codeforces.com/problemset/problem/652/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "652A. Gabriel and Caterpillar",
    "url": "https://codeforces.com/problemset/problem/652/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "651B. Beautiful Paintings",
    "url": "https://codeforces.com/problemset/problem/651/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "651A. Joysticks",
    "url": "https://codeforces.com/problemset/problem/651/A",
    "difficulty": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "650E. Clockwork Bomb",
    "url": "https://codeforces.com/problemset/problem/650/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "650D. Zip-line",
    "url": "https://codeforces.com/problemset/problem/650/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "650C. Table Compression",
    "url": "https://codeforces.com/problemset/problem/650/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "650B. Image Preview",
    "url": "https://codeforces.com/problemset/problem/650/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "650A. Watchmen",
    "url": "https://codeforces.com/problemset/problem/650/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "649E. Автобус",
    "url": "https://codeforces.com/problemset/problem/649/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "649D. Дефрагментация памяти",
    "url": "https://codeforces.com/problemset/problem/649/D",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "649C. Печать условий",
    "url": "https://codeforces.com/problemset/problem/649/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "649B. Этажи",
    "url": "https://codeforces.com/problemset/problem/649/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "649A. Любимые числа Поликарпа",
    "url": "https://codeforces.com/problemset/problem/649/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "648E. Собери число",
    "url": "https://codeforces.com/problemset/problem/648/E",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "648D. Собачки и миски",
    "url": "https://codeforces.com/problemset/problem/648/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "648C. Путь Робота",
    "url": "https://codeforces.com/problemset/problem/648/C",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "648B. Собери стол",
    "url": "https://codeforces.com/problemset/problem/648/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "648A. Наибольший подъем",
    "url": "https://codeforces.com/problemset/problem/648/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645G. Armistice Area Apportionment",
    "url": "https://codeforces.com/problemset/problem/645/G",
    "difficulty": 3200,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645F. Cowslip Collections",
    "url": "https://codeforces.com/problemset/problem/645/F",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645E. Intellectual Inquiry",
    "url": "https://codeforces.com/problemset/problem/645/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645D. Robot Rapping Results Report",
    "url": "https://codeforces.com/problemset/problem/645/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645C. Enduring Exodus",
    "url": "https://codeforces.com/problemset/problem/645/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645B. Mischievous Mess Makers",
    "url": "https://codeforces.com/problemset/problem/645/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "645A. Amity Assessment",
    "url": "https://codeforces.com/problemset/problem/645/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "644C. Hostname Aliases",
    "url": "https://codeforces.com/problemset/problem/644/C",
    "difficulty": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "644B. Processing Queries",
    "url": "https://codeforces.com/problemset/problem/644/B",
    "difficulty": 1700,
    "tags": [
      "*special",
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "644A. Parliament of Berland",
    "url": "https://codeforces.com/problemset/problem/644/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643G. Choosing Ads",
    "url": "https://codeforces.com/problemset/problem/643/G",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643F. Bears and Juice",
    "url": "https://codeforces.com/problemset/problem/643/F",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643E. Bear and Destroying Subtrees",
    "url": "https://codeforces.com/problemset/problem/643/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643D. Bearish Fanpages",
    "url": "https://codeforces.com/problemset/problem/643/D",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "643C. Levels and Regions",
    "url": "https://codeforces.com/problemset/problem/643/C",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643B. Bear and Two Paths",
    "url": "https://codeforces.com/problemset/problem/643/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "643A. Bear and Colors",
    "url": "https://codeforces.com/problemset/problem/643/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "641G. Little Artem and Graph",
    "url": "https://codeforces.com/problemset/problem/641/G",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "641F. Little Artem and 2-SAT",
    "url": "https://codeforces.com/problemset/problem/641/F",
    "difficulty": 3000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "641E. Little Artem and Time Machine",
    "url": "https://codeforces.com/problemset/problem/641/E",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "641D. Little Artem and Random Variable",
    "url": "https://codeforces.com/problemset/problem/641/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "641C. Little Artem and Dance",
    "url": "https://codeforces.com/problemset/problem/641/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "641B. Little Artem and Matrix",
    "url": "https://codeforces.com/problemset/problem/641/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "641A. Little Artem and Grasshopper",
    "url": "https://codeforces.com/problemset/problem/641/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639F. Bear and Chemistry",
    "url": "https://codeforces.com/problemset/problem/639/F",
    "difficulty": 3300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639E. Bear and Paradox",
    "url": "https://codeforces.com/problemset/problem/639/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639D. Bear and Contribution",
    "url": "https://codeforces.com/problemset/problem/639/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639C. Bear and Polynomials",
    "url": "https://codeforces.com/problemset/problem/639/C",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639B. Bear and Forgotten Tree 3",
    "url": "https://codeforces.com/problemset/problem/639/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "639A. Bear and Displayed Friends",
    "url": "https://codeforces.com/problemset/problem/639/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "638D. Three-dimensional Turtle Super Computer ",
    "url": "https://codeforces.com/problemset/problem/638/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "638C. Road Improvement",
    "url": "https://codeforces.com/problemset/problem/638/C",
    "difficulty": 1800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "638B. Making Genome in Berland",
    "url": "https://codeforces.com/problemset/problem/638/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "638A. Home Numbers",
    "url": "https://codeforces.com/problemset/problem/638/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "637D. Running with Obstacles",
    "url": "https://codeforces.com/problemset/problem/637/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "637C. Promocodes with Mistakes",
    "url": "https://codeforces.com/problemset/problem/637/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "637B. Chat Order",
    "url": "https://codeforces.com/problemset/problem/637/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "binary search",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "637A. Voting for Photos",
    "url": "https://codeforces.com/problemset/problem/637/A",
    "difficulty": 1000,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "635A. Orchestra",
    "url": "https://codeforces.com/problemset/problem/635/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "634A. Island Puzzle",
    "url": "https://codeforces.com/problemset/problem/634/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633H. Fibonacci-ish II",
    "url": "https://codeforces.com/problemset/problem/633/H",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633G. Yash And Trees",
    "url": "https://codeforces.com/problemset/problem/633/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633F. The Chocolate Spree",
    "url": "https://codeforces.com/problemset/problem/633/F",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633E. Startup Funding",
    "url": "https://codeforces.com/problemset/problem/633/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633D. Fibonacci-ish",
    "url": "https://codeforces.com/problemset/problem/633/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633C. Spy Syndrome 2",
    "url": "https://codeforces.com/problemset/problem/633/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "implementation",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633B. A Trivial Problem",
    "url": "https://codeforces.com/problemset/problem/633/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "633A. Ebony and Ivory",
    "url": "https://codeforces.com/problemset/problem/633/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632F. Magic Matrix",
    "url": "https://codeforces.com/problemset/problem/632/F",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "matrices",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632E. Thief in a Shop",
    "url": "https://codeforces.com/problemset/problem/632/E",
    "difficulty": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632D. Longest Subsequence",
    "url": "https://codeforces.com/problemset/problem/632/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632C. The Smallest String Concatenation",
    "url": "https://codeforces.com/problemset/problem/632/C",
    "difficulty": 1700,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632B. Alice, Bob, Two Teams",
    "url": "https://codeforces.com/problemset/problem/632/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "632A. Grandma Laura and Apples",
    "url": "https://codeforces.com/problemset/problem/632/A",
    "difficulty": 1200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "631E. Product Sum",
    "url": "https://codeforces.com/problemset/problem/631/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "631D. Messenger",
    "url": "https://codeforces.com/problemset/problem/631/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "631C. Report",
    "url": "https://codeforces.com/problemset/problem/631/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "631B. Print Check",
    "url": "https://codeforces.com/problemset/problem/631/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "631A. Interview",
    "url": "https://codeforces.com/problemset/problem/631/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630R. Game",
    "url": "https://codeforces.com/problemset/problem/630/R",
    "difficulty": 1200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630Q. Pyramids",
    "url": "https://codeforces.com/problemset/problem/630/Q",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630P. Area of a Star",
    "url": "https://codeforces.com/problemset/problem/630/P",
    "difficulty": 2100,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630O. Arrow",
    "url": "https://codeforces.com/problemset/problem/630/O",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630N. Forecast",
    "url": "https://codeforces.com/problemset/problem/630/N",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630M. Turn",
    "url": "https://codeforces.com/problemset/problem/630/M",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630L. Cracking the Code",
    "url": "https://codeforces.com/problemset/problem/630/L",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630K. Indivisibility",
    "url": "https://codeforces.com/problemset/problem/630/K",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630J. Divisibility",
    "url": "https://codeforces.com/problemset/problem/630/J",
    "difficulty": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630I. Parking Lot",
    "url": "https://codeforces.com/problemset/problem/630/I",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630H. Benches",
    "url": "https://codeforces.com/problemset/problem/630/H",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630G. Challenge Pennants",
    "url": "https://codeforces.com/problemset/problem/630/G",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630F. Selection of Personnel",
    "url": "https://codeforces.com/problemset/problem/630/F",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630E. A rectangle",
    "url": "https://codeforces.com/problemset/problem/630/E",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630D. Hexagons!",
    "url": "https://codeforces.com/problemset/problem/630/D",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630C. Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/630/C",
    "difficulty": 1100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630B. Moore's Law",
    "url": "https://codeforces.com/problemset/problem/630/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "630A. Again Twenty Five!",
    "url": "https://codeforces.com/problemset/problem/630/A",
    "difficulty": 800,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "629E. Famil Door and Roads",
    "url": "https://codeforces.com/problemset/problem/629/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "629D. Babaei and Birthday Cake",
    "url": "https://codeforces.com/problemset/problem/629/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "629C. Famil Door and Brackets",
    "url": "https://codeforces.com/problemset/problem/629/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "629B. Far Relative’s Problem",
    "url": "https://codeforces.com/problemset/problem/629/B",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "629A. Far Relative’s Birthday Cake",
    "url": "https://codeforces.com/problemset/problem/629/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628F. Bear and Fair Set",
    "url": "https://codeforces.com/problemset/problem/628/F",
    "difficulty": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628E. Zbazi in Zeydabad",
    "url": "https://codeforces.com/problemset/problem/628/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628D. Magic Numbers",
    "url": "https://codeforces.com/problemset/problem/628/D",
    "difficulty": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628C. Bear and String Distance",
    "url": "https://codeforces.com/problemset/problem/628/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628B. New Skateboard",
    "url": "https://codeforces.com/problemset/problem/628/B",
    "difficulty": 1300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "628A. Tennis Tournament",
    "url": "https://codeforces.com/problemset/problem/628/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627F. Island Puzzle",
    "url": "https://codeforces.com/problemset/problem/627/F",
    "difficulty": 3400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627E. Orchestra",
    "url": "https://codeforces.com/problemset/problem/627/E",
    "difficulty": 3000,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627D. Preorder Test",
    "url": "https://codeforces.com/problemset/problem/627/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627C. Package Delivery",
    "url": "https://codeforces.com/problemset/problem/627/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627B. Factory Repairs",
    "url": "https://codeforces.com/problemset/problem/627/B",
    "difficulty": 1700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "627A. XOR Equation",
    "url": "https://codeforces.com/problemset/problem/627/A",
    "difficulty": 1700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626G. Raffles",
    "url": "https://codeforces.com/problemset/problem/626/G",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626F. Group Projects",
    "url": "https://codeforces.com/problemset/problem/626/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626E. Simple Skewness",
    "url": "https://codeforces.com/problemset/problem/626/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626D. Jerry's Protest",
    "url": "https://codeforces.com/problemset/problem/626/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626C. Block Towers",
    "url": "https://codeforces.com/problemset/problem/626/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626B. Cards",
    "url": "https://codeforces.com/problemset/problem/626/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "626A. Robot Sequence",
    "url": "https://codeforces.com/problemset/problem/626/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "625E. Frog Fights",
    "url": "https://codeforces.com/problemset/problem/625/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "625D. Finals in arithmetic",
    "url": "https://codeforces.com/problemset/problem/625/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "625C. K-special Tables",
    "url": "https://codeforces.com/problemset/problem/625/C",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "625B. War of the Corporations",
    "url": "https://codeforces.com/problemset/problem/625/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "625A. Guest From the Past",
    "url": "https://codeforces.com/problemset/problem/625/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "624B. Making a String",
    "url": "https://codeforces.com/problemset/problem/624/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "624A. Save Luke",
    "url": "https://codeforces.com/problemset/problem/624/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "623E. Transforming Sequence",
    "url": "https://codeforces.com/problemset/problem/623/E",
    "difficulty": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "623D. Birthday",
    "url": "https://codeforces.com/problemset/problem/623/D",
    "difficulty": 2700,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "623C. Electric Charges",
    "url": "https://codeforces.com/problemset/problem/623/C",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "623B. Array GCD",
    "url": "https://codeforces.com/problemset/problem/623/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "623A. Graph and String",
    "url": "https://codeforces.com/problemset/problem/623/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622F. The Sum of the k-th Powers",
    "url": "https://codeforces.com/problemset/problem/622/F",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622E. Ants in Leaves",
    "url": "https://codeforces.com/problemset/problem/622/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622D. Optimal Number Permutation",
    "url": "https://codeforces.com/problemset/problem/622/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622C. Not Equal on a Segment",
    "url": "https://codeforces.com/problemset/problem/622/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622B. The Time",
    "url": "https://codeforces.com/problemset/problem/622/B",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "622A. Infinite Sequence",
    "url": "https://codeforces.com/problemset/problem/622/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "621E. Wet Shark and Blocks",
    "url": "https://codeforces.com/problemset/problem/621/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "621D. Rat Kwesh and Cheese",
    "url": "https://codeforces.com/problemset/problem/621/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "621C. Wet Shark and Flowers",
    "url": "https://codeforces.com/problemset/problem/621/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "621B. Wet Shark and Bishops",
    "url": "https://codeforces.com/problemset/problem/621/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "621A. Wet Shark and Odd and Even",
    "url": "https://codeforces.com/problemset/problem/621/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620F. Xors on Segments",
    "url": "https://codeforces.com/problemset/problem/620/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620E. New Year Tree",
    "url": "https://codeforces.com/problemset/problem/620/E",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620D. Professor GukiZ and Two Arrays",
    "url": "https://codeforces.com/problemset/problem/620/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620C. Pearls in a Row",
    "url": "https://codeforces.com/problemset/problem/620/C",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620B. Grandfather Dovlet’s calculator",
    "url": "https://codeforces.com/problemset/problem/620/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "620A. Professor GukiZ's Robot",
    "url": "https://codeforces.com/problemset/problem/620/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618G. Combining Slimes",
    "url": "https://codeforces.com/problemset/problem/618/G",
    "difficulty": 3300,
    "tags": [
      "dp",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618F. Double Knapsack",
    "url": "https://codeforces.com/problemset/problem/618/F",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618E. Robot Arm",
    "url": "https://codeforces.com/problemset/problem/618/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618D. Hamiltonian Spanning Tree",
    "url": "https://codeforces.com/problemset/problem/618/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618C. Constellation",
    "url": "https://codeforces.com/problemset/problem/618/C",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618B. Guess the Permutation",
    "url": "https://codeforces.com/problemset/problem/618/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "618A. Slime Combining",
    "url": "https://codeforces.com/problemset/problem/618/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "617E. XOR and Favorite Number",
    "url": "https://codeforces.com/problemset/problem/617/E",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "617D. Polyline",
    "url": "https://codeforces.com/problemset/problem/617/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "617C. Watering Flowers",
    "url": "https://codeforces.com/problemset/problem/617/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "617B. Chocolate",
    "url": "https://codeforces.com/problemset/problem/617/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "617A. Elephant",
    "url": "https://codeforces.com/problemset/problem/617/A",
    "difficulty": 800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616F. Expensive Strings",
    "url": "https://codeforces.com/problemset/problem/616/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616E. Sum of Remainders",
    "url": "https://codeforces.com/problemset/problem/616/E",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616D. Longest k-Good Segment",
    "url": "https://codeforces.com/problemset/problem/616/D",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616C. The Labyrinth",
    "url": "https://codeforces.com/problemset/problem/616/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616B. Dinner with Emma",
    "url": "https://codeforces.com/problemset/problem/616/B",
    "difficulty": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "616A. Comparing Two Long Integers",
    "url": "https://codeforces.com/problemset/problem/616/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "615E. Hexagons",
    "url": "https://codeforces.com/problemset/problem/615/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "615D. Multipliers",
    "url": "https://codeforces.com/problemset/problem/615/D",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "615C. Running Track",
    "url": "https://codeforces.com/problemset/problem/615/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "615B. Longtail Hedgehog",
    "url": "https://codeforces.com/problemset/problem/615/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "615A. Bulbs",
    "url": "https://codeforces.com/problemset/problem/615/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "614B. Gena's Code",
    "url": "https://codeforces.com/problemset/problem/614/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "614A. Link/Cut Tree",
    "url": "https://codeforces.com/problemset/problem/614/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "613E. Puzzle Lover",
    "url": "https://codeforces.com/problemset/problem/613/E",
    "difficulty": 3200,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "613D. Kingdom and its Cities",
    "url": "https://codeforces.com/problemset/problem/613/D",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "613C. Necklace",
    "url": "https://codeforces.com/problemset/problem/613/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "613B. Skills",
    "url": "https://codeforces.com/problemset/problem/613/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "613A. Peter and Snow Blower",
    "url": "https://codeforces.com/problemset/problem/613/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612F. Simba on the Circle",
    "url": "https://codeforces.com/problemset/problem/612/F",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612E. Square Root of Permutation",
    "url": "https://codeforces.com/problemset/problem/612/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612D. The Union of k-Segments",
    "url": "https://codeforces.com/problemset/problem/612/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612C. Replace To Make Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/612/C",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "expression parsing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612B. HDD is Outdated Technology",
    "url": "https://codeforces.com/problemset/problem/612/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "612A. The Text Splitting",
    "url": "https://codeforces.com/problemset/problem/612/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611H. New Year  and Forgotten Tree",
    "url": "https://codeforces.com/problemset/problem/611/H",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611G. New Year and Cake",
    "url": "https://codeforces.com/problemset/problem/611/G",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611F. New Year and Cleaning",
    "url": "https://codeforces.com/problemset/problem/611/F",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611E. New Year and Three Musketeers",
    "url": "https://codeforces.com/problemset/problem/611/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611D. New Year and Ancient Prophecy",
    "url": "https://codeforces.com/problemset/problem/611/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611C. New Year and Domino",
    "url": "https://codeforces.com/problemset/problem/611/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611B. New Year and Old Property",
    "url": "https://codeforces.com/problemset/problem/611/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "611A. New Year and Days",
    "url": "https://codeforces.com/problemset/problem/611/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "610E. Alphabet Permutations",
    "url": "https://codeforces.com/problemset/problem/610/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "610D. Vika and Segments",
    "url": "https://codeforces.com/problemset/problem/610/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "610C. Harmony Analysis",
    "url": "https://codeforces.com/problemset/problem/610/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "610B. Vika and Squares",
    "url": "https://codeforces.com/problemset/problem/610/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "610A. Pasha and Stick",
    "url": "https://codeforces.com/problemset/problem/610/A",
    "difficulty": 1000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609F. Frogs and mosquitoes",
    "url": "https://codeforces.com/problemset/problem/609/F",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609E. Minimum spanning tree for each edge",
    "url": "https://codeforces.com/problemset/problem/609/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609D. Gadgets for dollars and pounds",
    "url": "https://codeforces.com/problemset/problem/609/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609C. Load Balancing",
    "url": "https://codeforces.com/problemset/problem/609/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609B. The Best Gift",
    "url": "https://codeforces.com/problemset/problem/609/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "609A. USB Flash Drives",
    "url": "https://codeforces.com/problemset/problem/609/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "608B. Hamming Distance Sum",
    "url": "https://codeforces.com/problemset/problem/608/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "608A. Saitama Destroys Hotel",
    "url": "https://codeforces.com/problemset/problem/608/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "607E. Cross Sum",
    "url": "https://codeforces.com/problemset/problem/607/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "607D. Power Tree",
    "url": "https://codeforces.com/problemset/problem/607/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "607C. Marbles",
    "url": "https://codeforces.com/problemset/problem/607/C",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "607B. Zuma",
    "url": "https://codeforces.com/problemset/problem/607/B",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "607A. Chain Reaction",
    "url": "https://codeforces.com/problemset/problem/607/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "606B. Testing Robots",
    "url": "https://codeforces.com/problemset/problem/606/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "606A. Magic Spheres",
    "url": "https://codeforces.com/problemset/problem/606/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "605E. Intergalaxy Trips",
    "url": "https://codeforces.com/problemset/problem/605/E",
    "difficulty": 2700,
    "tags": [
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "605D. Board Game",
    "url": "https://codeforces.com/problemset/problem/605/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "605C. Freelancer's Dreams",
    "url": "https://codeforces.com/problemset/problem/605/C",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "605B. Lazy Student",
    "url": "https://codeforces.com/problemset/problem/605/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "605A. Sorting Railway Cars",
    "url": "https://codeforces.com/problemset/problem/605/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "604B. More Cowbell",
    "url": "https://codeforces.com/problemset/problem/604/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "604A. Uncowed Forces",
    "url": "https://codeforces.com/problemset/problem/604/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "603E. Pastoral Oddities",
    "url": "https://codeforces.com/problemset/problem/603/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "603D. Ruminations on Ruminants",
    "url": "https://codeforces.com/problemset/problem/603/D",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "603C. Lieges of Legendre",
    "url": "https://codeforces.com/problemset/problem/603/C",
    "difficulty": 2200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "603B. Moodular Arithmetic",
    "url": "https://codeforces.com/problemset/problem/603/B",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "603A. Alternative Thinking",
    "url": "https://codeforces.com/problemset/problem/603/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "602B. Approximating a Constant Range",
    "url": "https://codeforces.com/problemset/problem/602/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "602A. Two Bases",
    "url": "https://codeforces.com/problemset/problem/602/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "601E. A Museum Robbery",
    "url": "https://codeforces.com/problemset/problem/601/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "601D. Acyclic Organic Compounds",
    "url": "https://codeforces.com/problemset/problem/601/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "601C. Kleofáš and the n-thlon",
    "url": "https://codeforces.com/problemset/problem/601/C",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "601B. Lipshitz Sequence",
    "url": "https://codeforces.com/problemset/problem/601/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "601A. The Two Routes",
    "url": "https://codeforces.com/problemset/problem/601/A",
    "difficulty": 1600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600F. Edge coloring of bipartite graph",
    "url": "https://codeforces.com/problemset/problem/600/F",
    "difficulty": 2800,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600E. Lomsat gelral",
    "url": "https://codeforces.com/problemset/problem/600/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600D. Area of Two Circles' Intersection",
    "url": "https://codeforces.com/problemset/problem/600/D",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600C. Make Palindrome",
    "url": "https://codeforces.com/problemset/problem/600/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600B. Queries about less or equal elements",
    "url": "https://codeforces.com/problemset/problem/600/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "600A. Extract Numbers",
    "url": "https://codeforces.com/problemset/problem/600/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "599E. Sandy and Nuts",
    "url": "https://codeforces.com/problemset/problem/599/E",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "599D. Spongebob and Squares",
    "url": "https://codeforces.com/problemset/problem/599/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "599C. Day at the Beach",
    "url": "https://codeforces.com/problemset/problem/599/C",
    "difficulty": 1600,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "599B. Spongebob and Joke",
    "url": "https://codeforces.com/problemset/problem/599/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "599A. Patrick and Shopping",
    "url": "https://codeforces.com/problemset/problem/599/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598F. Cut Length",
    "url": "https://codeforces.com/problemset/problem/598/F",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598E. Chocolate Bar",
    "url": "https://codeforces.com/problemset/problem/598/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598D. Igor In the Museum",
    "url": "https://codeforces.com/problemset/problem/598/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598C. Nearest vectors",
    "url": "https://codeforces.com/problemset/problem/598/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598B. Queries on a String",
    "url": "https://codeforces.com/problemset/problem/598/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "598A. Tricky Sum",
    "url": "https://codeforces.com/problemset/problem/598/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "597C. Subsequences",
    "url": "https://codeforces.com/problemset/problem/597/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "597B. Restaurant",
    "url": "https://codeforces.com/problemset/problem/597/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "597A. Divisibility",
    "url": "https://codeforces.com/problemset/problem/597/A",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "596E. Wilbur and Strings",
    "url": "https://codeforces.com/problemset/problem/596/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "596D. Wilbur and Trees",
    "url": "https://codeforces.com/problemset/problem/596/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "596C. Wilbur and Points",
    "url": "https://codeforces.com/problemset/problem/596/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "596B. Wilbur and Array",
    "url": "https://codeforces.com/problemset/problem/596/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "596A. Wilbur and Swimming Pool",
    "url": "https://codeforces.com/problemset/problem/596/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "595B. Pasha and Phone",
    "url": "https://codeforces.com/problemset/problem/595/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "595A. Vitaly and Night",
    "url": "https://codeforces.com/problemset/problem/595/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "594E. Cutting the Line",
    "url": "https://codeforces.com/problemset/problem/594/E",
    "difficulty": 3100,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "594D. REQ",
    "url": "https://codeforces.com/problemset/problem/594/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "594C. Edo and Magnets",
    "url": "https://codeforces.com/problemset/problem/594/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "594B. Max and Bike",
    "url": "https://codeforces.com/problemset/problem/594/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "594A. Warrior and Archer",
    "url": "https://codeforces.com/problemset/problem/594/A",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "593E. Strange Calculation and Cats",
    "url": "https://codeforces.com/problemset/problem/593/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "593D. Happy Tree Party",
    "url": "https://codeforces.com/problemset/problem/593/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "593C. Beautiful Function",
    "url": "https://codeforces.com/problemset/problem/593/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "593B. Anton and Lines",
    "url": "https://codeforces.com/problemset/problem/593/B",
    "difficulty": 1600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "593A. 2Char",
    "url": "https://codeforces.com/problemset/problem/593/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "592E. BCPC",
    "url": "https://codeforces.com/problemset/problem/592/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "592D. Super M",
    "url": "https://codeforces.com/problemset/problem/592/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "592C. The Big Race",
    "url": "https://codeforces.com/problemset/problem/592/C",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "592B. The Monster and the Squirrel",
    "url": "https://codeforces.com/problemset/problem/592/B",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "592A. PawnChess",
    "url": "https://codeforces.com/problemset/problem/592/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "591B. Rebranding",
    "url": "https://codeforces.com/problemset/problem/591/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "591A. Wizards' Duel",
    "url": "https://codeforces.com/problemset/problem/591/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "590E. Birthday",
    "url": "https://codeforces.com/problemset/problem/590/E",
    "difficulty": 3200,
    "tags": [
      "graph matchings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "590D. Top Secret Task",
    "url": "https://codeforces.com/problemset/problem/590/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "590C. Three States",
    "url": "https://codeforces.com/problemset/problem/590/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "590B. Chip 'n Dale Rescue Rangers",
    "url": "https://codeforces.com/problemset/problem/590/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "590A. Median Smoothing",
    "url": "https://codeforces.com/problemset/problem/590/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "588B. Duff in Love",
    "url": "https://codeforces.com/problemset/problem/588/B",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "588A. Duff and Meat",
    "url": "https://codeforces.com/problemset/problem/588/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587F. Duff is Mad",
    "url": "https://codeforces.com/problemset/problem/587/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587E. Duff as a Queen",
    "url": "https://codeforces.com/problemset/problem/587/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587D. Duff in Mafia",
    "url": "https://codeforces.com/problemset/problem/587/D",
    "difficulty": 3100,
    "tags": [
      "2-sat",
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587C. Duff in the Army",
    "url": "https://codeforces.com/problemset/problem/587/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587B. Duff in Beach",
    "url": "https://codeforces.com/problemset/problem/587/B",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "587A. Duff and Weight Lifting",
    "url": "https://codeforces.com/problemset/problem/587/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "586B. Laurenty and Shop",
    "url": "https://codeforces.com/problemset/problem/586/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "586A. Alena's Schedule",
    "url": "https://codeforces.com/problemset/problem/586/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585F. Digits of Number Pi",
    "url": "https://codeforces.com/problemset/problem/585/F",
    "difficulty": 3200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585E. Present for Vitalik the Philatelist ",
    "url": "https://codeforces.com/problemset/problem/585/E",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585D. Lizard Era: Beginning",
    "url": "https://codeforces.com/problemset/problem/585/D",
    "difficulty": 2300,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585C. Alice, Bob, Oranges and Apples",
    "url": "https://codeforces.com/problemset/problem/585/C",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585B. Phillip and Trains",
    "url": "https://codeforces.com/problemset/problem/585/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "585A. Gennady the Dentist",
    "url": "https://codeforces.com/problemset/problem/585/A",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "584E. Anton and Ira",
    "url": "https://codeforces.com/problemset/problem/584/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "584D. Dima and Lisa",
    "url": "https://codeforces.com/problemset/problem/584/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "584C. Marina and Vasya",
    "url": "https://codeforces.com/problemset/problem/584/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "584B. Kolya and Tanya ",
    "url": "https://codeforces.com/problemset/problem/584/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "584A. Olesya and Rodion",
    "url": "https://codeforces.com/problemset/problem/584/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "583B. Robot's Task",
    "url": "https://codeforces.com/problemset/problem/583/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "583A. Asphalting Roads",
    "url": "https://codeforces.com/problemset/problem/583/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "582E. Boolean Function",
    "url": "https://codeforces.com/problemset/problem/582/E",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "582D. Number of Binominal Coefficients",
    "url": "https://codeforces.com/problemset/problem/582/D",
    "difficulty": 3300,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "582C. Superior Periodic Subarrays",
    "url": "https://codeforces.com/problemset/problem/582/C",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "582B. Once Again...",
    "url": "https://codeforces.com/problemset/problem/582/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "582A. GCD Table",
    "url": "https://codeforces.com/problemset/problem/582/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581F. Zublicanes and Mumocrates",
    "url": "https://codeforces.com/problemset/problem/581/F",
    "difficulty": 2400,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581E. Kojiro and Furrari",
    "url": "https://codeforces.com/problemset/problem/581/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581D. Three Logos",
    "url": "https://codeforces.com/problemset/problem/581/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581C. Developing Skills",
    "url": "https://codeforces.com/problemset/problem/581/C",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581B. Luxurious Houses",
    "url": "https://codeforces.com/problemset/problem/581/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "581A. Vasya the Hipster",
    "url": "https://codeforces.com/problemset/problem/581/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "580E. Kefa and Watch",
    "url": "https://codeforces.com/problemset/problem/580/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "580D. Kefa and Dishes",
    "url": "https://codeforces.com/problemset/problem/580/D",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "580C. Kefa and Park",
    "url": "https://codeforces.com/problemset/problem/580/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "580B. Kefa and Company",
    "url": "https://codeforces.com/problemset/problem/580/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "580A. Kefa and First Steps",
    "url": "https://codeforces.com/problemset/problem/580/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "579B. Finding Team Member",
    "url": "https://codeforces.com/problemset/problem/579/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "579A. Raising Bacteria",
    "url": "https://codeforces.com/problemset/problem/579/A",
    "difficulty": 1000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578F. Mirror Box",
    "url": "https://codeforces.com/problemset/problem/578/F",
    "difficulty": 3200,
    "tags": [
      "matrices",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578E. Walking!",
    "url": "https://codeforces.com/problemset/problem/578/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578D. LCS Again",
    "url": "https://codeforces.com/problemset/problem/578/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578C. Weakness and Poorness",
    "url": "https://codeforces.com/problemset/problem/578/C",
    "difficulty": 2000,
    "tags": [
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578B. \"Or\" Game",
    "url": "https://codeforces.com/problemset/problem/578/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "578A. A Problem about Polyline",
    "url": "https://codeforces.com/problemset/problem/578/A",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "577B. Modulo Sum",
    "url": "https://codeforces.com/problemset/problem/577/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "577A. Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/577/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "576E. Painting Edges",
    "url": "https://codeforces.com/problemset/problem/576/E",
    "difficulty": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "576D. Flights for Regular Customers",
    "url": "https://codeforces.com/problemset/problem/576/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "576C. Points on Plane",
    "url": "https://codeforces.com/problemset/problem/576/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "576B. Invariance of Tree",
    "url": "https://codeforces.com/problemset/problem/576/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "576A. Vasya and Petya's Game",
    "url": "https://codeforces.com/problemset/problem/576/A",
    "difficulty": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575I. Robots protection",
    "url": "https://codeforces.com/problemset/problem/575/I",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575H. Bots",
    "url": "https://codeforces.com/problemset/problem/575/H",
    "difficulty": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575G. Run for beer",
    "url": "https://codeforces.com/problemset/problem/575/G",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575F. Bulbo",
    "url": "https://codeforces.com/problemset/problem/575/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575E. Spectator Riots",
    "url": "https://codeforces.com/problemset/problem/575/E",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575D. Tablecity",
    "url": "https://codeforces.com/problemset/problem/575/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575C. Party",
    "url": "https://codeforces.com/problemset/problem/575/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575B. Bribes",
    "url": "https://codeforces.com/problemset/problem/575/B",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "575A. Fibonotci",
    "url": "https://codeforces.com/problemset/problem/575/A",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "574B. Bear and Three Musketeers",
    "url": "https://codeforces.com/problemset/problem/574/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "574A. Bear and Elections",
    "url": "https://codeforces.com/problemset/problem/574/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "573E. Bear and Bowling",
    "url": "https://codeforces.com/problemset/problem/573/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "573D. Bear and Cavalry",
    "url": "https://codeforces.com/problemset/problem/573/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "573C. Bear and Drawing",
    "url": "https://codeforces.com/problemset/problem/573/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "573B. Bear and Blocks",
    "url": "https://codeforces.com/problemset/problem/573/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "573A. Bear and Poker",
    "url": "https://codeforces.com/problemset/problem/573/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "572B. Order Book",
    "url": "https://codeforces.com/problemset/problem/572/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "572A. Arrays",
    "url": "https://codeforces.com/problemset/problem/572/A",
    "difficulty": 900,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "571E. Geometric Progressions",
    "url": "https://codeforces.com/problemset/problem/571/E",
    "difficulty": 3200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "571D. Campus",
    "url": "https://codeforces.com/problemset/problem/571/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "571C. CNF 2",
    "url": "https://codeforces.com/problemset/problem/571/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "571B. Minimization",
    "url": "https://codeforces.com/problemset/problem/571/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "571A. Lengthening Sticks",
    "url": "https://codeforces.com/problemset/problem/571/A",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "570E. Pig and Palindromes",
    "url": "https://codeforces.com/problemset/problem/570/E",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "570D. Tree Requests",
    "url": "https://codeforces.com/problemset/problem/570/D",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "570C. Replacement",
    "url": "https://codeforces.com/problemset/problem/570/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "570B. Simple Game",
    "url": "https://codeforces.com/problemset/problem/570/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "570A. Elections",
    "url": "https://codeforces.com/problemset/problem/570/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "569B. Inventory",
    "url": "https://codeforces.com/problemset/problem/569/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "569A. Music",
    "url": "https://codeforces.com/problemset/problem/569/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "568E. Longest Increasing Subsequence",
    "url": "https://codeforces.com/problemset/problem/568/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "568D. Sign Posts",
    "url": "https://codeforces.com/problemset/problem/568/D",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "568C. New Language",
    "url": "https://codeforces.com/problemset/problem/568/C",
    "difficulty": 2600,
    "tags": [
      "2-sat",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "568B. Symmetric and Transitive",
    "url": "https://codeforces.com/problemset/problem/568/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "568A. Primes or Palindromes?",
    "url": "https://codeforces.com/problemset/problem/568/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567F. Mausoleum",
    "url": "https://codeforces.com/problemset/problem/567/F",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567E. President and Roads",
    "url": "https://codeforces.com/problemset/problem/567/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567D. One-Dimensional Battle Ships",
    "url": "https://codeforces.com/problemset/problem/567/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567C. Geometric Progression",
    "url": "https://codeforces.com/problemset/problem/567/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567B. Berland National Library",
    "url": "https://codeforces.com/problemset/problem/567/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "567A. Lineland Mail",
    "url": "https://codeforces.com/problemset/problem/567/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566G. Max and Min",
    "url": "https://codeforces.com/problemset/problem/566/G",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566F. Clique in the Divisibility Graph",
    "url": "https://codeforces.com/problemset/problem/566/F",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566E. Restoring Map",
    "url": "https://codeforces.com/problemset/problem/566/E",
    "difficulty": 3200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566D. Restructuring Company",
    "url": "https://codeforces.com/problemset/problem/566/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566C. Logistical Questions",
    "url": "https://codeforces.com/problemset/problem/566/C",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566B. Replicating Processes",
    "url": "https://codeforces.com/problemset/problem/566/B",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "566A. Matching Names",
    "url": "https://codeforces.com/problemset/problem/566/A",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "560B. Gerald is into Art",
    "url": "https://codeforces.com/problemset/problem/560/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "560A. Currency System in Geraldion",
    "url": "https://codeforces.com/problemset/problem/560/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "559E. Gerald and Path",
    "url": "https://codeforces.com/problemset/problem/559/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "559D. Randomizer",
    "url": "https://codeforces.com/problemset/problem/559/D",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "559C. Gerald and Giant Chess",
    "url": "https://codeforces.com/problemset/problem/559/C",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "559B. Equivalent Strings",
    "url": "https://codeforces.com/problemset/problem/559/B",
    "difficulty": 1700,
    "tags": [
      "divide and conquer",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "559A. Gerald's Hexagon",
    "url": "https://codeforces.com/problemset/problem/559/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "558E. A Simple Task",
    "url": "https://codeforces.com/problemset/problem/558/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "558D. Guess Your Way Out! II",
    "url": "https://codeforces.com/problemset/problem/558/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "558C. Amr and Chemistry",
    "url": "https://codeforces.com/problemset/problem/558/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "558B. Amr and The Large Array",
    "url": "https://codeforces.com/problemset/problem/558/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "558A. Lala Land and Apple Trees",
    "url": "https://codeforces.com/problemset/problem/558/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "557E. Ann and Half-Palindrome",
    "url": "https://codeforces.com/problemset/problem/557/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "557D. Vitaly and Cycle",
    "url": "https://codeforces.com/problemset/problem/557/D",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "557C. Arthur and Table",
    "url": "https://codeforces.com/problemset/problem/557/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "557B. Pasha and Tea",
    "url": "https://codeforces.com/problemset/problem/557/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "557A. Ilya and Diplomas",
    "url": "https://codeforces.com/problemset/problem/557/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "556B. Case of Fake Numbers",
    "url": "https://codeforces.com/problemset/problem/556/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "556A. Case of the Zeros and Ones",
    "url": "https://codeforces.com/problemset/problem/556/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "555E. Case of Computer Network",
    "url": "https://codeforces.com/problemset/problem/555/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "555D. Case of a Top Secret",
    "url": "https://codeforces.com/problemset/problem/555/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "555C. Case of Chocolate",
    "url": "https://codeforces.com/problemset/problem/555/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "555B. Case of Fugitive",
    "url": "https://codeforces.com/problemset/problem/555/B",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "555A. Case of Matryoshkas",
    "url": "https://codeforces.com/problemset/problem/555/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "554B. Ohana Cleans Up",
    "url": "https://codeforces.com/problemset/problem/554/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "554A. Kyoya and Photobooks",
    "url": "https://codeforces.com/problemset/problem/554/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "553E. Kyoya and Train",
    "url": "https://codeforces.com/problemset/problem/553/E",
    "difficulty": 3200,
    "tags": [
      "dp",
      "fft",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "553D. Nudist Beach",
    "url": "https://codeforces.com/problemset/problem/553/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "553C. Love Triangles",
    "url": "https://codeforces.com/problemset/problem/553/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "553B. Kyoya and Permutation",
    "url": "https://codeforces.com/problemset/problem/553/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "553A. Kyoya and Colored Balls",
    "url": "https://codeforces.com/problemset/problem/553/A",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "552E. Vanya and Brackets",
    "url": "https://codeforces.com/problemset/problem/552/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "expression parsing",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "552D. Vanya and Triangles",
    "url": "https://codeforces.com/problemset/problem/552/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "552C. Vanya and Scales",
    "url": "https://codeforces.com/problemset/problem/552/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "552B. Vanya and Books",
    "url": "https://codeforces.com/problemset/problem/552/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "552A. Vanya and Table",
    "url": "https://codeforces.com/problemset/problem/552/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "551E. GukiZ and GukiZiana",
    "url": "https://codeforces.com/problemset/problem/551/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "551D. GukiZ and Binary Operations",
    "url": "https://codeforces.com/problemset/problem/551/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "551C. GukiZ hates Boxes",
    "url": "https://codeforces.com/problemset/problem/551/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "551B. ZgukistringZ",
    "url": "https://codeforces.com/problemset/problem/551/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "551A. GukiZ and Contest",
    "url": "https://codeforces.com/problemset/problem/551/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "550E. Brackets in Implications",
    "url": "https://codeforces.com/problemset/problem/550/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "550D. Regular Bridge",
    "url": "https://codeforces.com/problemset/problem/550/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "550C. Divisibility by Eight",
    "url": "https://codeforces.com/problemset/problem/550/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "550B. Preparing Olympiad",
    "url": "https://codeforces.com/problemset/problem/550/B",
    "difficulty": 1400,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "550A. Two Substrings",
    "url": "https://codeforces.com/problemset/problem/550/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549H. Degenerate Matrix",
    "url": "https://codeforces.com/problemset/problem/549/H",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549G. Happy Line",
    "url": "https://codeforces.com/problemset/problem/549/G",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549F. Yura and Developers",
    "url": "https://codeforces.com/problemset/problem/549/F",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549E. Sasha Circle",
    "url": "https://codeforces.com/problemset/problem/549/E",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549D. Haar Features",
    "url": "https://codeforces.com/problemset/problem/549/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549C. The Game Of Parity",
    "url": "https://codeforces.com/problemset/problem/549/C",
    "difficulty": 2200,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549B. Looksery Party",
    "url": "https://codeforces.com/problemset/problem/549/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "549A. Face Detection",
    "url": "https://codeforces.com/problemset/problem/549/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "548B. Mike and Fun",
    "url": "https://codeforces.com/problemset/problem/548/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "548A. Mike and Fax",
    "url": "https://codeforces.com/problemset/problem/548/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "547E. Mike and Friends",
    "url": "https://codeforces.com/problemset/problem/547/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "547D. Mike and Fish",
    "url": "https://codeforces.com/problemset/problem/547/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "547C. Mike and Foam",
    "url": "https://codeforces.com/problemset/problem/547/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "547B. Mike and Feet",
    "url": "https://codeforces.com/problemset/problem/547/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "547A. Mike and Frog",
    "url": "https://codeforces.com/problemset/problem/547/A",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "546E. Soldier and Traveling",
    "url": "https://codeforces.com/problemset/problem/546/E",
    "difficulty": 2100,
    "tags": [
      "flows",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "546D. Soldier and Number Game",
    "url": "https://codeforces.com/problemset/problem/546/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "546C. Soldier and Cards",
    "url": "https://codeforces.com/problemset/problem/546/C",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "546B. Soldier and Badges",
    "url": "https://codeforces.com/problemset/problem/546/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "546A. Soldier and Bananas",
    "url": "https://codeforces.com/problemset/problem/546/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "545E. Paths and Trees",
    "url": "https://codeforces.com/problemset/problem/545/E",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "545D. Queue",
    "url": "https://codeforces.com/problemset/problem/545/D",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "545C. Woodcutters",
    "url": "https://codeforces.com/problemset/problem/545/C",
    "difficulty": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "545B. Equidistant String",
    "url": "https://codeforces.com/problemset/problem/545/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "545A. Toy Cars",
    "url": "https://codeforces.com/problemset/problem/545/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "544B. Sea and Islands",
    "url": "https://codeforces.com/problemset/problem/544/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "544A. Set of Strings",
    "url": "https://codeforces.com/problemset/problem/544/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "543E. Listening to Music",
    "url": "https://codeforces.com/problemset/problem/543/E",
    "difficulty": 3200,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "543D. Road Improvement",
    "url": "https://codeforces.com/problemset/problem/543/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "543C. Remembering Strings",
    "url": "https://codeforces.com/problemset/problem/543/C",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "543B. Destroying Roads",
    "url": "https://codeforces.com/problemset/problem/543/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "543A. Writing Code",
    "url": "https://codeforces.com/problemset/problem/543/A",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542F. Quest",
    "url": "https://codeforces.com/problemset/problem/542/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542E. Playing on Graph",
    "url": "https://codeforces.com/problemset/problem/542/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542D. Superhero's Job",
    "url": "https://codeforces.com/problemset/problem/542/D",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542C. Idempotent functions",
    "url": "https://codeforces.com/problemset/problem/542/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542B. Duck Hunt",
    "url": "https://codeforces.com/problemset/problem/542/B",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "542A. Place Your Ad Here",
    "url": "https://codeforces.com/problemset/problem/542/A",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "540E. Infinite Inversions",
    "url": "https://codeforces.com/problemset/problem/540/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "540D. Bad Luck Island",
    "url": "https://codeforces.com/problemset/problem/540/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "540C. Ice Cave",
    "url": "https://codeforces.com/problemset/problem/540/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "540B. School Marks",
    "url": "https://codeforces.com/problemset/problem/540/B",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "540A. Combination Lock",
    "url": "https://codeforces.com/problemset/problem/540/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538H. Summer Dichotomy",
    "url": "https://codeforces.com/problemset/problem/538/H",
    "difficulty": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538G. Berserk Robot ",
    "url": "https://codeforces.com/problemset/problem/538/G",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538F. A Heap of Heaps",
    "url": "https://codeforces.com/problemset/problem/538/F",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538E. Demiurges Play Again",
    "url": "https://codeforces.com/problemset/problem/538/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538D. Weird Chess",
    "url": "https://codeforces.com/problemset/problem/538/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538C. Tourist's Notes",
    "url": "https://codeforces.com/problemset/problem/538/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538B. Quasi Binary",
    "url": "https://codeforces.com/problemset/problem/538/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "538A. Cutting Banner",
    "url": "https://codeforces.com/problemset/problem/538/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "536E. Tavas on the Path",
    "url": "https://codeforces.com/problemset/problem/536/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "536D. Tavas in Kansas",
    "url": "https://codeforces.com/problemset/problem/536/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "535E. Tavas and Pashmaks",
    "url": "https://codeforces.com/problemset/problem/535/E",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "535D. Tavas and Malekas",
    "url": "https://codeforces.com/problemset/problem/535/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "535C. Tavas and Karafs",
    "url": "https://codeforces.com/problemset/problem/535/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "535B. Tavas and SaDDas",
    "url": "https://codeforces.com/problemset/problem/535/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "535A. Tavas and Nafas",
    "url": "https://codeforces.com/problemset/problem/535/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534F. Simplified Nonogram",
    "url": "https://codeforces.com/problemset/problem/534/F",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534E. Berland Local Positioning System",
    "url": "https://codeforces.com/problemset/problem/534/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534D. Handshakes",
    "url": "https://codeforces.com/problemset/problem/534/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534C. Polycarpus' Dice",
    "url": "https://codeforces.com/problemset/problem/534/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534B. Covered Path",
    "url": "https://codeforces.com/problemset/problem/534/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "534A. Exam",
    "url": "https://codeforces.com/problemset/problem/534/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533F. Encoding",
    "url": "https://codeforces.com/problemset/problem/533/F",
    "difficulty": 2400,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533E. Correcting Mistakes",
    "url": "https://codeforces.com/problemset/problem/533/E",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533D. Landmarks",
    "url": "https://codeforces.com/problemset/problem/533/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533C. Board Game",
    "url": "https://codeforces.com/problemset/problem/533/C",
    "difficulty": 1700,
    "tags": [
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533B. Work Group",
    "url": "https://codeforces.com/problemset/problem/533/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "533A. Berland Miners",
    "url": "https://codeforces.com/problemset/problem/533/A",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530I. Different variables",
    "url": "https://codeforces.com/problemset/problem/530/I",
    "difficulty": 2500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530H. Points in triangle",
    "url": "https://codeforces.com/problemset/problem/530/H",
    "difficulty": 2100,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530G. Levenshtein distance",
    "url": "https://codeforces.com/problemset/problem/530/G",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530F. Jumping frogs",
    "url": "https://codeforces.com/problemset/problem/530/F",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530E. Sum and product",
    "url": "https://codeforces.com/problemset/problem/530/E",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530D. Set subtraction",
    "url": "https://codeforces.com/problemset/problem/530/D",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530C. Diophantine equation",
    "url": "https://codeforces.com/problemset/problem/530/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530B. String inside out",
    "url": "https://codeforces.com/problemset/problem/530/B",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "530A. Quadratic equation",
    "url": "https://codeforces.com/problemset/problem/530/A",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "529B. Group Photo 2 (online mirror version)",
    "url": "https://codeforces.com/problemset/problem/529/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "528E. Triangles 3000",
    "url": "https://codeforces.com/problemset/problem/528/E",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "528D. Fuzzy Search",
    "url": "https://codeforces.com/problemset/problem/528/D",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "527E. Data Center Drama",
    "url": "https://codeforces.com/problemset/problem/527/E",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "527D. Clique Problem",
    "url": "https://codeforces.com/problemset/problem/527/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "527C. Glass Carving",
    "url": "https://codeforces.com/problemset/problem/527/C",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "527B. Error Correct System",
    "url": "https://codeforces.com/problemset/problem/527/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "527A. Playing with Paper",
    "url": "https://codeforces.com/problemset/problem/527/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526G. Spiders Evil Plan",
    "url": "https://codeforces.com/problemset/problem/526/G",
    "difficulty": 3300,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526F. Pudding Monsters",
    "url": "https://codeforces.com/problemset/problem/526/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526E. Transmitting Levels",
    "url": "https://codeforces.com/problemset/problem/526/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526D. Om Nom and Necklace",
    "url": "https://codeforces.com/problemset/problem/526/D",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526C. Om Nom and Candies",
    "url": "https://codeforces.com/problemset/problem/526/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526B. Om Nom and Dark Park",
    "url": "https://codeforces.com/problemset/problem/526/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "526A. King of Thieves",
    "url": "https://codeforces.com/problemset/problem/526/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "525E. Anya and Cubes",
    "url": "https://codeforces.com/problemset/problem/525/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "525D. Arthur and Walls",
    "url": "https://codeforces.com/problemset/problem/525/D",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "525C. Ilya and Sticks",
    "url": "https://codeforces.com/problemset/problem/525/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "525B. Pasha and String",
    "url": "https://codeforces.com/problemset/problem/525/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "525A. Vitaliy and Pie",
    "url": "https://codeforces.com/problemset/problem/525/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524F. And Yet Another Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/524/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524E. Rooks and Rectangles",
    "url": "https://codeforces.com/problemset/problem/524/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524D. Social Network",
    "url": "https://codeforces.com/problemset/problem/524/D",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524C. The Art of Dealing with ATM",
    "url": "https://codeforces.com/problemset/problem/524/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524B. Фото на память - 2 (round version)",
    "url": "https://codeforces.com/problemset/problem/524/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "524A. Возможно, вы знаете этих людей?",
    "url": "https://codeforces.com/problemset/problem/524/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "523D. Statistics of Recompressing Videos",
    "url": "https://codeforces.com/problemset/problem/523/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "523C. Name Quest",
    "url": "https://codeforces.com/problemset/problem/523/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "523B. Mean Requests",
    "url": "https://codeforces.com/problemset/problem/523/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "523A. Rotate, Flip and Zoom",
    "url": "https://codeforces.com/problemset/problem/523/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "522D. Closest Equals",
    "url": "https://codeforces.com/problemset/problem/522/D",
    "difficulty": 2000,
    "tags": [
      "*special",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "522C. Chicken or Fish?",
    "url": "https://codeforces.com/problemset/problem/522/C",
    "difficulty": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "522B. Photo to Remember",
    "url": "https://codeforces.com/problemset/problem/522/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "522A. Reposts",
    "url": "https://codeforces.com/problemset/problem/522/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "521E. Cycling City",
    "url": "https://codeforces.com/problemset/problem/521/E",
    "difficulty": 3100,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "521D. Shop",
    "url": "https://codeforces.com/problemset/problem/521/D",
    "difficulty": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "520E. Pluses everywhere",
    "url": "https://codeforces.com/problemset/problem/520/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "520D. Cubes",
    "url": "https://codeforces.com/problemset/problem/520/D",
    "difficulty": 2100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "520C. DNA Alignment",
    "url": "https://codeforces.com/problemset/problem/520/C",
    "difficulty": 1500,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "520B. Two Buttons",
    "url": "https://codeforces.com/problemset/problem/520/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "520A. Pangram",
    "url": "https://codeforces.com/problemset/problem/520/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "519E. A and B and Lecture Rooms",
    "url": "https://codeforces.com/problemset/problem/519/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "519D. A and B and Interesting Substrings",
    "url": "https://codeforces.com/problemset/problem/519/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "519C. A and B and Team Training",
    "url": "https://codeforces.com/problemset/problem/519/C",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "519B. A and B and Compilation Errors",
    "url": "https://codeforces.com/problemset/problem/519/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "519A. A and B and Chess",
    "url": "https://codeforces.com/problemset/problem/519/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518F. Pasha and Pipe",
    "url": "https://codeforces.com/problemset/problem/518/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518E. Arthur and Questions",
    "url": "https://codeforces.com/problemset/problem/518/E",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518D. Ilya and Escalator",
    "url": "https://codeforces.com/problemset/problem/518/D",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518C. Anya and Smartphone",
    "url": "https://codeforces.com/problemset/problem/518/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518B. Tanya and Postcard",
    "url": "https://codeforces.com/problemset/problem/518/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "518A. Vitaly and Strings",
    "url": "https://codeforces.com/problemset/problem/518/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "516E. Drazil and His Happy Friends",
    "url": "https://codeforces.com/problemset/problem/516/E",
    "difficulty": 3100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "516D. Drazil and Morning Exercise",
    "url": "https://codeforces.com/problemset/problem/516/D",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "515E. Drazil and Park",
    "url": "https://codeforces.com/problemset/problem/515/E",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "515D. Drazil and Tiles",
    "url": "https://codeforces.com/problemset/problem/515/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "515C. Drazil and Factorial",
    "url": "https://codeforces.com/problemset/problem/515/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "515B. Drazil and His Happy Friends",
    "url": "https://codeforces.com/problemset/problem/515/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dsu",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "515A. Drazil and Date",
    "url": "https://codeforces.com/problemset/problem/515/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "514E. Darth Vader and Tree",
    "url": "https://codeforces.com/problemset/problem/514/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "514D. R2D2 and Droid Army",
    "url": "https://codeforces.com/problemset/problem/514/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "514C. Watto and Mechanism",
    "url": "https://codeforces.com/problemset/problem/514/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "514B. Han Solo and Lazer Gun",
    "url": "https://codeforces.com/problemset/problem/514/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "514A. Chewbaсca and Number",
    "url": "https://codeforces.com/problemset/problem/514/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513G3. Inversions problem",
    "url": "https://codeforces.com/problemset/problem/513/G3",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513G2. Inversions problem",
    "url": "https://codeforces.com/problemset/problem/513/G2",
    "difficulty": 2400,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513G1. Inversions problem",
    "url": "https://codeforces.com/problemset/problem/513/G1",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513F2. Scaygerboss",
    "url": "https://codeforces.com/problemset/problem/513/F2",
    "difficulty": 2800,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513F1. Scaygerboss",
    "url": "https://codeforces.com/problemset/problem/513/F1",
    "difficulty": 2700,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513E2. Subarray Cuts",
    "url": "https://codeforces.com/problemset/problem/513/E2",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513E1. Subarray Cuts",
    "url": "https://codeforces.com/problemset/problem/513/E1",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513D2. Constrained Tree",
    "url": "https://codeforces.com/problemset/problem/513/D2",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513D1. Constrained Tree",
    "url": "https://codeforces.com/problemset/problem/513/D1",
    "difficulty": 2400,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513C. Second price auction",
    "url": "https://codeforces.com/problemset/problem/513/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513B2. Permutations",
    "url": "https://codeforces.com/problemset/problem/513/B2",
    "difficulty": 1800,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513B1. Permutations",
    "url": "https://codeforces.com/problemset/problem/513/B1",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "513A. Game",
    "url": "https://codeforces.com/problemset/problem/513/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "512E. Fox And Polygon",
    "url": "https://codeforces.com/problemset/problem/512/E",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "512D. Fox And Travelling",
    "url": "https://codeforces.com/problemset/problem/512/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "510E. Fox And Dinner",
    "url": "https://codeforces.com/problemset/problem/510/E",
    "difficulty": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "510D. Fox And Jumping",
    "url": "https://codeforces.com/problemset/problem/510/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "510C. Fox And Names",
    "url": "https://codeforces.com/problemset/problem/510/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "510B. Fox And Two Dots",
    "url": "https://codeforces.com/problemset/problem/510/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "510A. Fox And Snake",
    "url": "https://codeforces.com/problemset/problem/510/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509F. Progress Monitoring",
    "url": "https://codeforces.com/problemset/problem/509/F",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509E. Pretty Song",
    "url": "https://codeforces.com/problemset/problem/509/E",
    "difficulty": 2000,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509D. Restoring Numbers",
    "url": "https://codeforces.com/problemset/problem/509/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509C. Sums of Digits",
    "url": "https://codeforces.com/problemset/problem/509/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509B. Painting Pebbles",
    "url": "https://codeforces.com/problemset/problem/509/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "509A. Maximum in Table",
    "url": "https://codeforces.com/problemset/problem/509/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "508E. Arthur and Brackets",
    "url": "https://codeforces.com/problemset/problem/508/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "508D. Tanya and Password",
    "url": "https://codeforces.com/problemset/problem/508/D",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "508C. Anya and Ghosts",
    "url": "https://codeforces.com/problemset/problem/508/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "508B. Anton and currency you all know",
    "url": "https://codeforces.com/problemset/problem/508/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "508A. Pasha and Pixels",
    "url": "https://codeforces.com/problemset/problem/508/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "507E. Breaking Good",
    "url": "https://codeforces.com/problemset/problem/507/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "507D. The Maths Lecture",
    "url": "https://codeforces.com/problemset/problem/507/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "507C. Guess Your Way Out!",
    "url": "https://codeforces.com/problemset/problem/507/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "507B. Amr and Pins",
    "url": "https://codeforces.com/problemset/problem/507/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "507A. Amr and Music",
    "url": "https://codeforces.com/problemset/problem/507/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "506E. Mr. Kitayuta's Gift",
    "url": "https://codeforces.com/problemset/problem/506/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "506D. Mr. Kitayuta's Colorful Graph",
    "url": "https://codeforces.com/problemset/problem/506/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "505E. Mr. Kitayuta vs. Bamboos",
    "url": "https://codeforces.com/problemset/problem/505/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "505D. Mr. Kitayuta's Technology",
    "url": "https://codeforces.com/problemset/problem/505/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "505C. Mr. Kitayuta, the Treasure Hunter",
    "url": "https://codeforces.com/problemset/problem/505/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "505B. Mr. Kitayuta's Colorful Graph",
    "url": "https://codeforces.com/problemset/problem/505/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "505A. Mr. Kitayuta's Gift",
    "url": "https://codeforces.com/problemset/problem/505/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "504E. Misha and LCP on Tree",
    "url": "https://codeforces.com/problemset/problem/504/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "504D. Misha and XOR",
    "url": "https://codeforces.com/problemset/problem/504/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "501E. Misha and Palindrome Degree",
    "url": "https://codeforces.com/problemset/problem/501/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "501D. Misha and Permutations Summation",
    "url": "https://codeforces.com/problemset/problem/501/D",
    "difficulty": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "501C. Misha and Forest",
    "url": "https://codeforces.com/problemset/problem/501/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "501B. Misha and Changing Handles",
    "url": "https://codeforces.com/problemset/problem/501/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "dsu",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "501A. Contest",
    "url": "https://codeforces.com/problemset/problem/501/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500G. New Year Running",
    "url": "https://codeforces.com/problemset/problem/500/G",
    "difficulty": 3200,
    "tags": [
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500F. New Year Shopping",
    "url": "https://codeforces.com/problemset/problem/500/F",
    "difficulty": 2700,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500E. New Year Domino",
    "url": "https://codeforces.com/problemset/problem/500/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500D. New Year Santa Network",
    "url": "https://codeforces.com/problemset/problem/500/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500C. New Year Book Reading",
    "url": "https://codeforces.com/problemset/problem/500/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500B. New Year Permutation",
    "url": "https://codeforces.com/problemset/problem/500/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "500A. New Year Transportation",
    "url": "https://codeforces.com/problemset/problem/500/A",
    "difficulty": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "499B. Lecture",
    "url": "https://codeforces.com/problemset/problem/499/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "499A. Watching a movie",
    "url": "https://codeforces.com/problemset/problem/499/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "498E. Stairs and Lines",
    "url": "https://codeforces.com/problemset/problem/498/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "498D. Traffic Jams in the Land",
    "url": "https://codeforces.com/problemset/problem/498/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "498C. Array and Operations",
    "url": "https://codeforces.com/problemset/problem/498/C",
    "difficulty": 2100,
    "tags": [
      "flows",
      "graph matchings",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "498B. Name That Tune",
    "url": "https://codeforces.com/problemset/problem/498/B",
    "difficulty": 2400,
    "tags": [
      "dp",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "498A. Crazy Town",
    "url": "https://codeforces.com/problemset/problem/498/A",
    "difficulty": 1700,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "497E. Subsequences Return",
    "url": "https://codeforces.com/problemset/problem/497/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "497D. Gears",
    "url": "https://codeforces.com/problemset/problem/497/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "496E. Distributing Parts ",
    "url": "https://codeforces.com/problemset/problem/496/E",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "496D. Tennis Game",
    "url": "https://codeforces.com/problemset/problem/496/D",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "496C. Removing Columns",
    "url": "https://codeforces.com/problemset/problem/496/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "496B. Secret Combination",
    "url": "https://codeforces.com/problemset/problem/496/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "496A. Minimum Difficulty",
    "url": "https://codeforces.com/problemset/problem/496/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "495B. Modular Equations",
    "url": "https://codeforces.com/problemset/problem/495/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "495A. Digital Counter",
    "url": "https://codeforces.com/problemset/problem/495/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "494E. Sharti",
    "url": "https://codeforces.com/problemset/problem/494/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "494D. Birthday",
    "url": "https://codeforces.com/problemset/problem/494/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "494C. Helping People",
    "url": "https://codeforces.com/problemset/problem/494/C",
    "difficulty": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "494B. Obsessive String",
    "url": "https://codeforces.com/problemset/problem/494/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "494A. Treasure",
    "url": "https://codeforces.com/problemset/problem/494/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "493E. Vasya and Polynomial",
    "url": "https://codeforces.com/problemset/problem/493/E",
    "difficulty": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "493D. Vasya and Chess",
    "url": "https://codeforces.com/problemset/problem/493/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "493C. Vasya and Basketball",
    "url": "https://codeforces.com/problemset/problem/493/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "493B. Vasya and Wrestling",
    "url": "https://codeforces.com/problemset/problem/493/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "493A. Vasya and Football",
    "url": "https://codeforces.com/problemset/problem/493/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "492E. Vanya and Field",
    "url": "https://codeforces.com/problemset/problem/492/E",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "492D. Vanya and Computer Game",
    "url": "https://codeforces.com/problemset/problem/492/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "492C. Vanya and Exams",
    "url": "https://codeforces.com/problemset/problem/492/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "492B. Vanya and Lanterns",
    "url": "https://codeforces.com/problemset/problem/492/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "492A. Vanya and Cubes",
    "url": "https://codeforces.com/problemset/problem/492/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "491C. Deciphering",
    "url": "https://codeforces.com/problemset/problem/491/C",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "491B. New York Hotel",
    "url": "https://codeforces.com/problemset/problem/491/B",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "491A. Up the hill",
    "url": "https://codeforces.com/problemset/problem/491/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490F. Treeland Tour",
    "url": "https://codeforces.com/problemset/problem/490/F",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490E. Restoring Increasing Sequence",
    "url": "https://codeforces.com/problemset/problem/490/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490D. Chocolate",
    "url": "https://codeforces.com/problemset/problem/490/D",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490C. Hacking Cypher",
    "url": "https://codeforces.com/problemset/problem/490/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490B. Queue",
    "url": "https://codeforces.com/problemset/problem/490/B",
    "difficulty": 1500,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "490A. Team Olympiad",
    "url": "https://codeforces.com/problemset/problem/490/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489F. Special Matrices",
    "url": "https://codeforces.com/problemset/problem/489/F",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489E. Hiking",
    "url": "https://codeforces.com/problemset/problem/489/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489D. Unbearable Controversy of Being",
    "url": "https://codeforces.com/problemset/problem/489/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489C. Given Length and Sum of Digits...",
    "url": "https://codeforces.com/problemset/problem/489/C",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489B. BerSU Ball",
    "url": "https://codeforces.com/problemset/problem/489/B",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "489A. SwapSort",
    "url": "https://codeforces.com/problemset/problem/489/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "488B. Candy Boxes",
    "url": "https://codeforces.com/problemset/problem/488/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "488A. Giga Tower",
    "url": "https://codeforces.com/problemset/problem/488/A",
    "difficulty": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "487E. Tourists",
    "url": "https://codeforces.com/problemset/problem/487/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "487D. Conveyor Belts",
    "url": "https://codeforces.com/problemset/problem/487/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "487C. Prefix Product Sequence",
    "url": "https://codeforces.com/problemset/problem/487/C",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "487B. Strip",
    "url": "https://codeforces.com/problemset/problem/487/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "487A. Fight the Monster",
    "url": "https://codeforces.com/problemset/problem/487/A",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "486E. LIS of Sequence",
    "url": "https://codeforces.com/problemset/problem/486/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "486D. Valid Sets",
    "url": "https://codeforces.com/problemset/problem/486/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "486C. Palindrome Transformation",
    "url": "https://codeforces.com/problemset/problem/486/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "486B. OR in Matrix",
    "url": "https://codeforces.com/problemset/problem/486/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "486A. Calculating Function",
    "url": "https://codeforces.com/problemset/problem/486/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "485B. Valuable Resources",
    "url": "https://codeforces.com/problemset/problem/485/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "485A. Factory",
    "url": "https://codeforces.com/problemset/problem/485/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "484E. Sign on Fence",
    "url": "https://codeforces.com/problemset/problem/484/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "484D. Kindergarten",
    "url": "https://codeforces.com/problemset/problem/484/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "484C. Strange Sorting",
    "url": "https://codeforces.com/problemset/problem/484/C",
    "difficulty": 2600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "484B. Maximum Value",
    "url": "https://codeforces.com/problemset/problem/484/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "484A. Bits",
    "url": "https://codeforces.com/problemset/problem/484/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "483B. Friends and Presents",
    "url": "https://codeforces.com/problemset/problem/483/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "483A. Counterexample ",
    "url": "https://codeforces.com/problemset/problem/483/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "482E. ELCA",
    "url": "https://codeforces.com/problemset/problem/482/E",
    "difficulty": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "482D. Random Function and Tree",
    "url": "https://codeforces.com/problemset/problem/482/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "482C. Game with Strings",
    "url": "https://codeforces.com/problemset/problem/482/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "482B. Interesting Array",
    "url": "https://codeforces.com/problemset/problem/482/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "482A. Diverse Permutation",
    "url": "https://codeforces.com/problemset/problem/482/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "480E. Parking Lot",
    "url": "https://codeforces.com/problemset/problem/480/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "480D. Parcels",
    "url": "https://codeforces.com/problemset/problem/480/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "479E. Riding in a Lift",
    "url": "https://codeforces.com/problemset/problem/479/E",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "479D. Long Jumps",
    "url": "https://codeforces.com/problemset/problem/479/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "479C. Exams",
    "url": "https://codeforces.com/problemset/problem/479/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "479B. Towers",
    "url": "https://codeforces.com/problemset/problem/479/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "479A. Expression",
    "url": "https://codeforces.com/problemset/problem/479/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "478E. Wavy numbers",
    "url": "https://codeforces.com/problemset/problem/478/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "meet-in-the-middle",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "478D. Red-Green Towers",
    "url": "https://codeforces.com/problemset/problem/478/D",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "478C. Table Decorations",
    "url": "https://codeforces.com/problemset/problem/478/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "478B. Random Teams",
    "url": "https://codeforces.com/problemset/problem/478/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "478A. Initial Bet",
    "url": "https://codeforces.com/problemset/problem/478/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "477E. Dreamoon and Notepad",
    "url": "https://codeforces.com/problemset/problem/477/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "477D. Dreamoon and Binary",
    "url": "https://codeforces.com/problemset/problem/477/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "476E. Dreamoon and Strings",
    "url": "https://codeforces.com/problemset/problem/476/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "476D. Dreamoon and Sets",
    "url": "https://codeforces.com/problemset/problem/476/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "476C. Dreamoon and Sums",
    "url": "https://codeforces.com/problemset/problem/476/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "476B. Dreamoon and WiFi",
    "url": "https://codeforces.com/problemset/problem/476/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "476A. Dreamoon and Stairs",
    "url": "https://codeforces.com/problemset/problem/476/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475F. Meta-universe",
    "url": "https://codeforces.com/problemset/problem/475/F",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475E. Strongly Connected City 2",
    "url": "https://codeforces.com/problemset/problem/475/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475D. CGCDSSQ",
    "url": "https://codeforces.com/problemset/problem/475/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475C. Kamal-ol-molk's Painting",
    "url": "https://codeforces.com/problemset/problem/475/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475B. Strongly Connected City",
    "url": "https://codeforces.com/problemset/problem/475/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "475A. Bayan Bus",
    "url": "https://codeforces.com/problemset/problem/475/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474F. Ant colony",
    "url": "https://codeforces.com/problemset/problem/474/F",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474E. Pillars",
    "url": "https://codeforces.com/problemset/problem/474/E",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474D. Flowers",
    "url": "https://codeforces.com/problemset/problem/474/D",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474C. Captain Marmot",
    "url": "https://codeforces.com/problemset/problem/474/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474B. Worms",
    "url": "https://codeforces.com/problemset/problem/474/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "474A. Keyboard",
    "url": "https://codeforces.com/problemset/problem/474/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472G. Design Tutorial: Increase the Constraints",
    "url": "https://codeforces.com/problemset/problem/472/G",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472F. Design Tutorial: Change the Goal",
    "url": "https://codeforces.com/problemset/problem/472/F",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472E. Design Tutorial: Learn from a Game",
    "url": "https://codeforces.com/problemset/problem/472/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472D. Design Tutorial: Inverse the Problem",
    "url": "https://codeforces.com/problemset/problem/472/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472C. Design Tutorial: Make It Nondeterministic",
    "url": "https://codeforces.com/problemset/problem/472/C",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "472B. Design Tutorial: Learn from Life",
    "url": "https://codeforces.com/problemset/problem/472/B",
    "difficulty": 1300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "472A. Design Tutorial: Learn from Math",
    "url": "https://codeforces.com/problemset/problem/472/A",
    "difficulty": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "471E. MUH and Lots and Lots of Segments",
    "url": "https://codeforces.com/problemset/problem/471/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "471D. MUH and Cube Walls",
    "url": "https://codeforces.com/problemset/problem/471/D",
    "difficulty": 1800,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "471C. MUH and House of Cards",
    "url": "https://codeforces.com/problemset/problem/471/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "471B. MUH and Important Things",
    "url": "https://codeforces.com/problemset/problem/471/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "471A. MUH and Sticks",
    "url": "https://codeforces.com/problemset/problem/471/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470H. Array Sorting",
    "url": "https://codeforces.com/problemset/problem/470/H",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470G. Hamming Distance",
    "url": "https://codeforces.com/problemset/problem/470/G",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470F. Pairwise Sums",
    "url": "https://codeforces.com/problemset/problem/470/F",
    "difficulty": 2300,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470E. Chessboard",
    "url": "https://codeforces.com/problemset/problem/470/E",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470D. Caesar Cipher",
    "url": "https://codeforces.com/problemset/problem/470/D",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470C. Eval",
    "url": "https://codeforces.com/problemset/problem/470/C",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470B. Hexakosioihexekontahexaphobia",
    "url": "https://codeforces.com/problemset/problem/470/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "470A. Crystal Ball Sequence",
    "url": "https://codeforces.com/problemset/problem/470/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "469B. Chat Online",
    "url": "https://codeforces.com/problemset/problem/469/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "469A. I Wanna Be the Guy",
    "url": "https://codeforces.com/problemset/problem/469/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "468E. Permanent",
    "url": "https://codeforces.com/problemset/problem/468/E",
    "difficulty": 3100,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "468D. Tree",
    "url": "https://codeforces.com/problemset/problem/468/D",
    "difficulty": 3100,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "468C. Hack it!",
    "url": "https://codeforces.com/problemset/problem/468/C",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "468B. Two Sets",
    "url": "https://codeforces.com/problemset/problem/468/B",
    "difficulty": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "468A. 24 Game",
    "url": "https://codeforces.com/problemset/problem/468/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "467E. Alex and Complicated Task",
    "url": "https://codeforces.com/problemset/problem/467/E",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "467D. Fedor and Essay",
    "url": "https://codeforces.com/problemset/problem/467/D",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "467C. George and Job",
    "url": "https://codeforces.com/problemset/problem/467/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "467B. Fedor and New Game",
    "url": "https://codeforces.com/problemset/problem/467/B",
    "difficulty": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "467A. George and Accommodation",
    "url": "https://codeforces.com/problemset/problem/467/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "466E. Information Graph",
    "url": "https://codeforces.com/problemset/problem/466/E",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "466D. Increase Sequence",
    "url": "https://codeforces.com/problemset/problem/466/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "466C. Number of Ways",
    "url": "https://codeforces.com/problemset/problem/466/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "466B. Wonder Room",
    "url": "https://codeforces.com/problemset/problem/466/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "466A. Cheap Travel",
    "url": "https://codeforces.com/problemset/problem/466/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "465B. Inbox (100500)",
    "url": "https://codeforces.com/problemset/problem/465/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "465A. inc ARG",
    "url": "https://codeforces.com/problemset/problem/465/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "464E. The Classic Problem",
    "url": "https://codeforces.com/problemset/problem/464/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "464D. World of Darkraft - 2",
    "url": "https://codeforces.com/problemset/problem/464/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "464C. Substitutes in Number",
    "url": "https://codeforces.com/problemset/problem/464/C",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "464B. Restore Cube ",
    "url": "https://codeforces.com/problemset/problem/464/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "464A. No to Palindromes!",
    "url": "https://codeforces.com/problemset/problem/464/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "463E. Caisa and Tree",
    "url": "https://codeforces.com/problemset/problem/463/E",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "463D. Gargari and Permutations",
    "url": "https://codeforces.com/problemset/problem/463/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "463C. Gargari and Bishops",
    "url": "https://codeforces.com/problemset/problem/463/C",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "463B. Caisa and Pylons",
    "url": "https://codeforces.com/problemset/problem/463/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "463A. Caisa and Sugar",
    "url": "https://codeforces.com/problemset/problem/463/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "462B. Appleman and Card Game",
    "url": "https://codeforces.com/problemset/problem/462/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "462A. Appleman and Easy Task",
    "url": "https://codeforces.com/problemset/problem/462/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "461E. Appleman and a Game",
    "url": "https://codeforces.com/problemset/problem/461/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "shortest paths",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "461D. Appleman and Complicated Task",
    "url": "https://codeforces.com/problemset/problem/461/D",
    "difficulty": 2800,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "461C. Appleman and a Sheet of Paper",
    "url": "https://codeforces.com/problemset/problem/461/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "461B. Appleman and Tree",
    "url": "https://codeforces.com/problemset/problem/461/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "461A. Appleman and Toastman",
    "url": "https://codeforces.com/problemset/problem/461/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "460E. Roland and Rose",
    "url": "https://codeforces.com/problemset/problem/460/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "460D. Little Victor and Set",
    "url": "https://codeforces.com/problemset/problem/460/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "460C. Present",
    "url": "https://codeforces.com/problemset/problem/460/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "460B. Little Dima and Equation",
    "url": "https://codeforces.com/problemset/problem/460/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "460A. Vasya and Socks",
    "url": "https://codeforces.com/problemset/problem/460/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "459E. Pashmak and Graph",
    "url": "https://codeforces.com/problemset/problem/459/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "459D. Pashmak and Parmida's problem",
    "url": "https://codeforces.com/problemset/problem/459/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "459C. Pashmak and Buses",
    "url": "https://codeforces.com/problemset/problem/459/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "459B. Pashmak and Flowers",
    "url": "https://codeforces.com/problemset/problem/459/B",
    "difficulty": 1300,
    "tags": [
      "combinatorics",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "459A. Pashmak and Garden",
    "url": "https://codeforces.com/problemset/problem/459/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457F. An easy problem about trees",
    "url": "https://codeforces.com/problemset/problem/457/F",
    "difficulty": 3200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457E. Flow Optimality",
    "url": "https://codeforces.com/problemset/problem/457/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457D. Bingo!",
    "url": "https://codeforces.com/problemset/problem/457/D",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457C. Elections",
    "url": "https://codeforces.com/problemset/problem/457/C",
    "difficulty": 2100,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457B. Distributed Join",
    "url": "https://codeforces.com/problemset/problem/457/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "457A. Golden System",
    "url": "https://codeforces.com/problemset/problem/457/A",
    "difficulty": 1700,
    "tags": [
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "456B. Fedya and Maths",
    "url": "https://codeforces.com/problemset/problem/456/B",
    "difficulty": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "456A. Laptops",
    "url": "https://codeforces.com/problemset/problem/456/A",
    "difficulty": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "455E. Function",
    "url": "https://codeforces.com/problemset/problem/455/E",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "455D. Serega and Fun",
    "url": "https://codeforces.com/problemset/problem/455/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "455C. Civilization",
    "url": "https://codeforces.com/problemset/problem/455/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "ternary search",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "455B. A Lot of Games",
    "url": "https://codeforces.com/problemset/problem/455/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "455A. Boredom",
    "url": "https://codeforces.com/problemset/problem/455/A",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "454B. Little Pony and Sort by Shift",
    "url": "https://codeforces.com/problemset/problem/454/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "454A. Little Pony and Crystal Mine",
    "url": "https://codeforces.com/problemset/problem/454/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "453E. Little Pony and Lord Tirek",
    "url": "https://codeforces.com/problemset/problem/453/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "453D. Little Pony and Elements of Harmony",
    "url": "https://codeforces.com/problemset/problem/453/D",
    "difficulty": 3000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "453C. Little Pony and Summer Sun Celebration",
    "url": "https://codeforces.com/problemset/problem/453/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "453B. Little Pony and Harmony Chest",
    "url": "https://codeforces.com/problemset/problem/453/B",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "453A. Little Pony and Expected Maximum",
    "url": "https://codeforces.com/problemset/problem/453/A",
    "difficulty": 1600,
    "tags": [
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452F. Permutation",
    "url": "https://codeforces.com/problemset/problem/452/F",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452E. Three strings",
    "url": "https://codeforces.com/problemset/problem/452/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452D. Washer, Dryer, Folder",
    "url": "https://codeforces.com/problemset/problem/452/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452C. Magic Trick",
    "url": "https://codeforces.com/problemset/problem/452/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452B. 4-point polyline",
    "url": "https://codeforces.com/problemset/problem/452/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "452A. Eevee",
    "url": "https://codeforces.com/problemset/problem/452/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "451E. Devu and Flowers",
    "url": "https://codeforces.com/problemset/problem/451/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "451D. Count Good Substrings",
    "url": "https://codeforces.com/problemset/problem/451/D",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "451C. Predict Outcome of the Game",
    "url": "https://codeforces.com/problemset/problem/451/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "451B. Sort the Array",
    "url": "https://codeforces.com/problemset/problem/451/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "451A. Game With Sticks",
    "url": "https://codeforces.com/problemset/problem/451/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "450B. Jzzhu and Sequences",
    "url": "https://codeforces.com/problemset/problem/450/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "450A. Jzzhu and Children",
    "url": "https://codeforces.com/problemset/problem/450/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "449E. Jzzhu and Squares",
    "url": "https://codeforces.com/problemset/problem/449/E",
    "difficulty": 2900,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "449D. Jzzhu and Numbers",
    "url": "https://codeforces.com/problemset/problem/449/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "449C. Jzzhu and Apples",
    "url": "https://codeforces.com/problemset/problem/449/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "449B. Jzzhu and Cities",
    "url": "https://codeforces.com/problemset/problem/449/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "449A. Jzzhu and Chocolate",
    "url": "https://codeforces.com/problemset/problem/449/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "448E. Divisors",
    "url": "https://codeforces.com/problemset/problem/448/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "448D. Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/448/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "448C. Painting Fence",
    "url": "https://codeforces.com/problemset/problem/448/C",
    "difficulty": 1900,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "448B. Suffix Structures",
    "url": "https://codeforces.com/problemset/problem/448/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "448A. Rewards",
    "url": "https://codeforces.com/problemset/problem/448/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "447B. DZY Loves Strings",
    "url": "https://codeforces.com/problemset/problem/447/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "447A. DZY Loves Hash",
    "url": "https://codeforces.com/problemset/problem/447/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "446E. DZY Loves Bridges",
    "url": "https://codeforces.com/problemset/problem/446/E",
    "difficulty": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "446D. DZY Loves Games",
    "url": "https://codeforces.com/problemset/problem/446/D",
    "difficulty": 2800,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "446C. DZY Loves Fibonacci Numbers",
    "url": "https://codeforces.com/problemset/problem/446/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "446B. DZY Loves Modification",
    "url": "https://codeforces.com/problemset/problem/446/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "446A. DZY Loves Sequences",
    "url": "https://codeforces.com/problemset/problem/446/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "445B. DZY Loves Chemistry",
    "url": "https://codeforces.com/problemset/problem/445/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "445A. DZY Loves Chessboard",
    "url": "https://codeforces.com/problemset/problem/445/A",
    "difficulty": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "444E. DZY Loves Planting",
    "url": "https://codeforces.com/problemset/problem/444/E",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "444D. DZY Loves Strings",
    "url": "https://codeforces.com/problemset/problem/444/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "444C. DZY Loves Colors",
    "url": "https://codeforces.com/problemset/problem/444/C",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "444B. DZY Loves FFT",
    "url": "https://codeforces.com/problemset/problem/444/B",
    "difficulty": 2300,
    "tags": [
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "444A. DZY Loves Physics",
    "url": "https://codeforces.com/problemset/problem/444/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "443B. Kolya and Tandem Repeat",
    "url": "https://codeforces.com/problemset/problem/443/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "443A. Anton and Letters",
    "url": "https://codeforces.com/problemset/problem/443/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "442E. Gena and Second Distance",
    "url": "https://codeforces.com/problemset/problem/442/E",
    "difficulty": 3100,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "442D. Adam and Tree",
    "url": "https://codeforces.com/problemset/problem/442/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "442C. Artem and Array ",
    "url": "https://codeforces.com/problemset/problem/442/C",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "442B. Andrey and Problem",
    "url": "https://codeforces.com/problemset/problem/442/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "442A. Borya and Hanabi",
    "url": "https://codeforces.com/problemset/problem/442/A",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "441E. Valera and Number",
    "url": "https://codeforces.com/problemset/problem/441/E",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "441D. Valera and Swaps",
    "url": "https://codeforces.com/problemset/problem/441/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "441C. Valera and Tubes ",
    "url": "https://codeforces.com/problemset/problem/441/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "441B. Valera and Fruits",
    "url": "https://codeforces.com/problemset/problem/441/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "441A. Valera and Antique Items",
    "url": "https://codeforces.com/problemset/problem/441/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "440D. Berland Federalization",
    "url": "https://codeforces.com/problemset/problem/440/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "440C. One-Based Arithmetic",
    "url": "https://codeforces.com/problemset/problem/440/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "440B. Balancer",
    "url": "https://codeforces.com/problemset/problem/440/B",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "440A. Forgotten Episode",
    "url": "https://codeforces.com/problemset/problem/440/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "439E. Devu and Birthday Celebration",
    "url": "https://codeforces.com/problemset/problem/439/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "439D. Devu and his Brother",
    "url": "https://codeforces.com/problemset/problem/439/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "439C. Devu and Partitioning of the Array",
    "url": "https://codeforces.com/problemset/problem/439/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "439B. Devu, the Dumb Guy",
    "url": "https://codeforces.com/problemset/problem/439/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "439A. Devu, the Singer and Churu, the Joker",
    "url": "https://codeforces.com/problemset/problem/439/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "438E. The Child and Binary Tree",
    "url": "https://codeforces.com/problemset/problem/438/E",
    "difficulty": 3100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "438D. The Child and Sequence",
    "url": "https://codeforces.com/problemset/problem/438/D",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "437E. The Child and Polygon",
    "url": "https://codeforces.com/problemset/problem/437/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "437D. The Child and Zoo",
    "url": "https://codeforces.com/problemset/problem/437/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "437C. The Child and Toy",
    "url": "https://codeforces.com/problemset/problem/437/C",
    "difficulty": 1400,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "437B. The Child and Set",
    "url": "https://codeforces.com/problemset/problem/437/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "437A. The Child and Homework",
    "url": "https://codeforces.com/problemset/problem/437/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436F. Banners",
    "url": "https://codeforces.com/problemset/problem/436/F",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436E. Cardboard Box",
    "url": "https://codeforces.com/problemset/problem/436/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436D. Pudding Monsters",
    "url": "https://codeforces.com/problemset/problem/436/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436C. Dungeons and Candies",
    "url": "https://codeforces.com/problemset/problem/436/C",
    "difficulty": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436B. Om Nom and Spiders",
    "url": "https://codeforces.com/problemset/problem/436/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "436A. Feed with Candy",
    "url": "https://codeforces.com/problemset/problem/436/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "435E. Special Graph",
    "url": "https://codeforces.com/problemset/problem/435/E",
    "difficulty": 2500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "435D. Special Grid",
    "url": "https://codeforces.com/problemset/problem/435/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "435C. Cardiogram",
    "url": "https://codeforces.com/problemset/problem/435/C",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "435B. Pasha Maximizes",
    "url": "https://codeforces.com/problemset/problem/435/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "435A. Queue on Bus Stop",
    "url": "https://codeforces.com/problemset/problem/435/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "434E. Furukawa Nagisa's Tree",
    "url": "https://codeforces.com/problemset/problem/434/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "divide and conquer",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "434D. Nanami's Power Plant",
    "url": "https://codeforces.com/problemset/problem/434/D",
    "difficulty": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "433E. Tachibana Kanade's Tofu",
    "url": "https://codeforces.com/problemset/problem/433/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "433D. Nanami's Digital Board",
    "url": "https://codeforces.com/problemset/problem/433/D",
    "difficulty": 2000,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "433C. Ryouko's Memory Note",
    "url": "https://codeforces.com/problemset/problem/433/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "433B. Kuriyama Mirai's Stones",
    "url": "https://codeforces.com/problemset/problem/433/B",
    "difficulty": 1200,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "433A. Kitahara Haruki's Gift",
    "url": "https://codeforces.com/problemset/problem/433/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "432E. Square Tiling",
    "url": "https://codeforces.com/problemset/problem/432/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "432D. Prefixes and Suffixes",
    "url": "https://codeforces.com/problemset/problem/432/D",
    "difficulty": 2000,
    "tags": [
      "dp",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "432C. Prime Swaps",
    "url": "https://codeforces.com/problemset/problem/432/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "432B. Football Kit",
    "url": "https://codeforces.com/problemset/problem/432/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "432A. Choosing Teams",
    "url": "https://codeforces.com/problemset/problem/432/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "431E. Chemistry Experiment",
    "url": "https://codeforces.com/problemset/problem/431/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "431D. Random Task",
    "url": "https://codeforces.com/problemset/problem/431/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "431C. k-Tree",
    "url": "https://codeforces.com/problemset/problem/431/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "431B. Shower Line",
    "url": "https://codeforces.com/problemset/problem/431/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "431A. Black Square",
    "url": "https://codeforces.com/problemset/problem/431/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "430B. Balls Game",
    "url": "https://codeforces.com/problemset/problem/430/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "430A. Points and Segments (easy)",
    "url": "https://codeforces.com/problemset/problem/430/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "429E. Points and Segments",
    "url": "https://codeforces.com/problemset/problem/429/E",
    "difficulty": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "429D. Tricky Function",
    "url": "https://codeforces.com/problemset/problem/429/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "429C. Guess the Tree",
    "url": "https://codeforces.com/problemset/problem/429/C",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "429B. Working out",
    "url": "https://codeforces.com/problemset/problem/429/B",
    "difficulty": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "429A. Xor-tree",
    "url": "https://codeforces.com/problemset/problem/429/A",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "427E. Police Patrol",
    "url": "https://codeforces.com/problemset/problem/427/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "427D. Match & Catch",
    "url": "https://codeforces.com/problemset/problem/427/D",
    "difficulty": 2200,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "427C. Checkposts",
    "url": "https://codeforces.com/problemset/problem/427/C",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "427B. Prison Transfer",
    "url": "https://codeforces.com/problemset/problem/427/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "427A. Police Recruits",
    "url": "https://codeforces.com/problemset/problem/427/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "426B. Sereja and Mirroring",
    "url": "https://codeforces.com/problemset/problem/426/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "426A. Sereja and Mugs",
    "url": "https://codeforces.com/problemset/problem/426/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "425E. Sereja and Sets",
    "url": "https://codeforces.com/problemset/problem/425/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "425D. Sereja and Squares",
    "url": "https://codeforces.com/problemset/problem/425/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "425C. Sereja and Two Sequences",
    "url": "https://codeforces.com/problemset/problem/425/C",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "425B. Sereja and Table ",
    "url": "https://codeforces.com/problemset/problem/425/B",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "425A. Sereja and Swaps",
    "url": "https://codeforces.com/problemset/problem/425/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "424E. Colored Jenga",
    "url": "https://codeforces.com/problemset/problem/424/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "424D. Biathlon Track",
    "url": "https://codeforces.com/problemset/problem/424/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "424C. Magic Formulas",
    "url": "https://codeforces.com/problemset/problem/424/C",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "424B. Megacity",
    "url": "https://codeforces.com/problemset/problem/424/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "424A. Squats",
    "url": "https://codeforces.com/problemset/problem/424/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "421D. Bug in Code",
    "url": "https://codeforces.com/problemset/problem/421/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "421A. Pasha and Hamsters",
    "url": "https://codeforces.com/problemset/problem/421/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "420E. Playing the ball",
    "url": "https://codeforces.com/problemset/problem/420/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "420D. Cup Trick",
    "url": "https://codeforces.com/problemset/problem/420/D",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "420C. Bug in Code",
    "url": "https://codeforces.com/problemset/problem/420/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "420B. Online Meeting",
    "url": "https://codeforces.com/problemset/problem/420/B",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "420A. Start Up",
    "url": "https://codeforces.com/problemset/problem/420/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "418E. Tricky Password",
    "url": "https://codeforces.com/problemset/problem/418/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "418D. Big Problems for Organizers",
    "url": "https://codeforces.com/problemset/problem/418/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "417E. Square Table",
    "url": "https://codeforces.com/problemset/problem/417/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "417D. Cunning Gena",
    "url": "https://codeforces.com/problemset/problem/417/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "417C. Football",
    "url": "https://codeforces.com/problemset/problem/417/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "417B. Crash",
    "url": "https://codeforces.com/problemset/problem/417/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "417A. Elimination",
    "url": "https://codeforces.com/problemset/problem/417/A",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "416E. President's Path",
    "url": "https://codeforces.com/problemset/problem/416/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "416D. Population Size",
    "url": "https://codeforces.com/problemset/problem/416/D",
    "difficulty": 2400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "416C. Booking System",
    "url": "https://codeforces.com/problemset/problem/416/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "416B. Art Union",
    "url": "https://codeforces.com/problemset/problem/416/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "416A. Guess a number!",
    "url": "https://codeforces.com/problemset/problem/416/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "415B. Mashmokh and Tokens",
    "url": "https://codeforces.com/problemset/problem/415/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "415A. Mashmokh and Lights",
    "url": "https://codeforces.com/problemset/problem/415/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "414E. Mashmokh's Designed Problem",
    "url": "https://codeforces.com/problemset/problem/414/E",
    "difficulty": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "414D. Mashmokh and Water Tanks",
    "url": "https://codeforces.com/problemset/problem/414/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "414C. Mashmokh and Reverse Operation",
    "url": "https://codeforces.com/problemset/problem/414/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "414B. Mashmokh and ACM",
    "url": "https://codeforces.com/problemset/problem/414/B",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "414A. Mashmokh and Numbers",
    "url": "https://codeforces.com/problemset/problem/414/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "413E. Maze 2D",
    "url": "https://codeforces.com/problemset/problem/413/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "413D. 2048",
    "url": "https://codeforces.com/problemset/problem/413/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "413C. Jeopardy!",
    "url": "https://codeforces.com/problemset/problem/413/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "413B. Spyke Chatting",
    "url": "https://codeforces.com/problemset/problem/413/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "413A. Data Recovery",
    "url": "https://codeforces.com/problemset/problem/413/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "412E. E-mail Addresses",
    "url": "https://codeforces.com/problemset/problem/412/E",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "412D. Giving Awards",
    "url": "https://codeforces.com/problemset/problem/412/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "412C. Pattern",
    "url": "https://codeforces.com/problemset/problem/412/C",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "412B. Network Configuration",
    "url": "https://codeforces.com/problemset/problem/412/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "412A. Poster",
    "url": "https://codeforces.com/problemset/problem/412/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "411C. Kicker",
    "url": "https://codeforces.com/problemset/problem/411/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "411B. Multi-core Processor",
    "url": "https://codeforces.com/problemset/problem/411/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "411A. Password Check",
    "url": "https://codeforces.com/problemset/problem/411/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409I. Feed the Golorp",
    "url": "https://codeforces.com/problemset/problem/409/I",
    "difficulty": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409H. A + B Strikes Back",
    "url": "https://codeforces.com/problemset/problem/409/H",
    "difficulty": 1500,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409G. On a plane",
    "url": "https://codeforces.com/problemset/problem/409/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409F. 000001",
    "url": "https://codeforces.com/problemset/problem/409/F",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409E. Dome",
    "url": "https://codeforces.com/problemset/problem/409/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409D. Big Data",
    "url": "https://codeforces.com/problemset/problem/409/D",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409C. Magnum Opus",
    "url": "https://codeforces.com/problemset/problem/409/C",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409B. Mysterious Language",
    "url": "https://codeforces.com/problemset/problem/409/B",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "409A. The Great Game",
    "url": "https://codeforces.com/problemset/problem/409/A",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "408B. Garland",
    "url": "https://codeforces.com/problemset/problem/408/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "408A. Line to Cashier",
    "url": "https://codeforces.com/problemset/problem/408/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "407E. k-d-sequence",
    "url": "https://codeforces.com/problemset/problem/407/E",
    "difficulty": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "407D. Largest Submatrix 3",
    "url": "https://codeforces.com/problemset/problem/407/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "407C. Curious Array",
    "url": "https://codeforces.com/problemset/problem/407/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "407B. Long Path",
    "url": "https://codeforces.com/problemset/problem/407/B",
    "difficulty": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "407A. Triangle",
    "url": "https://codeforces.com/problemset/problem/407/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "406E. Hamming Triples",
    "url": "https://codeforces.com/problemset/problem/406/E",
    "difficulty": 2800,
    "tags": [
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "406D. Hill Climbing",
    "url": "https://codeforces.com/problemset/problem/406/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "geometry",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "405E. Graph Cutting",
    "url": "https://codeforces.com/problemset/problem/405/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "405D. Toy Sum",
    "url": "https://codeforces.com/problemset/problem/405/D",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "405C. Unusual Product",
    "url": "https://codeforces.com/problemset/problem/405/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "405B. Domino Effect",
    "url": "https://codeforces.com/problemset/problem/405/B",
    "difficulty": 1100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "405A. Gravity Flip",
    "url": "https://codeforces.com/problemset/problem/405/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "404E. Maze 1D",
    "url": "https://codeforces.com/problemset/problem/404/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "404D. Minesweeper 1D",
    "url": "https://codeforces.com/problemset/problem/404/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "404C. Restore Graph",
    "url": "https://codeforces.com/problemset/problem/404/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "404B. Marathon",
    "url": "https://codeforces.com/problemset/problem/404/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "404A. Valera and X",
    "url": "https://codeforces.com/problemset/problem/404/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "403E. Two Rooted Trees",
    "url": "https://codeforces.com/problemset/problem/403/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "403D. Beautiful Pairs of Numbers",
    "url": "https://codeforces.com/problemset/problem/403/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "402E. Strictly Positive Matrix",
    "url": "https://codeforces.com/problemset/problem/402/E",
    "difficulty": 2200,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "402D. Upgrading Array",
    "url": "https://codeforces.com/problemset/problem/402/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "402C. Searching for Graph",
    "url": "https://codeforces.com/problemset/problem/402/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "402B. Trees in a Row",
    "url": "https://codeforces.com/problemset/problem/402/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "402A. Nuts",
    "url": "https://codeforces.com/problemset/problem/402/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "401E. Olympic Games",
    "url": "https://codeforces.com/problemset/problem/401/E",
    "difficulty": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "401D. Roman and Numbers",
    "url": "https://codeforces.com/problemset/problem/401/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "401C. Team",
    "url": "https://codeforces.com/problemset/problem/401/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "401B. Sereja and Contests",
    "url": "https://codeforces.com/problemset/problem/401/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "401A. Vanya and Cards",
    "url": "https://codeforces.com/problemset/problem/401/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "400E. Inna and Binary Logic",
    "url": "https://codeforces.com/problemset/problem/400/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "400D. Dima and Bacteria",
    "url": "https://codeforces.com/problemset/problem/400/D",
    "difficulty": 2000,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "400C. Inna and Huge Candy Matrix",
    "url": "https://codeforces.com/problemset/problem/400/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "400B. Inna and New Matrix of Candies",
    "url": "https://codeforces.com/problemset/problem/400/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "400A. Inna and Choose Options",
    "url": "https://codeforces.com/problemset/problem/400/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "399B. Red and Blue Balls",
    "url": "https://codeforces.com/problemset/problem/399/B",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "399A. Pages",
    "url": "https://codeforces.com/problemset/problem/399/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "398E. Sorting Permutations",
    "url": "https://codeforces.com/problemset/problem/398/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "398D. Instant Messanger",
    "url": "https://codeforces.com/problemset/problem/398/D",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "398C. Tree and Array",
    "url": "https://codeforces.com/problemset/problem/398/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "398B. Painting The Wall",
    "url": "https://codeforces.com/problemset/problem/398/B",
    "difficulty": "N/A",
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "398A. Cards",
    "url": "https://codeforces.com/problemset/problem/398/A",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "397B. On Corruption and Numbers",
    "url": "https://codeforces.com/problemset/problem/397/B",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "397A. On Segment's Own Points",
    "url": "https://codeforces.com/problemset/problem/397/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "396E. On Iteration of One Well-Known Function",
    "url": "https://codeforces.com/problemset/problem/396/E",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "396D. On Sum of Number of Inversions in Permutations",
    "url": "https://codeforces.com/problemset/problem/396/D",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "396C. On Changing Tree",
    "url": "https://codeforces.com/problemset/problem/396/C",
    "difficulty": "N/A",
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "396B. On Sum of Fractions",
    "url": "https://codeforces.com/problemset/problem/396/B",
    "difficulty": "N/A",
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "396A. On Number of Decompositions into Multipliers",
    "url": "https://codeforces.com/problemset/problem/396/A",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "394E. Lightbulb for Minister",
    "url": "https://codeforces.com/problemset/problem/394/E",
    "difficulty": "N/A",
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "394D. Physical Education and Buns",
    "url": "https://codeforces.com/problemset/problem/394/D",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "394C. Dominoes",
    "url": "https://codeforces.com/problemset/problem/394/C",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "394B. Very Beautiful Number",
    "url": "https://codeforces.com/problemset/problem/394/B",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "394A. Counting Sticks",
    "url": "https://codeforces.com/problemset/problem/394/A",
    "difficulty": "N/A",
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "393B. Three matrices",
    "url": "https://codeforces.com/problemset/problem/393/B",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "393A. Nineteen",
    "url": "https://codeforces.com/problemset/problem/393/A",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "392E. Deleting Substrings",
    "url": "https://codeforces.com/problemset/problem/392/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "392D. Three Arrays",
    "url": "https://codeforces.com/problemset/problem/392/D",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "392C. Yet Another Number Sequence",
    "url": "https://codeforces.com/problemset/problem/392/C",
    "difficulty": "N/A",
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "392B. Tower of Hanoi",
    "url": "https://codeforces.com/problemset/problem/392/B",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "392A. Blocked Points",
    "url": "https://codeforces.com/problemset/problem/392/A",
    "difficulty": "N/A",
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391F3. Stock Trading",
    "url": "https://codeforces.com/problemset/problem/391/F3",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "391F2. Stock Trading",
    "url": "https://codeforces.com/problemset/problem/391/F2",
    "difficulty": "N/A",
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391F1. Stock Trading",
    "url": "https://codeforces.com/problemset/problem/391/F1",
    "difficulty": "N/A",
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391E2. Three Trees",
    "url": "https://codeforces.com/problemset/problem/391/E2",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "391E1. Three Trees",
    "url": "https://codeforces.com/problemset/problem/391/E1",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "391D2. Supercollider",
    "url": "https://codeforces.com/problemset/problem/391/D2",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391D1. Supercollider",
    "url": "https://codeforces.com/problemset/problem/391/D1",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391C3. The Tournament",
    "url": "https://codeforces.com/problemset/problem/391/C3",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "391C2. The Tournament",
    "url": "https://codeforces.com/problemset/problem/391/C2",
    "difficulty": "N/A",
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391C1. The Tournament",
    "url": "https://codeforces.com/problemset/problem/391/C1",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391B. Word Folding",
    "url": "https://codeforces.com/problemset/problem/391/B",
    "difficulty": "N/A",
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "391A. Genetic Engineering",
    "url": "https://codeforces.com/problemset/problem/391/A",
    "difficulty": "N/A",
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "390E. Inna and Large Sweet Matrix",
    "url": "https://codeforces.com/problemset/problem/390/E",
    "difficulty": "N/A",
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "390D. Inna and Sweet Matrix",
    "url": "https://codeforces.com/problemset/problem/390/D",
    "difficulty": "N/A",
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "390C. Inna and Candy Boxes",
    "url": "https://codeforces.com/problemset/problem/390/C",
    "difficulty": "N/A",
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "390B. Inna, Dima and Song",
    "url": "https://codeforces.com/problemset/problem/390/B",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "390A. Inna and Alarm Clock",
    "url": "https://codeforces.com/problemset/problem/390/A",
    "difficulty": "N/A",
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "389B. Fox and Cross",
    "url": "https://codeforces.com/problemset/problem/389/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "389A. Fox and Number Game",
    "url": "https://codeforces.com/problemset/problem/389/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "388E. Fox and Meteor Shower",
    "url": "https://codeforces.com/problemset/problem/388/E",
    "difficulty": 3100,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "388D. Fox and Perfect Sets",
    "url": "https://codeforces.com/problemset/problem/388/D",
    "difficulty": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "388C. Fox and Card Game",
    "url": "https://codeforces.com/problemset/problem/388/C",
    "difficulty": 2000,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "388B. Fox and Minimal path",
    "url": "https://codeforces.com/problemset/problem/388/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "388A. Fox and Box Accumulation",
    "url": "https://codeforces.com/problemset/problem/388/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "387E. George and Cards",
    "url": "https://codeforces.com/problemset/problem/387/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "387D. George and Interesting Graph",
    "url": "https://codeforces.com/problemset/problem/387/D",
    "difficulty": 2200,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "387C. George and Number",
    "url": "https://codeforces.com/problemset/problem/387/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "387B. George and Round",
    "url": "https://codeforces.com/problemset/problem/387/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "387A. George and Sleep",
    "url": "https://codeforces.com/problemset/problem/387/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "386D. Game with Points",
    "url": "https://codeforces.com/problemset/problem/386/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "386C. Diverse Substrings",
    "url": "https://codeforces.com/problemset/problem/386/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "386B. Fly, freebies, fly!",
    "url": "https://codeforces.com/problemset/problem/386/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "386A. Second-Price Auction",
    "url": "https://codeforces.com/problemset/problem/386/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "385E. Bear in the Field",
    "url": "https://codeforces.com/problemset/problem/385/E",
    "difficulty": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "385D. Bear and Floodlight",
    "url": "https://codeforces.com/problemset/problem/385/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "385C. Bear and Prime Numbers",
    "url": "https://codeforces.com/problemset/problem/385/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "385B. Bear and Strings",
    "url": "https://codeforces.com/problemset/problem/385/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "385A. Bear and Raspberry",
    "url": "https://codeforces.com/problemset/problem/385/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "384B. Multitasking",
    "url": "https://codeforces.com/problemset/problem/384/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "384A. Coder",
    "url": "https://codeforces.com/problemset/problem/384/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "383E. Vowels",
    "url": "https://codeforces.com/problemset/problem/383/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "383D. Antimatter",
    "url": "https://codeforces.com/problemset/problem/383/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "383C. Propagating tree",
    "url": "https://codeforces.com/problemset/problem/383/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "383B. Volcanoes",
    "url": "https://codeforces.com/problemset/problem/383/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "383A. Milking cows",
    "url": "https://codeforces.com/problemset/problem/383/A",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "382E. Ksenia and Combinatorics",
    "url": "https://codeforces.com/problemset/problem/382/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "382D. Ksenia and Pawns",
    "url": "https://codeforces.com/problemset/problem/382/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "382C. Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/382/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "382B. Number Busters",
    "url": "https://codeforces.com/problemset/problem/382/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "382A. Ksenia and Pan Scales",
    "url": "https://codeforces.com/problemset/problem/382/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "381B. Sereja and Stairs",
    "url": "https://codeforces.com/problemset/problem/381/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "381A. Sereja and Dima",
    "url": "https://codeforces.com/problemset/problem/381/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "380E. Sereja and Dividing",
    "url": "https://codeforces.com/problemset/problem/380/E",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "380D. Sereja and Cinema",
    "url": "https://codeforces.com/problemset/problem/380/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "380C. Sereja and Brackets",
    "url": "https://codeforces.com/problemset/problem/380/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "380B. Sereja and Tree",
    "url": "https://codeforces.com/problemset/problem/380/B",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "380A. Sereja and Prefixes",
    "url": "https://codeforces.com/problemset/problem/380/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379G. New Year Cactus",
    "url": "https://codeforces.com/problemset/problem/379/G",
    "difficulty": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379F. New Year Tree",
    "url": "https://codeforces.com/problemset/problem/379/F",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379E. New Year Tree Decorations",
    "url": "https://codeforces.com/problemset/problem/379/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "schedules",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379D. New Year Letter",
    "url": "https://codeforces.com/problemset/problem/379/D",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379C. New Year Ratings Change",
    "url": "https://codeforces.com/problemset/problem/379/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379B. New Year Present",
    "url": "https://codeforces.com/problemset/problem/379/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "379A. New Year Candles",
    "url": "https://codeforces.com/problemset/problem/379/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "378B. Semifinals",
    "url": "https://codeforces.com/problemset/problem/378/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "378A. Playing with Dice",
    "url": "https://codeforces.com/problemset/problem/378/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "377E. Cookie Clicker",
    "url": "https://codeforces.com/problemset/problem/377/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "377D. Developing Game",
    "url": "https://codeforces.com/problemset/problem/377/D",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "377C. Captains Mode",
    "url": "https://codeforces.com/problemset/problem/377/C",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "377B. Preparing for the Contest",
    "url": "https://codeforces.com/problemset/problem/377/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "377A. Maze",
    "url": "https://codeforces.com/problemset/problem/377/A",
    "difficulty": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "376B. I.O.U.",
    "url": "https://codeforces.com/problemset/problem/376/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "376A. Lever",
    "url": "https://codeforces.com/problemset/problem/376/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "375E. Red and Black Tree",
    "url": "https://codeforces.com/problemset/problem/375/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "375D. Tree and Queries",
    "url": "https://codeforces.com/problemset/problem/375/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "375C. Circling Round Treasures",
    "url": "https://codeforces.com/problemset/problem/375/C",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "375B. Maximum Submatrix 2",
    "url": "https://codeforces.com/problemset/problem/375/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "375A. Divisible by Seven",
    "url": "https://codeforces.com/problemset/problem/375/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "374E. Inna and Babies",
    "url": "https://codeforces.com/problemset/problem/374/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "374D. Inna and Sequence ",
    "url": "https://codeforces.com/problemset/problem/374/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "374C. Inna and Dima",
    "url": "https://codeforces.com/problemset/problem/374/C",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "374B. Inna and Nine",
    "url": "https://codeforces.com/problemset/problem/374/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "374A. Inna and Pink Pony",
    "url": "https://codeforces.com/problemset/problem/374/A",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "373B. Making Sequences is Fun",
    "url": "https://codeforces.com/problemset/problem/373/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "373A. Collecting Beats is Fun",
    "url": "https://codeforces.com/problemset/problem/373/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "372E. Drawing Circles is Fun",
    "url": "https://codeforces.com/problemset/problem/372/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "372D. Choosing Subtree is Fun",
    "url": "https://codeforces.com/problemset/problem/372/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "372C. Watching Fireworks is Fun",
    "url": "https://codeforces.com/problemset/problem/372/C",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "372B. Counting Rectangles is Fun",
    "url": "https://codeforces.com/problemset/problem/372/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "372A. Counting Kangaroos is Fun",
    "url": "https://codeforces.com/problemset/problem/372/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "371E. Subway Innovation",
    "url": "https://codeforces.com/problemset/problem/371/E",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "371D. Vessels",
    "url": "https://codeforces.com/problemset/problem/371/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "371C. Hamburgers",
    "url": "https://codeforces.com/problemset/problem/371/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "371B. Fox Dividing Cheese",
    "url": "https://codeforces.com/problemset/problem/371/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "371A. K-Periodic Array",
    "url": "https://codeforces.com/problemset/problem/371/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "370E. Summer Reading",
    "url": "https://codeforces.com/problemset/problem/370/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "370D. Broken Monitor",
    "url": "https://codeforces.com/problemset/problem/370/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "370C. Mittens",
    "url": "https://codeforces.com/problemset/problem/370/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "370B. Berland Bingo",
    "url": "https://codeforces.com/problemset/problem/370/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "370A. Rook, Bishop and King",
    "url": "https://codeforces.com/problemset/problem/370/A",
    "difficulty": 1100,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "369E. Valera and Queries",
    "url": "https://codeforces.com/problemset/problem/369/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "369D. Valera and Fools",
    "url": "https://codeforces.com/problemset/problem/369/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "369C. Valera and Elections",
    "url": "https://codeforces.com/problemset/problem/369/C",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "369B. Valera and Contest",
    "url": "https://codeforces.com/problemset/problem/369/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "369A. Valera and Plates",
    "url": "https://codeforces.com/problemset/problem/369/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "368B. Sereja and Suffixes",
    "url": "https://codeforces.com/problemset/problem/368/B",
    "difficulty": 1100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "368A. Sereja and Coat Rack",
    "url": "https://codeforces.com/problemset/problem/368/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "367E. Sereja and Intervals",
    "url": "https://codeforces.com/problemset/problem/367/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "367D. Sereja and Sets",
    "url": "https://codeforces.com/problemset/problem/367/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "367C. Sereja and the Arrangement of Numbers",
    "url": "https://codeforces.com/problemset/problem/367/C",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "367B. Sereja ans Anagrams",
    "url": "https://codeforces.com/problemset/problem/367/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "367A. Sereja and Algorithm ",
    "url": "https://codeforces.com/problemset/problem/367/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "366E. Dima and Magic Guitar",
    "url": "https://codeforces.com/problemset/problem/366/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "366D. Dima and Trap Graph",
    "url": "https://codeforces.com/problemset/problem/366/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "366C. Dima and Salad",
    "url": "https://codeforces.com/problemset/problem/366/C",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "366B. Dima and To-do List",
    "url": "https://codeforces.com/problemset/problem/366/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "366A. Dima and Guards",
    "url": "https://codeforces.com/problemset/problem/366/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "365B. The Fibonacci Segment",
    "url": "https://codeforces.com/problemset/problem/365/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "365A. Good Number",
    "url": "https://codeforces.com/problemset/problem/365/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "364E. Empty Rectangles",
    "url": "https://codeforces.com/problemset/problem/364/E",
    "difficulty": 3000,
    "tags": [
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "364D. Ghd",
    "url": "https://codeforces.com/problemset/problem/364/D",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "364C. Beautiful Set",
    "url": "https://codeforces.com/problemset/problem/364/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "364B. Free Market",
    "url": "https://codeforces.com/problemset/problem/364/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "364A. Matrix",
    "url": "https://codeforces.com/problemset/problem/364/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "363E. Two Circles",
    "url": "https://codeforces.com/problemset/problem/363/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "363D. Renting Bikes",
    "url": "https://codeforces.com/problemset/problem/363/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "363C. Fixing Typos",
    "url": "https://codeforces.com/problemset/problem/363/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "363B. Fence",
    "url": "https://codeforces.com/problemset/problem/363/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "363A. Soroban",
    "url": "https://codeforces.com/problemset/problem/363/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "362E. Petya and Pipes",
    "url": "https://codeforces.com/problemset/problem/362/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "362D. Fools and Foolproof Roads",
    "url": "https://codeforces.com/problemset/problem/362/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "362C. Insertion Sort",
    "url": "https://codeforces.com/problemset/problem/362/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "362B. Petya and Staircases",
    "url": "https://codeforces.com/problemset/problem/362/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "362A. Two Semiknights Meet",
    "url": "https://codeforces.com/problemset/problem/362/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "361B. Levko and Permutation",
    "url": "https://codeforces.com/problemset/problem/361/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "361A. Levko and Table",
    "url": "https://codeforces.com/problemset/problem/361/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "360E. Levko and Game",
    "url": "https://codeforces.com/problemset/problem/360/E",
    "difficulty": 2800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "360D. Levko and Sets",
    "url": "https://codeforces.com/problemset/problem/360/D",
    "difficulty": 2600,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "360C. Levko and Strings",
    "url": "https://codeforces.com/problemset/problem/360/C",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "360B. Levko and Array",
    "url": "https://codeforces.com/problemset/problem/360/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "360A. Levko and Array Recovery",
    "url": "https://codeforces.com/problemset/problem/360/A",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "359E. Neatness",
    "url": "https://codeforces.com/problemset/problem/359/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "359D. Pair of Numbers",
    "url": "https://codeforces.com/problemset/problem/359/D",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "359C. Prime Number",
    "url": "https://codeforces.com/problemset/problem/359/C",
    "difficulty": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "359B. Permutation",
    "url": "https://codeforces.com/problemset/problem/359/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "359A. Table",
    "url": "https://codeforces.com/problemset/problem/359/A",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "358E. Dima and Kicks",
    "url": "https://codeforces.com/problemset/problem/358/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "358D. Dima and Hares",
    "url": "https://codeforces.com/problemset/problem/358/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "358C. Dima and Containers",
    "url": "https://codeforces.com/problemset/problem/358/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "358B. Dima and Text Messages",
    "url": "https://codeforces.com/problemset/problem/358/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "358A. Dima and Continuous Line",
    "url": "https://codeforces.com/problemset/problem/358/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "357B. Flag Day",
    "url": "https://codeforces.com/problemset/problem/357/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "357A. Group of Students",
    "url": "https://codeforces.com/problemset/problem/357/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "356E. Xenia and String Problem",
    "url": "https://codeforces.com/problemset/problem/356/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "356D. Bags and Coins",
    "url": "https://codeforces.com/problemset/problem/356/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "356C. Compartments",
    "url": "https://codeforces.com/problemset/problem/356/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "356B. Xenia and Hamming",
    "url": "https://codeforces.com/problemset/problem/356/B",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "356A. Knight Tournament",
    "url": "https://codeforces.com/problemset/problem/356/A",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "355B. Vasya and Public Transport",
    "url": "https://codeforces.com/problemset/problem/355/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "355A. Vasya and Digital Root",
    "url": "https://codeforces.com/problemset/problem/355/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "354E. Lucky Number Representation",
    "url": "https://codeforces.com/problemset/problem/354/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "354D. Transferring Pyramid",
    "url": "https://codeforces.com/problemset/problem/354/D",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "354C. Vasya and Beautiful Arrays",
    "url": "https://codeforces.com/problemset/problem/354/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "354B. Game with Strings",
    "url": "https://codeforces.com/problemset/problem/354/B",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "354A. Vasya and Robot",
    "url": "https://codeforces.com/problemset/problem/354/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "353E. Antichain",
    "url": "https://codeforces.com/problemset/problem/353/E",
    "difficulty": 2200,
    "tags": [
      "dp",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "353D. Queue",
    "url": "https://codeforces.com/problemset/problem/353/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "353C. Find Maximum",
    "url": "https://codeforces.com/problemset/problem/353/C",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "353B. Two Heaps",
    "url": "https://codeforces.com/problemset/problem/353/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "353A. Domino",
    "url": "https://codeforces.com/problemset/problem/353/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "352B. Jeff and Periods",
    "url": "https://codeforces.com/problemset/problem/352/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "352A. Jeff and Digits",
    "url": "https://codeforces.com/problemset/problem/352/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "351E. Jeff and Permutation",
    "url": "https://codeforces.com/problemset/problem/351/E",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "351D. Jeff and Removing Periods",
    "url": "https://codeforces.com/problemset/problem/351/D",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "351C. Jeff and Brackets",
    "url": "https://codeforces.com/problemset/problem/351/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "351B. Jeff and Furik",
    "url": "https://codeforces.com/problemset/problem/351/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "351A. Jeff and Rounding",
    "url": "https://codeforces.com/problemset/problem/351/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "350E. Wrong Floyd",
    "url": "https://codeforces.com/problemset/problem/350/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "350D. Looking for Owls",
    "url": "https://codeforces.com/problemset/problem/350/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "hashing",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "350C. Bombs",
    "url": "https://codeforces.com/problemset/problem/350/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "350B. Resort",
    "url": "https://codeforces.com/problemset/problem/350/B",
    "difficulty": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "350A. TL",
    "url": "https://codeforces.com/problemset/problem/350/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "349B. Color the Fence",
    "url": "https://codeforces.com/problemset/problem/349/B",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "349A. Cinema Line",
    "url": "https://codeforces.com/problemset/problem/349/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "348E. Pilgrims",
    "url": "https://codeforces.com/problemset/problem/348/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "348D. Turtles",
    "url": "https://codeforces.com/problemset/problem/348/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "348C. Subset Sums",
    "url": "https://codeforces.com/problemset/problem/348/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "348B. Apple Tree",
    "url": "https://codeforces.com/problemset/problem/348/B",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "348A. Mafia",
    "url": "https://codeforces.com/problemset/problem/348/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "347B. Fixed Points",
    "url": "https://codeforces.com/problemset/problem/347/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "347A. Difference Row",
    "url": "https://codeforces.com/problemset/problem/347/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "346E. Doodle Jump",
    "url": "https://codeforces.com/problemset/problem/346/E",
    "difficulty": 3000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "346D. Robot Control",
    "url": "https://codeforces.com/problemset/problem/346/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "346C. Number Transformation II",
    "url": "https://codeforces.com/problemset/problem/346/C",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "346B. Lucky Common Subsequence",
    "url": "https://codeforces.com/problemset/problem/346/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "346A. Alice and Bob",
    "url": "https://codeforces.com/problemset/problem/346/A",
    "difficulty": 1600,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345G. Suffix Subgroup",
    "url": "https://codeforces.com/problemset/problem/345/G",
    "difficulty": 2200,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345F. Superstitions Inspection",
    "url": "https://codeforces.com/problemset/problem/345/F",
    "difficulty": 2700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345E. Black Cat Rush",
    "url": "https://codeforces.com/problemset/problem/345/E",
    "difficulty": 2700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345D. Chain Letter",
    "url": "https://codeforces.com/problemset/problem/345/D",
    "difficulty": 2200,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345C. Counting Fridays",
    "url": "https://codeforces.com/problemset/problem/345/C",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345B. Triskaidekaphobia",
    "url": "https://codeforces.com/problemset/problem/345/B",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "345A. Expecting Trouble",
    "url": "https://codeforces.com/problemset/problem/345/A",
    "difficulty": 1500,
    "tags": [
      "*special",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "344B. Simple Molecules",
    "url": "https://codeforces.com/problemset/problem/344/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "344A. Magnets",
    "url": "https://codeforces.com/problemset/problem/344/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "343E. Pumping Stations",
    "url": "https://codeforces.com/problemset/problem/343/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "flows",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "343D. Water Tree",
    "url": "https://codeforces.com/problemset/problem/343/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "343C. Read Time",
    "url": "https://codeforces.com/problemset/problem/343/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "343B. Alternating Current",
    "url": "https://codeforces.com/problemset/problem/343/B",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "343A. Rational Resistance",
    "url": "https://codeforces.com/problemset/problem/343/A",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "342E. Xenia and Tree",
    "url": "https://codeforces.com/problemset/problem/342/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "342D. Xenia and Dominoes",
    "url": "https://codeforces.com/problemset/problem/342/D",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "342C. Cupboard and Balloons",
    "url": "https://codeforces.com/problemset/problem/342/C",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "342B. Xenia and Spies",
    "url": "https://codeforces.com/problemset/problem/342/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "342A. Xenia and Divisors",
    "url": "https://codeforces.com/problemset/problem/342/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "341E. Candies Game",
    "url": "https://codeforces.com/problemset/problem/341/E",
    "difficulty": 3000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "341D. Iahub and Xors",
    "url": "https://codeforces.com/problemset/problem/341/D",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "340E. Iahub and Permutations",
    "url": "https://codeforces.com/problemset/problem/340/E",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "340D. Bubble Sort Graph",
    "url": "https://codeforces.com/problemset/problem/340/D",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "340C. Tourist Problem",
    "url": "https://codeforces.com/problemset/problem/340/C",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "340B. Maximal Area Quadrilateral",
    "url": "https://codeforces.com/problemset/problem/340/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "340A. The Wall",
    "url": "https://codeforces.com/problemset/problem/340/A",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "339E. Three Swaps",
    "url": "https://codeforces.com/problemset/problem/339/E",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "339D. Xenia and Bit Operations",
    "url": "https://codeforces.com/problemset/problem/339/D",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "339C. Xenia and Weights",
    "url": "https://codeforces.com/problemset/problem/339/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "339B. Xenia and Ringroad",
    "url": "https://codeforces.com/problemset/problem/339/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "339A. Helpful Maths",
    "url": "https://codeforces.com/problemset/problem/339/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "338E. Optimize!",
    "url": "https://codeforces.com/problemset/problem/338/E",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "338D. GCD Table",
    "url": "https://codeforces.com/problemset/problem/338/D",
    "difficulty": 2900,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "337E. Divisor Tree",
    "url": "https://codeforces.com/problemset/problem/337/E",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "number theory",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "337D. Book of Evil",
    "url": "https://codeforces.com/problemset/problem/337/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "337C. Quiz",
    "url": "https://codeforces.com/problemset/problem/337/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "337B. Routine Problem",
    "url": "https://codeforces.com/problemset/problem/337/B",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "337A. Puzzles",
    "url": "https://codeforces.com/problemset/problem/337/A",
    "difficulty": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "336E. Vasily the Bear and Painting Square",
    "url": "https://codeforces.com/problemset/problem/336/E",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "336D. Vasily the Bear and Beautiful Strings",
    "url": "https://codeforces.com/problemset/problem/336/D",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "336C. Vasily the Bear and Sequence",
    "url": "https://codeforces.com/problemset/problem/336/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "336B. Vasily the Bear and Fly",
    "url": "https://codeforces.com/problemset/problem/336/B",
    "difficulty": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "336A. Vasily the Bear and Triangle",
    "url": "https://codeforces.com/problemset/problem/336/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335F. Buy One, Get One Free",
    "url": "https://codeforces.com/problemset/problem/335/F",
    "difficulty": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335E. Counting Skyscrapers",
    "url": "https://codeforces.com/problemset/problem/335/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335D. Rectangles and Square",
    "url": "https://codeforces.com/problemset/problem/335/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335C. More Reclamation",
    "url": "https://codeforces.com/problemset/problem/335/C",
    "difficulty": 2100,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335B. Palindrome",
    "url": "https://codeforces.com/problemset/problem/335/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "335A. Banana",
    "url": "https://codeforces.com/problemset/problem/335/A",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "334B. Eight Point Sets",
    "url": "https://codeforces.com/problemset/problem/334/B",
    "difficulty": 1400,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "334A. Candy Bags",
    "url": "https://codeforces.com/problemset/problem/334/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "333E. Summer Earnings",
    "url": "https://codeforces.com/problemset/problem/333/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "333D. Characteristics of Rectangles",
    "url": "https://codeforces.com/problemset/problem/333/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "333C. Lucky Tickets",
    "url": "https://codeforces.com/problemset/problem/333/C",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "333B. Chips",
    "url": "https://codeforces.com/problemset/problem/333/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "333A. Secrets",
    "url": "https://codeforces.com/problemset/problem/333/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "332E. Binary Key",
    "url": "https://codeforces.com/problemset/problem/332/E",
    "difficulty": 2400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "332D. Theft of Blueprints",
    "url": "https://codeforces.com/problemset/problem/332/D",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "332C. Students' Revenge",
    "url": "https://codeforces.com/problemset/problem/332/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "332B. Maximum Absurdity",
    "url": "https://codeforces.com/problemset/problem/332/B",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "332A. Down the Hatch!",
    "url": "https://codeforces.com/problemset/problem/332/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331E2. Deja Vu",
    "url": "https://codeforces.com/problemset/problem/331/E2",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331E1. Deja Vu",
    "url": "https://codeforces.com/problemset/problem/331/E1",
    "difficulty": 2900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331D3. Escaping on Beaveractor",
    "url": "https://codeforces.com/problemset/problem/331/D3",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331D2. Escaping on Beaveractor",
    "url": "https://codeforces.com/problemset/problem/331/D2",
    "difficulty": 2600,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331D1. Escaping on Beaveractor",
    "url": "https://codeforces.com/problemset/problem/331/D1",
    "difficulty": 2400,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331C3. The Great Julya Calendar",
    "url": "https://codeforces.com/problemset/problem/331/C3",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331C2. The Great Julya Calendar",
    "url": "https://codeforces.com/problemset/problem/331/C2",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331C1. The Great Julya Calendar",
    "url": "https://codeforces.com/problemset/problem/331/C1",
    "difficulty": 1100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331B2. Shave Beaver!",
    "url": "https://codeforces.com/problemset/problem/331/B2",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331B1. Shave Beaver!",
    "url": "https://codeforces.com/problemset/problem/331/B1",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331A2. Oh Sweet Beaverette",
    "url": "https://codeforces.com/problemset/problem/331/A2",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "331A1. Oh Sweet Beaverette",
    "url": "https://codeforces.com/problemset/problem/331/A1",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "330B. Road Construction",
    "url": "https://codeforces.com/problemset/problem/330/B",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "330A. Cakeminator",
    "url": "https://codeforces.com/problemset/problem/330/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "329E. Evil",
    "url": "https://codeforces.com/problemset/problem/329/E",
    "difficulty": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "329D. The Evil Temple and the Moving Rocks",
    "url": "https://codeforces.com/problemset/problem/329/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "329C. Graph Reconstruction",
    "url": "https://codeforces.com/problemset/problem/329/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "329B. Biridian Forest",
    "url": "https://codeforces.com/problemset/problem/329/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "329A. Purification",
    "url": "https://codeforces.com/problemset/problem/329/A",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "328B. Sheldon and Ice Pieces",
    "url": "https://codeforces.com/problemset/problem/328/B",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "328A. IQ Test",
    "url": "https://codeforces.com/problemset/problem/328/A",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "327E. Axis Walking",
    "url": "https://codeforces.com/problemset/problem/327/E",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "327D. Block Tower",
    "url": "https://codeforces.com/problemset/problem/327/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "327C. Magic Five",
    "url": "https://codeforces.com/problemset/problem/327/C",
    "difficulty": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "327B. Hungry Sequence",
    "url": "https://codeforces.com/problemset/problem/327/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "327A. Flipping Game",
    "url": "https://codeforces.com/problemset/problem/327/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "325E. The Red Button",
    "url": "https://codeforces.com/problemset/problem/325/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "325D. Reclamation",
    "url": "https://codeforces.com/problemset/problem/325/D",
    "difficulty": 2900,
    "tags": [
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "325C. Monsters and Diamonds",
    "url": "https://codeforces.com/problemset/problem/325/C",
    "difficulty": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "325B. Stadium and Games",
    "url": "https://codeforces.com/problemset/problem/325/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "325A. Square and Rectangles",
    "url": "https://codeforces.com/problemset/problem/325/A",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "323C. Two permutations",
    "url": "https://codeforces.com/problemset/problem/323/C",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "323B. Tournament-graph",
    "url": "https://codeforces.com/problemset/problem/323/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "323A. Black-and-White Cube",
    "url": "https://codeforces.com/problemset/problem/323/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "322B. Ciel and Flowers",
    "url": "https://codeforces.com/problemset/problem/322/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "322A. Ciel and Dancing",
    "url": "https://codeforces.com/problemset/problem/322/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "321E. Ciel and Gondolas",
    "url": "https://codeforces.com/problemset/problem/321/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "321D. Ciel and Flipboard",
    "url": "https://codeforces.com/problemset/problem/321/D",
    "difficulty": 2900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "321C. Ciel the Commander",
    "url": "https://codeforces.com/problemset/problem/321/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "321B. Ciel and Duel",
    "url": "https://codeforces.com/problemset/problem/321/B",
    "difficulty": 1900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "321A. Ciel and Robot",
    "url": "https://codeforces.com/problemset/problem/321/A",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "320B. Ping-Pong (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/320/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "320A. Magic Numbers",
    "url": "https://codeforces.com/problemset/problem/320/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "319E. Ping-Pong",
    "url": "https://codeforces.com/problemset/problem/319/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "319D. Have You Ever Heard About the Word?",
    "url": "https://codeforces.com/problemset/problem/319/D",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "319C. Kalila and Dimna in the Logging Industry",
    "url": "https://codeforces.com/problemset/problem/319/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "319B. Psychos in a Line",
    "url": "https://codeforces.com/problemset/problem/319/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "319A. Malek Dance Club",
    "url": "https://codeforces.com/problemset/problem/319/A",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "318B. Strings of Power",
    "url": "https://codeforces.com/problemset/problem/318/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "318A. Even Odds",
    "url": "https://codeforces.com/problemset/problem/318/A",
    "difficulty": 900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "317E. Princess and Her Shadow",
    "url": "https://codeforces.com/problemset/problem/317/E",
    "difficulty": 3100,
    "tags": [
      "constructive algorithms",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "317D. Game with Powers",
    "url": "https://codeforces.com/problemset/problem/317/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "317C. Balance",
    "url": "https://codeforces.com/problemset/problem/317/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "317B. Ants",
    "url": "https://codeforces.com/problemset/problem/317/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "317A. Perfect Pair",
    "url": "https://codeforces.com/problemset/problem/317/A",
    "difficulty": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316G3. Good Substrings",
    "url": "https://codeforces.com/problemset/problem/316/G3",
    "difficulty": 2400,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316G2. Good Substrings",
    "url": "https://codeforces.com/problemset/problem/316/G2",
    "difficulty": 2200,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316G1. Good Substrings",
    "url": "https://codeforces.com/problemset/problem/316/G1",
    "difficulty": 1700,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316F3. Suns and Rays",
    "url": "https://codeforces.com/problemset/problem/316/F3",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316F2. Suns and Rays",
    "url": "https://codeforces.com/problemset/problem/316/F2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "316F1. Suns and Rays",
    "url": "https://codeforces.com/problemset/problem/316/F1",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316E3. Summer Homework",
    "url": "https://codeforces.com/problemset/problem/316/E3",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316E2. Summer Homework",
    "url": "https://codeforces.com/problemset/problem/316/E2",
    "difficulty": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316E1. Summer Homework",
    "url": "https://codeforces.com/problemset/problem/316/E1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316D3. PE Lesson",
    "url": "https://codeforces.com/problemset/problem/316/D3",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316D2. PE Lesson",
    "url": "https://codeforces.com/problemset/problem/316/D2",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316D1. PE Lesson",
    "url": "https://codeforces.com/problemset/problem/316/D1",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316C2. Tidying Up",
    "url": "https://codeforces.com/problemset/problem/316/C2",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316C1. Tidying Up",
    "url": "https://codeforces.com/problemset/problem/316/C1",
    "difficulty": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316B2. EKG",
    "url": "https://codeforces.com/problemset/problem/316/B2",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316B1. EKG",
    "url": "https://codeforces.com/problemset/problem/316/B1",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316A2. Special Task",
    "url": "https://codeforces.com/problemset/problem/316/A2",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "316A1. Special Task",
    "url": "https://codeforces.com/problemset/problem/316/A1",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "315B. Sereja and Array",
    "url": "https://codeforces.com/problemset/problem/315/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "315A. Sereja and Bottles",
    "url": "https://codeforces.com/problemset/problem/315/A",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "314E. Sereja and Squares",
    "url": "https://codeforces.com/problemset/problem/314/E",
    "difficulty": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "314D. Sereja and Straight Lines",
    "url": "https://codeforces.com/problemset/problem/314/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "314C. Sereja and Subsequences",
    "url": "https://codeforces.com/problemset/problem/314/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "314B. Sereja and Periods",
    "url": "https://codeforces.com/problemset/problem/314/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dfs and similar",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "314A. Sereja and Contest",
    "url": "https://codeforces.com/problemset/problem/314/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "313E. Ilya and Two Numbers",
    "url": "https://codeforces.com/problemset/problem/313/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "313D. Ilya and Roads",
    "url": "https://codeforces.com/problemset/problem/313/D",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "313C. Ilya and Matrix",
    "url": "https://codeforces.com/problemset/problem/313/C",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "313B. Ilya and Queries",
    "url": "https://codeforces.com/problemset/problem/313/B",
    "difficulty": 1100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "313A. Ilya and Bank Account",
    "url": "https://codeforces.com/problemset/problem/313/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "312B. Archer",
    "url": "https://codeforces.com/problemset/problem/312/B",
    "difficulty": 1300,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "312A. Whose sentence is it?",
    "url": "https://codeforces.com/problemset/problem/312/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "311E. Biologist",
    "url": "https://codeforces.com/problemset/problem/311/E",
    "difficulty": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "311D. Interval Cubing",
    "url": "https://codeforces.com/problemset/problem/311/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "311C. Fetch the Treasure",
    "url": "https://codeforces.com/problemset/problem/311/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "311B. Cats Transport",
    "url": "https://codeforces.com/problemset/problem/311/B",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "311A. The Closest Pair",
    "url": "https://codeforces.com/problemset/problem/311/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "309E. Sheep",
    "url": "https://codeforces.com/problemset/problem/309/E",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "309D. Tennis Rackets",
    "url": "https://codeforces.com/problemset/problem/309/D",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "309C. Memory for Arrays",
    "url": "https://codeforces.com/problemset/problem/309/C",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "309B. Context Advertising",
    "url": "https://codeforces.com/problemset/problem/309/B",
    "difficulty": 2100,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "309A. Morning run",
    "url": "https://codeforces.com/problemset/problem/309/A",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "306D. Polygon",
    "url": "https://codeforces.com/problemset/problem/306/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "306C. White, Black and White Again",
    "url": "https://codeforces.com/problemset/problem/306/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "306B. Optimizer",
    "url": "https://codeforces.com/problemset/problem/306/B",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "306A. Candies",
    "url": "https://codeforces.com/problemset/problem/306/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "305E. Playing with String",
    "url": "https://codeforces.com/problemset/problem/305/E",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "305D. Olya and Graph",
    "url": "https://codeforces.com/problemset/problem/305/D",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "305C. Ivan and Powers of Two",
    "url": "https://codeforces.com/problemset/problem/305/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "305B. Continued Fractions",
    "url": "https://codeforces.com/problemset/problem/305/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "305A. Strange Addition",
    "url": "https://codeforces.com/problemset/problem/305/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "304B. Calendar",
    "url": "https://codeforces.com/problemset/problem/304/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "304A. Pythagorean Theorem II",
    "url": "https://codeforces.com/problemset/problem/304/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "303E. Random Ranking",
    "url": "https://codeforces.com/problemset/problem/303/E",
    "difficulty": 3000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "303D. Rotatable Number",
    "url": "https://codeforces.com/problemset/problem/303/D",
    "difficulty": 2600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "303C. Minimum Modular",
    "url": "https://codeforces.com/problemset/problem/303/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "303B. Rectangle Puzzle II",
    "url": "https://codeforces.com/problemset/problem/303/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "303A. Lucky Permutation Triple",
    "url": "https://codeforces.com/problemset/problem/303/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "302B. Eugeny and Play List",
    "url": "https://codeforces.com/problemset/problem/302/B",
    "difficulty": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "302A. Eugeny and Array",
    "url": "https://codeforces.com/problemset/problem/302/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "301E. Yaroslav and Arrangements",
    "url": "https://codeforces.com/problemset/problem/301/E",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "301D. Yaroslav and Divisors",
    "url": "https://codeforces.com/problemset/problem/301/D",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "301C. Yaroslav and Algorithm",
    "url": "https://codeforces.com/problemset/problem/301/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "301B. Yaroslav and Time",
    "url": "https://codeforces.com/problemset/problem/301/B",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "301A. Yaroslav and Sequence",
    "url": "https://codeforces.com/problemset/problem/301/A",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "300E. Empire Strikes Back",
    "url": "https://codeforces.com/problemset/problem/300/E",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "300D. Painting Square",
    "url": "https://codeforces.com/problemset/problem/300/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "fft"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "300C. Beautiful Numbers",
    "url": "https://codeforces.com/problemset/problem/300/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "300B. Coach",
    "url": "https://codeforces.com/problemset/problem/300/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "300A. Array",
    "url": "https://codeforces.com/problemset/problem/300/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "299B. Ksusha the Squirrel",
    "url": "https://codeforces.com/problemset/problem/299/B",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "299A. Ksusha and Array",
    "url": "https://codeforces.com/problemset/problem/299/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "298B. Sail",
    "url": "https://codeforces.com/problemset/problem/298/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "298A. Snow Footprints",
    "url": "https://codeforces.com/problemset/problem/298/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "297E. Mystic Carvings",
    "url": "https://codeforces.com/problemset/problem/297/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "297D. Color the Carpet",
    "url": "https://codeforces.com/problemset/problem/297/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "297C. Splitting the Uniqueness",
    "url": "https://codeforces.com/problemset/problem/297/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "297B. Fish Weight",
    "url": "https://codeforces.com/problemset/problem/297/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "297A. Parity Game",
    "url": "https://codeforces.com/problemset/problem/297/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "296B. Yaroslav and Two Strings",
    "url": "https://codeforces.com/problemset/problem/296/B",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "296A. Yaroslav and Permutations",
    "url": "https://codeforces.com/problemset/problem/296/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "295E. Yaroslav and Points",
    "url": "https://codeforces.com/problemset/problem/295/E",
    "difficulty": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "295D. Greg and Caves",
    "url": "https://codeforces.com/problemset/problem/295/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "295C. Greg and Friends",
    "url": "https://codeforces.com/problemset/problem/295/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "295B. Greg and Graph",
    "url": "https://codeforces.com/problemset/problem/295/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "295A. Greg and Array",
    "url": "https://codeforces.com/problemset/problem/295/A",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "294E. Shaass the Great",
    "url": "https://codeforces.com/problemset/problem/294/E",
    "difficulty": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "294D. Shaass and Painter Robot",
    "url": "https://codeforces.com/problemset/problem/294/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "294C. Shaass and Lights",
    "url": "https://codeforces.com/problemset/problem/294/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "294B. Shaass and Bookshelf",
    "url": "https://codeforces.com/problemset/problem/294/B",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "294A. Shaass and Oskols",
    "url": "https://codeforces.com/problemset/problem/294/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "293E. Close Vertices",
    "url": "https://codeforces.com/problemset/problem/293/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "293D. Ksusha and Square",
    "url": "https://codeforces.com/problemset/problem/293/D",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "293C. Cube Problem",
    "url": "https://codeforces.com/problemset/problem/293/C",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "293B. Distinct Paths",
    "url": "https://codeforces.com/problemset/problem/293/B",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "293A. Weird Game",
    "url": "https://codeforces.com/problemset/problem/293/A",
    "difficulty": 1500,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "292E. Copying Data",
    "url": "https://codeforces.com/problemset/problem/292/E",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "292D. Connected Components",
    "url": "https://codeforces.com/problemset/problem/292/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "292C. Beautiful IP Addresses",
    "url": "https://codeforces.com/problemset/problem/292/C",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "292B. Network Topology",
    "url": "https://codeforces.com/problemset/problem/292/B",
    "difficulty": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "292A. SMSC",
    "url": "https://codeforces.com/problemset/problem/292/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "291E. Tree-String Problem",
    "url": "https://codeforces.com/problemset/problem/291/E",
    "difficulty": 2000,
    "tags": [
      "*special",
      "dfs and similar",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "291D. Parallel Programming",
    "url": "https://codeforces.com/problemset/problem/291/D",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "291C. Network Mask",
    "url": "https://codeforces.com/problemset/problem/291/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "291B. Command Line Arguments",
    "url": "https://codeforces.com/problemset/problem/291/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "291A. Spyke Talks",
    "url": "https://codeforces.com/problemset/problem/291/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290F. Greedy Petya",
    "url": "https://codeforces.com/problemset/problem/290/F",
    "difficulty": 2800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290E. HQ",
    "url": "https://codeforces.com/problemset/problem/290/E",
    "difficulty": 2500,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290D. Orange",
    "url": "https://codeforces.com/problemset/problem/290/D",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290C. WTF?",
    "url": "https://codeforces.com/problemset/problem/290/C",
    "difficulty": 1700,
    "tags": [
      "*special",
      "graph matchings",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290B. QR code",
    "url": "https://codeforces.com/problemset/problem/290/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "290A. Mysterious strings",
    "url": "https://codeforces.com/problemset/problem/290/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "289B. Polo the Penguin and Matrix",
    "url": "https://codeforces.com/problemset/problem/289/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "289A. Polo the Penguin and Segments ",
    "url": "https://codeforces.com/problemset/problem/289/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "288E. Polo the Penguin and Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/288/E",
    "difficulty": 2800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "288D. Polo the Penguin and Trees ",
    "url": "https://codeforces.com/problemset/problem/288/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "288C. Polo the Penguin and XOR operation",
    "url": "https://codeforces.com/problemset/problem/288/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "288B. Polo the Penguin and Houses ",
    "url": "https://codeforces.com/problemset/problem/288/B",
    "difficulty": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "288A. Polo the Penguin and Strings",
    "url": "https://codeforces.com/problemset/problem/288/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "287B. Pipeline",
    "url": "https://codeforces.com/problemset/problem/287/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "287A. IQ Test",
    "url": "https://codeforces.com/problemset/problem/287/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "286E. Ladies' Shop",
    "url": "https://codeforces.com/problemset/problem/286/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "286D. Tourists",
    "url": "https://codeforces.com/problemset/problem/286/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "286C. Main Sequence",
    "url": "https://codeforces.com/problemset/problem/286/C",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "286B. Shifting",
    "url": "https://codeforces.com/problemset/problem/286/B",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "286A. Lucky Permutation",
    "url": "https://codeforces.com/problemset/problem/286/A",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "285E. Positions in Permutations",
    "url": "https://codeforces.com/problemset/problem/285/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "285D. Permutation Sum",
    "url": "https://codeforces.com/problemset/problem/285/D",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "285C. Building Permutation",
    "url": "https://codeforces.com/problemset/problem/285/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "285B. Find Marble",
    "url": "https://codeforces.com/problemset/problem/285/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "285A. Slightly Decreasing Permutations",
    "url": "https://codeforces.com/problemset/problem/285/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "284B. Cows and Poker Game",
    "url": "https://codeforces.com/problemset/problem/284/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "284A. Cows and Primitive Roots",
    "url": "https://codeforces.com/problemset/problem/284/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "283E. Cow Tennis Tournament",
    "url": "https://codeforces.com/problemset/problem/283/E",
    "difficulty": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "283D. Cows and Cool Sequences",
    "url": "https://codeforces.com/problemset/problem/283/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "283C. Coin Troubles",
    "url": "https://codeforces.com/problemset/problem/283/C",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "283B. Cow Program",
    "url": "https://codeforces.com/problemset/problem/283/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "283A. Cows and Sequence",
    "url": "https://codeforces.com/problemset/problem/283/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "282E. Sausage Maximization",
    "url": "https://codeforces.com/problemset/problem/282/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "282D. Yet Another Number Game",
    "url": "https://codeforces.com/problemset/problem/282/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "282C. XOR and OR",
    "url": "https://codeforces.com/problemset/problem/282/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "282B. Painting Eggs",
    "url": "https://codeforces.com/problemset/problem/282/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "282A. Bit++",
    "url": "https://codeforces.com/problemset/problem/282/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "281B. Nearest Fraction",
    "url": "https://codeforces.com/problemset/problem/281/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "281A. Word Capitalization",
    "url": "https://codeforces.com/problemset/problem/281/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "280E. Sequence Transformation",
    "url": "https://codeforces.com/problemset/problem/280/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "280D. k-Maximum Subsequence Sum",
    "url": "https://codeforces.com/problemset/problem/280/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "280C. Game on Tree",
    "url": "https://codeforces.com/problemset/problem/280/C",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "280B. Maximum Xor Secondary",
    "url": "https://codeforces.com/problemset/problem/280/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "280A. Rectangle Puzzle",
    "url": "https://codeforces.com/problemset/problem/280/A",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "279E. Beautiful Decomposition",
    "url": "https://codeforces.com/problemset/problem/279/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "games",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "279D. The Minimum Number of Variables",
    "url": "https://codeforces.com/problemset/problem/279/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "279C. Ladder",
    "url": "https://codeforces.com/problemset/problem/279/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "279B. Books",
    "url": "https://codeforces.com/problemset/problem/279/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "279A. Point on Spiral",
    "url": "https://codeforces.com/problemset/problem/279/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "278B. New Problem",
    "url": "https://codeforces.com/problemset/problem/278/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "278A. Circle Line",
    "url": "https://codeforces.com/problemset/problem/278/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "277E. Binary Tree on Plane",
    "url": "https://codeforces.com/problemset/problem/277/E",
    "difficulty": 2400,
    "tags": [
      "flows",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "277D. Google Code Jam",
    "url": "https://codeforces.com/problemset/problem/277/D",
    "difficulty": 2800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "277C. Game",
    "url": "https://codeforces.com/problemset/problem/277/C",
    "difficulty": 2400,
    "tags": [
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "277B. Set of Points",
    "url": "https://codeforces.com/problemset/problem/277/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "277A. Learning Languages",
    "url": "https://codeforces.com/problemset/problem/277/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "276E. Little Girl and Problem on Trees",
    "url": "https://codeforces.com/problemset/problem/276/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "276D. Little Girl and Maximum XOR",
    "url": "https://codeforces.com/problemset/problem/276/D",
    "difficulty": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "276C. Little Girl and Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/276/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "276B. Little Girl and Game",
    "url": "https://codeforces.com/problemset/problem/276/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "276A. Lunch Rush",
    "url": "https://codeforces.com/problemset/problem/276/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "275B. Convex Shape",
    "url": "https://codeforces.com/problemset/problem/275/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "275A. Lights Out",
    "url": "https://codeforces.com/problemset/problem/275/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "274E. Mirror Room",
    "url": "https://codeforces.com/problemset/problem/274/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "274D. Lovely Matrix",
    "url": "https://codeforces.com/problemset/problem/274/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "274C. The Last Hole!",
    "url": "https://codeforces.com/problemset/problem/274/C",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "274B. Zero Tree",
    "url": "https://codeforces.com/problemset/problem/274/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "274A. k-Multiple Free Set",
    "url": "https://codeforces.com/problemset/problem/274/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "273E. Dima and Game",
    "url": "https://codeforces.com/problemset/problem/273/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "273D. Dima and Figure",
    "url": "https://codeforces.com/problemset/problem/273/D",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "272E. Dima and Horses",
    "url": "https://codeforces.com/problemset/problem/272/E",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "272D. Dima and Two Sequences",
    "url": "https://codeforces.com/problemset/problem/272/D",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "272C. Dima and Staircase",
    "url": "https://codeforces.com/problemset/problem/272/C",
    "difficulty": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "272B. Dima and Sequence",
    "url": "https://codeforces.com/problemset/problem/272/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "272A. Dima and Friends",
    "url": "https://codeforces.com/problemset/problem/272/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "271E. Three Horses",
    "url": "https://codeforces.com/problemset/problem/271/E",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "271D. Good Substrings",
    "url": "https://codeforces.com/problemset/problem/271/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "271C. Secret",
    "url": "https://codeforces.com/problemset/problem/271/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "271B. Prime Matrix",
    "url": "https://codeforces.com/problemset/problem/271/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "271A. Beautiful Year",
    "url": "https://codeforces.com/problemset/problem/271/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "270B. Multithreading",
    "url": "https://codeforces.com/problemset/problem/270/B",
    "difficulty": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "270A. Fancy Fence",
    "url": "https://codeforces.com/problemset/problem/270/A",
    "difficulty": 1100,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "269E. String Theory",
    "url": "https://codeforces.com/problemset/problem/269/E",
    "difficulty": 3100,
    "tags": [
      "geometry",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "269D. Maximum Waterfall",
    "url": "https://codeforces.com/problemset/problem/269/D",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "269C. Flawed Flow",
    "url": "https://codeforces.com/problemset/problem/269/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "269B. Greenhouse Effect",
    "url": "https://codeforces.com/problemset/problem/269/B",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "269A. Magical Boxes",
    "url": "https://codeforces.com/problemset/problem/269/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "268E. Playlist",
    "url": "https://codeforces.com/problemset/problem/268/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "268D. Wall Bars",
    "url": "https://codeforces.com/problemset/problem/268/D",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "268C. Beautiful Sets of Points",
    "url": "https://codeforces.com/problemset/problem/268/C",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "268B. Buttons",
    "url": "https://codeforces.com/problemset/problem/268/B",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "268A. Games",
    "url": "https://codeforces.com/problemset/problem/268/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "267C. Berland Traffic",
    "url": "https://codeforces.com/problemset/problem/267/C",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "267B. Dominoes",
    "url": "https://codeforces.com/problemset/problem/267/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "267A. Subtractions",
    "url": "https://codeforces.com/problemset/problem/267/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "266E. More Queries to Array...",
    "url": "https://codeforces.com/problemset/problem/266/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "266D. BerDonalds",
    "url": "https://codeforces.com/problemset/problem/266/D",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "266C. Below the Diagonal",
    "url": "https://codeforces.com/problemset/problem/266/C",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "266B. Queue at the School",
    "url": "https://codeforces.com/problemset/problem/266/B",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "266A. Stones on the Table",
    "url": "https://codeforces.com/problemset/problem/266/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "265B. Roadside Trees (Simplified Edition)",
    "url": "https://codeforces.com/problemset/problem/265/B",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "265A. Colorful Stones (Simplified Edition)",
    "url": "https://codeforces.com/problemset/problem/265/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "264E. Roadside Trees",
    "url": "https://codeforces.com/problemset/problem/264/E",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "264D. Colorful Stones",
    "url": "https://codeforces.com/problemset/problem/264/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "264C. Choosing Balls",
    "url": "https://codeforces.com/problemset/problem/264/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "264B. Good Sequences",
    "url": "https://codeforces.com/problemset/problem/264/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "264A. Escape from Stones",
    "url": "https://codeforces.com/problemset/problem/264/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "263E. Rhombus",
    "url": "https://codeforces.com/problemset/problem/263/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "263D. Cycle in Graph",
    "url": "https://codeforces.com/problemset/problem/263/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "263C. Circle of Numbers",
    "url": "https://codeforces.com/problemset/problem/263/C",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "263B. Squares",
    "url": "https://codeforces.com/problemset/problem/263/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "263A. Beautiful Matrix",
    "url": "https://codeforces.com/problemset/problem/263/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "262B. Roma and Changing Signs",
    "url": "https://codeforces.com/problemset/problem/262/B",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "262A. Roma and Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/262/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "261E. Maxim and Calculator",
    "url": "https://codeforces.com/problemset/problem/261/E",
    "difficulty": 2800,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "261D. Maxim and Increasing Subsequence",
    "url": "https://codeforces.com/problemset/problem/261/D",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "261C. Maxim and Matrix",
    "url": "https://codeforces.com/problemset/problem/261/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "261B. Maxim and Restaurant",
    "url": "https://codeforces.com/problemset/problem/261/B",
    "difficulty": 1900,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "261A. Maxim and Discounts",
    "url": "https://codeforces.com/problemset/problem/261/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "260E. Dividing Kingdom",
    "url": "https://codeforces.com/problemset/problem/260/E",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "260D. Black and White Tree",
    "url": "https://codeforces.com/problemset/problem/260/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "260C. Balls and Boxes",
    "url": "https://codeforces.com/problemset/problem/260/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "260B. Ancient Prophesy",
    "url": "https://codeforces.com/problemset/problem/260/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "260A. Adding Digits",
    "url": "https://codeforces.com/problemset/problem/260/A",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "259B. Little Elephant and Magic Square",
    "url": "https://codeforces.com/problemset/problem/259/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "259A. Little Elephant and Chess",
    "url": "https://codeforces.com/problemset/problem/259/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "258E. Little Elephant and Tree",
    "url": "https://codeforces.com/problemset/problem/258/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "258D. Little Elephant and Broken Sorting",
    "url": "https://codeforces.com/problemset/problem/258/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "258C. Little Elephant and LCM",
    "url": "https://codeforces.com/problemset/problem/258/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "258B. Little Elephant and Elections",
    "url": "https://codeforces.com/problemset/problem/258/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "258A. Little Elephant and Bits",
    "url": "https://codeforces.com/problemset/problem/258/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "257E. Greedy Elevator",
    "url": "https://codeforces.com/problemset/problem/257/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "257D. Sum",
    "url": "https://codeforces.com/problemset/problem/257/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "257C. View Angle",
    "url": "https://codeforces.com/problemset/problem/257/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "257B. Playing Cubes",
    "url": "https://codeforces.com/problemset/problem/257/B",
    "difficulty": 1300,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "257A. Sockets",
    "url": "https://codeforces.com/problemset/problem/257/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "256E. Lucky Arrays",
    "url": "https://codeforces.com/problemset/problem/256/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "256D. Liars and Serge",
    "url": "https://codeforces.com/problemset/problem/256/D",
    "difficulty": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "255E. Furlo and Rublo and Game",
    "url": "https://codeforces.com/problemset/problem/255/E",
    "difficulty": 2200,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "255D. Mr. Bender and Square",
    "url": "https://codeforces.com/problemset/problem/255/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "255C. Almost Arithmetical Progression",
    "url": "https://codeforces.com/problemset/problem/255/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "255B. Code Parsing",
    "url": "https://codeforces.com/problemset/problem/255/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "255A. Greg's Workout",
    "url": "https://codeforces.com/problemset/problem/255/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "254E. Dormitory",
    "url": "https://codeforces.com/problemset/problem/254/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "254D. Rats",
    "url": "https://codeforces.com/problemset/problem/254/D",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "254C. Anagram",
    "url": "https://codeforces.com/problemset/problem/254/C",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "254B. Jury Size",
    "url": "https://codeforces.com/problemset/problem/254/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "254A. Cards with Numbers",
    "url": "https://codeforces.com/problemset/problem/254/A",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "253E. Printer",
    "url": "https://codeforces.com/problemset/problem/253/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "253D. Table with Letters - 2",
    "url": "https://codeforces.com/problemset/problem/253/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "253C. Text Editor",
    "url": "https://codeforces.com/problemset/problem/253/C",
    "difficulty": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "253B. Physics Practical",
    "url": "https://codeforces.com/problemset/problem/253/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "253A. Boys and Girls",
    "url": "https://codeforces.com/problemset/problem/253/A",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "252B. Unsorting Array",
    "url": "https://codeforces.com/problemset/problem/252/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "252A. Little Xor",
    "url": "https://codeforces.com/problemset/problem/252/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "251E. Tree and Table",
    "url": "https://codeforces.com/problemset/problem/251/E",
    "difficulty": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "251D. Two Sets",
    "url": "https://codeforces.com/problemset/problem/251/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "251C. Number Transformation",
    "url": "https://codeforces.com/problemset/problem/251/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "251B. Playing with Permutations",
    "url": "https://codeforces.com/problemset/problem/251/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "251A. Points on Line",
    "url": "https://codeforces.com/problemset/problem/251/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "250E. Mad Joe",
    "url": "https://codeforces.com/problemset/problem/250/E",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "250D. Building Bridge",
    "url": "https://codeforces.com/problemset/problem/250/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "250C. Movie Critics",
    "url": "https://codeforces.com/problemset/problem/250/C",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "250B. Restoring IPv6",
    "url": "https://codeforces.com/problemset/problem/250/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "250A. Paper Work",
    "url": "https://codeforces.com/problemset/problem/250/A",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "249E. Endless Matrix",
    "url": "https://codeforces.com/problemset/problem/249/E",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "249D. Donkey and Stars",
    "url": "https://codeforces.com/problemset/problem/249/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "248E. Piglet's Birthday",
    "url": "https://codeforces.com/problemset/problem/248/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "248D. Sweets for Everyone!",
    "url": "https://codeforces.com/problemset/problem/248/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "248C. Robo-Footballer",
    "url": "https://codeforces.com/problemset/problem/248/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "248B. Chilly Willy",
    "url": "https://codeforces.com/problemset/problem/248/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "248A. Cupboards",
    "url": "https://codeforces.com/problemset/problem/248/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "246E. Blood Cousins Return",
    "url": "https://codeforces.com/problemset/problem/246/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "246D. Colorful Graph",
    "url": "https://codeforces.com/problemset/problem/246/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "246C. Beauty Pageant",
    "url": "https://codeforces.com/problemset/problem/246/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "246B. Increase and Decrease",
    "url": "https://codeforces.com/problemset/problem/246/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "246A. Buggy Sorting",
    "url": "https://codeforces.com/problemset/problem/246/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245H. Queries for Number of Palindromes",
    "url": "https://codeforces.com/problemset/problem/245/H",
    "difficulty": 1800,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245G. Suggested Friends",
    "url": "https://codeforces.com/problemset/problem/245/G",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245F. Log Stream Analysis",
    "url": "https://codeforces.com/problemset/problem/245/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245E. Mishap in Club",
    "url": "https://codeforces.com/problemset/problem/245/E",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245D. Restoring Table",
    "url": "https://codeforces.com/problemset/problem/245/D",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245C. Game with Coins",
    "url": "https://codeforces.com/problemset/problem/245/C",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245B. Internet Address",
    "url": "https://codeforces.com/problemset/problem/245/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "245A. System Administrator",
    "url": "https://codeforces.com/problemset/problem/245/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "244B. Undoubtedly Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/244/B",
    "difficulty": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "244A. Dividing Orange",
    "url": "https://codeforces.com/problemset/problem/244/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "243E. Matrix",
    "url": "https://codeforces.com/problemset/problem/243/E",
    "difficulty": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "243D. Cubes",
    "url": "https://codeforces.com/problemset/problem/243/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "243C. Colorado Potato Beetle",
    "url": "https://codeforces.com/problemset/problem/243/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "243B. Hydra",
    "url": "https://codeforces.com/problemset/problem/243/B",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "243A. The Brand New Function",
    "url": "https://codeforces.com/problemset/problem/243/A",
    "difficulty": 1600,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "242E. XOR on Segment",
    "url": "https://codeforces.com/problemset/problem/242/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "242D. Dispute",
    "url": "https://codeforces.com/problemset/problem/242/D",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "242C. King's Path",
    "url": "https://codeforces.com/problemset/problem/242/C",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "242B. Big Segment",
    "url": "https://codeforces.com/problemset/problem/242/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "242A. Heads or Tails",
    "url": "https://codeforces.com/problemset/problem/242/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241G. Challenging Balloons",
    "url": "https://codeforces.com/problemset/problem/241/G",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241F. Race",
    "url": "https://codeforces.com/problemset/problem/241/F",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241E. Flights",
    "url": "https://codeforces.com/problemset/problem/241/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241D. Numbers",
    "url": "https://codeforces.com/problemset/problem/241/D",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "241C. Mirror Box",
    "url": "https://codeforces.com/problemset/problem/241/C",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241B. Friends",
    "url": "https://codeforces.com/problemset/problem/241/B",
    "difficulty": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "241A. Old Peykan",
    "url": "https://codeforces.com/problemset/problem/241/A",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "240F. TorCoder",
    "url": "https://codeforces.com/problemset/problem/240/F",
    "difficulty": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "240E. Road Repairs",
    "url": "https://codeforces.com/problemset/problem/240/E",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "239B. Easy Tape Programming",
    "url": "https://codeforces.com/problemset/problem/239/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "239A. Two Bags of Potatoes",
    "url": "https://codeforces.com/problemset/problem/239/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "238E. Meeting Her",
    "url": "https://codeforces.com/problemset/problem/238/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "238D. Tape Programming",
    "url": "https://codeforces.com/problemset/problem/238/D",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "238C. World Eater Brothers",
    "url": "https://codeforces.com/problemset/problem/238/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "238B. Boring Partition",
    "url": "https://codeforces.com/problemset/problem/238/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "238A. Not Wool Sequences",
    "url": "https://codeforces.com/problemset/problem/238/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "237E. Build String",
    "url": "https://codeforces.com/problemset/problem/237/E",
    "difficulty": 2000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "237D. T-decomposition",
    "url": "https://codeforces.com/problemset/problem/237/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "237C. Primes on Interval",
    "url": "https://codeforces.com/problemset/problem/237/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "number theory",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "237B. Young Table",
    "url": "https://codeforces.com/problemset/problem/237/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "237A. Free Cash",
    "url": "https://codeforces.com/problemset/problem/237/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "236B. Easy Number Challenge",
    "url": "https://codeforces.com/problemset/problem/236/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "236A. Boy or Girl",
    "url": "https://codeforces.com/problemset/problem/236/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "235E. Number Challenge",
    "url": "https://codeforces.com/problemset/problem/235/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "235D. Graph Game",
    "url": "https://codeforces.com/problemset/problem/235/D",
    "difficulty": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "235C. Cyclical Quest",
    "url": "https://codeforces.com/problemset/problem/235/C",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "235B. Let's Play Osu!",
    "url": "https://codeforces.com/problemset/problem/235/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "235A. LCM Challenge",
    "url": "https://codeforces.com/problemset/problem/235/A",
    "difficulty": 1600,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234H. Merging Two Decks",
    "url": "https://codeforces.com/problemset/problem/234/H",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234G. Practice",
    "url": "https://codeforces.com/problemset/problem/234/G",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234F. Fence",
    "url": "https://codeforces.com/problemset/problem/234/F",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234E. Champions' League",
    "url": "https://codeforces.com/problemset/problem/234/E",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234D. Cinema",
    "url": "https://codeforces.com/problemset/problem/234/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234C. Weather",
    "url": "https://codeforces.com/problemset/problem/234/C",
    "difficulty": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234B. Reading",
    "url": "https://codeforces.com/problemset/problem/234/B",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "234A. Lefthanders and Righthanders ",
    "url": "https://codeforces.com/problemset/problem/234/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "233B. Non-square Equation",
    "url": "https://codeforces.com/problemset/problem/233/B",
    "difficulty": 1400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "233A. Perfect Permutation",
    "url": "https://codeforces.com/problemset/problem/233/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "232E. Quick Tortoise",
    "url": "https://codeforces.com/problemset/problem/232/E",
    "difficulty": 3000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "232D. Fence",
    "url": "https://codeforces.com/problemset/problem/232/D",
    "difficulty": 2900,
    "tags": [
      "binary search",
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "232C. Doe Graphs",
    "url": "https://codeforces.com/problemset/problem/232/C",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "232B. Table",
    "url": "https://codeforces.com/problemset/problem/232/B",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "232A. Cycles",
    "url": "https://codeforces.com/problemset/problem/232/A",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "231E. Cactus",
    "url": "https://codeforces.com/problemset/problem/231/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "231D. Magic Box",
    "url": "https://codeforces.com/problemset/problem/231/D",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "231C. To Add or Not to Add",
    "url": "https://codeforces.com/problemset/problem/231/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "231B. Magic, Wizardry and Wonders",
    "url": "https://codeforces.com/problemset/problem/231/B",
    "difficulty": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "231A. Team",
    "url": "https://codeforces.com/problemset/problem/231/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "230B. T-primes",
    "url": "https://codeforces.com/problemset/problem/230/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "230A. Dragons",
    "url": "https://codeforces.com/problemset/problem/230/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "229E. Gifts",
    "url": "https://codeforces.com/problemset/problem/229/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "229D. Towers",
    "url": "https://codeforces.com/problemset/problem/229/D",
    "difficulty": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "229C. Triangles",
    "url": "https://codeforces.com/problemset/problem/229/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "229B. Planets",
    "url": "https://codeforces.com/problemset/problem/229/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "229A. Shifts",
    "url": "https://codeforces.com/problemset/problem/229/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "228E. The Road to Berland is Paved With Good Intentions",
    "url": "https://codeforces.com/problemset/problem/228/E",
    "difficulty": 1900,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "228D. Zigzag",
    "url": "https://codeforces.com/problemset/problem/228/D",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "228C. Fractal Detector",
    "url": "https://codeforces.com/problemset/problem/228/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "228B. Two Tables",
    "url": "https://codeforces.com/problemset/problem/228/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "228A. Is your horseshoe on the other hoof?",
    "url": "https://codeforces.com/problemset/problem/228/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "227B. Effective Approach",
    "url": "https://codeforces.com/problemset/problem/227/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "227A. Where do I Turn?",
    "url": "https://codeforces.com/problemset/problem/227/A",
    "difficulty": 1300,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "226E. Noble Knight's Path",
    "url": "https://codeforces.com/problemset/problem/226/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "226D. The table",
    "url": "https://codeforces.com/problemset/problem/226/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "226C. Anniversary",
    "url": "https://codeforces.com/problemset/problem/226/C",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "226B. Naughty Stone Piles",
    "url": "https://codeforces.com/problemset/problem/226/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "226A. Flying Saucer Segments",
    "url": "https://codeforces.com/problemset/problem/226/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "225E. Unsolvable",
    "url": "https://codeforces.com/problemset/problem/225/E",
    "difficulty": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "225D. Snake",
    "url": "https://codeforces.com/problemset/problem/225/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "225C. Barcode",
    "url": "https://codeforces.com/problemset/problem/225/C",
    "difficulty": 1700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "225B. Well-known Numbers",
    "url": "https://codeforces.com/problemset/problem/225/B",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "greedy",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "225A. Dice Tower",
    "url": "https://codeforces.com/problemset/problem/225/A",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "224B. Array",
    "url": "https://codeforces.com/problemset/problem/224/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "224A. Parallelepiped",
    "url": "https://codeforces.com/problemset/problem/224/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "223E. Planar Graph",
    "url": "https://codeforces.com/problemset/problem/223/E",
    "difficulty": 3000,
    "tags": [
      "flows",
      "geometry",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "223D. Spider",
    "url": "https://codeforces.com/problemset/problem/223/D",
    "difficulty": 3000,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "223C. Partial Sums",
    "url": "https://codeforces.com/problemset/problem/223/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "223B. Two Strings",
    "url": "https://codeforces.com/problemset/problem/223/B",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "223A. Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/223/A",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "222E. Decoding Genome",
    "url": "https://codeforces.com/problemset/problem/222/E",
    "difficulty": 1900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "222D. Olympiad",
    "url": "https://codeforces.com/problemset/problem/222/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "222C. Reducing Fractions",
    "url": "https://codeforces.com/problemset/problem/222/C",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "222B. Cosmic Tables",
    "url": "https://codeforces.com/problemset/problem/222/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "222A. Shooshuns and Sequence ",
    "url": "https://codeforces.com/problemset/problem/222/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "221B. Little Elephant and Numbers",
    "url": "https://codeforces.com/problemset/problem/221/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "221A. Little Elephant and Function",
    "url": "https://codeforces.com/problemset/problem/221/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "220E. Little Elephant and Inversions",
    "url": "https://codeforces.com/problemset/problem/220/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "220D. Little Elephant and Triangle",
    "url": "https://codeforces.com/problemset/problem/220/D",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "220C. Little Elephant and Shifts",
    "url": "https://codeforces.com/problemset/problem/220/C",
    "difficulty": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "220B. Little Elephant and Array",
    "url": "https://codeforces.com/problemset/problem/220/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "220A. Little Elephant and Problem",
    "url": "https://codeforces.com/problemset/problem/220/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "219E. Parking Lot",
    "url": "https://codeforces.com/problemset/problem/219/E",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "219D. Choosing Capital for Treeland",
    "url": "https://codeforces.com/problemset/problem/219/D",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "219C. Color Stripe",
    "url": "https://codeforces.com/problemset/problem/219/C",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "219B. Special Offer! Super Price 999 Bourles!",
    "url": "https://codeforces.com/problemset/problem/219/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "219A. k-String",
    "url": "https://codeforces.com/problemset/problem/219/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "218B. Airport",
    "url": "https://codeforces.com/problemset/problem/218/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "218A. Mountain Scenery",
    "url": "https://codeforces.com/problemset/problem/218/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "217E. Alien DNA",
    "url": "https://codeforces.com/problemset/problem/217/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "217D. Bitonix' Patrol",
    "url": "https://codeforces.com/problemset/problem/217/D",
    "difficulty": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "217C. Formurosa",
    "url": "https://codeforces.com/problemset/problem/217/C",
    "difficulty": 2600,
    "tags": [
      "divide and conquer",
      "dp",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "217B. Blackboard Fibonacci",
    "url": "https://codeforces.com/problemset/problem/217/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "217A. Ice Skating",
    "url": "https://codeforces.com/problemset/problem/217/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "216E. Martian Luck",
    "url": "https://codeforces.com/problemset/problem/216/E",
    "difficulty": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "216D. Spider's Web",
    "url": "https://codeforces.com/problemset/problem/216/D",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "216C. Hiring Staff",
    "url": "https://codeforces.com/problemset/problem/216/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "216B. Forming Teams",
    "url": "https://codeforces.com/problemset/problem/216/B",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "216A. Tiling with Hexagons",
    "url": "https://codeforces.com/problemset/problem/216/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "215E. Periodical Numbers",
    "url": "https://codeforces.com/problemset/problem/215/E",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "215D. Hot Days",
    "url": "https://codeforces.com/problemset/problem/215/D",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "215C. Crosses",
    "url": "https://codeforces.com/problemset/problem/215/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "215B. Olympic Medal",
    "url": "https://codeforces.com/problemset/problem/215/B",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "215A. Bicycle Chain",
    "url": "https://codeforces.com/problemset/problem/215/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "214B. Hometask",
    "url": "https://codeforces.com/problemset/problem/214/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "214A. System of Equations",
    "url": "https://codeforces.com/problemset/problem/214/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "213E. Two Permutations",
    "url": "https://codeforces.com/problemset/problem/213/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "213D. Stars",
    "url": "https://codeforces.com/problemset/problem/213/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "213C. Relay Race",
    "url": "https://codeforces.com/problemset/problem/213/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "213B. Numbers",
    "url": "https://codeforces.com/problemset/problem/213/B",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "213A. Game",
    "url": "https://codeforces.com/problemset/problem/213/A",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "212E. IT Restaurants",
    "url": "https://codeforces.com/problemset/problem/212/E",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "212D. Cutting a Fence",
    "url": "https://codeforces.com/problemset/problem/212/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "212C. Cowboys",
    "url": "https://codeforces.com/problemset/problem/212/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "212B. Polycarpus is Looking for Good Substrings",
    "url": "https://codeforces.com/problemset/problem/212/B",
    "difficulty": 2300,
    "tags": [
      "bitmasks",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "212A. Privatization",
    "url": "https://codeforces.com/problemset/problem/212/A",
    "difficulty": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "209C. Trails and Glades",
    "url": "https://codeforces.com/problemset/problem/209/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "209B. Pixels",
    "url": "https://codeforces.com/problemset/problem/209/B",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "209A. Multicolored Marbles",
    "url": "https://codeforces.com/problemset/problem/209/A",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "208E. Blood Cousins",
    "url": "https://codeforces.com/problemset/problem/208/E",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "208D. Prizes, Prizes, more Prizes",
    "url": "https://codeforces.com/problemset/problem/208/D",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "208C. Police Station",
    "url": "https://codeforces.com/problemset/problem/208/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "208B. Solitaire",
    "url": "https://codeforces.com/problemset/problem/208/B",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "208A. Dubstep",
    "url": "https://codeforces.com/problemset/problem/208/A",
    "difficulty": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "207D9. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D9",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D8. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D8",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D7. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D7",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D6. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D6",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D5. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D5",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D4. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D4",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D3. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D3",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D2. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D2",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D10. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D10",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207D1. The Beaver's Problem - 3",
    "url": "https://codeforces.com/problemset/problem/207/D1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207C3. Game with Two Trees",
    "url": "https://codeforces.com/problemset/problem/207/C3",
    "difficulty": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "207C2. Game with Two Trees",
    "url": "https://codeforces.com/problemset/problem/207/C2",
    "difficulty": 2200,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207C1. Game with Two Trees",
    "url": "https://codeforces.com/problemset/problem/207/C1",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207B3. Military Trainings",
    "url": "https://codeforces.com/problemset/problem/207/B3",
    "difficulty": 1700,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207B2. Military Trainings",
    "url": "https://codeforces.com/problemset/problem/207/B2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207B1. Military Trainings",
    "url": "https://codeforces.com/problemset/problem/207/B1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "207A3. Beaver's Calculator 1.0",
    "url": "https://codeforces.com/problemset/problem/207/A3",
    "difficulty": 2000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "207A2. Beaver's Calculator 1.0",
    "url": "https://codeforces.com/problemset/problem/207/A2",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "207A1. Beaver's Calculator 1.0",
    "url": "https://codeforces.com/problemset/problem/207/A1",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "205B. Little Elephant and Sorting",
    "url": "https://codeforces.com/problemset/problem/205/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "205A. Little Elephant and Rozdil",
    "url": "https://codeforces.com/problemset/problem/205/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "204E. Little Elephant and Strings",
    "url": "https://codeforces.com/problemset/problem/204/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "implementation",
      "string suffix structures",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "204D. Little Elephant and Retro Strings",
    "url": "https://codeforces.com/problemset/problem/204/D",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "204C. Little Elephant and Furik and Rubik",
    "url": "https://codeforces.com/problemset/problem/204/C",
    "difficulty": 2000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "204B. Little Elephant and Cards",
    "url": "https://codeforces.com/problemset/problem/204/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "204A. Little Elephant and Interval",
    "url": "https://codeforces.com/problemset/problem/204/A",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "203E. Transportation",
    "url": "https://codeforces.com/problemset/problem/203/E",
    "difficulty": 2300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "203D. Hit Ball",
    "url": "https://codeforces.com/problemset/problem/203/D",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "203C. Photographer",
    "url": "https://codeforces.com/problemset/problem/203/C",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "203B. Game on Paper",
    "url": "https://codeforces.com/problemset/problem/203/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "203A. Two Problems",
    "url": "https://codeforces.com/problemset/problem/203/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "202B. Brand New Easy Problem",
    "url": "https://codeforces.com/problemset/problem/202/B",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "202A. LLPS",
    "url": "https://codeforces.com/problemset/problem/202/A",
    "difficulty": 800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "201E. Thoroughly Bureaucratic Organization",
    "url": "https://codeforces.com/problemset/problem/201/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "201D. Brand New Problem",
    "url": "https://codeforces.com/problemset/problem/201/D",
    "difficulty": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "201C. Fragile Bridges",
    "url": "https://codeforces.com/problemset/problem/201/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "201B. Guess That Car!",
    "url": "https://codeforces.com/problemset/problem/201/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "201A. Clear Symmetry",
    "url": "https://codeforces.com/problemset/problem/201/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "200E. Tractor College",
    "url": "https://codeforces.com/problemset/problem/200/E",
    "difficulty": 2400,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "200D. Programming Language",
    "url": "https://codeforces.com/problemset/problem/200/D",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "brute force",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "200C. Football Championship",
    "url": "https://codeforces.com/problemset/problem/200/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "200B. Drinks",
    "url": "https://codeforces.com/problemset/problem/200/B",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "200A. Cinema",
    "url": "https://codeforces.com/problemset/problem/200/A",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "199B. Special Olympics",
    "url": "https://codeforces.com/problemset/problem/199/B",
    "difficulty": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "199A. Hexadecimal's theorem",
    "url": "https://codeforces.com/problemset/problem/199/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "198E. Gripping Story",
    "url": "https://codeforces.com/problemset/problem/198/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "198D. Cube Snake",
    "url": "https://codeforces.com/problemset/problem/198/D",
    "difficulty": 2700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "198C. Delivering Carcinogen",
    "url": "https://codeforces.com/problemset/problem/198/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "198B. Jumping on Walls",
    "url": "https://codeforces.com/problemset/problem/198/B",
    "difficulty": 1400,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "198A. About Bacteria",
    "url": "https://codeforces.com/problemset/problem/198/A",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "197B. Limit",
    "url": "https://codeforces.com/problemset/problem/197/B",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "197A. Plate Game",
    "url": "https://codeforces.com/problemset/problem/197/A",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "196E. Opening Portals",
    "url": "https://codeforces.com/problemset/problem/196/E",
    "difficulty": 2600,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "196D. The Next Good String",
    "url": "https://codeforces.com/problemset/problem/196/D",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "196C. Paint Tree",
    "url": "https://codeforces.com/problemset/problem/196/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "196B. Infinite Maze",
    "url": "https://codeforces.com/problemset/problem/196/B",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "196A. Lexicographically Maximum Subsequence",
    "url": "https://codeforces.com/problemset/problem/196/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "195E. Building Forest",
    "url": "https://codeforces.com/problemset/problem/195/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "195D. Analyzing Polyline",
    "url": "https://codeforces.com/problemset/problem/195/D",
    "difficulty": 1900,
    "tags": [
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "195C. Try and Catch",
    "url": "https://codeforces.com/problemset/problem/195/C",
    "difficulty": 1800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "195B. After Training",
    "url": "https://codeforces.com/problemset/problem/195/B",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "195A. Let's Watch Football",
    "url": "https://codeforces.com/problemset/problem/195/A",
    "difficulty": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "194B. Square",
    "url": "https://codeforces.com/problemset/problem/194/B",
    "difficulty": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "194A. Exams",
    "url": "https://codeforces.com/problemset/problem/194/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "193E. Fibonacci Number",
    "url": "https://codeforces.com/problemset/problem/193/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "193D. Two Segments",
    "url": "https://codeforces.com/problemset/problem/193/D",
    "difficulty": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "193C. Hamming Distance",
    "url": "https://codeforces.com/problemset/problem/193/C",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "193B. Xor",
    "url": "https://codeforces.com/problemset/problem/193/B",
    "difficulty": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "193A. Cutting Figure",
    "url": "https://codeforces.com/problemset/problem/193/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "192B. Walking in the Rain",
    "url": "https://codeforces.com/problemset/problem/192/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "192A. Funky Numbers",
    "url": "https://codeforces.com/problemset/problem/192/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "191E. Thwarting Demonstrations",
    "url": "https://codeforces.com/problemset/problem/191/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "191D. Metro Scheme",
    "url": "https://codeforces.com/problemset/problem/191/D",
    "difficulty": 2700,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "191C. Fools and Roads",
    "url": "https://codeforces.com/problemset/problem/191/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "191B. Demonstration",
    "url": "https://codeforces.com/problemset/problem/191/B",
    "difficulty": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "191A. Dynasty Puzzles",
    "url": "https://codeforces.com/problemset/problem/191/A",
    "difficulty": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "190E. Counter Attack",
    "url": "https://codeforces.com/problemset/problem/190/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "hashing",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "190D. Non-Secret Cypher",
    "url": "https://codeforces.com/problemset/problem/190/D",
    "difficulty": 1900,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "190C. STL",
    "url": "https://codeforces.com/problemset/problem/190/C",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "190B. Surrounded",
    "url": "https://codeforces.com/problemset/problem/190/B",
    "difficulty": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "190A. Vasya and the Bus",
    "url": "https://codeforces.com/problemset/problem/190/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "189B. Counting Rhombi",
    "url": "https://codeforces.com/problemset/problem/189/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "189A. Cut Ribbon",
    "url": "https://codeforces.com/problemset/problem/189/A",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188H. Stack",
    "url": "https://codeforces.com/problemset/problem/188/H",
    "difficulty": 1800,
    "tags": [
      "*special",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188G. Array Sorting",
    "url": "https://codeforces.com/problemset/problem/188/G",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188F. Binary Notation",
    "url": "https://codeforces.com/problemset/problem/188/F",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188E. HQ9+",
    "url": "https://codeforces.com/problemset/problem/188/E",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188D. Asterisks",
    "url": "https://codeforces.com/problemset/problem/188/D",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188C. LCM",
    "url": "https://codeforces.com/problemset/problem/188/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188B. A + Reverse B",
    "url": "https://codeforces.com/problemset/problem/188/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "188A. Hexagonal Numbers",
    "url": "https://codeforces.com/problemset/problem/188/A",
    "difficulty": 1100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "187E. Heaven Tour",
    "url": "https://codeforces.com/problemset/problem/187/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "187D. BRT Contract ",
    "url": "https://codeforces.com/problemset/problem/187/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "187C. Weak Memory",
    "url": "https://codeforces.com/problemset/problem/187/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "187B. AlgoRace",
    "url": "https://codeforces.com/problemset/problem/187/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "187A. Permutations",
    "url": "https://codeforces.com/problemset/problem/187/A",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "186B. Growing Mushrooms",
    "url": "https://codeforces.com/problemset/problem/186/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "186A. Comparing Strings",
    "url": "https://codeforces.com/problemset/problem/186/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "185E. Soap Time! - 2",
    "url": "https://codeforces.com/problemset/problem/185/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "185D. Visit of the Great",
    "url": "https://codeforces.com/problemset/problem/185/D",
    "difficulty": 2600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "185C. Clever Fat Rat",
    "url": "https://codeforces.com/problemset/problem/185/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "185B. Mushroom Scientists",
    "url": "https://codeforces.com/problemset/problem/185/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "185A. Plant",
    "url": "https://codeforces.com/problemset/problem/185/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "183E. Candy Shop",
    "url": "https://codeforces.com/problemset/problem/183/E",
    "difficulty": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "183D. T-shirt",
    "url": "https://codeforces.com/problemset/problem/183/D",
    "difficulty": 2700,
    "tags": [
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "183C. Cyclic Coloring",
    "url": "https://codeforces.com/problemset/problem/183/C",
    "difficulty": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "183B. Zoo",
    "url": "https://codeforces.com/problemset/problem/183/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "183A. Headquarters",
    "url": "https://codeforces.com/problemset/problem/183/A",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "182E. Wooden Fence",
    "url": "https://codeforces.com/problemset/problem/182/E",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "182D. Common Divisors",
    "url": "https://codeforces.com/problemset/problem/182/D",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "182C. Optimal Sum",
    "url": "https://codeforces.com/problemset/problem/182/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "182B. Vasya's Calendar",
    "url": "https://codeforces.com/problemset/problem/182/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "182A. Battlefield",
    "url": "https://codeforces.com/problemset/problem/182/A",
    "difficulty": 2200,
    "tags": [
      "geometry",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "181B. Number of Triplets",
    "url": "https://codeforces.com/problemset/problem/181/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "181A. Series of Crimes",
    "url": "https://codeforces.com/problemset/problem/181/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180F. Mathematical Analysis Rocks!",
    "url": "https://codeforces.com/problemset/problem/180/F",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180E. Cubes",
    "url": "https://codeforces.com/problemset/problem/180/E",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180D. Name",
    "url": "https://codeforces.com/problemset/problem/180/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180C. Letter",
    "url": "https://codeforces.com/problemset/problem/180/C",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180B. Divisibility Rules",
    "url": "https://codeforces.com/problemset/problem/180/B",
    "difficulty": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "180A. Defragmentation",
    "url": "https://codeforces.com/problemset/problem/180/A",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "178F3. Representative Sampling",
    "url": "https://codeforces.com/problemset/problem/178/F3",
    "difficulty": 2500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178F2. Representative Sampling",
    "url": "https://codeforces.com/problemset/problem/178/F2",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "178F1. Representative Sampling",
    "url": "https://codeforces.com/problemset/problem/178/F1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178E3. The Beaver's Problem - 2",
    "url": "https://codeforces.com/problemset/problem/178/E3",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178E2. The Beaver's Problem - 2",
    "url": "https://codeforces.com/problemset/problem/178/E2",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178E1. The Beaver's Problem - 2",
    "url": "https://codeforces.com/problemset/problem/178/E1",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178D3. Magic Squares",
    "url": "https://codeforces.com/problemset/problem/178/D3",
    "difficulty": 2100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178D2. Magic Squares",
    "url": "https://codeforces.com/problemset/problem/178/D2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178D1. Magic Squares",
    "url": "https://codeforces.com/problemset/problem/178/D1",
    "difficulty": 1500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178C3. Smart Beaver and Resolving Collisions",
    "url": "https://codeforces.com/problemset/problem/178/C3",
    "difficulty": 2000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178C2. Smart Beaver and Resolving Collisions",
    "url": "https://codeforces.com/problemset/problem/178/C2",
    "difficulty": 1900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178C1. Smart Beaver and Resolving Collisions",
    "url": "https://codeforces.com/problemset/problem/178/C1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178B3. Greedy Merchants",
    "url": "https://codeforces.com/problemset/problem/178/B3",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178B2. Greedy Merchants",
    "url": "https://codeforces.com/problemset/problem/178/B2",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178B1. Greedy Merchants",
    "url": "https://codeforces.com/problemset/problem/178/B1",
    "difficulty": 1600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "178A3. Educational Game",
    "url": "https://codeforces.com/problemset/problem/178/A3",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "178A2. Educational Game",
    "url": "https://codeforces.com/problemset/problem/178/A2",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "178A1. Educational Game",
    "url": "https://codeforces.com/problemset/problem/178/A1",
    "difficulty": 1000,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "177G2. Fibonacci Strings",
    "url": "https://codeforces.com/problemset/problem/177/G2",
    "difficulty": 2600,
    "tags": [
      "matrices",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177G1. Fibonacci Strings",
    "url": "https://codeforces.com/problemset/problem/177/G1",
    "difficulty": 2400,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177F2. Script Generation",
    "url": "https://codeforces.com/problemset/problem/177/F2",
    "difficulty": 2300,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "177F1. Script Generation",
    "url": "https://codeforces.com/problemset/problem/177/F1",
    "difficulty": 1800,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "177E2. Space Voyage",
    "url": "https://codeforces.com/problemset/problem/177/E2",
    "difficulty": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177E1. Space Voyage",
    "url": "https://codeforces.com/problemset/problem/177/E1",
    "difficulty": 1700,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177D2. Encrypting Messages",
    "url": "https://codeforces.com/problemset/problem/177/D2",
    "difficulty": 1500,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177D1. Encrypting Messages",
    "url": "https://codeforces.com/problemset/problem/177/D1",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177C2. Party",
    "url": "https://codeforces.com/problemset/problem/177/C2",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177C1. Party",
    "url": "https://codeforces.com/problemset/problem/177/C1",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177B2. Rectangular Game",
    "url": "https://codeforces.com/problemset/problem/177/B2",
    "difficulty": 1200,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177B1. Rectangular Game",
    "url": "https://codeforces.com/problemset/problem/177/B1",
    "difficulty": 1000,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177A2. Good Matrix Elements",
    "url": "https://codeforces.com/problemset/problem/177/A2",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "177A1. Good Matrix Elements",
    "url": "https://codeforces.com/problemset/problem/177/A1",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "176E. Archaeology",
    "url": "https://codeforces.com/problemset/problem/176/E",
    "difficulty": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "176D. Hyper String",
    "url": "https://codeforces.com/problemset/problem/176/D",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "176C. Playing with Superglue",
    "url": "https://codeforces.com/problemset/problem/176/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "176B. Word Cut",
    "url": "https://codeforces.com/problemset/problem/176/B",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "176A. Trading Business",
    "url": "https://codeforces.com/problemset/problem/176/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175F. Gnomes of Might and Magic",
    "url": "https://codeforces.com/problemset/problem/175/F",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175E. Power Defence",
    "url": "https://codeforces.com/problemset/problem/175/E",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dp",
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175D. Plane of Tanks: Duel",
    "url": "https://codeforces.com/problemset/problem/175/D",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175C. Geometry Horse",
    "url": "https://codeforces.com/problemset/problem/175/C",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175B. Plane of Tanks: Pro",
    "url": "https://codeforces.com/problemset/problem/175/B",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "175A. Robot Bicorn Attack",
    "url": "https://codeforces.com/problemset/problem/175/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "174C. Range Increments",
    "url": "https://codeforces.com/problemset/problem/174/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "174B. File List",
    "url": "https://codeforces.com/problemset/problem/174/B",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "174A. Problem About Equation",
    "url": "https://codeforces.com/problemset/problem/174/A",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "173E. Camping Groups",
    "url": "https://codeforces.com/problemset/problem/173/E",
    "difficulty": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "173D. Deputies",
    "url": "https://codeforces.com/problemset/problem/173/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "173C. Spiral Maximum",
    "url": "https://codeforces.com/problemset/problem/173/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "173B. Chamber of Secrets",
    "url": "https://codeforces.com/problemset/problem/173/B",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "173A. Rock-Paper-Scissors",
    "url": "https://codeforces.com/problemset/problem/173/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "172E. BHTML+BCSS",
    "url": "https://codeforces.com/problemset/problem/172/E",
    "difficulty": 2200,
    "tags": [
      "*special",
      "dfs and similar",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "172D. Calendar Reform",
    "url": "https://codeforces.com/problemset/problem/172/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "172C. Bus",
    "url": "https://codeforces.com/problemset/problem/172/C",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "172B. Pseudorandom Sequence Period",
    "url": "https://codeforces.com/problemset/problem/172/B",
    "difficulty": 1200,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "172A. Phone Code",
    "url": "https://codeforces.com/problemset/problem/172/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171H. A polyline",
    "url": "https://codeforces.com/problemset/problem/171/H",
    "difficulty": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171G. Mysterious numbers - 2",
    "url": "https://codeforces.com/problemset/problem/171/G",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171F. ucyhf",
    "url": "https://codeforces.com/problemset/problem/171/F",
    "difficulty": 1600,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171E. MYSTERIOUS LANGUAGE",
    "url": "https://codeforces.com/problemset/problem/171/E",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171D. Broken checker",
    "url": "https://codeforces.com/problemset/problem/171/D",
    "difficulty": 1300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171C. A Piece of Cake",
    "url": "https://codeforces.com/problemset/problem/171/C",
    "difficulty": 2000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171B. Star",
    "url": "https://codeforces.com/problemset/problem/171/B",
    "difficulty": 1300,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "171A. Mysterious numbers - 1",
    "url": "https://codeforces.com/problemset/problem/171/A",
    "difficulty": 1200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "169B. Replacing Digits",
    "url": "https://codeforces.com/problemset/problem/169/B",
    "difficulty": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "169A. Chores",
    "url": "https://codeforces.com/problemset/problem/169/A",
    "difficulty": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "168B. Wizards and Minimal Spell",
    "url": "https://codeforces.com/problemset/problem/168/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "168A. Wizards and Demonstration",
    "url": "https://codeforces.com/problemset/problem/168/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "167E. Wizards and Bets",
    "url": "https://codeforces.com/problemset/problem/167/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "167D. Wizards and Roads",
    "url": "https://codeforces.com/problemset/problem/167/D",
    "difficulty": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "167C. Wizards and Numbers",
    "url": "https://codeforces.com/problemset/problem/167/C",
    "difficulty": 2300,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "167B. Wizards and Huge Prize",
    "url": "https://codeforces.com/problemset/problem/167/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "167A. Wizards and Trolleybuses",
    "url": "https://codeforces.com/problemset/problem/167/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "166E. Tetrahedron",
    "url": "https://codeforces.com/problemset/problem/166/E",
    "difficulty": 1500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "166D. Shoe Store",
    "url": "https://codeforces.com/problemset/problem/166/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "166C. Median",
    "url": "https://codeforces.com/problemset/problem/166/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "166B. Polygons",
    "url": "https://codeforces.com/problemset/problem/166/B",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "166A. Rank List",
    "url": "https://codeforces.com/problemset/problem/166/A",
    "difficulty": 1100,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "165E. Compatible Numbers",
    "url": "https://codeforces.com/problemset/problem/165/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "165D. Beard Graph",
    "url": "https://codeforces.com/problemset/problem/165/D",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "165C. Another Problem on Strings",
    "url": "https://codeforces.com/problemset/problem/165/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "165B. Burning Midnight Oil",
    "url": "https://codeforces.com/problemset/problem/165/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "165A. Supercentral Point",
    "url": "https://codeforces.com/problemset/problem/165/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "164E. Polycarpus and Tasks",
    "url": "https://codeforces.com/problemset/problem/164/E",
    "difficulty": 3100,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "164D. Minimum Diameter",
    "url": "https://codeforces.com/problemset/problem/164/D",
    "difficulty": 3100,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "164C. Machine Programming",
    "url": "https://codeforces.com/problemset/problem/164/C",
    "difficulty": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "164B. Ancient Berland Hieroglyphs",
    "url": "https://codeforces.com/problemset/problem/164/B",
    "difficulty": 2000,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "164A. Variable, or There and Back Again",
    "url": "https://codeforces.com/problemset/problem/164/A",
    "difficulty": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "163E. e-Government",
    "url": "https://codeforces.com/problemset/problem/163/E",
    "difficulty": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "163D. Large Refrigerator",
    "url": "https://codeforces.com/problemset/problem/163/D",
    "difficulty": 2900,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "163C. Conveyor",
    "url": "https://codeforces.com/problemset/problem/163/C",
    "difficulty": 2100,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "163B. Lemmings",
    "url": "https://codeforces.com/problemset/problem/163/B",
    "difficulty": 2000,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "163A. Substring and Subsequence",
    "url": "https://codeforces.com/problemset/problem/163/A",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162J. Brackets",
    "url": "https://codeforces.com/problemset/problem/162/J",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162I. Truncatable primes",
    "url": "https://codeforces.com/problemset/problem/162/I",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162H. Alternating case",
    "url": "https://codeforces.com/problemset/problem/162/H",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162G. Non-decimal sum",
    "url": "https://codeforces.com/problemset/problem/162/G",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162F. Factorial zeros",
    "url": "https://codeforces.com/problemset/problem/162/F",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162E. HQ9+",
    "url": "https://codeforces.com/problemset/problem/162/E",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162D. Remove digits",
    "url": "https://codeforces.com/problemset/problem/162/D",
    "difficulty": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162C. Prime factorization",
    "url": "https://codeforces.com/problemset/problem/162/C",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162B. Binary notation",
    "url": "https://codeforces.com/problemset/problem/162/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "162A. Pentagonal numbers",
    "url": "https://codeforces.com/problemset/problem/162/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "161E. Polycarpus the Safecracker",
    "url": "https://codeforces.com/problemset/problem/161/E",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "161D. Distance in Tree",
    "url": "https://codeforces.com/problemset/problem/161/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "161C. Abracadabra",
    "url": "https://codeforces.com/problemset/problem/161/C",
    "difficulty": 2400,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "161B. Discounts",
    "url": "https://codeforces.com/problemset/problem/161/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "161A. Dress'em in Vests!",
    "url": "https://codeforces.com/problemset/problem/161/A",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "160E. Buses and People",
    "url": "https://codeforces.com/problemset/problem/160/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "160D. Edges in MST",
    "url": "https://codeforces.com/problemset/problem/160/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "160C. Find Pair",
    "url": "https://codeforces.com/problemset/problem/160/C",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "160B. Unlucky Ticket",
    "url": "https://codeforces.com/problemset/problem/160/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "160A. Twins",
    "url": "https://codeforces.com/problemset/problem/160/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "159E. Zebra Tower",
    "url": "https://codeforces.com/problemset/problem/159/E",
    "difficulty": 1700,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "159D. Palindrome pairs",
    "url": "https://codeforces.com/problemset/problem/159/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "159C. String Manipulation 1.0",
    "url": "https://codeforces.com/problemset/problem/159/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "159B. Matchmaker",
    "url": "https://codeforces.com/problemset/problem/159/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "159A. Friends or Not",
    "url": "https://codeforces.com/problemset/problem/159/A",
    "difficulty": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "158E. Phone Talks",
    "url": "https://codeforces.com/problemset/problem/158/E",
    "difficulty": 1900,
    "tags": [
      "*special",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "158D. Ice Sculptures",
    "url": "https://codeforces.com/problemset/problem/158/D",
    "difficulty": 1300,
    "tags": [
      "*special",
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "158C. Cd and pwd commands",
    "url": "https://codeforces.com/problemset/problem/158/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "158B. Taxi",
    "url": "https://codeforces.com/problemset/problem/158/B",
    "difficulty": 1100,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "158A. Next Round",
    "url": "https://codeforces.com/problemset/problem/158/A",
    "difficulty": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "157B. Trace",
    "url": "https://codeforces.com/problemset/problem/157/B",
    "difficulty": 1000,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "157A. Game Outcome",
    "url": "https://codeforces.com/problemset/problem/157/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "156E. Mrs. Hudson's Pancakes",
    "url": "https://codeforces.com/problemset/problem/156/E",
    "difficulty": 3000,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "156D. Clues",
    "url": "https://codeforces.com/problemset/problem/156/D",
    "difficulty": 2500,
    "tags": [
      "combinatorics",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "156C. Cipher",
    "url": "https://codeforces.com/problemset/problem/156/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "156B. Suspects",
    "url": "https://codeforces.com/problemset/problem/156/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "156A. Message",
    "url": "https://codeforces.com/problemset/problem/156/A",
    "difficulty": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "155B. Combination",
    "url": "https://codeforces.com/problemset/problem/155/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "155A. I_love_\\%username\\%",
    "url": "https://codeforces.com/problemset/problem/155/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "154E. Martian Colony",
    "url": "https://codeforces.com/problemset/problem/154/E",
    "difficulty": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "154D. Flatland Fencing",
    "url": "https://codeforces.com/problemset/problem/154/D",
    "difficulty": 2400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "154C. Double Profiles",
    "url": "https://codeforces.com/problemset/problem/154/C",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "hashing",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "154B. Colliders",
    "url": "https://codeforces.com/problemset/problem/154/B",
    "difficulty": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "154A. Hometask",
    "url": "https://codeforces.com/problemset/problem/154/A",
    "difficulty": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "153E. Euclidean Distance",
    "url": "https://codeforces.com/problemset/problem/153/E",
    "difficulty": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "153D. Date Change",
    "url": "https://codeforces.com/problemset/problem/153/D",
    "difficulty": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "153C. Caesar Cipher",
    "url": "https://codeforces.com/problemset/problem/153/C",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "153B. Binary notation",
    "url": "https://codeforces.com/problemset/problem/153/B",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "153A. A + B",
    "url": "https://codeforces.com/problemset/problem/153/A",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "152E. Garden",
    "url": "https://codeforces.com/problemset/problem/152/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "152D. Frames",
    "url": "https://codeforces.com/problemset/problem/152/D",
    "difficulty": 2600,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "152C. Pocket Book",
    "url": "https://codeforces.com/problemset/problem/152/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "152B. Steps",
    "url": "https://codeforces.com/problemset/problem/152/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "152A. Marks",
    "url": "https://codeforces.com/problemset/problem/152/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "151B. Phone Numbers",
    "url": "https://codeforces.com/problemset/problem/151/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "151A. Soft Drinking",
    "url": "https://codeforces.com/problemset/problem/151/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "150E. Freezing with Style",
    "url": "https://codeforces.com/problemset/problem/150/E",
    "difficulty": 3000,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "150D. Mission Impassable",
    "url": "https://codeforces.com/problemset/problem/150/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "150C. Smart Cheater",
    "url": "https://codeforces.com/problemset/problem/150/C",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "150B. Quantity of Strings",
    "url": "https://codeforces.com/problemset/problem/150/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "150A. Win or Freeze",
    "url": "https://codeforces.com/problemset/problem/150/A",
    "difficulty": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "149E. Martian Strings",
    "url": "https://codeforces.com/problemset/problem/149/E",
    "difficulty": 2300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "149D. Coloring Brackets",
    "url": "https://codeforces.com/problemset/problem/149/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "149C. Division into Teams",
    "url": "https://codeforces.com/problemset/problem/149/C",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "149B. Martian Clock",
    "url": "https://codeforces.com/problemset/problem/149/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "149A. Business trip",
    "url": "https://codeforces.com/problemset/problem/149/A",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "148E. Porcelain",
    "url": "https://codeforces.com/problemset/problem/148/E",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "148D. Bag of mice",
    "url": "https://codeforces.com/problemset/problem/148/D",
    "difficulty": 1800,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "148C. Terse princess",
    "url": "https://codeforces.com/problemset/problem/148/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "148B. Escape",
    "url": "https://codeforces.com/problemset/problem/148/B",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "148A. Insomnia cure",
    "url": "https://codeforces.com/problemset/problem/148/A",
    "difficulty": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "147B. Smile House",
    "url": "https://codeforces.com/problemset/problem/147/B",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "graphs",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "147A. Punctuation",
    "url": "https://codeforces.com/problemset/problem/147/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "146B. Lucky Mask",
    "url": "https://codeforces.com/problemset/problem/146/B",
    "difficulty": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "146A. Lucky Ticket",
    "url": "https://codeforces.com/problemset/problem/146/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "145E. Lucky Queries",
    "url": "https://codeforces.com/problemset/problem/145/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "145D. Lucky Pair",
    "url": "https://codeforces.com/problemset/problem/145/D",
    "difficulty": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "145C. Lucky Subsequence",
    "url": "https://codeforces.com/problemset/problem/145/C",
    "difficulty": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "145B. Lucky Number 2",
    "url": "https://codeforces.com/problemset/problem/145/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "145A. Lucky Conversion",
    "url": "https://codeforces.com/problemset/problem/145/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "144E. Competition",
    "url": "https://codeforces.com/problemset/problem/144/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "144D. Missile Silos",
    "url": "https://codeforces.com/problemset/problem/144/D",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "144C. Anagram Search",
    "url": "https://codeforces.com/problemset/problem/144/C",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "144B. Meeting",
    "url": "https://codeforces.com/problemset/problem/144/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "144A. Arrival of the General",
    "url": "https://codeforces.com/problemset/problem/144/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "143B. Help Kingdom of Far Far Away 2",
    "url": "https://codeforces.com/problemset/problem/143/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "143A. Help Vasilisa the Wise 2",
    "url": "https://codeforces.com/problemset/problem/143/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "142E. Help Greg the Dwarf 2",
    "url": "https://codeforces.com/problemset/problem/142/E",
    "difficulty": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "142D. Help Shrek and Donkey 2",
    "url": "https://codeforces.com/problemset/problem/142/D",
    "difficulty": 2600,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "142C. Help Caretaker",
    "url": "https://codeforces.com/problemset/problem/142/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "142B. Help General",
    "url": "https://codeforces.com/problemset/problem/142/B",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "142A. Help Farmer",
    "url": "https://codeforces.com/problemset/problem/142/A",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "141E. Clearing Up",
    "url": "https://codeforces.com/problemset/problem/141/E",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "141D. Take-off Ramps",
    "url": "https://codeforces.com/problemset/problem/141/D",
    "difficulty": 2300,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "141C. Queue",
    "url": "https://codeforces.com/problemset/problem/141/C",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "141B. Hopscotch",
    "url": "https://codeforces.com/problemset/problem/141/B",
    "difficulty": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "141A. Amusing Joke",
    "url": "https://codeforces.com/problemset/problem/141/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140F. New Year Snowflake",
    "url": "https://codeforces.com/problemset/problem/140/F",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140E. New Year Garland",
    "url": "https://codeforces.com/problemset/problem/140/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140D. New Year Contest",
    "url": "https://codeforces.com/problemset/problem/140/D",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140C. New Year Snowmen",
    "url": "https://codeforces.com/problemset/problem/140/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140B. New Year Cards",
    "url": "https://codeforces.com/problemset/problem/140/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "140A. New Year Table",
    "url": "https://codeforces.com/problemset/problem/140/A",
    "difficulty": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "139B. Wallpaper",
    "url": "https://codeforces.com/problemset/problem/139/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "139A. Petr and Book",
    "url": "https://codeforces.com/problemset/problem/139/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "138E. Hellish Constraints",
    "url": "https://codeforces.com/problemset/problem/138/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "138D. World of Darkraft",
    "url": "https://codeforces.com/problemset/problem/138/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "138C. Mushroom Gnomes - 2",
    "url": "https://codeforces.com/problemset/problem/138/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "probabilities",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "138B. Digits Permutations",
    "url": "https://codeforces.com/problemset/problem/138/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "138A. Literature Lesson",
    "url": "https://codeforces.com/problemset/problem/138/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "137E. Last Chance",
    "url": "https://codeforces.com/problemset/problem/137/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "137D. Palindromes",
    "url": "https://codeforces.com/problemset/problem/137/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "137C. History",
    "url": "https://codeforces.com/problemset/problem/137/C",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "137B. Permutation",
    "url": "https://codeforces.com/problemset/problem/137/B",
    "difficulty": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "137A. Postcards and photos",
    "url": "https://codeforces.com/problemset/problem/137/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "136B. Ternary Logic",
    "url": "https://codeforces.com/problemset/problem/136/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "136A. Presents",
    "url": "https://codeforces.com/problemset/problem/136/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "135E. Weak Subsequence",
    "url": "https://codeforces.com/problemset/problem/135/E",
    "difficulty": 3000,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "135D. Cycle",
    "url": "https://codeforces.com/problemset/problem/135/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "135C. Zero-One",
    "url": "https://codeforces.com/problemset/problem/135/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "135B. Rectangle and Square",
    "url": "https://codeforces.com/problemset/problem/135/B",
    "difficulty": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "135A. Replacement",
    "url": "https://codeforces.com/problemset/problem/135/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "134C. Swaps",
    "url": "https://codeforces.com/problemset/problem/134/C",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "134B. Pairs of Numbers",
    "url": "https://codeforces.com/problemset/problem/134/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "134A. Average Numbers",
    "url": "https://codeforces.com/problemset/problem/134/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "133B. Unary",
    "url": "https://codeforces.com/problemset/problem/133/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "133A. HQ9+",
    "url": "https://codeforces.com/problemset/problem/133/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "132E. Bits of merry old England",
    "url": "https://codeforces.com/problemset/problem/132/E",
    "difficulty": 2700,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "132D. Constants in the language of Shakespeare",
    "url": "https://codeforces.com/problemset/problem/132/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "132C. Logo Turtle",
    "url": "https://codeforces.com/problemset/problem/132/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "132B. Piet",
    "url": "https://codeforces.com/problemset/problem/132/B",
    "difficulty": 2100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "132A. Turing Tape",
    "url": "https://codeforces.com/problemset/problem/132/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131F. Present to Mom",
    "url": "https://codeforces.com/problemset/problem/131/F",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131E. Yet Another Task with Queens",
    "url": "https://codeforces.com/problemset/problem/131/E",
    "difficulty": 1700,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131D. Subway",
    "url": "https://codeforces.com/problemset/problem/131/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131C. The World is a Theatre",
    "url": "https://codeforces.com/problemset/problem/131/C",
    "difficulty": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131B. Opposites Attract",
    "url": "https://codeforces.com/problemset/problem/131/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "131A. cAPS lOCK",
    "url": "https://codeforces.com/problemset/problem/131/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130J. Date calculation",
    "url": "https://codeforces.com/problemset/problem/130/J",
    "difficulty": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130I. Array sorting",
    "url": "https://codeforces.com/problemset/problem/130/I",
    "difficulty": 2300,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130H. Balanced brackets",
    "url": "https://codeforces.com/problemset/problem/130/H",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130G. CAPS LOCK ON",
    "url": "https://codeforces.com/problemset/problem/130/G",
    "difficulty": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130F. Prime factorization",
    "url": "https://codeforces.com/problemset/problem/130/F",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130E. Tribonacci numbers",
    "url": "https://codeforces.com/problemset/problem/130/E",
    "difficulty": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130D. Exponentiation",
    "url": "https://codeforces.com/problemset/problem/130/D",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130C. Decimal sum",
    "url": "https://codeforces.com/problemset/problem/130/C",
    "difficulty": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130B. Gnikool Ssalg",
    "url": "https://codeforces.com/problemset/problem/130/B",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "130A. Hexagonal numbers",
    "url": "https://codeforces.com/problemset/problem/130/A",
    "difficulty": 900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "129B. Students and Shoelaces",
    "url": "https://codeforces.com/problemset/problem/129/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "129A. Cookies",
    "url": "https://codeforces.com/problemset/problem/129/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "128E. Birthday",
    "url": "https://codeforces.com/problemset/problem/128/E",
    "difficulty": 2900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "128D. Numbers",
    "url": "https://codeforces.com/problemset/problem/128/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "128C. Games with Rectangle",
    "url": "https://codeforces.com/problemset/problem/128/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "128B. String",
    "url": "https://codeforces.com/problemset/problem/128/B",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "128A. Statues",
    "url": "https://codeforces.com/problemset/problem/128/A",
    "difficulty": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "127B. Canvas Frames",
    "url": "https://codeforces.com/problemset/problem/127/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "127A. Wasted Time",
    "url": "https://codeforces.com/problemset/problem/127/A",
    "difficulty": 900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "126E. Pills",
    "url": "https://codeforces.com/problemset/problem/126/E",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "126D. Fibonacci Sums",
    "url": "https://codeforces.com/problemset/problem/126/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "126C. E-reader Display",
    "url": "https://codeforces.com/problemset/problem/126/C",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "126B. Password",
    "url": "https://codeforces.com/problemset/problem/126/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "126A. Hot Bath",
    "url": "https://codeforces.com/problemset/problem/126/A",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "125E. MST Company",
    "url": "https://codeforces.com/problemset/problem/125/E",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "125D. Two progressions",
    "url": "https://codeforces.com/problemset/problem/125/D",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "125C. Hobbits' Party",
    "url": "https://codeforces.com/problemset/problem/125/C",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "125B. Simple XML",
    "url": "https://codeforces.com/problemset/problem/125/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "125A. Measuring Lengths in Baden",
    "url": "https://codeforces.com/problemset/problem/125/A",
    "difficulty": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "124B. Permutations",
    "url": "https://codeforces.com/problemset/problem/124/B",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "124A. The number of positions",
    "url": "https://codeforces.com/problemset/problem/124/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "123E. Maze",
    "url": "https://codeforces.com/problemset/problem/123/E",
    "difficulty": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "123D. String",
    "url": "https://codeforces.com/problemset/problem/123/D",
    "difficulty": 2300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "123C. Brackets",
    "url": "https://codeforces.com/problemset/problem/123/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "123B. Squares",
    "url": "https://codeforces.com/problemset/problem/123/B",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "123A. Prime Permutation",
    "url": "https://codeforces.com/problemset/problem/123/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "number theory",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "122B. Lucky Substring",
    "url": "https://codeforces.com/problemset/problem/122/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "122A. Lucky Division",
    "url": "https://codeforces.com/problemset/problem/122/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "121E. Lucky Array",
    "url": "https://codeforces.com/problemset/problem/121/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "121D. Lucky Segments",
    "url": "https://codeforces.com/problemset/problem/121/D",
    "difficulty": 2500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "121C. Lucky Permutation",
    "url": "https://codeforces.com/problemset/problem/121/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "121B. Lucky Transformation",
    "url": "https://codeforces.com/problemset/problem/121/B",
    "difficulty": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "121A. Lucky Sum",
    "url": "https://codeforces.com/problemset/problem/121/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120J. Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/120/J",
    "difficulty": 1900,
    "tags": [
      "divide and conquer",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120I. Luck is in Numbers",
    "url": "https://codeforces.com/problemset/problem/120/I",
    "difficulty": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120H. Brevity is Soul of Wit",
    "url": "https://codeforces.com/problemset/problem/120/H",
    "difficulty": 1800,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120G. Boom",
    "url": "https://codeforces.com/problemset/problem/120/G",
    "difficulty": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120F. Spiders",
    "url": "https://codeforces.com/problemset/problem/120/F",
    "difficulty": 1400,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120E. Put Knight!",
    "url": "https://codeforces.com/problemset/problem/120/E",
    "difficulty": 1400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120D. Three Sons",
    "url": "https://codeforces.com/problemset/problem/120/D",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120C. Winnie-the-Pooh and honey",
    "url": "https://codeforces.com/problemset/problem/120/C",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120B. Quiz League",
    "url": "https://codeforces.com/problemset/problem/120/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "120A. Elevator",
    "url": "https://codeforces.com/problemset/problem/120/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "119E. Alternative Reality",
    "url": "https://codeforces.com/problemset/problem/119/E",
    "difficulty": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "119D. String Transformation",
    "url": "https://codeforces.com/problemset/problem/119/D",
    "difficulty": 2500,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "119C. Education Reform",
    "url": "https://codeforces.com/problemset/problem/119/C",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "119B. Before Exam",
    "url": "https://codeforces.com/problemset/problem/119/B",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "119A. Epic Game",
    "url": "https://codeforces.com/problemset/problem/119/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "118E. Bertown roads",
    "url": "https://codeforces.com/problemset/problem/118/E",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "118D. Caesar's Legions",
    "url": "https://codeforces.com/problemset/problem/118/D",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "118C. Fancy Number",
    "url": "https://codeforces.com/problemset/problem/118/C",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "118B. Present from Lena",
    "url": "https://codeforces.com/problemset/problem/118/B",
    "difficulty": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "118A. String Task",
    "url": "https://codeforces.com/problemset/problem/118/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "117E. Tree or not Tree",
    "url": "https://codeforces.com/problemset/problem/117/E",
    "difficulty": 2900,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "117D. Not Quick Transformation",
    "url": "https://codeforces.com/problemset/problem/117/D",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "117C. Cycle",
    "url": "https://codeforces.com/problemset/problem/117/C",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "117B. Very Interesting Game",
    "url": "https://codeforces.com/problemset/problem/117/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "117A. Elevator",
    "url": "https://codeforces.com/problemset/problem/117/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "116B. Little Pigs and Wolves",
    "url": "https://codeforces.com/problemset/problem/116/B",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "116A. Tram",
    "url": "https://codeforces.com/problemset/problem/116/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "115E. Linear Kingdom Races",
    "url": "https://codeforces.com/problemset/problem/115/E",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "115D. Unambiguous Arithmetic Expression",
    "url": "https://codeforces.com/problemset/problem/115/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "115C. Plumber",
    "url": "https://codeforces.com/problemset/problem/115/C",
    "difficulty": 2200,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "115B. Lawnmower",
    "url": "https://codeforces.com/problemset/problem/115/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "115A. Party",
    "url": "https://codeforces.com/problemset/problem/115/A",
    "difficulty": 900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "114B. PFAST Inc.",
    "url": "https://codeforces.com/problemset/problem/114/B",
    "difficulty": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "114A. Cifera",
    "url": "https://codeforces.com/problemset/problem/114/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "113E. Sleeping",
    "url": "https://codeforces.com/problemset/problem/113/E",
    "difficulty": 2700,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "113D. Museum",
    "url": "https://codeforces.com/problemset/problem/113/D",
    "difficulty": 2700,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "113C. Double Happiness",
    "url": "https://codeforces.com/problemset/problem/113/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "113B. Petr#",
    "url": "https://codeforces.com/problemset/problem/113/B",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "113A. Grammar Lessons",
    "url": "https://codeforces.com/problemset/problem/113/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "112B. Petya and Square",
    "url": "https://codeforces.com/problemset/problem/112/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "112A. Petya and Strings",
    "url": "https://codeforces.com/problemset/problem/112/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "111E. Petya and Rectangle",
    "url": "https://codeforces.com/problemset/problem/111/E",
    "difficulty": 2900,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "111D. Petya and Coloring",
    "url": "https://codeforces.com/problemset/problem/111/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "111C. Petya and Spiders",
    "url": "https://codeforces.com/problemset/problem/111/C",
    "difficulty": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "111B. Petya and Divisors",
    "url": "https://codeforces.com/problemset/problem/111/B",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "111A. Petya and Inequiations",
    "url": "https://codeforces.com/problemset/problem/111/A",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "110B. Lucky String",
    "url": "https://codeforces.com/problemset/problem/110/B",
    "difficulty": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "110A. Nearly Lucky Number",
    "url": "https://codeforces.com/problemset/problem/110/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "109E. Lucky Interval",
    "url": "https://codeforces.com/problemset/problem/109/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "109D. Lucky Sorting",
    "url": "https://codeforces.com/problemset/problem/109/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "109C. Lucky Tree",
    "url": "https://codeforces.com/problemset/problem/109/C",
    "difficulty": 1900,
    "tags": [
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "109B. Lucky Probability",
    "url": "https://codeforces.com/problemset/problem/109/B",
    "difficulty": 1900,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "109A. Lucky Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/109/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "108B. Datatypes",
    "url": "https://codeforces.com/problemset/problem/108/B",
    "difficulty": 1400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "108A. Palindromic Times",
    "url": "https://codeforces.com/problemset/problem/108/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "107E. Darts",
    "url": "https://codeforces.com/problemset/problem/107/E",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "107D. Crime Management",
    "url": "https://codeforces.com/problemset/problem/107/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "107C. Arrangement",
    "url": "https://codeforces.com/problemset/problem/107/C",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "107B. Basketball Team",
    "url": "https://codeforces.com/problemset/problem/107/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "107A. Dorm Water Supply",
    "url": "https://codeforces.com/problemset/problem/107/A",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "106E. Space Rescuers",
    "url": "https://codeforces.com/problemset/problem/106/E",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "106D. Treasure Island",
    "url": "https://codeforces.com/problemset/problem/106/D",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "106C. Buns",
    "url": "https://codeforces.com/problemset/problem/106/C",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "106B. Choosing Laptop",
    "url": "https://codeforces.com/problemset/problem/106/B",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "106A. Card Game",
    "url": "https://codeforces.com/problemset/problem/106/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "105E. Lift and Throw",
    "url": "https://codeforces.com/problemset/problem/105/E",
    "difficulty": 2500,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "105D. Entertaining Geodetics",
    "url": "https://codeforces.com/problemset/problem/105/D",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "105C. Item World",
    "url": "https://codeforces.com/problemset/problem/105/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "105B. Dark Assembly",
    "url": "https://codeforces.com/problemset/problem/105/B",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "105A. Transmigration",
    "url": "https://codeforces.com/problemset/problem/105/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "104A. Blackjack",
    "url": "https://codeforces.com/problemset/problem/104/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "103E. Buying Sets",
    "url": "https://codeforces.com/problemset/problem/103/E",
    "difficulty": 2900,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "103D. Time to Raid Cowavans",
    "url": "https://codeforces.com/problemset/problem/103/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "103C. Russian Roulette",
    "url": "https://codeforces.com/problemset/problem/103/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "103B. Cthulhu",
    "url": "https://codeforces.com/problemset/problem/103/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "103A. Testing Pants for Sadness",
    "url": "https://codeforces.com/problemset/problem/103/A",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "102B. Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/102/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "102A. Clothes",
    "url": "https://codeforces.com/problemset/problem/102/A",
    "difficulty": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "101E. Candies and Stones",
    "url": "https://codeforces.com/problemset/problem/101/E",
    "difficulty": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "101D. Castle",
    "url": "https://codeforces.com/problemset/problem/101/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "greedy",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "101C. Vectors",
    "url": "https://codeforces.com/problemset/problem/101/C",
    "difficulty": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "101B. Buses",
    "url": "https://codeforces.com/problemset/problem/101/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "101A. Homework",
    "url": "https://codeforces.com/problemset/problem/101/A",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100J. Interval Coloring",
    "url": "https://codeforces.com/problemset/problem/100/J",
    "difficulty": 2400,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100I. Rotation",
    "url": "https://codeforces.com/problemset/problem/100/I",
    "difficulty": 1500,
    "tags": [
      "*special",
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100H. Battleship",
    "url": "https://codeforces.com/problemset/problem/100/H",
    "difficulty": 2100,
    "tags": [
      "*special",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100G. Name the album",
    "url": "https://codeforces.com/problemset/problem/100/G",
    "difficulty": 1800,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100F. Polynom",
    "url": "https://codeforces.com/problemset/problem/100/F",
    "difficulty": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100E. Lamps in a Line",
    "url": "https://codeforces.com/problemset/problem/100/E",
    "difficulty": 1600,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100D. World of Mouth",
    "url": "https://codeforces.com/problemset/problem/100/D",
    "difficulty": 1500,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100C. A+B",
    "url": "https://codeforces.com/problemset/problem/100/C",
    "difficulty": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100B. Friendly Numbers",
    "url": "https://codeforces.com/problemset/problem/100/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "100A. Carpeting the Room",
    "url": "https://codeforces.com/problemset/problem/100/A",
    "difficulty": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "99B. Help Chef Gerasim",
    "url": "https://codeforces.com/problemset/problem/99/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "99A. Help Far Away Kingdom",
    "url": "https://codeforces.com/problemset/problem/99/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "98E. Help Shrek and Donkey",
    "url": "https://codeforces.com/problemset/problem/98/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "98D. Help Monks",
    "url": "https://codeforces.com/problemset/problem/98/D",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "98C. Help Greg the Dwarf",
    "url": "https://codeforces.com/problemset/problem/98/C",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "98B. Help King",
    "url": "https://codeforces.com/problemset/problem/98/B",
    "difficulty": 2200,
    "tags": [
      "implementation",
      "probabilities",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "98A. Help Victoria the Wise",
    "url": "https://codeforces.com/problemset/problem/98/A",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "97E. Leaders",
    "url": "https://codeforces.com/problemset/problem/97/E",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "97D. Robot in Basement",
    "url": "https://codeforces.com/problemset/problem/97/D",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "97C. Winning Strategy",
    "url": "https://codeforces.com/problemset/problem/97/C",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "97B. Superset",
    "url": "https://codeforces.com/problemset/problem/97/B",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "97A. Domino",
    "url": "https://codeforces.com/problemset/problem/97/A",
    "difficulty": 2400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "96B. Lucky Numbers (easy)",
    "url": "https://codeforces.com/problemset/problem/96/B",
    "difficulty": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "96A. Football",
    "url": "https://codeforces.com/problemset/problem/96/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "95E. Lucky Country",
    "url": "https://codeforces.com/problemset/problem/95/E",
    "difficulty": 2500,
    "tags": [
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "95D. Horse Races",
    "url": "https://codeforces.com/problemset/problem/95/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "95C. Volleyball",
    "url": "https://codeforces.com/problemset/problem/95/C",
    "difficulty": 1900,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "95B. Lucky Numbers",
    "url": "https://codeforces.com/problemset/problem/95/B",
    "difficulty": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "95A. Hockey",
    "url": "https://codeforces.com/problemset/problem/95/A",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "94B. Friends",
    "url": "https://codeforces.com/problemset/problem/94/B",
    "difficulty": 1300,
    "tags": [
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "94A. Restoring Password",
    "url": "https://codeforces.com/problemset/problem/94/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "93E. Lostborn",
    "url": "https://codeforces.com/problemset/problem/93/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "93D. Flags",
    "url": "https://codeforces.com/problemset/problem/93/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "93C. Azembler",
    "url": "https://codeforces.com/problemset/problem/93/C",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "93B. End of Exams",
    "url": "https://codeforces.com/problemset/problem/93/B",
    "difficulty": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "93A. Frames",
    "url": "https://codeforces.com/problemset/problem/93/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "92B. Binary Number",
    "url": "https://codeforces.com/problemset/problem/92/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "92A. Chips",
    "url": "https://codeforces.com/problemset/problem/92/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "91E. Igloo Skyscraper",
    "url": "https://codeforces.com/problemset/problem/91/E",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "91D. Grocer's Problem",
    "url": "https://codeforces.com/problemset/problem/91/D",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "91C. Ski Base",
    "url": "https://codeforces.com/problemset/problem/91/C",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "91B. Queue",
    "url": "https://codeforces.com/problemset/problem/91/B",
    "difficulty": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "91A. Newspaper Headline",
    "url": "https://codeforces.com/problemset/problem/91/A",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "90B. African Crossword",
    "url": "https://codeforces.com/problemset/problem/90/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "90A. Cableway",
    "url": "https://codeforces.com/problemset/problem/90/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "89E. Fire and Ice",
    "url": "https://codeforces.com/problemset/problem/89/E",
    "difficulty": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "89D. Space mines",
    "url": "https://codeforces.com/problemset/problem/89/D",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "89C. Chip Play",
    "url": "https://codeforces.com/problemset/problem/89/C",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "89B. Widget Library",
    "url": "https://codeforces.com/problemset/problem/89/B",
    "difficulty": 2300,
    "tags": [
      "dp",
      "expression parsing",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "89A. Robbery",
    "url": "https://codeforces.com/problemset/problem/89/A",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "88B. Keyboard",
    "url": "https://codeforces.com/problemset/problem/88/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "88A. Chord",
    "url": "https://codeforces.com/problemset/problem/88/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "87E. Mogohu-Rea Idol",
    "url": "https://codeforces.com/problemset/problem/87/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "87D. Beautiful Road",
    "url": "https://codeforces.com/problemset/problem/87/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "87C. Interesting Game",
    "url": "https://codeforces.com/problemset/problem/87/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "87B. Vasya and Types",
    "url": "https://codeforces.com/problemset/problem/87/B",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "87A. Trains",
    "url": "https://codeforces.com/problemset/problem/87/A",
    "difficulty": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "86E. Long sequence",
    "url": "https://codeforces.com/problemset/problem/86/E",
    "difficulty": 2700,
    "tags": [
      "brute force",
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "86D. Powerful array",
    "url": "https://codeforces.com/problemset/problem/86/D",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "86C. Genetic engineering",
    "url": "https://codeforces.com/problemset/problem/86/C",
    "difficulty": 2500,
    "tags": [
      "dp",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "86B. Tetris revisited",
    "url": "https://codeforces.com/problemset/problem/86/B",
    "difficulty": 2200,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "86A. Reflection",
    "url": "https://codeforces.com/problemset/problem/86/A",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "85E. Guard Towers",
    "url": "https://codeforces.com/problemset/problem/85/E",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "dsu",
      "geometry",
      "graphs",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "85D. Sum of Medians",
    "url": "https://codeforces.com/problemset/problem/85/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "85C. Petya and Tree",
    "url": "https://codeforces.com/problemset/problem/85/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "85B. Embassy Queue",
    "url": "https://codeforces.com/problemset/problem/85/B",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "85A. Domino",
    "url": "https://codeforces.com/problemset/problem/85/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "84C. Biathlon",
    "url": "https://codeforces.com/problemset/problem/84/C",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "84A. Toy Army",
    "url": "https://codeforces.com/problemset/problem/84/A",
    "difficulty": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "83E. Two Subsequences",
    "url": "https://codeforces.com/problemset/problem/83/E",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "83D. Numbers",
    "url": "https://codeforces.com/problemset/problem/83/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "83C. Track",
    "url": "https://codeforces.com/problemset/problem/83/C",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "83B. Doctor",
    "url": "https://codeforces.com/problemset/problem/83/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "83A. Magical Array",
    "url": "https://codeforces.com/problemset/problem/83/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "82E. Corridor",
    "url": "https://codeforces.com/problemset/problem/82/E",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "82D. Two out of Three",
    "url": "https://codeforces.com/problemset/problem/82/D",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "82C. General Mobilization",
    "url": "https://codeforces.com/problemset/problem/82/C",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "82B. Sets",
    "url": "https://codeforces.com/problemset/problem/82/B",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "82A. Double Cola",
    "url": "https://codeforces.com/problemset/problem/82/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "81E. Pairs",
    "url": "https://codeforces.com/problemset/problem/81/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "81D. Polycarp's Picture Gallery",
    "url": "https://codeforces.com/problemset/problem/81/D",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "81C. Average Score",
    "url": "https://codeforces.com/problemset/problem/81/C",
    "difficulty": 1700,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "81B. Sequence Formatting",
    "url": "https://codeforces.com/problemset/problem/81/B",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "81A. Plug-in",
    "url": "https://codeforces.com/problemset/problem/81/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "80B. Depression",
    "url": "https://codeforces.com/problemset/problem/80/B",
    "difficulty": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "80A. Panoramix's Prediction",
    "url": "https://codeforces.com/problemset/problem/80/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "79E. Security System",
    "url": "https://codeforces.com/problemset/problem/79/E",
    "difficulty": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "79D. Password",
    "url": "https://codeforces.com/problemset/problem/79/D",
    "difficulty": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "79C. Beaver",
    "url": "https://codeforces.com/problemset/problem/79/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "79B. Colorful Field",
    "url": "https://codeforces.com/problemset/problem/79/B",
    "difficulty": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "79A. Bus Game",
    "url": "https://codeforces.com/problemset/problem/79/A",
    "difficulty": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "78E. Evacuation",
    "url": "https://codeforces.com/problemset/problem/78/E",
    "difficulty": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "78D. Archer's Shot",
    "url": "https://codeforces.com/problemset/problem/78/D",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "78C. Beaver Game",
    "url": "https://codeforces.com/problemset/problem/78/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "78B. Easter Eggs",
    "url": "https://codeforces.com/problemset/problem/78/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "78A. Haiku",
    "url": "https://codeforces.com/problemset/problem/78/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "77E. Martian Food",
    "url": "https://codeforces.com/problemset/problem/77/E",
    "difficulty": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "77D. Domino Carpet",
    "url": "https://codeforces.com/problemset/problem/77/D",
    "difficulty": 2300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "77C. Beavermuncher-0xFF",
    "url": "https://codeforces.com/problemset/problem/77/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "77B. Falling Anvils",
    "url": "https://codeforces.com/problemset/problem/77/B",
    "difficulty": 1800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "77A. Heroes",
    "url": "https://codeforces.com/problemset/problem/77/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76F. Tourist",
    "url": "https://codeforces.com/problemset/problem/76/F",
    "difficulty": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76E. Points",
    "url": "https://codeforces.com/problemset/problem/76/E",
    "difficulty": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76D. Plus and xor",
    "url": "https://codeforces.com/problemset/problem/76/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76C. Mutation",
    "url": "https://codeforces.com/problemset/problem/76/C",
    "difficulty": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76B. Mice",
    "url": "https://codeforces.com/problemset/problem/76/B",
    "difficulty": 2100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "76A. Gift",
    "url": "https://codeforces.com/problemset/problem/76/A",
    "difficulty": 2200,
    "tags": [
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "75E. Ship's Shortest Path",
    "url": "https://codeforces.com/problemset/problem/75/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "75D. Big Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/75/D",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "75C. Modified GCD",
    "url": "https://codeforces.com/problemset/problem/75/C",
    "difficulty": 1600,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "75B. Facetook Priority Wall",
    "url": "https://codeforces.com/problemset/problem/75/B",
    "difficulty": 1500,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "75A. Life Without Zeros",
    "url": "https://codeforces.com/problemset/problem/75/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "74E. Shift It!",
    "url": "https://codeforces.com/problemset/problem/74/E",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "74D. Hanger",
    "url": "https://codeforces.com/problemset/problem/74/D",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "74C. Chessboard Billiard",
    "url": "https://codeforces.com/problemset/problem/74/C",
    "difficulty": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "74B. Train",
    "url": "https://codeforces.com/problemset/problem/74/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "74A. Room Leader",
    "url": "https://codeforces.com/problemset/problem/74/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73F. Plane of Tanks",
    "url": "https://codeforces.com/problemset/problem/73/F",
    "difficulty": 2900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73E. Morrowindows",
    "url": "https://codeforces.com/problemset/problem/73/E",
    "difficulty": 2400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73D. FreeDiv",
    "url": "https://codeforces.com/problemset/problem/73/D",
    "difficulty": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73C. LionAge II",
    "url": "https://codeforces.com/problemset/problem/73/C",
    "difficulty": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73B. Need For Brake",
    "url": "https://codeforces.com/problemset/problem/73/B",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "73A. The Elder Trolls IV: Oblivon",
    "url": "https://codeforces.com/problemset/problem/73/A",
    "difficulty": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72I. Goofy Numbers",
    "url": "https://codeforces.com/problemset/problem/72/I",
    "difficulty": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72H. Reverse It!",
    "url": "https://codeforces.com/problemset/problem/72/H",
    "difficulty": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72G. Fibonacci army",
    "url": "https://codeforces.com/problemset/problem/72/G",
    "difficulty": 1000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72F. Oil",
    "url": "https://codeforces.com/problemset/problem/72/F",
    "difficulty": 1900,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72E. Ali goes shopping",
    "url": "https://codeforces.com/problemset/problem/72/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72D. Perse-script",
    "url": "https://codeforces.com/problemset/problem/72/D",
    "difficulty": 2300,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72C. Extraordinarily Nice Numbers",
    "url": "https://codeforces.com/problemset/problem/72/C",
    "difficulty": 1200,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72B. INI-file",
    "url": "https://codeforces.com/problemset/problem/72/B",
    "difficulty": 2200,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "72A. Goshtasp, Vishtasp and Eidi",
    "url": "https://codeforces.com/problemset/problem/72/A",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "71E. Nuclear Fusion",
    "url": "https://codeforces.com/problemset/problem/71/E",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "71D. Solitaire",
    "url": "https://codeforces.com/problemset/problem/71/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "71C. Round Table Knights",
    "url": "https://codeforces.com/problemset/problem/71/C",
    "difficulty": 1600,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "71B. Progress Bar",
    "url": "https://codeforces.com/problemset/problem/71/B",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "71A. Way Too Long Words",
    "url": "https://codeforces.com/problemset/problem/71/A",
    "difficulty": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "70E. Information Reform",
    "url": "https://codeforces.com/problemset/problem/70/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "70D. Professor's task",
    "url": "https://codeforces.com/problemset/problem/70/D",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "70C. Lucky Tickets",
    "url": "https://codeforces.com/problemset/problem/70/C",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "70B. Text Messaging",
    "url": "https://codeforces.com/problemset/problem/70/B",
    "difficulty": 1600,
    "tags": [
      "expression parsing",
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "70A. Cookies",
    "url": "https://codeforces.com/problemset/problem/70/A",
    "difficulty": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "69E. Subsegments",
    "url": "https://codeforces.com/problemset/problem/69/E",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "69D. Dot",
    "url": "https://codeforces.com/problemset/problem/69/D",
    "difficulty": 1900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "69C. Game",
    "url": "https://codeforces.com/problemset/problem/69/C",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "69B. Bets",
    "url": "https://codeforces.com/problemset/problem/69/B",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "69A. Young Physicist",
    "url": "https://codeforces.com/problemset/problem/69/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "68E. Contact",
    "url": "https://codeforces.com/problemset/problem/68/E",
    "difficulty": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "68D. Half-decay tree",
    "url": "https://codeforces.com/problemset/problem/68/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "68C. Synchrophasotron",
    "url": "https://codeforces.com/problemset/problem/68/C",
    "difficulty": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "68B. Energy exchange",
    "url": "https://codeforces.com/problemset/problem/68/B",
    "difficulty": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "68A. Irrational problem",
    "url": "https://codeforces.com/problemset/problem/68/A",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "67E. Save the City!",
    "url": "https://codeforces.com/problemset/problem/67/E",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "67D. Optical Experiment",
    "url": "https://codeforces.com/problemset/problem/67/D",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "67C. Sequence of Balls",
    "url": "https://codeforces.com/problemset/problem/67/C",
    "difficulty": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "67B. Restoration of the Permutation",
    "url": "https://codeforces.com/problemset/problem/67/B",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "67A. Partial Teacher",
    "url": "https://codeforces.com/problemset/problem/67/A",
    "difficulty": 1800,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "66E. Petya and Post",
    "url": "https://codeforces.com/problemset/problem/66/E",
    "difficulty": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "66D. Petya and His Friends",
    "url": "https://codeforces.com/problemset/problem/66/D",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "66C. Petya and File System",
    "url": "https://codeforces.com/problemset/problem/66/C",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "66B. Petya and Countryside",
    "url": "https://codeforces.com/problemset/problem/66/B",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "66A. Petya and Java",
    "url": "https://codeforces.com/problemset/problem/66/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "65E. Harry Potter and Moving Staircases",
    "url": "https://codeforces.com/problemset/problem/65/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "65D. Harry Potter and the Sorting Hat",
    "url": "https://codeforces.com/problemset/problem/65/D",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "65C. Harry Potter and the Golden Snitch",
    "url": "https://codeforces.com/problemset/problem/65/C",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "65B. Harry Potter and the History of Magic",
    "url": "https://codeforces.com/problemset/problem/65/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "65A. Harry Potter and Three Spells",
    "url": "https://codeforces.com/problemset/problem/65/A",
    "difficulty": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64I. Sort the Table",
    "url": "https://codeforces.com/problemset/problem/64/I",
    "difficulty": 2400,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64H. Table Bowling",
    "url": "https://codeforces.com/problemset/problem/64/H",
    "difficulty": 2300,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64G. Path Canonization",
    "url": "https://codeforces.com/problemset/problem/64/G",
    "difficulty": 2200,
    "tags": [
      "*special"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64F. Domain",
    "url": "https://codeforces.com/problemset/problem/64/F",
    "difficulty": 2000,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64E. Prime Segment",
    "url": "https://codeforces.com/problemset/problem/64/E",
    "difficulty": 1800,
    "tags": [
      "*special",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64D. Presents",
    "url": "https://codeforces.com/problemset/problem/64/D",
    "difficulty": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64C. Table",
    "url": "https://codeforces.com/problemset/problem/64/C",
    "difficulty": 1600,
    "tags": [
      "*special",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64B. Expression",
    "url": "https://codeforces.com/problemset/problem/64/B",
    "difficulty": 1500,
    "tags": [
      "*special",
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "64A. Factorial",
    "url": "https://codeforces.com/problemset/problem/64/A",
    "difficulty": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "63E. Sweets Game",
    "url": "https://codeforces.com/problemset/problem/63/E",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "63D. Dividing Island",
    "url": "https://codeforces.com/problemset/problem/63/D",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "63C. Bulls and Cows",
    "url": "https://codeforces.com/problemset/problem/63/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "63B. Settlers' Training",
    "url": "https://codeforces.com/problemset/problem/63/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "63A. Sinking Ship",
    "url": "https://codeforces.com/problemset/problem/63/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "62E. World Evil",
    "url": "https://codeforces.com/problemset/problem/62/E",
    "difficulty": 2700,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "62D. Wormhouse",
    "url": "https://codeforces.com/problemset/problem/62/D",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "62C. Inquisition",
    "url": "https://codeforces.com/problemset/problem/62/C",
    "difficulty": 2300,
    "tags": [
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "62B. Tyndex.Brome",
    "url": "https://codeforces.com/problemset/problem/62/B",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "62A. A Student's Dream",
    "url": "https://codeforces.com/problemset/problem/62/A",
    "difficulty": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "61E. Enemy is weak",
    "url": "https://codeforces.com/problemset/problem/61/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "61D. Eternal Victory",
    "url": "https://codeforces.com/problemset/problem/61/D",
    "difficulty": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "61C. Capture Valerian",
    "url": "https://codeforces.com/problemset/problem/61/C",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "61B. Hard Work",
    "url": "https://codeforces.com/problemset/problem/61/B",
    "difficulty": 1300,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "61A. Ultra-Fast Mathematician",
    "url": "https://codeforces.com/problemset/problem/61/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "60E. Mushroom Gnomes",
    "url": "https://codeforces.com/problemset/problem/60/E",
    "difficulty": 2600,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "60D. Savior",
    "url": "https://codeforces.com/problemset/problem/60/D",
    "difficulty": 2500,
    "tags": [
      "brute force",
      "dsu",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "60C. Mushroom Strife",
    "url": "https://codeforces.com/problemset/problem/60/C",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "60B. Serial Time!",
    "url": "https://codeforces.com/problemset/problem/60/B",
    "difficulty": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "60A. Where Are My Flakes?",
    "url": "https://codeforces.com/problemset/problem/60/A",
    "difficulty": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "59E. Shortest Path",
    "url": "https://codeforces.com/problemset/problem/59/E",
    "difficulty": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "59D. Team Arrangement",
    "url": "https://codeforces.com/problemset/problem/59/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "59C. Title",
    "url": "https://codeforces.com/problemset/problem/59/C",
    "difficulty": 1600,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "59B. Fortune Telling",
    "url": "https://codeforces.com/problemset/problem/59/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "59A. Word",
    "url": "https://codeforces.com/problemset/problem/59/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "58E. Expression",
    "url": "https://codeforces.com/problemset/problem/58/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "58D. Calendar",
    "url": "https://codeforces.com/problemset/problem/58/D",
    "difficulty": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "58C. Trees",
    "url": "https://codeforces.com/problemset/problem/58/C",
    "difficulty": 1800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "58B. Coins",
    "url": "https://codeforces.com/problemset/problem/58/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "58A. Chat room",
    "url": "https://codeforces.com/problemset/problem/58/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "57E. Chess",
    "url": "https://codeforces.com/problemset/problem/57/E",
    "difficulty": 3000,
    "tags": [
      "math",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "57D. Journey",
    "url": "https://codeforces.com/problemset/problem/57/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "57C. Array",
    "url": "https://codeforces.com/problemset/problem/57/C",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "57B. Martian Architecture",
    "url": "https://codeforces.com/problemset/problem/57/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "57A. Square Earth?",
    "url": "https://codeforces.com/problemset/problem/57/A",
    "difficulty": 1300,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "56E. Domino Principle",
    "url": "https://codeforces.com/problemset/problem/56/E",
    "difficulty": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "56D. Changing a String",
    "url": "https://codeforces.com/problemset/problem/56/D",
    "difficulty": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "56C. Corporation Mail",
    "url": "https://codeforces.com/problemset/problem/56/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "56B. Spoilt Permutation",
    "url": "https://codeforces.com/problemset/problem/56/B",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "56A. Bar",
    "url": "https://codeforces.com/problemset/problem/56/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "55E. Very simple problem",
    "url": "https://codeforces.com/problemset/problem/55/E",
    "difficulty": 2500,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "55D. Beautiful numbers",
    "url": "https://codeforces.com/problemset/problem/55/D",
    "difficulty": 2500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "55C. Pie or die",
    "url": "https://codeforces.com/problemset/problem/55/C",
    "difficulty": 1900,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "55B. Smallest number",
    "url": "https://codeforces.com/problemset/problem/55/B",
    "difficulty": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "55A. Flea travel",
    "url": "https://codeforces.com/problemset/problem/55/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "54E. Vacuum Сleaner",
    "url": "https://codeforces.com/problemset/problem/54/E",
    "difficulty": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "54D. Writing a Song",
    "url": "https://codeforces.com/problemset/problem/54/D",
    "difficulty": 2100,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "54C. First Digit Law",
    "url": "https://codeforces.com/problemset/problem/54/C",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "54B. Cutting Jigsaw Puzzle",
    "url": "https://codeforces.com/problemset/problem/54/B",
    "difficulty": 1800,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "54A. Presents",
    "url": "https://codeforces.com/problemset/problem/54/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "53E. Dead Ends",
    "url": "https://codeforces.com/problemset/problem/53/E",
    "difficulty": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "53D. Physical Education",
    "url": "https://codeforces.com/problemset/problem/53/D",
    "difficulty": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "53C. Little Frog",
    "url": "https://codeforces.com/problemset/problem/53/C",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "53B. Blog Photo",
    "url": "https://codeforces.com/problemset/problem/53/B",
    "difficulty": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "53A. Autocomplete",
    "url": "https://codeforces.com/problemset/problem/53/A",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "52C. Circular RMQ",
    "url": "https://codeforces.com/problemset/problem/52/C",
    "difficulty": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "52B. Right Triangles",
    "url": "https://codeforces.com/problemset/problem/52/B",
    "difficulty": 1600,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "52A. 123-sequence",
    "url": "https://codeforces.com/problemset/problem/52/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51F. Caterpillar",
    "url": "https://codeforces.com/problemset/problem/51/F",
    "difficulty": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51E. Pentagon",
    "url": "https://codeforces.com/problemset/problem/51/E",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "graphs",
      "matrices"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51D. Geometrical problem",
    "url": "https://codeforces.com/problemset/problem/51/D",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51C. Three Base Stations",
    "url": "https://codeforces.com/problemset/problem/51/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51B. bHTML Tables Analisys",
    "url": "https://codeforces.com/problemset/problem/51/B",
    "difficulty": 1700,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "51A. Cheaterius's Problem",
    "url": "https://codeforces.com/problemset/problem/51/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "50E. Square Equation Roots",
    "url": "https://codeforces.com/problemset/problem/50/E",
    "difficulty": 2300,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "50D. Bombing",
    "url": "https://codeforces.com/problemset/problem/50/D",
    "difficulty": 2100,
    "tags": [
      "binary search",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "50C. Happy Farm 5",
    "url": "https://codeforces.com/problemset/problem/50/C",
    "difficulty": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "50B. Choosing Symbol Pairs",
    "url": "https://codeforces.com/problemset/problem/50/B",
    "difficulty": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "50A. Domino piling",
    "url": "https://codeforces.com/problemset/problem/50/A",
    "difficulty": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "49E. Common ancestor",
    "url": "https://codeforces.com/problemset/problem/49/E",
    "difficulty": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "49D. Game",
    "url": "https://codeforces.com/problemset/problem/49/D",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "49C. Disposition",
    "url": "https://codeforces.com/problemset/problem/49/C",
    "difficulty": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "49B. Sum",
    "url": "https://codeforces.com/problemset/problem/49/B",
    "difficulty": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "49A. Sleuth",
    "url": "https://codeforces.com/problemset/problem/49/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48H. Black and White",
    "url": "https://codeforces.com/problemset/problem/48/H",
    "difficulty": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48G. Galaxy Union",
    "url": "https://codeforces.com/problemset/problem/48/G",
    "difficulty": 2700,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48F. Snow sellers",
    "url": "https://codeforces.com/problemset/problem/48/F",
    "difficulty": 2800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48E. Ivan the Fool VS Gorynych the Dragon",
    "url": "https://codeforces.com/problemset/problem/48/E",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48D. Permutations",
    "url": "https://codeforces.com/problemset/problem/48/D",
    "difficulty": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48C. The Race",
    "url": "https://codeforces.com/problemset/problem/48/C",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48B. Land Lot",
    "url": "https://codeforces.com/problemset/problem/48/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "48A. Rock-paper-scissors",
    "url": "https://codeforces.com/problemset/problem/48/A",
    "difficulty": 900,
    "tags": [
      "implementation",
      "schedules"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "47E. Cannon",
    "url": "https://codeforces.com/problemset/problem/47/E",
    "difficulty": 2200,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "47D. Safe",
    "url": "https://codeforces.com/problemset/problem/47/D",
    "difficulty": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "47C. Crossword",
    "url": "https://codeforces.com/problemset/problem/47/C",
    "difficulty": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "47B. Coins",
    "url": "https://codeforces.com/problemset/problem/47/B",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "47A. Triangular numbers",
    "url": "https://codeforces.com/problemset/problem/47/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46G. Emperor's Problem",
    "url": "https://codeforces.com/problemset/problem/46/G",
    "difficulty": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46F. Hercule Poirot Problem",
    "url": "https://codeforces.com/problemset/problem/46/F",
    "difficulty": 2300,
    "tags": [
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46E. Comb",
    "url": "https://codeforces.com/problemset/problem/46/E",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46D. Parking Lot",
    "url": "https://codeforces.com/problemset/problem/46/D",
    "difficulty": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46C. Hamsters and Tigers",
    "url": "https://codeforces.com/problemset/problem/46/C",
    "difficulty": 1600,
    "tags": [
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46B. T-shirts from Sponsor",
    "url": "https://codeforces.com/problemset/problem/46/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "46A. Ball Game",
    "url": "https://codeforces.com/problemset/problem/46/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45J. Planting Trees",
    "url": "https://codeforces.com/problemset/problem/45/J",
    "difficulty": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45I. TCMCF+++",
    "url": "https://codeforces.com/problemset/problem/45/I",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45H. Road Problem",
    "url": "https://codeforces.com/problemset/problem/45/H",
    "difficulty": 2100,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45G. Prime Problem",
    "url": "https://codeforces.com/problemset/problem/45/G",
    "difficulty": 2200,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45F. Goats and Wolves",
    "url": "https://codeforces.com/problemset/problem/45/F",
    "difficulty": 2500,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45E. Director",
    "url": "https://codeforces.com/problemset/problem/45/E",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45D. Event Dates",
    "url": "https://codeforces.com/problemset/problem/45/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "meet-in-the-middle",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45C. Dancing Lessons",
    "url": "https://codeforces.com/problemset/problem/45/C",
    "difficulty": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45B. School",
    "url": "https://codeforces.com/problemset/problem/45/B",
    "difficulty": 2200,
    "tags": [
      "dp",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "45A. Codecraft III",
    "url": "https://codeforces.com/problemset/problem/45/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44J. Triminoes",
    "url": "https://codeforces.com/problemset/problem/44/J",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44I. Toys",
    "url": "https://codeforces.com/problemset/problem/44/I",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44H. Phone Number",
    "url": "https://codeforces.com/problemset/problem/44/H",
    "difficulty": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44G. Shooting Gallery",
    "url": "https://codeforces.com/problemset/problem/44/G",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44F. BerPaint",
    "url": "https://codeforces.com/problemset/problem/44/F",
    "difficulty": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44E. Anfisa the Monkey",
    "url": "https://codeforces.com/problemset/problem/44/E",
    "difficulty": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44D. Hyperdrive",
    "url": "https://codeforces.com/problemset/problem/44/D",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44C. Holidays",
    "url": "https://codeforces.com/problemset/problem/44/C",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44B. Cola",
    "url": "https://codeforces.com/problemset/problem/44/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "44A. Indian Summer",
    "url": "https://codeforces.com/problemset/problem/44/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "43E. Race",
    "url": "https://codeforces.com/problemset/problem/43/E",
    "difficulty": 2300,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "43D. Journey",
    "url": "https://codeforces.com/problemset/problem/43/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "43C. Lucky Tickets",
    "url": "https://codeforces.com/problemset/problem/43/C",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "43B. Letter",
    "url": "https://codeforces.com/problemset/problem/43/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "43A. Football",
    "url": "https://codeforces.com/problemset/problem/43/A",
    "difficulty": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "42E. Baldman and the military",
    "url": "https://codeforces.com/problemset/problem/42/E",
    "difficulty": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "42D. Strange town",
    "url": "https://codeforces.com/problemset/problem/42/D",
    "difficulty": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "42C. Safe cracking",
    "url": "https://codeforces.com/problemset/problem/42/C",
    "difficulty": 2200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "42B. Game of chess unfinished",
    "url": "https://codeforces.com/problemset/problem/42/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "42A. Guilty --- to the kitchen!",
    "url": "https://codeforces.com/problemset/problem/42/A",
    "difficulty": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "41E. 3-cycles",
    "url": "https://codeforces.com/problemset/problem/41/E",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "41D. Pawn",
    "url": "https://codeforces.com/problemset/problem/41/D",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "41C. Email address",
    "url": "https://codeforces.com/problemset/problem/41/C",
    "difficulty": 1300,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "41B. Martian Dollar",
    "url": "https://codeforces.com/problemset/problem/41/B",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "41A. Translation",
    "url": "https://codeforces.com/problemset/problem/41/A",
    "difficulty": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "40E. Number Table",
    "url": "https://codeforces.com/problemset/problem/40/E",
    "difficulty": 2500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "40D. Interesting Sequence",
    "url": "https://codeforces.com/problemset/problem/40/D",
    "difficulty": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "40C. Berland Square",
    "url": "https://codeforces.com/problemset/problem/40/C",
    "difficulty": 2300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "40B. Repaintings",
    "url": "https://codeforces.com/problemset/problem/40/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "40A. Find Color",
    "url": "https://codeforces.com/problemset/problem/40/A",
    "difficulty": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39K. Testing",
    "url": "https://codeforces.com/problemset/problem/39/K",
    "difficulty": 2600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "39J. Spelling Check",
    "url": "https://codeforces.com/problemset/problem/39/J",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39I. Tram",
    "url": "https://codeforces.com/problemset/problem/39/I",
    "difficulty": 2500,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "39H. Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/39/H",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39G. Inverse Function",
    "url": "https://codeforces.com/problemset/problem/39/G",
    "difficulty": 2400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39F. Pacifist frogs",
    "url": "https://codeforces.com/problemset/problem/39/F",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39E. What Has Dirichlet Got to Do with That?",
    "url": "https://codeforces.com/problemset/problem/39/E",
    "difficulty": 2000,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39D. Cubical Planet",
    "url": "https://codeforces.com/problemset/problem/39/D",
    "difficulty": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39C. Moon Craters",
    "url": "https://codeforces.com/problemset/problem/39/C",
    "difficulty": 2100,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39B. Company Income Growth",
    "url": "https://codeforces.com/problemset/problem/39/B",
    "difficulty": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "39A. C*++ Calculations",
    "url": "https://codeforces.com/problemset/problem/39/A",
    "difficulty": 2000,
    "tags": [
      "expression parsing",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38H. The Great Marathon",
    "url": "https://codeforces.com/problemset/problem/38/H",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38G. Queue",
    "url": "https://codeforces.com/problemset/problem/38/G",
    "difficulty": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38F. Smart Boy",
    "url": "https://codeforces.com/problemset/problem/38/F",
    "difficulty": 2100,
    "tags": [
      "dp",
      "games",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38E. Let's Go Rolling!",
    "url": "https://codeforces.com/problemset/problem/38/E",
    "difficulty": 1800,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38D. Vasya the Architect",
    "url": "https://codeforces.com/problemset/problem/38/D",
    "difficulty": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38C. Blinds",
    "url": "https://codeforces.com/problemset/problem/38/C",
    "difficulty": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38B. Chess",
    "url": "https://codeforces.com/problemset/problem/38/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "38A. Army",
    "url": "https://codeforces.com/problemset/problem/38/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "37E. Trial for Chief",
    "url": "https://codeforces.com/problemset/problem/37/E",
    "difficulty": 2600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "37D. Lesson Timetable",
    "url": "https://codeforces.com/problemset/problem/37/D",
    "difficulty": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "37C. Old Berland Language",
    "url": "https://codeforces.com/problemset/problem/37/C",
    "difficulty": 1900,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "37B. Computer Game",
    "url": "https://codeforces.com/problemset/problem/37/B",
    "difficulty": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "37A. Towers",
    "url": "https://codeforces.com/problemset/problem/37/A",
    "difficulty": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "36E. Two Paths",
    "url": "https://codeforces.com/problemset/problem/36/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "36D. New Game with a Chess Piece",
    "url": "https://codeforces.com/problemset/problem/36/D",
    "difficulty": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "36C. Bowls",
    "url": "https://codeforces.com/problemset/problem/36/C",
    "difficulty": 2200,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "36B. Fractal",
    "url": "https://codeforces.com/problemset/problem/36/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "36A. Extra-terrestrial Intelligence",
    "url": "https://codeforces.com/problemset/problem/36/A",
    "difficulty": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "35E. Parade",
    "url": "https://codeforces.com/problemset/problem/35/E",
    "difficulty": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "35D. Animals",
    "url": "https://codeforces.com/problemset/problem/35/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "35C. Fire Again",
    "url": "https://codeforces.com/problemset/problem/35/C",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "35B. Warehouse",
    "url": "https://codeforces.com/problemset/problem/35/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "35A. Shell Game",
    "url": "https://codeforces.com/problemset/problem/35/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "34E. Collisions",
    "url": "https://codeforces.com/problemset/problem/34/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "34D. Road Map",
    "url": "https://codeforces.com/problemset/problem/34/D",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "34C. Page Numbers",
    "url": "https://codeforces.com/problemset/problem/34/C",
    "difficulty": 1300,
    "tags": [
      "expression parsing",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "34B. Sale",
    "url": "https://codeforces.com/problemset/problem/34/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "34A. Reconnaissance 2",
    "url": "https://codeforces.com/problemset/problem/34/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "33E. Helper",
    "url": "https://codeforces.com/problemset/problem/33/E",
    "difficulty": 2600,
    "tags": []
  },
  {
    "platform": "Codeforces",
    "title": "33D. Knights",
    "url": "https://codeforces.com/problemset/problem/33/D",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "33C. Wonderful Randomized Sum",
    "url": "https://codeforces.com/problemset/problem/33/C",
    "difficulty": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "33B. String Problem",
    "url": "https://codeforces.com/problemset/problem/33/B",
    "difficulty": 1800,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "33A. What is for dinner?",
    "url": "https://codeforces.com/problemset/problem/33/A",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "32E. Hide-and-Seek",
    "url": "https://codeforces.com/problemset/problem/32/E",
    "difficulty": 2400,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "32D. Constellation",
    "url": "https://codeforces.com/problemset/problem/32/D",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "32C. Flea",
    "url": "https://codeforces.com/problemset/problem/32/C",
    "difficulty": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "32B. Borze",
    "url": "https://codeforces.com/problemset/problem/32/B",
    "difficulty": 800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "32A. Reconnaissance",
    "url": "https://codeforces.com/problemset/problem/32/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "31E. TV Game",
    "url": "https://codeforces.com/problemset/problem/31/E",
    "difficulty": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "31D. Chocolate",
    "url": "https://codeforces.com/problemset/problem/31/D",
    "difficulty": 2000,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "31C. Schedule",
    "url": "https://codeforces.com/problemset/problem/31/C",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "31B. Sysadmin Bob",
    "url": "https://codeforces.com/problemset/problem/31/B",
    "difficulty": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "31A. Worms Evolution",
    "url": "https://codeforces.com/problemset/problem/31/A",
    "difficulty": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "30E. Tricky and Clever Password",
    "url": "https://codeforces.com/problemset/problem/30/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "30D. King's Problem?",
    "url": "https://codeforces.com/problemset/problem/30/D",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "30C. Shooting Gallery",
    "url": "https://codeforces.com/problemset/problem/30/C",
    "difficulty": 1800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "30B. Codeforces World Finals",
    "url": "https://codeforces.com/problemset/problem/30/B",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "30A. Accounting",
    "url": "https://codeforces.com/problemset/problem/30/A",
    "difficulty": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "29E. Quarrel",
    "url": "https://codeforces.com/problemset/problem/29/E",
    "difficulty": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "29D. Ant on the Tree",
    "url": "https://codeforces.com/problemset/problem/29/D",
    "difficulty": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "29C. Mail Stamps",
    "url": "https://codeforces.com/problemset/problem/29/C",
    "difficulty": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "29B. Traffic Lights",
    "url": "https://codeforces.com/problemset/problem/29/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "29A. Spit Problem",
    "url": "https://codeforces.com/problemset/problem/29/A",
    "difficulty": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "28E. DravDe saves the world",
    "url": "https://codeforces.com/problemset/problem/28/E",
    "difficulty": 2800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "28D. Don't fear, DravDe is kind",
    "url": "https://codeforces.com/problemset/problem/28/D",
    "difficulty": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "28C. Bath Queue",
    "url": "https://codeforces.com/problemset/problem/28/C",
    "difficulty": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "28B. pSort",
    "url": "https://codeforces.com/problemset/problem/28/B",
    "difficulty": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "28A. Bender Problem",
    "url": "https://codeforces.com/problemset/problem/28/A",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "27E. Number With The Given Amount Of Divisors",
    "url": "https://codeforces.com/problemset/problem/27/E",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "27D. Ring Road 2",
    "url": "https://codeforces.com/problemset/problem/27/D",
    "difficulty": 2200,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "27C. Unordered Subsequence",
    "url": "https://codeforces.com/problemset/problem/27/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "27B. Tournament",
    "url": "https://codeforces.com/problemset/problem/27/B",
    "difficulty": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "27A. Next Test",
    "url": "https://codeforces.com/problemset/problem/27/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "26E. Multithreading",
    "url": "https://codeforces.com/problemset/problem/26/E",
    "difficulty": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "26D. Tickets",
    "url": "https://codeforces.com/problemset/problem/26/D",
    "difficulty": 2400,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "26C. Parquet",
    "url": "https://codeforces.com/problemset/problem/26/C",
    "difficulty": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "26B. Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/26/B",
    "difficulty": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "26A. Almost Prime",
    "url": "https://codeforces.com/problemset/problem/26/A",
    "difficulty": 900,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "25E. Test",
    "url": "https://codeforces.com/problemset/problem/25/E",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "25D. Roads not only in Berland",
    "url": "https://codeforces.com/problemset/problem/25/D",
    "difficulty": 1900,
    "tags": [
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "25C. Roads in Berland",
    "url": "https://codeforces.com/problemset/problem/25/C",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "25B. Phone numbers",
    "url": "https://codeforces.com/problemset/problem/25/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "25A. IQ test",
    "url": "https://codeforces.com/problemset/problem/25/A",
    "difficulty": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "24E. Berland collider",
    "url": "https://codeforces.com/problemset/problem/24/E",
    "difficulty": 2300,
    "tags": [
      "binary search"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "24D. Broken robot",
    "url": "https://codeforces.com/problemset/problem/24/D",
    "difficulty": 2400,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "24C. Sequence of points",
    "url": "https://codeforces.com/problemset/problem/24/C",
    "difficulty": 1800,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "24B. F1 Champions",
    "url": "https://codeforces.com/problemset/problem/24/B",
    "difficulty": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "24A. Ring road",
    "url": "https://codeforces.com/problemset/problem/24/A",
    "difficulty": 1400,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "23E. Tree",
    "url": "https://codeforces.com/problemset/problem/23/E",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "23D. Tetragon",
    "url": "https://codeforces.com/problemset/problem/23/D",
    "difficulty": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "23C. Oranges and Apples",
    "url": "https://codeforces.com/problemset/problem/23/C",
    "difficulty": 2500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "23B. Party",
    "url": "https://codeforces.com/problemset/problem/23/B",
    "difficulty": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "23A. You're Given a String...",
    "url": "https://codeforces.com/problemset/problem/23/A",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "22E. Scheme",
    "url": "https://codeforces.com/problemset/problem/22/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "22D. Segments",
    "url": "https://codeforces.com/problemset/problem/22/D",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "22C. System Administrator",
    "url": "https://codeforces.com/problemset/problem/22/C",
    "difficulty": 1700,
    "tags": [
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "22B. Bargaining Table",
    "url": "https://codeforces.com/problemset/problem/22/B",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "22A. Second Order Statistics",
    "url": "https://codeforces.com/problemset/problem/22/A",
    "difficulty": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "21D. Traveling Graph",
    "url": "https://codeforces.com/problemset/problem/21/D",
    "difficulty": 2400,
    "tags": [
      "bitmasks",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "21C. Stripe 2",
    "url": "https://codeforces.com/problemset/problem/21/C",
    "difficulty": 2000,
    "tags": [
      "binary search",
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "21B. Intersection",
    "url": "https://codeforces.com/problemset/problem/21/B",
    "difficulty": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "21A. Jabber ID",
    "url": "https://codeforces.com/problemset/problem/21/A",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "20C. Dijkstra?",
    "url": "https://codeforces.com/problemset/problem/20/C",
    "difficulty": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "20B. Equation",
    "url": "https://codeforces.com/problemset/problem/20/B",
    "difficulty": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "20A. BerOS file system",
    "url": "https://codeforces.com/problemset/problem/20/A",
    "difficulty": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "19E. Fairy",
    "url": "https://codeforces.com/problemset/problem/19/E",
    "difficulty": 2900,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "19D. Points",
    "url": "https://codeforces.com/problemset/problem/19/D",
    "difficulty": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "19C. Deletion of Repeats",
    "url": "https://codeforces.com/problemset/problem/19/C",
    "difficulty": 2200,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "19B. Checkout Assistant",
    "url": "https://codeforces.com/problemset/problem/19/B",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "19A. World Football Cup",
    "url": "https://codeforces.com/problemset/problem/19/A",
    "difficulty": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "18E. Flag 2",
    "url": "https://codeforces.com/problemset/problem/18/E",
    "difficulty": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "18D. Seller Bob",
    "url": "https://codeforces.com/problemset/problem/18/D",
    "difficulty": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "18C. Stripe",
    "url": "https://codeforces.com/problemset/problem/18/C",
    "difficulty": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "18B. Platforms",
    "url": "https://codeforces.com/problemset/problem/18/B",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "18A. Triangle",
    "url": "https://codeforces.com/problemset/problem/18/A",
    "difficulty": 1500,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "17E. Palisection",
    "url": "https://codeforces.com/problemset/problem/17/E",
    "difficulty": 2900,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "17D. Notepad",
    "url": "https://codeforces.com/problemset/problem/17/D",
    "difficulty": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "17C. Balance",
    "url": "https://codeforces.com/problemset/problem/17/C",
    "difficulty": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "17B. Hierarchy",
    "url": "https://codeforces.com/problemset/problem/17/B",
    "difficulty": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "17A. Noldbach problem",
    "url": "https://codeforces.com/problemset/problem/17/A",
    "difficulty": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "16E. Fish",
    "url": "https://codeforces.com/problemset/problem/16/E",
    "difficulty": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "16D. Logging",
    "url": "https://codeforces.com/problemset/problem/16/D",
    "difficulty": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "16C. Monitor",
    "url": "https://codeforces.com/problemset/problem/16/C",
    "difficulty": 1800,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "16B. Burglar and Matches",
    "url": "https://codeforces.com/problemset/problem/16/B",
    "difficulty": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "16A. Flag",
    "url": "https://codeforces.com/problemset/problem/16/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "15E. Triangles",
    "url": "https://codeforces.com/problemset/problem/15/E",
    "difficulty": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "15D. Map",
    "url": "https://codeforces.com/problemset/problem/15/D",
    "difficulty": 2500,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "15C. Industrial Nim",
    "url": "https://codeforces.com/problemset/problem/15/C",
    "difficulty": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "15B. Laser",
    "url": "https://codeforces.com/problemset/problem/15/B",
    "difficulty": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "15A. Cottage Village",
    "url": "https://codeforces.com/problemset/problem/15/A",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "14E. Camels",
    "url": "https://codeforces.com/problemset/problem/14/E",
    "difficulty": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "14D. Two Paths",
    "url": "https://codeforces.com/problemset/problem/14/D",
    "difficulty": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "14C. Four Segments",
    "url": "https://codeforces.com/problemset/problem/14/C",
    "difficulty": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "14B. Young Photographer",
    "url": "https://codeforces.com/problemset/problem/14/B",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "14A. Letter",
    "url": "https://codeforces.com/problemset/problem/14/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "13E. Holes",
    "url": "https://codeforces.com/problemset/problem/13/E",
    "difficulty": 2700,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "13D. Triangles",
    "url": "https://codeforces.com/problemset/problem/13/D",
    "difficulty": 2600,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "13C. Sequence",
    "url": "https://codeforces.com/problemset/problem/13/C",
    "difficulty": 2200,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "13B. Letter A",
    "url": "https://codeforces.com/problemset/problem/13/B",
    "difficulty": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "13A. Numbers",
    "url": "https://codeforces.com/problemset/problem/13/A",
    "difficulty": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "12E. Start of the session",
    "url": "https://codeforces.com/problemset/problem/12/E",
    "difficulty": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "12D. Ball",
    "url": "https://codeforces.com/problemset/problem/12/D",
    "difficulty": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "12C. Fruits",
    "url": "https://codeforces.com/problemset/problem/12/C",
    "difficulty": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "12B. Correct Solution?",
    "url": "https://codeforces.com/problemset/problem/12/B",
    "difficulty": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "12A. Super Agent",
    "url": "https://codeforces.com/problemset/problem/12/A",
    "difficulty": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "11E. Forward, march!",
    "url": "https://codeforces.com/problemset/problem/11/E",
    "difficulty": 2800,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "11D. A Simple Task",
    "url": "https://codeforces.com/problemset/problem/11/D",
    "difficulty": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "11C. How Many Squares?",
    "url": "https://codeforces.com/problemset/problem/11/C",
    "difficulty": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "11B. Jumping Jack",
    "url": "https://codeforces.com/problemset/problem/11/B",
    "difficulty": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "11A. Increasing Sequence",
    "url": "https://codeforces.com/problemset/problem/11/A",
    "difficulty": 900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "10E. Greedy Change",
    "url": "https://codeforces.com/problemset/problem/10/E",
    "difficulty": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "10D. LCIS",
    "url": "https://codeforces.com/problemset/problem/10/D",
    "difficulty": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "10C. Digital Root",
    "url": "https://codeforces.com/problemset/problem/10/C",
    "difficulty": 2000,
    "tags": [
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "10B. Cinema Cashier",
    "url": "https://codeforces.com/problemset/problem/10/B",
    "difficulty": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "10A. Power Consumption Calculation",
    "url": "https://codeforces.com/problemset/problem/10/A",
    "difficulty": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "9E. Interestring graph and Apples",
    "url": "https://codeforces.com/problemset/problem/9/E",
    "difficulty": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "9D. How many trees?",
    "url": "https://codeforces.com/problemset/problem/9/D",
    "difficulty": 1900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "9C. Hexadecimal's Numbers",
    "url": "https://codeforces.com/problemset/problem/9/C",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "9B. Running Student",
    "url": "https://codeforces.com/problemset/problem/9/B",
    "difficulty": 1200,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "9A. Die Roll",
    "url": "https://codeforces.com/problemset/problem/9/A",
    "difficulty": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "8E. Beads",
    "url": "https://codeforces.com/problemset/problem/8/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "8D. Two Friends",
    "url": "https://codeforces.com/problemset/problem/8/D",
    "difficulty": 2600,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "8C. Looking for Order",
    "url": "https://codeforces.com/problemset/problem/8/C",
    "difficulty": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "8B. Obsession with Robots",
    "url": "https://codeforces.com/problemset/problem/8/B",
    "difficulty": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "8A. Train and Peter",
    "url": "https://codeforces.com/problemset/problem/8/A",
    "difficulty": 1200,
    "tags": [
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "7E. Defining Macros",
    "url": "https://codeforces.com/problemset/problem/7/E",
    "difficulty": 2600,
    "tags": [
      "dp",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "7D. Palindrome Degree",
    "url": "https://codeforces.com/problemset/problem/7/D",
    "difficulty": 2200,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "7C. Line",
    "url": "https://codeforces.com/problemset/problem/7/C",
    "difficulty": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "7B. Memory Manager",
    "url": "https://codeforces.com/problemset/problem/7/B",
    "difficulty": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "7A. Kalevitch and Chess",
    "url": "https://codeforces.com/problemset/problem/7/A",
    "difficulty": 1100,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "6E. Exposition",
    "url": "https://codeforces.com/problemset/problem/6/E",
    "difficulty": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "6D. Lizards and Basements 2",
    "url": "https://codeforces.com/problemset/problem/6/D",
    "difficulty": 2600,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "6C. Alice, Bob and Chocolate",
    "url": "https://codeforces.com/problemset/problem/6/C",
    "difficulty": 1200,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "6B. President's Office",
    "url": "https://codeforces.com/problemset/problem/6/B",
    "difficulty": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "6A. Triangle",
    "url": "https://codeforces.com/problemset/problem/6/A",
    "difficulty": 900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "5E. Bindian Signalizing",
    "url": "https://codeforces.com/problemset/problem/5/E",
    "difficulty": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "5D. Follow Traffic Rules",
    "url": "https://codeforces.com/problemset/problem/5/D",
    "difficulty": 2100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "5C. Longest Regular Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/5/C",
    "difficulty": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "5B. Center Alignment",
    "url": "https://codeforces.com/problemset/problem/5/B",
    "difficulty": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "5A. Chat Servers Outgoing Traffic",
    "url": "https://codeforces.com/problemset/problem/5/A",
    "difficulty": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "4D. Mysterious Present",
    "url": "https://codeforces.com/problemset/problem/4/D",
    "difficulty": 1700,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "4C. Registration System",
    "url": "https://codeforces.com/problemset/problem/4/C",
    "difficulty": 1300,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "4B. Before an Exam",
    "url": "https://codeforces.com/problemset/problem/4/B",
    "difficulty": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "4A. Watermelon",
    "url": "https://codeforces.com/problemset/problem/4/A",
    "difficulty": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "3D. Least Cost Bracket Sequence",
    "url": "https://codeforces.com/problemset/problem/3/D",
    "difficulty": 2600,
    "tags": [
      "greedy"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "3C. Tic-tac-toe",
    "url": "https://codeforces.com/problemset/problem/3/C",
    "difficulty": 1800,
    "tags": [
      "brute force",
      "games",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "3B. Lorry",
    "url": "https://codeforces.com/problemset/problem/3/B",
    "difficulty": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "3A. Shortest path of the king",
    "url": "https://codeforces.com/problemset/problem/3/A",
    "difficulty": 1000,
    "tags": [
      "greedy",
      "shortest paths"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2C. Commentator problem",
    "url": "https://codeforces.com/problemset/problem/2/C",
    "difficulty": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2B. The least round way",
    "url": "https://codeforces.com/problemset/problem/2/B",
    "difficulty": 2000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "2A. Winner",
    "url": "https://codeforces.com/problemset/problem/2/A",
    "difficulty": 1500,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1C. Ancient Berland Circus",
    "url": "https://codeforces.com/problemset/problem/1/C",
    "difficulty": 2100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1B. Spreadsheet",
    "url": "https://codeforces.com/problemset/problem/1/B",
    "difficulty": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "platform": "Codeforces",
    "title": "1A. Theatre Square",
    "url": "https://codeforces.com/problemset/problem/1/A",
    "difficulty": 1000,
    "tags": [
      "math"
    ]
  }
]